'use strict';/**
 * A class for instantiating a complex number object.
 */JQX.Utilities.Assign('Complex',function(){function JQXComplex(value,imag){babelHelpers.classCallCheck(this,JQXComplex);if(typeof value==='string'){this.complexNumber=this.parseComplexNumber(value);this.realPart=this.complexNumber.realPart;this.imaginaryPart=this.complexNumber.imaginaryPart;}else if(typeof value==='number'){this.realPart=value;if(typeof imag==='number'){this.imaginaryPart=imag;}else if(typeof imag==='undefined'){this.imaginaryPart=0;}else{throw new Error('Can\'t create complex number: invalid imaginary part');}this.complexNumber=this.parseComplexNumber(this.realPart,this.imaginaryPart);}else{throw new Error('Can\'t create complex number');}}babelHelpers.createClass(JQXComplex,[{key:'valueOf',value:function valueOf(){if(this.imaginaryPart===0){return this.realPart;}return null;}},{key:'isNaN',value:function(_isNaN){function isNaN(){return _isNaN.apply(this,arguments);}isNaN.toString=function(){return _isNaN.toString();};return isNaN;}(function(){return isNaN(this.realPart)||isNaN(this.imaginaryPart);})},{key:'isZero',value:function isZero(){return(this.realPart===0||this.realPart===-0)&&(this.imaginaryPart===0||this.imaginaryPart===-0);}},{key:'isFinite',value:function(_isFinite){function isFinite(){return _isFinite.apply(this,arguments);}isFinite.toString=function(){return _isFinite.toString();};return isFinite;}(function(){return isFinite(this.realPart)&&isFinite(this.imaginaryPart);})},{key:'isInfinite',value:function isInfinite(){return!(this.isNaN()||this.isFinite());}},{key:'parseComplexNumber',value:function parseComplexNumber(value,imaginaryPart){var complexNumber={realPart:0,imaginaryPart:0};if(value===undefined||value===null){complexNumber.realPart=complexNumber.imaginaryPart=0;}else if(imaginaryPart!==undefined){complexNumber.realPart=value;complexNumber.imaginaryPart=imaginaryPart;}else switch(typeof value==='undefined'?'undefined':babelHelpers.typeof(value)){case'object':if('imaginaryPart'in value&&'realPart'in value){complexNumber.realPart=value.realPart;complexNumber.imaginaryPart=value.imaginaryPart;}else if(value.length===2){complexNumber.realPart=value[0];complexNumber.imaginaryPart=value[1];}else{throw SyntaxError('Invalid Complex Number Parameter');}break;case'string':{complexNumber.imaginaryPart=complexNumber.realPart=0;var tokens=value.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);var plus=1;var minus=0;if(tokens===null){throw SyntaxError('Invalid Complex Number Parameter');}for(var i=0;i<tokens.length;i++){var token=tokens[i];if(token===' '||token==='\t'||token==='\n'){/* void */}else if(token==='+'){plus++;}else if(token==='-'){minus++;}else if(token==='i'||token==='I'){if(plus+minus===0){throw SyntaxError('Invalid Complex Number Parameter');}if(tokens[i+1]!==' '&&!isNaN(tokens[i+1])){complexNumber.imaginaryPart+=parseFloat((minus%2?'-':'')+tokens[i+1]);i++;}else{complexNumber.imaginaryPart+=parseFloat((minus%2?'-':'')+'1');}plus=minus=0;}else{if(plus+minus===0||isNaN(token)){throw SyntaxError('Invalid Complex Number Parameter');}if(tokens[i+1]==='i'||tokens[i+1]==='I'){complexNumber.imaginaryPart+=parseFloat((minus%2?'-':'')+token);i++;}else{complexNumber.realPart+=parseFloat((minus%2?'-':'')+token);}plus=minus=0;}}if(plus+minus>0){throw SyntaxError('Invalid Complex Number Parameter');}break;}case'number':complexNumber.imaginaryPart=0;complexNumber.realPart=value;break;default:throw SyntaxError('Invalid Complex Number Parameter');}return complexNumber;}},{key:'compare',value:function compare(value,imaginaryPart){var complexNumber=this.parseComplexNumber(value,imaginaryPart);var epsilon=this.parseComplexNumber('1e-16');return Math.abs(complexNumber.realPart-this.realPart)<=epsilon&&Math.abs(complexNumber.imaginaryPart-this.imaginaryPart)<=epsilon;}},{key:'toString',value:function toString(){var realPart=this.realPart;var imaginaryPart=this.imaginaryPart;var complexNumberAsString='';if(this.isNaN()){return'NaN';}if(this.isZero()){return'0';}if(this.isInfinite()){return'Infinity';}if(realPart!==0){complexNumberAsString+=realPart;}if(imaginaryPart!==0){if(realPart!==0){complexNumberAsString+=imaginaryPart<0?' - ':' + ';}else if(imaginaryPart<0){complexNumberAsString+='-';}imaginaryPart=Math.abs(imaginaryPart);if(1!==imaginaryPart){complexNumberAsString+=imaginaryPart;}complexNumberAsString+='i';}if(!complexNumberAsString){return'0';}return complexNumberAsString;}}]);return JQXComplex;}());var DataAdapter=function(){function DataAdapter(config){babelHelpers.classCallCheck(this,DataAdapter);if(!config){config={};}var that=Object.assign(this,config);var generateKey=function generateKey(){var S4=function S4(){return((1+Math.random())*0x10000|0).toString(16).substring(1);};return S4();};that.key=generateKey();that.$document=JQX.Utilities.Extend(document);that.boundSource=false===that.observable?[]:new JQX.ObservableArray();that.dataItemById=[];if(that.allowAdd===undefined){that.allowAdd=true;}if(that.allowRemove===undefined){that.allowRemove=true;}if(that.allowUpdate===undefined){that.allowUpdate=true;}if(config.observable===undefined){that.observable=true;}if(!config.dataSource){that.dataSource=[];}if(!config.dataFields){that.dataFields=[];}else{/* if (config.dataSource && config.dataSource.length > 0) {
                 const keys = Object.keys(config.dataSource[0]);
 
                 //     that.dataFields = [];
 
                 for (let i = 0; i < keys.length; i++) {
 
                 }
             }
             */}if(!config.dataSourceType){that.dataSourceType='array';}if(!config.id){that.id=null;}if(!config.autoFetch){that.autoFetch=true;}if(config.dataFields){that.dataFields=config.dataFields;}if(config&&config.autoBind!==false){that.dataBind();}that.isInitialized=true;}babelHelpers.createClass(DataAdapter,[{key:'_getDataFieldObjects',value:function _getDataFieldObjects(dataFields){//const that = this;
var dataFieldObjects=[];if(typeof dataFields==='number'){var charCode='A'.charCodeAt(0);var prefix='';var index=0;for(var i=0;i<dataFields;i++){var letter=String.fromCharCode(charCode+index);index++;var label=prefix+letter;dataFieldObjects.push({name:label,dataType:'string'});if(index>=26){index=0;prefix+='A';}}}else if(dataFields.length>0){for(var _i=0;_i<dataFields.length;_i++){var dataField=dataFields[_i];if(typeof dataField==='string'){var dataFieldParts=dataField.split(':');var _name=dataFieldParts[0].trim();var dataType=dataFieldParts.length>1?dataFieldParts[1].trim():'string';dataFieldObjects.push({name:_name,dataType:dataType});}else{dataFieldObjects.push(dataField);}}}return dataFieldObjects;}},{key:'_notify',value:function _notify(changeArgs){var that=this;if(!that.canNotify){return;}if(that.notifyFn){that.notifyFn(changeArgs);}}},{key:'notify',value:function notify(notifyFn){var that=this;if(notifyFn){that.notifyFn=notifyFn;}}},{key:'toArray',value:function toArray(){var that=this;return that.boundSource.toArray();}},{key:'dataBind',value:function dataBind(){var that=this;that.clear();var completed=function completed(){if(that.observable){that.boundSource.notify(function(event){if(event.action==='update'&&event.path&&event.path.indexOf('.')>=0&&event.path.indexOf('children')===-1&&event.path.indexOf('loaded')===-1&&event.path.indexOf('level')===-1&&event.path.indexOf('leaf')===-1&&event.path.indexOf('expanded')===-1){var canNotify=false;for(var i=0;i<that.dataFields.length;i++){var dataField=that.dataFields[i].name;if(event.path.indexOf(dataField)>=0){canNotify=true;}}if(that._notify&&canNotify){that._notify({action:'update',data:event.target,index:event.index});}}});}if(!that.groupBy){that.groupBy=[];}that.groupBy=new JQX.ObservableArray(that.groupBy);that.groupBy.notify(function(){that.boundHierarchy=null;that.refreshHierarchy();if(that.onGroup){that.onGroup();}});that._onBindingComplete();};if(typeof that.dataSource==='string'&&that.dataSource.indexOf('.json')>=0){that.url=that.dataSource;that.dataSourceType='json';//const ajaxJSON = new Ajax(that, (data, status) => {
//    that.dataSource = data;
//    that._bindToJSON();
//});
}else if(typeof that.dataSource==='string'&&that.dataSource.indexOf('.xlsx')>=0){that.url=that.dataSource;that.dataSourceType='xlsx';//const ajaxJSON = new Ajax(that, (data, status) => {
//    const keys = Object.keys(data[0]);
//    const dataFieldMap = {};
//    const dataRows = [];
//    if (that.exportHeader !== false) {
//        let index = 0;
//        for(let key in keys) {
//            const name = keys[key];
//            dataFieldMap[name] = that.dataFields[index++].name;
//        }
//        for(let i = 1; i < data.length; i++) {
//            const row = data[i];
//            const dataRow = {};
//            for(let key in keys) {
//                const name = keys[key];
//                dataRow[dataFieldMap[name]] = row[name];
//            }
//            dataRows.push(dataRow);
//        }
//        that.dataSource = dataRows;
//    }
//    that._bindToArray();
//    completed();        
//});
}else if(typeof that.dataSource==='string'&&that.dataSource.indexOf('.csv')>=0){that.dataSourceType='csv';//const ajaxJSON = new Ajax(that, (data, status) => {
//    that._bindToArray();
//});
}else if(typeof that.dataSource==='string'&&that.dataSource.indexOf('.tsv')>=0){that.dataSourceType='tsv';//const ajaxJSON = new Ajax(that, (data, status) => {
//});
}else if(that.dataSourceType==='array'){that._bindToArray();completed();}else if(that.dataSourceType==='json'){that._bindToJSON();completed();}}},{key:'_onBindingComplete',value:function _onBindingComplete(){var that=this;that._buildHierarchy();if(that.onBindingComplete){that.onBindingComplete({data:that.boundSource});}if(that._notify){that._notify({action:'bindingComplete',data:that.boundSource});}that.bindingCompleted=true;}},{key:'refreshHierarchy',value:function refreshHierarchy(){var that=this;that._buildHierarchy();}},{key:'find',value:function find(){var that=this;return that.boundSource.find.apply(that.boundSource,arguments);}//toArray() {
//    const that = this;
//    return that.boundSource.toArray();
//}
},{key:'onVirtualDataSourceRequested',value:function onVirtualDataSourceRequested(requestCallback,details){var that=this;var first=details?details.first:Infinity;var last=details?details.last:Infinity;var row=details?details.row:null;if(undefined===first){first=Infinity;}if(undefined===last){last=Infinity;}that.virtualFirstIndex=first;that.virtualLastIndex=last;if(that.virtualDataSource){var getDataSource=function getDataSource(dataAdapterSettings){if(dataAdapterSettings.virtualDataSourceLength){that.virtualDataSourceLength=dataAdapterSettings.virtualDataSourceLength;}new JQX.DataAdapter({dataSource:dataAdapterSettings.dataSource,dataFields:dataAdapterSettings.dataFields||that.dataFields,data:details,onBindingComplete:function onBindingComplete(event){if(that.virtualDataSourceOnExpand&&row){if(event.data&&event.data.length>0){that.add(event.data,row.$.id);}else{row.leaf=true;}if(that.onFilter){that.onFilter();}requestCallback();return;}if(first===Infinity){that.add(event.data);}else{var items=[];var indexes=[];for(var i=0;i<event.data.length;i++){var item=event.data[i];if(first+i<=last){items.push(item);indexes.push(first+i);}}that.update(indexes,items);}if(that.onFilter){that.onFilter();}requestCallback();}});};var hasCache=false;var isEmpty=function isEmpty(obj){return Object.entries(obj).length===0&&(obj.constructor===Object||obj.constructor===Array);};var canCache=isEmpty(details.sorting)&&isEmpty(details.filtering)&&isEmpty(details.grouping)&&!details.row&&details.action!=='filter'&&details.action!=='sort'&&details.action!=='group';if(that.virtualDataSourceCache&&first!==Infinity&&canCache){var cachedCount=0;for(var i=first;i<last;i++){if(!that[i].isEmpty){cachedCount++;}}if(cachedCount===last-first){hasCache=true;}}if(hasCache){requestCallback();}else{if(details.action==='expand'){that.virtualDataSourceOnExpand(getDataSource,{first:first,last:last,row:details.row,sorting:details.sorting,filtering:details.filtering,grouping:details.grouping,action:details.action});}else{that.virtualDataSource(getDataSource,{first:first,last:last,sorting:details.sorting,filtering:details.filtering,grouping:details.grouping,action:details.action});}}}else{requestCallback();}}},{key:'add',value:function add(item,parentId){var that=this;if(!item){return;}var result=true;var addItem=function addItem(item){var itemObject=that._getDataItem(item,that.boundSource.length);that[that.boundSource.length]=itemObject;that.dataItemById[itemObject.$.id]=itemObject;var pushResult=that.boundSource.push(itemObject);if(parentId!==undefined){itemObject.$.parentId=parentId;}if(!pushResult){result=false;}return itemObject;};if(item.length){var itemObjects=[];for(var i=0;i<item.length;i++){var itemObject=addItem(item[i]);itemObjects.push(itemObject);}that._notify({action:'add',data:itemObjects});}else{var _itemObject=addItem(item);that._notify({action:'add',data:_itemObject});}that.refreshHierarchy();return result;}},{key:'refreshIndexes',value:function refreshIndexes(){var that=this;for(var i=0;i<that.boundSource.length;i++){that[i]=that.boundSource[i];}}},{key:'removeLast',value:function removeLast(){var that=this;delete that[that.boundSource.length-1];var result=that.boundSource.pop();that._notify({action:'removeLast',data:result});that.refreshHierarchy();return result;}},{key:'remove',value:function remove(index){var that=this;var item=that.boundSource[index];if(!item){throw new Error('Invalid Item Index');}that.boundSource.splice(index,1);that.refreshIndexes();that._notify({action:'remove',index:index,data:item});that.refreshHierarchy();}},{key:'update',value:function update(index,dataSourceItem){var that=this;if(JQX.Utilities.Types.isArray(index)&&JQX.Utilities.Types.isArray(dataSourceItem)){if(index.length===0&&dataSourceItem.length===0){return;}}if(dataSourceItem.length&&index.length){var itemObjects=[];for(var i=0;i<index.length;i++){var _itemObject2=that._getDataItem(dataSourceItem[i],index[i]);var currentIndex=index[i];itemObjects.push(_itemObject2);that.boundSource[currentIndex]=_itemObject2;that[currentIndex]=that.boundSource[currentIndex];that.dataItemById[_itemObject2.$.id]=that[currentIndex];}that._notify({action:'update',index:index,data:itemObjects});that.refreshHierarchy();return;}var itemObject=that._getDataItem(dataSourceItem,index);that.boundSource[index]=itemObject;that[index]=that.boundSource[index];that.dataItemById[itemObject.$.id]=that[index];that._notify({action:'update',index:index,data:itemObject});that.refreshHierarchy();return itemObject;}},{key:'insert',value:function insert(index,item){var that=this;item=that._getDataItem(item,index);var result=that.boundSource.splice(index,0,item);that.refreshIndexes();that._notify({action:'insert',index:index,data:item});that.refreshHierarchy();return result;}},{key:'move',value:function move(from,to){if(to>from&&to-from===1||from===to){return;}var that=this,recordToMove=that.boundSource.splice(from,1)[0];if(to>from){to--;that.boundSource.splice(to,0,recordToMove);}else{that.boundSource.splice(to,0,recordToMove);}that.refreshIndexes();that._notify({action:'move',index:to,data:that.boundSource[to]});that.refreshHierarchy();}},{key:'indexOf',value:function indexOf(item){var that=this;var index=that.boundSource.indexOf(item);return index;}},{key:'clear',value:function clear(){var that=this;if(!that.isInitialized){that._cachedValues=[];that.dataItemById=[];return;}for(var i=0;i<that.boundSource.length;i++){delete that[i];}that._cachedValues=[];that.boundSource=that.observable?new JQX.ObservableArray():[];that.dataItemById=[];that.refreshHierarchy();}},{key:'_getId',value:function _getId(id,item,index){if(id!==null&&id.name!==undefined){if(id.name&&item.getAttribute){var result=item.getAttribute(id.name);if(result!==null&&result.toString().length>0){return result;}else if(id.map){try{var _result=item.getAttribute(id.map);if(_result!==null&&_result.toString().length>0){return _result;}}catch(error){return index;}}return;}}if(id){if(id.toString().length>0&&item.getAttribute){var _result2=item.getAttribute(id);if(_result2!==null&&_result2.toString().length>0){return _result2.trim().split(' ').join('').replace(/([ #;?%&,.+*~\':'!^$[\]()=>|\/@])/g,'');}else{var splitMap=id.split(this.mapChar);if(splitMap.length>1){var d=item;for(var p=0;p<splitMap.length;p++){if(d!==undefined){d=d[splitMap[p]];}}if(d!==undefined){return d;}}else{if(item[id]!==undefined){return item[id];}}}}}return index;}},{key:'_buildHierarchy',value:function _buildHierarchy(){var that=this;if(!that.reservedNames){that.reservedNames={leaf:'leaf',parent:'parent',expanded:'expanded',checked:'checked',selected:'selected',level:'level',icon:'icon',data:'data'};}else{var _names=that.reservedNames;if(!_names.leaf){_names.leaf='leaf';}if(!_names.parent){_names.parent='parent';}if(!_names.expanded){_names.expanded='expanded';}if(!_names.checked){_names.checked='checked';}if(!_names.selected){_names.selected='selected';}if(!_names.level){_names.level='level';}if(!_names.data){_names.data='data';}}var names=that.reservedNames;if(that.childrenDataField){var hierarchy=[];var _loop=function _loop(i){var item=Object.assign({},that.boundSource[i]);if(!item){return'continue';}hierarchy.push(item);var addItems=function addItems(item){var splitMap=that.childrenDataField.split(that.mapChar);var children=null;if(splitMap.length>1){var data=item;for(var p=0;p<splitMap.length;p++){if(data!==undefined){data=data[splitMap[p]];}}children=data;}else{children=item['children'];}item['children']=children;if(item['children']===null||item['children']===undefined||item['children']&&item['children'].length===0){item[names.leaf]=true;}};addItems(item);item[names.level]=0;if(!item.$){item.$={};}item[names.parent]=null;item[names.data]=item;if(item[names.expanded]===undefined){item[names.expanded]=false;}var drillThrough=function drillThrough(parent,children){if(!children){parent['children']=new Array();return;}for(var _i3=0;_i3<children.length;_i3++){var _item2=that._getDataItem(children[_i3],_i3);if(!_item2){continue;}addItems(_item2);_item2[names.level]=parent[names.level]+1;_item2[names.parent]=parent;_item2[names.data]=_item2;if(parent){parent['children'][_i3]=_item2;}if(_item2[names.expanded]===undefined){_item2[names.expanded]=false;}drillThrough(_item2,_item2['children']);}};drillThrough(item,item['children']);};for(var i=0;i<that.boundSource.length;i++){var _ret=_loop(i);if(_ret==='continue')continue;}that.boundHierarchy=hierarchy;if(!that._boundSourceUpdate){for(var i=0;i<that.boundHierarchy.length;i++){var _item=that.boundHierarchy[i];if(_item.children){(function(){var drillThrough=function drillThrough(item){if(!that.dataItemById[item.$.id]){that.boundSource.canNotify=false;that.dataItemById[item.$.id]=item;that[that.boundSource.length]=item;that.boundSource.push(item);that.boundSource.canNotify=true;}if(item.children){for(var _i2=0;_i2<item.children.length;_i2++){var child=item.children[_i2];if(child.children){drillThrough(child);}}}};drillThrough(_item);})();}}that._boundSourceUpdate=true;}}if(that.xmlRoot&&that.dataSourceType==='xml'){that.boundHierarchy=this._getHierarchy('uid','_parentuid','children',null,that.boundSource);}if(that.keyDataField&&that.parentDataField){that.boundHierarchy=this._getHierarchy(that.keyDataField,that.parentDataField,'children',null,that.boundSource);}if(that.groupBy&&that.groupBy.length>0){that.boundHierarchy=this._getGroupHierarchy(that.groupBy,'children','label',null,'data',null,'parent',that.boundSource);}if(that.virtualDataSourceOnExpand){that.boundHierarchy=this._getHierarchy('id','parentId','children',null,that.boundSource);}}},{key:'_getGroupHierarchy',value:function _getGroupHierarchy(groups,collectionName,groupName,mappingFields,itemName,valueName,parentName,data,startIndex){var that=this;if(!startIndex){startIndex=0;}var names=that.reservedNames;var guid=function guid(){function s4(){return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);}return s4()+s4()+'-'+s4()+'-'+s4()+'-'+s4()+'-'+s4()+s4()+s4();};var groupHashCodes=new Array();for(var iGroupColumn=0;iGroupColumn<groups.length;iGroupColumn++){groupHashCodes[iGroupColumn]=guid();}if(!collectionName){collectionName='children';}if(!groupName){groupName='group';}if(!itemName){itemName='item';}if(!parentName){parentName='parent';}if(undefined===valueName){valueName='value';}var groupboundSource=new Array();var hashItemGroups=new Array();var groupboundSourceIndex=0;var getItem=function getItem(item){var itemObj=item;if(mappingFields){for(var mappingField in mappingFields){var mappingObject=mappingFields[mappingField];if(mappingObject.name&&mappingObject.map){itemObj[mappingObject.map]=itemObj[mappingObject.name];}}}return itemObj;};for(var obj=0;obj<data.length;obj++){var _item3=Object.assign({},getItem(data[obj]));_item3[names.leaf]=false;var itemKeysHierarchy=new Array();var keys=0;for(var _iGroupColumn=0;_iGroupColumn<groups.length;_iGroupColumn++){var group=groups[_iGroupColumn];var value=_item3[group];if(null===value){continue;}itemKeysHierarchy[keys++]={value:value,group:group,hash:groupHashCodes[_iGroupColumn]};}if(itemKeysHierarchy.length!==groups.length){break;}var parentItem=null;var lookupKey='';for(var q=0;q<itemKeysHierarchy.length;q++){var itemKey=itemKeysHierarchy[q].value;var groupDataField=itemKeysHierarchy[q].group;var columnHash=itemKeysHierarchy[q].hash;lookupKey=lookupKey+'_'+columnHash+'_'+itemKey;if(hashItemGroups[lookupKey]!==undefined&&hashItemGroups[lookupKey]!==null){parentItem=hashItemGroups[lookupKey];continue;}if(parentItem===null){parentItem={$:{}};parentItem[names.level]=0;parentItem[names.leaf]=false;parentItem[parentName]=null;parentItem[groupName]=itemKey;parentItem[itemName]=_item3;parentItem['groupDataField']=groupDataField;if(_item3[names.expanded]!==undefined){parentItem[names.expanded]=_item3[names.expanded];}else{parentItem[names.expanded]=false;}if(valueName){parentItem[valueName]=_item3[valueName];}parentItem[collectionName]=new Array();var uid=groupboundSource.length+startIndex;if(!this.id||typeof _item3.$.id==='number'||isFinite(_item3.$.id)){uid='Item'+uid;}if(parentItem.$.id===undefined){parentItem.$.id=uid;}groupboundSource[groupboundSourceIndex++]=parentItem;}else{var subItem={$:{}};subItem[names.level]=parentItem[names.level]+1;subItem[parentName]=parentItem;subItem[groupName]=itemKey;subItem[collectionName]=new Array();subItem[itemName]=_item3;subItem['groupDataField']=groupDataField;subItem[names.leaf]=false;if(_item3[names.expanded]!==undefined){subItem[names.expanded]=_item3[names.expanded];}else{subItem[names.expanded]=false;}if(valueName){subItem[valueName]=_item3[valueName];}if(subItem.$.id===undefined){subItem.$.id=parentItem.$.id+'_'+parentItem[collectionName].length;}parentItem[collectionName][parentItem[collectionName].length]=subItem;parentItem=subItem;}hashItemGroups[lookupKey]=parentItem;}if(_item3){_item3[names.leaf]=true;}if(parentItem!==null){if(this.id===null){if(undefined===_item3.$.id){_item3.$.id=parentItem.$.id+'_'+parentItem[collectionName].length;}}else{if(undefined===_item3.$.id){if(_item3.$.id.toString().indexOf(parentItem.$.id)===-1){_item3.$.id=parentItem.$.id+'_'+_item3.$.id;}}}_item3[parentName]=parentItem;_item3[names.level]=parentItem[names.level]+1;parentItem[collectionName][parentItem[collectionName].length]=_item3;}else{if(undefined===_item3.$.id){_item3.$.id=guid();}}}return groupboundSource;}},{key:'_getHierarchy',value:function _getHierarchy(fieldName,parentFieldName,collectionName,mappingFields,boundSource){var that=this;var databoundHierarchy=new Array();var flatData=this.boundSource;if(boundSource){flatData=boundSource;}if(this.boundSource.length===0)return null;var childrenName=collectionName!==null?collectionName:'children';var items=new Array();var data=flatData;var dataLength=data.length;var names=that.reservedNames;var getItem=function getItem(item){var itemObj=item;if(mappingFields){for(var mappingField in mappingFields){var mappingObject=mappingFields[mappingField];if(mappingObject.name&&mappingObject.map){itemObj[mappingObject.map]=itemObj[mappingObject.name];}}}return itemObj;};// build hierarchical source.
for(var i=0;i<dataLength;i++){var _item4=data[i];var parentId=_item4[parentFieldName];var id=_item4[fieldName];if(parentFieldName==='parentId'){parentId=_item4.$.parentId;}if(fieldName==='id'){id=_item4.$.id;}_item4[childrenName]=new Array();items[id]={parentId:parentId,item:_item4};}for(var _i4=0;_i4<dataLength;_i4++){var _item5=data[_i4];var _parentId=_item5[parentFieldName];var _id=_item5[fieldName];if(parentFieldName==='parentId'){_parentId=_item5.$.parentId;}if(fieldName==='id'){_id=_item5.$.id;}if(items[_parentId]!==undefined){var _item6={parentId:_parentId,item:items[_id].item};var parentItem=items[_parentId].item;if(!parentItem[childrenName]){parentItem[childrenName]=new Array();}var length=parentItem[childrenName].length;_item6=_item6.item;if(!names){if(_item6.parent===undefined){_item6.parent=parentItem;}}else{if(_item6[names.parent]===undefined){_item6[names.parent]=parentItem;}}var itemObj=getItem(_item6);parentItem[childrenName][length]=itemObj;items[_parentId].item=parentItem;items[_id].item=_item6;}else{var _item7=items[_id].item;if(!names){if(_item7.parent===undefined){_item7.parent=null;}}else{if(_item7[names.parent]===undefined){_item7[names.parent]=null;}}var _itemObj=getItem(_item7);if(!names){_itemObj.level=0;}else{_itemObj[names.level]=0;}databoundHierarchy[databoundHierarchy.length]=_itemObj;}}if(databoundHierarchy.length!==0){var updateLevels=function updateLevels(level,children){for(var _i5=0;_i5<children.length;_i5++){var child=children[_i5];if(!names){child.level=level;}else{child[names.level]=level;}var childChildren=child[childrenName];if(childChildren){if(childChildren.length>0){updateLevels(level+1,childChildren);}else{if(that.virtualDataSourceOnExpand){if(child.leaf===undefined){child.leaf=false;}}else{if(!names){child.leaf=true;}else{child[names.leaf]=true;}}}}else{if(that.virtualDataSourceOnExpand){if(child.leaf===undefined){child.leaf=false;}}else{if(!names){child.leaf=true;}else{child[names.leaf]=true;}}}}};updateLevels(0,databoundHierarchy);}return databoundHierarchy;}},{key:'summarize',value:function summarize(summaryItems,boundSource){var that=this;if(!Array.isArray(summaryItems)){summaryItems=[summaryItems];}var tempSummaryItems=[];for(var i=0;i<summaryItems.length;i++){var summaryItem=summaryItems[i];for(var _name2 in summaryItem){var functions=summaryItem[_name2];tempSummaryItems.push({dataField:_name2,functions:functions});}}summaryItems=tempSummaryItems;var data={};var summaryByDataField=new Array();if(!boundSource){boundSource=that.boundSource;}var length=boundSource.length;if(length===0){return;}if(length===undefined){return;}var _loop2=function _loop2(_i6){var dataItem=boundSource[_i6];var _loop4=function _loop4(j){var summaryItem=summaryItems[j];var value=dataItem[summaryItem.dataField];if(summaryItem.functions){data[summaryItem.dataField]=data[summaryItem.dataField]||{};summaryByDataField[summaryItem.dataField]=summaryByDataField[summaryItem.dataField]||0;summaryByDataField[summaryItem.dataField]++;var _summaryItemFunction=function _summaryItemFunction(summaryItemObject){for(var _name3 in summaryItemObject){var oldValue=data[summaryItem.dataField][_name3];if(oldValue===null||oldValue===undefined){data[summaryItem.dataField][_name3]=0;oldValue=0;}if(typeof summaryItemObject[_name3]==='function'){oldValue=summaryItemObject[_name3](oldValue,value,summaryItem.dataField,dataItem);}data[summaryItem.dataField][_name3]=oldValue;}};var canParse=parseFloat(value);if(isNaN(canParse)){canParse=false;}else{canParse=true;}if(canParse){value=parseFloat(value);}if(typeof value==='number'&&isFinite(value)){summaryItem.functions.forEach(function(summaryItemFunction){var oldValue=data[summaryItem.dataField][summaryItemFunction];if(oldValue===null||oldValue===undefined){oldValue=0;if(this==='min'){oldValue=9999999999999;}if(this==='max'){oldValue=-9999999999999;}}if(summaryItemFunction==='sum'||summaryItemFunction==='avg'||summaryItemFunction==='stdev'||summaryItemFunction==='stdevp'||summaryItemFunction==='var'||summaryItemFunction==='varp'){oldValue+=parseFloat(value);}else if(summaryItemFunction==='product'){if(_i6===0)oldValue=parseFloat(value);else oldValue*=parseFloat(value);}else if(summaryItemFunction==='min'){oldValue=Math.min(oldValue,parseFloat(value));}else if(summaryItemFunction==='max'){oldValue=Math.max(oldValue,parseFloat(value));}else if(summaryItemFunction==='count'){oldValue++;}else if((typeof summaryItemFunction==='undefined'?'undefined':babelHelpers.typeof(summaryItemFunction))==='object'){_summaryItemFunction(summaryItemFunction);return;}data[summaryItem.dataField][summaryItemFunction]=oldValue;});}else{summaryItem.functions.forEach(function(summaryItemFunction){if(summaryItemFunction==='min'||summaryItemFunction==='max'||summaryItemFunction==='count'||summaryItemFunction==='product'||summaryItemFunction==='sum'||summaryItemFunction==='avg'||summaryItemFunction==='stdev'||summaryItemFunction==='stdevp'||summaryItemFunction==='var'||summaryItemFunction==='varp'){if(value===null){return true;}var oldValue=data[summaryItem.dataField][summaryItemFunction];if(oldValue===null||oldValue===undefined){oldValue=0;}data[summaryItem.dataField][summaryItemFunction]=oldValue;return true;}if((typeof summaryItemFunction==='undefined'?'undefined':babelHelpers.typeof(summaryItemFunction))==='object'){_summaryItemFunction(summaryItemFunction);}});}}};for(var j=0;j<summaryItems.length;j++){_loop4(j);}};for(var _i6=0;_i6<length;_i6++){_loop2(_i6);}var _loop3=function _loop3(j){var summaryItem=summaryItems[j];if(!summaryItem.functions){return'continue';}if(!data[summaryItem.dataField]){data[summaryItem.dataField]={};summaryItem.functions.forEach(function(summaryItemFunction){data[summaryItem.dataField][summaryItemFunction]=0;});}if(data[summaryItem.dataField]['avg']!==undefined){var _value=data[summaryItem.dataField]['avg'];var dataValues=summaryByDataField[summaryItem.dataField];if(dataValues===0||dataValues===undefined){data[summaryItem.dataField]['avg']=0;}else{data[summaryItem.dataField]['avg']=_value/dataValues;}}else if(data[summaryItem.dataField]['count']!==undefined){data[summaryItem.dataField]['count']=length;}// stdev, stdevp, var, varp.
// stdev - Standard deviation on a sample.
// varp - Variance on an entire population.
// let - Variance on a sample.
if(data[summaryItem.dataField]['stdev']||data[summaryItem.dataField]['stdevp']||data[summaryItem.dataField]['var']||data[summaryItem.dataField]['varp']){summaryItem.functions.forEach(function(summaryItemFunction){if(summaryItemFunction==='stdev'||summaryItemFunction==='var'||summaryItemFunction==='varp'||summaryItemFunction==='stdevp'){var _value2=data[summaryItem.dataField][summaryItemFunction];var count=length;var average=_value2/length;var sumSq=0.0;for(var _i7=0;_i7<length;_i7++){var _dataItem=boundSource[_i7];var _value3=_dataItem[summaryItem.dataField];sumSq+=(_value3-average)*(_value3-average);}var denominator=summaryItemFunction==='stdevp'||summaryItemFunction==='varp'?count:count-1;if(denominator===0){denominator=1;}if(summaryItemFunction==='var'||summaryItemFunction==='varp'){data[summaryItem.dataField][summaryItemFunction]=sumSq/denominator;}else if(summaryItemFunction==='stdevp'||summaryItemFunction==='stdev'){data[summaryItem.dataField][summaryItemFunction]=Math.sqrt(sumSq/denominator);}}});}};for(var j=0;j<summaryItems.length;j++){var _ret4=_loop3(j);if(_ret4==='continue')continue;}return data;}},{key:'_getDataItem',value:function _getDataItem(dataSourceItem,index){var that=this;var itemObject={};var unboundMode=typeof that.dataSource==='number'||that.dataSourceLength;if(!dataSourceItem){return{$:{id:index},isEmpty:true,index:index};}if(unboundMode){for(var j=0;j<that.dataFields.length;j++){var dataField=that.dataFields?that.dataFields[j]:{};itemObject[dataField.name]='';}itemObject.$={};itemObject.$.id=index;itemObject.$.index=index;return itemObject;}var dataItem=dataSourceItem;if(dataItem.expanded!==undefined){itemObject.expanded=dataItem.expanded;if(dataItem.expanded==='true'||dataItem.expanded===true||dataItem.expanded===1){itemObject.expanded=true;}else{itemObject.expanded=false;}}if(that.childrenDataField){if(dataItem[that.childrenDataField]!==undefined){itemObject.children=dataItem[that.childrenDataField];}}else{if(dataItem.children!==undefined){itemObject.children=dataItem.children;}else if(dataItem.items!==undefined){itemObject.children=dataItem.items;}}if(dataItem.leaf!==undefined){itemObject.leaf=dataItem.leaf;}if(dataItem.level!==undefined){itemObject.level=dataItem.level;}if(that.keyDataField){if(dataItem[that.keyDataField]!==undefined){itemObject[that.keyDataField]=dataItem[that.keyDataField];}}if(that.parentDataField){if(dataItem[that.parentDataField]!==undefined){itemObject[that.parentDataField]=dataItem[that.parentDataField];}}if(that.dataFields.length===0){var names=Object.getOwnPropertyNames(dataSourceItem);for(var i=0;i<names.length;i++){that.dataFields.push({name:names[i],dataType:'string'});}}for(var _j=0;_j<that.dataFields.length;_j++){var _dataField=that.dataFields?that.dataFields[_j]:{};var _value4='';if(undefined===_dataField||_dataField===null){continue;}if(dataSourceItem.length){_value4=dataSourceItem[_j];}if(_dataField.map){var splitMap=_dataField.map.split(that.mapChar);if(splitMap.length>0){var dataMappedItem=dataItem;for(var p=0;p<splitMap.length;p++){if(!dataItem){continue;}dataMappedItem=dataMappedItem[splitMap[p]];}_value4=dataMappedItem;}else{_value4=dataItem[_dataField.map];}}if(_value4!==undefined&&_value4!==null){_value4=_value4.toString();}else{if(_value4===undefined&&_value4!==null){_value4='';}}var isEmptyString=false;// searches by both selectors when necessary.
if(_value4===''){isEmptyString=true;_value4=dataSourceItem[_dataField.name];if(_value4!==undefined&&_value4!==null){if(_dataField.dataType!=='array'){if(_dataField.dataType!=='date'){_value4=_value4.toString();}}}else{_value4='';}}if(_value4==='[object Object]'&&_dataField.map&&isEmptyString){_value4='';}if(that._cachedValues[''+_value4+'_'+_dataField.dataType]){_value4=that._cachedValues[''+_value4+'_'+_dataField.dataType];}else{if(_dataField.dataType==='bool'||_dataField.dataType==='boolean'){if(_value4==='true'||_value4==='1'){_value4=true;}else if(_value4==='false'||_value4==='0'){_value4=false;}}else{_value4=that.$document.deserialize(''+_value4,_dataField.dataType,true);}that._cachedValues[_value4+'_'+_dataField.dataType]=_value4;}if(_dataField.dataType!=='string'&&_dataField.dataType!=='boolean'&&_dataField.dataType!=='bool'){if(isNaN(_value4)||_value4===-Infinity||_value4===Infinity){_value4=0;}}itemObject[_dataField.name]=_value4;}var itemObjectId=index;if(that.id){itemObjectId=dataItem[that.id];if((typeof itemObjectId==='undefined'?'undefined':babelHelpers.typeof(itemObjectId))==='object'){itemObjectId=index;}}else if(that.dataItemById&&that.dataItemById[itemObjectId]){itemObjectId=that.length;}if(!itemObject.$){itemObject.$={};}itemObject.$.id=itemObjectId;itemObject.$.index=index;return new Object(itemObject);}},{key:'_bindToArray',value:function _bindToArray(){var that=this;var unboundMode=typeof that.dataSource==='number'||that.dataSourceLength;var dataArray=[];that.boundSource.canNotify=false;for(var i=0;i<that.length;i++){var dataSourceItem=unboundMode?{}:that.dataSource[i];var itemObject=that._getDataItem(dataSourceItem,i);dataArray.push(itemObject);}if(unboundMode&&that.dataSourceLength&&that.dataSource.length>0){for(var _i8=0;_i8<that.dataSource.length;_i8++){var cell=that.dataSource[_i8].cell;var _value5=that.dataSource[_i8].value;var row=cell.replace(/[^0-9]/g,'');var dataField=cell.replace(/[0-9]/g,'');dataArray[row-1][dataField]=_value5;}}that.boundSource=false===that.observable?dataArray:new JQX.ObservableArray(dataArray);for(var _i9=0;_i9<that.length;_i9++){that[_i9]=that.boundSource[_i9];that.dataItemById[that[_i9].$.id]=that[_i9];}that.boundSource.canNotify=true;}},{key:'_bindToJSON',value:function _bindToJSON(){var that=this;var dataArray=[];var dataEntries=Object.entries(that.dataSource);that.boundSource.canNotify=false;for(var i=0;i<dataEntries.length;i++){var dataSourceItem=dataEntries[i];var itemObject=that._getDataItem(dataSourceItem,i);dataArray.push(itemObject);}that.boundSource=false===that.observable?dataArray:new JQX.ObservableArray(dataArray);for(var _i10=0;_i10<that.length;_i10++){that[_i10]=that.boundSource[_i10];that.dataItemById[that[_i10].$.id]=that[_i10];}that.boundSource.canNotify=true;}},{key:'sortBy',value:function sortBy(dataField,dataType,orderBy){var that=this;if(!dataType){for(var i=0;i<that.dataFields.length;i++){var field=that.dataFields[i];if(field.name===dataField){dataType=field.dataType;break;}}}if(that.boundHierarchy){var sortBy=function sortBy(hierarchy){that._sort(hierarchy,dataField,orderBy,dataType);for(var _i11=0;_i11<hierarchy.length;_i11++){var _item8=hierarchy[_i11];if(_item8['children']){sortBy(_item8['children'],dataField,orderBy,dataType);}}};sortBy(that.boundHierarchy);}else{that._sort(that.boundSource,dataField,orderBy,dataType);}}},{key:'_createFilter',value:function _createFilter(dataType,filterExpressions){var filterOperators={'=':'EQUAL','<>':'NOT_EQUAL','<':'LESS_THAN','>':'GREATER_THAN','<=':'LESS_THAN_OR_EQUAL','>=':'GREATER_THAN_OR_EQUAL','equal':'EQUAL','not equal':'NOT_EQUAL','less than':'LESS_THAN','greater than':'GREATER_THAN','greater than or equal':'GREATER_THAN_OR_EQUAL','less than or equal':'LESS_THAN_OR_EQUAL','starts with':'STARTS_WITH','ends with':'ENDS_WITH','null':'null','':'EMPTY','isblank':'EMPTY','isnotblank':'NOT_EMPTY','contains':'CONTAINS','notcontains':'DOES_NOT_CONTAIN','startswith':'STARTS_WITH','endswith':'ENDS_WITH','NULL':'NULL','NOT_NULL':'NOT_NULL'};var filterExpressionsArray=[];for(var i=0;i<filterExpressions.length;i++){var filterExpression=filterExpressions[i];var filterExpressionParts=filterExpression.indexOf('"')===-1?filterExpression.split(' '):filterExpression.split('"');var filter=[];for(var j=0;j<filterExpressionParts.length;j++){var part=filterExpressionParts[j];if(part!==''){filter.push(part.trim());}}filterExpressionsArray.push(filter);}var filterGroup=new JQX.FilterGroup();var filterGroupOperators=[];var filterSubGroups=[];for(var _i12=0;_i12<filterExpressionsArray.length;_i12++){var _filterExpression=filterExpressionsArray[_i12];if(_filterExpression.length>1){var filterSubGroup=new JQX.FilterGroup();var operator='and';var filterExpressionPartsCounter=0;for(var _j2=0;_j2<_filterExpression.length;_j2++){var _value6=_filterExpression[_j2];if(_value6==='and'||_value6==='or'){operator=_value6;continue;}filterExpressionPartsCounter++;if(filterExpressionPartsCounter===2){var _filter2=filterSubGroup.createFilter(dataType,_value6,filterOperators[_filterExpression[_j2-1]]);filterExpressionPartsCounter=0;if(operator){filterSubGroup.addFilter(operator,_filter2);}}}filterSubGroups.push(filterSubGroup);}else{var filterGroupOperator=_filterExpression[0];if(filterGroupOperator!=='and'&&filterGroupOperator!=='or'){throw new Error('Filter Exprresion expects "AND" or "OR", but the token is: '+filterGroupOperator);}filterGroupOperators.push(filterGroupOperator);}}var operatorsCounter=0;if(filterSubGroups.length===1){return filterSubGroups[0];}for(var _i13=0;_i13<filterSubGroups.length;_i13++){var _operator=filterGroupOperators[operatorsCounter];if((_i13+1)%2===0){operatorsCounter++;}if(!_operator){_operator='and';}filterGroup.addFilter(_operator,filterSubGroups[_i13]);}return filterGroup;}},{key:'filterBy',value:function filterBy(dataField){var that=this;var dataType=function(){for(var i=0;i<that.dataFields.length;i++){var field=that.dataFields[i];if(field.name===dataField){return field.dataType;}}}();for(var _len=arguments.length,filterExpressions=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){filterExpressions[_key-1]=arguments[_key];}var filterGroup=that._createFilter(dataType,filterExpressions);var filteredData=that.boundSource.filter(function(value){var evaluation=filterGroup.evaluate(value[dataField]);return evaluation;});return filteredData;}},{key:'_filter',value:function _filter(filters){var operator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'and';var that=this;var filterGroups=[];var dataFields=[];if(filters.length===0){that.clearFilter();return;}var dataType=function dataType(dataField){for(var i=0;i<that.dataFields.length;i++){var field=that.dataFields[i];if(field.name===dataField){return field.dataType;}}};var defaultResult=void 0,operatorSpecificEval=void 0;if(operator==='and'){defaultResult=true;operatorSpecificEval=function operatorSpecificEval(result,filterGroup,row){return result&&filterGroup.evaluate(row[filterGroup.dataField]);};}else{defaultResult=false;operatorSpecificEval=function operatorSpecificEval(result,filterGroup,row){return result||filterGroup.evaluate(row[filterGroup.dataField]);};}for(var i=0;i<filters.length;i++){var filter=filters[i];var dataField=filter[0];var filterGroup=null;if(filter[1]instanceof JQX.FilterGroup){filterGroup=filter[1];}else{filterGroup=that._createFilter(dataType(dataField),filter.splice(1));}if(filterGroup){dataFields.push(dataField);filterGroup.dataField=dataField;filterGroups.push(filterGroup);}}if(that.boundHierarchy){var _filter3=function _filter3(row){var result=defaultResult;for(var j=0;j<filterGroups.length;j++){var _filterGroup=filterGroups[j];result=operatorSpecificEval(result,_filterGroup,row);}row.$.filtered=result;return result;};var filterBy=function filterBy(hierarchy,parentItem,root){var filteredCount=0;for(var _i14=0;_i14<hierarchy.length;_i14++){var _item9=hierarchy[_i14];_filter3(_item9);if(_item9.$.filtered){filteredCount++;}if(_item9['children']){filterBy(_item9['children'],_item9,parentItem);}}if(filteredCount>0&&that.groupBy.length>0&&parentItem){parentItem.$.filtered=true;if(root&&!root.$.filtered){root.$.filtered=true;}}else{if(filteredCount>0&&filteredCount!==hierarchy.length&&parentItem){parentItem.$.filtered=null;if(root&&!root.$.filtered){root.$.filtered=null;}}}};filterBy(that.boundHierarchy,null,null);}else{for(var _i15=0;_i15<that.boundSource.length;_i15++){var row=that.boundSource[_i15];var result=defaultResult;for(var j=0;j<filterGroups.length;j++){var _filterGroup2=filterGroups[j];result=operatorSpecificEval(result,_filterGroup2,row);}row.$.filtered=result;}}if(that.onFilter){that.onFilter();}}},{key:'clearGroup',value:function clearGroup(){var that=this;that.groupBy=[];that.boundHierarchy=null;that.refreshHierarchy();if(that.onGroup){that.onGroup();}}},{key:'clearFilter',value:function clearFilter(){var that=this;for(var i=0;i<that.boundSource.length;i++){var row=that.boundSource[i];row.$.filtered=true;}if(that.boundHierarchy){var filterBy=function filterBy(hierarchy,parentItem,root){//let filteredCount = 0;
for(var _i16=0;_i16<hierarchy.length;_i16++){var _item10=hierarchy[_i16];_item10.$.filtered=true;//if (item.$.filtered) {
//    filteredCount++;
//}
if(_item10['children']){filterBy(_item10['children'],_item10,parentItem);}}if(parentItem){parentItem.$.filtered=true;if(root&&!root.$.filtered){root.$.filtered=true;}}};filterBy(that.boundHierarchy,null,null);}if(that.onFilter){that.onFilter();}}},{key:'clearSort',value:function clearSort(){var that=this;that._sort(that.boundSource,[],[],[]);}},{key:'_sort',value:function _sort(dataSource,sortColumns,directions,dataTypes,customSortingCallback){var that=this;var isObservableArray=false;if(dataSource.length===0){return;}if(dataSource&&dataSource.constructor&&dataSource instanceof JQX.ObservableArray){isObservableArray=true;}if(!dataSource||!Array.isArray(dataSource)||dataSource.length===0||!sortColumns||Array.isArray(sortColumns)&&sortColumns.length===0){if(!isObservableArray&&!that.boundHierarchy){throw new Error('sort: Missing or Invalid arguments!');}}if(typeof sortColumns==='string'){sortColumns=[sortColumns];}var directionCoefficients=[],compareFunctions=[];if(directions===undefined){directions=[];}var getCompareFunction=function getCompareFunction(a,knownDataType){// gets data type of column (not necessary if the Grid provides this information)
var dataType=knownDataType||(typeof a==='undefined'?'undefined':babelHelpers.typeof(a));var compareFunction=void 0;switch(dataType){case'string':compareFunction=new Intl.Collator().compare;break;case'number':compareFunction=function compareFunction(a,b){return a-b;};break;case'boolean':case'bool':compareFunction=function compareFunction(a,b){if(a===b){return 0;}else if(a===false){return-1;}else{return 1;}};break;case'date':case'time':case'dateTime':if(a instanceof Date){compareFunction=function compareFunction(a,b){return a.getTime()-b.getTime();};}else if(a instanceof JQX.Utilities.DateTime||a instanceof JQX.Utilities.BigNumber){compareFunction=function compareFunction(a,b){return a.compare(b);};}break;case'object':if(a instanceof Date){compareFunction=function compareFunction(a,b){return a.getTime()-b.getTime();};}else if(a instanceof JQX.Utilities.DateTime||a instanceof JQX.Utilities.BigNumber){compareFunction=function compareFunction(a,b){return a.compare(b);};}else if(a instanceof JQX.Utilities.Complex||window.NIComplex&&a instanceof window.NIComplex){var complexNumericProcessor=new JQX.Utilities.ComplexNumericProcessor();compareFunction=function compareFunction(a,b){return complexNumericProcessor.compareComplexNumbers(a,b);};}break;}return compareFunction;};for(var i=0;i<sortColumns.length;i++){if(directions[i]===undefined||directions[i]==='asc'||directions[i]==='ascending'){directionCoefficients[i]=1;}else{directionCoefficients[i]=-1;}var _value7=dataSource[0][sortColumns[i]];compareFunctions[i]=getCompareFunction(_value7,dataTypes[i]);}if(customSortingCallback){customSortingCallback(dataSource,sortColumns,directions,compareFunctions);return;}dataSource.sort(function(a,b){for(var _i17=0;_i17<sortColumns.length;_i17++){var result=compareFunctions[_i17](a[sortColumns[_i17]],b[sortColumns[_i17]]);if(result===0){if(sortColumns[_i17+1]){continue;}else if(a._index!==undefined){// makes sorting stable
return(a._index-b._index)*directionCoefficients[_i17];}return 0;}return result*directionCoefficients[_i17];}if(sortColumns.length===0){if(a.$.index<b.$.index){return-1;}if(a.$.index>b.$.index){return 1;}return 0;}});for(var _i18=0;_i18<dataSource.length;_i18++){that[_i18]=dataSource[_i18];}}},{key:'filter',value:function filter(filterColumns,filterGroups,customFilteringCallback){JQX.DataAdapter.Filter(this.boundSource,filterColumns,filterGroups,customFilteringCallback);}},{key:'sort',value:function sort(sortColumns,directions,customSortingCallback){JQX.DataAdapter.Sort(this.boundSource,sortColumns,directions,customSortingCallback);}},{key:'dataFields',get:function get(){var that=this;return that._dataFields;},set:function set(value){var that=this;that._dataFields=that._getDataFieldObjects(value);return that._dataFields;}},{key:'dataSource',get:function get(){var that=this;if(!that._dataSource){that._dataSource=[];}return that._dataSource;},set:function set(value){var that=this;that._dataSource=value;if(that.isInitialized){that.boundSource=false===that.observable?[]:new JQX.ObservableArray();that.dataItemById=[];that.bindingCompleted=false;that.dataBind();}}},{key:'canNotify',get:function get(){var that=this;if(that._canNotify===undefined){that._canNotify=true;}return that._canNotify;},set:function set(value){var that=this;that._canNotify=value;}},{key:'length',get:function get(){var that=this;if(that.virtualDataSourceLength){return that.virtualDataSourceLength;}if(that.dataSourceLength){return that.dataSourceLength;}if(typeof that.dataSource==='number'){return that.dataSource;}if(that.bindingCompleted){return that.boundSource.length;}if(that.dataSource&&typeof that.dataSource!=='string'&&that.dataSource.length){return that.dataSource.length;}return that.boundSource.length;}}],[{key:'Filter',value:function Filter(dataSource,filterColumns,filterGroups,customFilteringCallback){var filteredData=dataSource.filter(function(dataItem){var result=true;for(var i=0;i<filterGroups.length;i++){var filterGroup=filterGroups[i];var filterColumn=filterColumns[i];if(customFilteringCallback){result=result&&customFilteringCallback(dataItem,filterColumn,filterGroup);}else{result=result&&filterGroup.evaluate(dataItem[filterColumn]);}}return result;});return filteredData;}},{key:'Sort',value:function Sort(dataSource,sortColumns,directions,customSortingCallback){var getCompareFunction=function getCompareFunction(a){// gets data type of column (not necessary if the Grid provides this information)
var dataType=typeof a==='undefined'?'undefined':babelHelpers.typeof(a);var compareFunction=void 0;switch(dataType){case'string':compareFunction=new Intl.Collator().compare;break;case'number':compareFunction=function compareFunction(a,b){return a-b;};break;case'boolean':compareFunction=function compareFunction(a,b){if(a===b){return 0;}else if(a===false){return-1;}else{return 1;}};break;case'object':if(a instanceof Date){compareFunction=function compareFunction(a,b){return a.getTime()-b.getTime();};}else if(a instanceof JQX.Utilities.DateTime||a instanceof BigNumberNG){compareFunction=function compareFunction(a,b){return a.compare(b);};}else if(a instanceof JQX.Utilities.Complex||window.NIComplex&&a instanceof window.NIComplex){var complexNumericProcessor=new JQX.Utilities.ComplexNumericProcessor();compareFunction=function compareFunction(a,b){return complexNumericProcessor.compareComplexNumbers(a,b);};}break;}return compareFunction;};if(!dataSource||!Array.isArray(dataSource)||dataSource.length===0||!sortColumns||Array.isArray(sortColumns)&&sortColumns.length===0){return;}if(typeof sortColumns==='string'){sortColumns=[sortColumns];}var directionCoefficients=[],compareFunctions=[];if(directions===undefined){directions=[];}for(var i=0;i<sortColumns.length;i++){if(directions[i]===undefined||directions[i]==='asc'||directions[i]==='ascending'){directionCoefficients[i]=1;}else{directionCoefficients[i]=-1;}compareFunctions[i]=getCompareFunction(dataSource[0][sortColumns[i]]);}if(customSortingCallback){customSortingCallback(dataSource,sortColumns,directions,compareFunctions);return;}var sortedData=dataSource.slice(0);sortedData.sort(function(a,b){for(var _i19=0;_i19<sortColumns.length;_i19++){var result=compareFunctions[_i19](a[sortColumns[_i19]],b[sortColumns[_i19]]);if(result===0){if(sortColumns[_i19+1]){continue;}else if(a._index!==undefined){// makes sorting stable
return(a._index-b._index)*directionCoefficients[_i19];}return 0;}return result*directionCoefficients[_i19];}});return sortedData;}}]);return DataAdapter;}();JQX.DataAdapter=DataAdapter;// eslint-disable-next-line
var Ajax=function(){function Ajax(config,callback){babelHelpers.classCallCheck(this,Ajax);var that=this;that.config=config;that.callback=callback;if(config.autoFetch===false){return;}that.call(config);}babelHelpers.createClass(Ajax,[{key:'call',value:function call(config){var that=this;if(!config){config=that.config;}var method='GET',url=config.url,body=null,async=true;if(config.type){method=config.type;}if(config.data){if(method==='GET'){url+='?';for(var prop in config.data){if(config.data.hasOwnProperty(prop)){url+=encodeURI(prop+'='+config.data[prop]+'&');}}if(url.charAt(url.length-1)==='&'){url=url.slice(0,url.length-1);}}else if(method==='POST'){body=JSON.stringify(config.data);}}if(config&&config.async===false&&config.dataSourceType!=='xlsx'){async=false;}if(window.fetch!==undefined&&async){that.ajaxFetch(config,method,url,body);}else{that.ajaxXMLHttpRequest(config,method,url,body,async);}}},{key:'ajaxFetch',value:function ajaxFetch(config,method,url,body){// prepare fetch config
var that=this;var fetchInit={method:method};var parseMethod=void 0;switch(config.dataSourceType){case'json':parseMethod='json';break;case'xlsx':parseMethod='arrayBuffer';break;default:parseMethod='text';}if(config){if(config.contentType){fetchInit.headers=new Headers({'Content-Type':config.contentType});}}if(body!==null){fetchInit.body=body;}var status=void 0,fetchTimeout=void 0,timeouted=void 0;if(config.timeout){fetchTimeout=setTimeout(function(){timeouted=true;},config.timeout);}if(config.beforeSend){var beforeSendResult=config.beforeSend(fetchInit,config);if(beforeSendResult===false){return;}}// fetch resource
fetch(url,fetchInit).then(function(response){if(timeouted){status=408;throw new Error('timeout');}if(fetchTimeout){clearTimeout(fetchTimeout);}status=response.status;if(!response.ok){throw new Error(response.statusText);}return response[parseMethod]();}).then(function(data){if(parseMethod==='arrayBuffer'){return JSZip.loadAsync(data).then(function(zipData){// "data" represents the whole XLSX/ZIP file
return zipData.files['xl/worksheets/sheet1.xml'].async('text').then(function(sheet1){return zipData.files['xl/sharedStrings.xml'].async('text').then(function(sharedStrings){var parsedData=that.parseXLSXData(sheet1,sharedStrings);that.ajaxComplete(config,parsedData,status);});});});}else{that.ajaxComplete(config,data,status);}}).catch(function(error){if(error.message==='JSZip is not defined'){error.message='JSZip is not defined. Please include a reference to JSZip to be able to load data from XLSX files.';}if(config&&config.loadError){config.loadError(status,error);}if(that.callback){that.callback(error,status);}});}},{key:'ajaxXMLHttpRequest',value:function ajaxXMLHttpRequest(config,method,url,body,async){var request=new XMLHttpRequest();var that=this;request.open(method,url,async);request.ontimeout=function(){if(config&&config.loadError){config.loadError(408,'timeout');}};request.onload=function(){if(request.readyState===4){var status=request.status;var data=request.response;if(status>=200&&status<=299){if(config.dataSourceType==='json'){data=JSON.parse(data);}that.ajaxComplete(config,data,status);}else if(config&&config.loadError){config.loadError(status,data);}}};request.onerror=function(){if(config&&config.loadError){config.loadError(request.status,request.response);}};if(config&&config.contentType){request.setRequestHeader('Content-Type',config.contentType);}if(async&&config.timeout){request.timeout=config.timeout;}if(config.beforeSend){var beforeSendResult=config.beforeSend(request,config);if(beforeSendResult===false){return;}}request.send(body);}},{key:'ajaxComplete',value:function ajaxComplete(config,data,status){if(!config){return;}if(config.beforeLoadComplete){var processedData=config.beforeLoadComplete(data);if(processedData){data=processedData;}}if(config.loadComplete){config.loadComplete(data,status);}if(this.callback){this.callback(data,status);}}},{key:'parseXLSXData',value:function parseXLSXData(sheet1,sharedStrings){var parser=new DOMParser(),sharedStringsDocument=parser.parseFromString(sharedStrings,'text/xml'),sharedStringsContainers=Array.from(sharedStringsDocument.getElementsByTagName('si')),sharedStringsCollection=[],sheet1Document=parser.parseFromString(sheet1,'text/xml'),rows=Array.from(sheet1Document.getElementsByTagName('row')),parsedData=[];sharedStringsContainers.forEach(function(si){var texts=si.getElementsByTagName('t');if(texts.length===1){sharedStringsCollection.push(texts[0].innerHTML);}else{var text='';texts=Array.from(texts);texts.forEach(function(t){text+=t.innerHTML;});sharedStringsCollection.push(text);}});rows.forEach(function(row){var rowObject={},cells=Array.from(row.getElementsByTagName('c'));cells.forEach(function(cell/*, index*/){var column=cell.getAttribute('r').match(/\D+/)[0],type=cell.getAttribute('t'),xmlValue=cell.getElementsByTagName('v')[0].innerHTML;var value=void 0;switch(type){case's':// string                    
value=sharedStringsCollection[parseFloat(xmlValue)];break;case'b':// boolean
value=parseFloat(xmlValue)===1;break;default:// number or date
value=parseFloat(xmlValue);}rowObject[column]=value;});parsedData.push(rowObject);});return parsedData;}}]);return Ajax;}();var localTimezoneOffset=-1*new Date().getTimezoneOffset();var __timeZones=[{id:'Local',offset:localTimezoneOffset,offsetHours:localTimezoneOffset/60,displayName:'',supportsDaylightSavingTime:false},{id:'Dateline Standard Time',offset:-720,offsetHours:-12,displayName:'(UTC-12:00) International Date Line West',supportsDaylightSavingTime:false},{id:'UTC-11',offset:-660,offsetHours:-11,displayName:'(UTC-11:00) Coordinated Universal Time-11',supportsDaylightSavingTime:false},{id:'Hawaiteratoran Standard Time',offset:-600,offsetHours:-10,displayName:'(UTC-10:00) Hawaiterator',supportsDaylightSavingTime:false},{id:'Alaskan Standard Time',offset:-540,offsetHours:-9,displayName:'(UTC-09:00) Alaska',supportsDaylightSavingTime:true},{id:'Pacific Standard Time (Mexico)',offset:-480,offsetHours:-8,displayName:'(UTC-08:00) Baja California',supportsDaylightSavingTime:true},{id:'Pacific Standard Time',offset:-480,offsetHours:-8,displayName:'(UTC-08:00) Pacific Time (US & Canada)',supportsDaylightSavingTime:true},{id:'US Mountain Standard Time',offset:-420,offsetHours:-7,displayName:'(UTC-07:00) Arizona',supportsDaylightSavingTime:false},{id:'Mountain Standard Time (Mexico)',offset:-420,offsetHours:-7,displayName:'(UTC-07:00) Chihuahua, La Paz, Mazatlan',supportsDaylightSavingTime:true},{id:'Mountain Standard Time',offset:-420,offsetHours:-7,displayName:'(UTC-07:00) Mountain Time (US & Canada)',supportsDaylightSavingTime:true},{id:'Central Standard Time',offset:-360,offsetHours:-6,displayName:'(UTC-06:00) Central Time (US & Canada)',supportsDaylightSavingTime:true},{id:'Central America Standard Time',offset:-360,offsetHours:-6,displayName:'(UTC-06:00) Central America',supportsDaylightSavingTime:false},{id:'Canada Central Standard Time',offset:-360,offsetHours:-6,displayName:'(UTC-06:00) Saskatchewan',supportsDaylightSavingTime:false},{id:'Central Standard Time (Mexico)',offset:-360,offsetHours:-6,displayName:'(UTC-06:00) Guadalajara, Mexico City, Monterrey',supportsDaylightSavingTime:true},{id:'SA Pacific Standard Time',offset:-300,offsetHours:-5,displayName:'(UTC-05:00) Bogota, Lima, Quito, Rio Branco',supportsDaylightSavingTime:false},{id:'Eastern Standard Time',offset:-300,offsetHours:-5,displayName:'(UTC-05:00) Eastern Time (US & Canada)',supportsDaylightSavingTime:true},{id:'US Eastern Standard Time',offset:-300,offsetHours:-5,displayName:'(UTC-05:00) Indiana (East)',supportsDaylightSavingTime:true},{id:'Venezuela Standard Time',offset:-270,offsetHours:-4.5,displayName:'(UTC-04:30) Caracas',supportsDaylightSavingTime:false},{id:'Atlantic Standard Time',offset:-240,offsetHours:-4,displayName:'(UTC-04:00) Atlantic Time (Canada)',supportsDaylightSavingTime:true},{id:'Paraguay Standard Time',offset:-240,offsetHours:-4,displayName:'(UTC-04:00) Asuncion',supportsDaylightSavingTime:true},{id:'Central Brazilian Standard Time',offset:-240,offsetHours:-4,displayName:'(UTC-04:00) Cuiaba',supportsDaylightSavingTime:true},{id:'Pacific SA Standard Time',offset:-240,offsetHours:-4,displayName:'(UTC-04:00) Santiago',supportsDaylightSavingTime:true},{id:'SA Western Standard Time',offset:-240,offsetHours:-4,displayName:'(UTC-04:00) Georgetown, La Paz, Manaus, San Juan',supportsDaylightSavingTime:false},{id:'Newfoundland Standard Time',offset:-210,offsetHours:-3.5,displayName:'(UTC-03:30) Newfoundland',supportsDaylightSavingTime:true},{id:'SA Eastern Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Cayenne, Fortaleza',supportsDaylightSavingTime:false},{id:'Argentina Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Buenos Aires',supportsDaylightSavingTime:true},{id:'E. South America Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Brasilia',supportsDaylightSavingTime:true},{id:'Bahia Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Salvador',supportsDaylightSavingTime:true},{id:'Montevideo Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Montevideo',supportsDaylightSavingTime:true},{id:'Greenland Standard Time',offset:-180,offsetHours:-3,displayName:'(UTC-03:00) Greenland',supportsDaylightSavingTime:true},{id:'UTC-02',offset:-120,offsetHours:-2,displayName:'(UTC-02:00) Coordinated Universal Time-02',supportsDaylightSavingTime:false},{id:'Mid-Atlantic Standard Time',offset:-120,offsetHours:-2,displayName:'(UTC-02:00) Mid-Atlantic - Old',supportsDaylightSavingTime:true},{id:'Azores Standard Time',offset:-60,offsetHours:-1,displayName:'(UTC-01:00) Azores',supportsDaylightSavingTime:true},{id:'Cape Verde Standard Time',offset:-60,offsetHours:-1,displayName:'(UTC-01:00) Cape Verde Is.',supportsDaylightSavingTime:false},{id:'Morocco Standard Time',offset:0,offsetHours:0,displayName:'(UTC) Casablanca',supportsDaylightSavingTime:true},{id:'UTC',offset:0,offsetHours:0,displayName:'(UTC) Coordinated Universal Time',supportsDaylightSavingTime:false},{id:'GMT Standard Time',offset:0,offsetHours:0,displayName:'(UTC) Dublin, Edinburgh, Lisbon, London',supportsDaylightSavingTime:true},{id:'Greenwich Standard Time',offset:0,offsetHours:0,displayName:'(UTC) Monrovia, Reykjavik',supportsDaylightSavingTime:false},{id:'Central European Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb',supportsDaylightSavingTime:true},{id:'Namibia Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) Windhoek',supportsDaylightSavingTime:true},{id:'W. Central Africa Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) West Central Africa',supportsDaylightSavingTime:false},{id:'W. Europe Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',supportsDaylightSavingTime:true},{id:'Central Europe Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',supportsDaylightSavingTime:true},{id:'Romance Standard Time',offset:60,offsetHours:1,displayName:'(UTC+01:00) Brussels, Copenhagen, Madrid, Paris',supportsDaylightSavingTime:true},{id:'FLE Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',supportsDaylightSavingTime:true},{id:'South Africa Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Harare, Pretoria',supportsDaylightSavingTime:false},{id:'Turkey Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Istanbul',supportsDaylightSavingTime:true},{id:'GTB Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Athens, Bucharest',supportsDaylightSavingTime:true},{id:'Libya Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Tripoli',supportsDaylightSavingTime:true},{id:'E. Europe Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) E. Europe',supportsDaylightSavingTime:true},{id:'Jordan Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Amman',supportsDaylightSavingTime:true},{id:'Middle East Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Beirut',supportsDaylightSavingTime:true},{id:'Egypt Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Cairo',supportsDaylightSavingTime:true},{id:'Syria Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Damascus',supportsDaylightSavingTime:true},{id:'Israel Standard Time',offset:120,offsetHours:2,displayName:'(UTC+02:00) Jerusalem',supportsDaylightSavingTime:true},{id:'Arab Standard Time',offset:180,offsetHours:3,displayName:'(UTC+03:00) Kuwait, Riyadh',supportsDaylightSavingTime:false},{id:'E. Africa Standard Time',offset:180,offsetHours:3,displayName:'(UTC+03:00) Nairobi',supportsDaylightSavingTime:false},{id:'Arabic Standard Time',offset:180,offsetHours:3,displayName:'(UTC+03:00) Baghdad',supportsDaylightSavingTime:true},{id:'Kaliningrad Standard Time',offset:180,offsetHours:3,displayName:'(UTC+03:00) Kaliningrad, Minsk',supportsDaylightSavingTime:true},{id:'Iran Standard Time',offset:210,offsetHours:3.5,displayName:'(UTC+03:30) Tehran',supportsDaylightSavingTime:true},{id:'Mauritius Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Port Louis',supportsDaylightSavingTime:true},{id:'Georgian Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Tbilisi',supportsDaylightSavingTime:false},{id:'Caucasus Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Yerevan',supportsDaylightSavingTime:true},{id:'Arabian Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Abu Dhabi, Muscat',supportsDaylightSavingTime:false},{id:'Azerbaijan Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Baku',supportsDaylightSavingTime:true},{id:'Russian Standard Time',offset:240,offsetHours:4,displayName:'(UTC+04:00) Moscow, St. Petersburg, Volgograd',supportsDaylightSavingTime:true},{id:'Afghanistan Standard Time',offset:270,offsetHours:4.5,displayName:'(UTC+04:30) Kabul',supportsDaylightSavingTime:false},{id:'Pakistan Standard Time',offset:300,offsetHours:5,displayName:'(UTC+05:00) Islamabad, Karachi',supportsDaylightSavingTime:true},{id:'West Asia Standard Time',offset:300,offsetHours:5,displayName:'(UTC+05:00) Ashgabat, Tashkent',supportsDaylightSavingTime:false},{id:'India Standard Time',offset:330,offsetHours:5.5,displayName:'(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi',supportsDaylightSavingTime:false},{id:'Sri Lanka Standard Time',offset:330,offsetHours:5.5,displayName:'(UTC+05:30) Sri Jayawardenepura',supportsDaylightSavingTime:false},{id:'Nepal Standard Time',offset:345,offsetHours:5.75,displayName:'(UTC+05:45) Kathmandu',supportsDaylightSavingTime:false},{id:'Central Asia Standard Time',offset:360,offsetHours:6,displayName:'(UTC+06:00) Astana',supportsDaylightSavingTime:false},{id:'Bangladesh Standard Time',offset:360,offsetHours:6,displayName:'(UTC+06:00) Dhaka',supportsDaylightSavingTime:true},{id:'Ekaterinburg Standard Time',offset:360,offsetHours:6,displayName:'(UTC+06:00) Ekaterinburg',supportsDaylightSavingTime:true},{id:'Myanmar Standard Time',offset:390,offsetHours:6.5,displayName:'(UTC+06:30) Yangon (Rangoon)',supportsDaylightSavingTime:false},{id:'SE Asia Standard Time',offset:420,offsetHours:7,displayName:'(UTC+07:00) Bangkok, Hanoi, Jakarta',supportsDaylightSavingTime:false},{id:'N. Central Asia Standard Time',offset:420,offsetHours:7,displayName:'(UTC+07:00) Novosibirsk',supportsDaylightSavingTime:true},{id:'Ulaanbaatar Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Ulaanbaatar',supportsDaylightSavingTime:false},{id:'China Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi',supportsDaylightSavingTime:false},{id:'Singapore Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Kuala Lumpur, Singapore',supportsDaylightSavingTime:false},{id:'North Asia Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Krasnoyarsk',supportsDaylightSavingTime:true},{id:'Taipei Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Taipei',supportsDaylightSavingTime:false},{id:'W. Australia Standard Time',offset:480,offsetHours:8,displayName:'(UTC+08:00) Perth',supportsDaylightSavingTime:true},{id:'Korea Standard Time',offset:540,offsetHours:9,displayName:'(UTC+09:00) Seoul',supportsDaylightSavingTime:false},{id:'North Asia East Standard Time',offset:540,offsetHours:9,displayName:'(UTC+09:00) Irkutsk',supportsDaylightSavingTime:true},{id:'Tokyo Standard Time',offset:540,offsetHours:9,displayName:'(UTC+09:00) Osaka, Sapporo, Tokyo',supportsDaylightSavingTime:false},{id:'AUS Central Standard Time',offset:570,offsetHours:9.5,displayName:'(UTC+09:30) Darwin',supportsDaylightSavingTime:false},{id:'Cen. Australia Standard Time',offset:570,offsetHours:9.5,displayName:'(UTC+09:30) Adelaide',supportsDaylightSavingTime:true},{id:'West Pacific Standard Time',offset:600,offsetHours:10,displayName:'(UTC+10:00) Guam, Port Moresby',supportsDaylightSavingTime:false},{id:'Tasmania Standard Time',offset:600,offsetHours:10,displayName:'(UTC+10:00) Hobart',supportsDaylightSavingTime:true},{id:'E. Australia Standard Time',offset:600,offsetHours:10,displayName:'(UTC+10:00) Brisbane',supportsDaylightSavingTime:false},{id:'AUS Eastern Standard Time',offset:600,offsetHours:10,displayName:'(UTC+10:00) Canberra, Melbourne, Sydney',supportsDaylightSavingTime:true},{id:'Yakutsk Standard Time',offset:600,offsetHours:10,displayName:'(UTC+10:00) Yakutsk',supportsDaylightSavingTime:true},{id:'Vladivostok Standard Time',offset:660,offsetHours:11,displayName:'(UTC+11:00) Vladivostok',supportsDaylightSavingTime:true},{id:'Central Pacific Standard Time',offset:660,offsetHours:11,displayName:'(UTC+11:00) Solomon Is., New Caledonia',supportsDaylightSavingTime:false},{id:'Magadan Standard Time',offset:720,offsetHours:12,displayName:'(UTC+12:00) Magadan',supportsDaylightSavingTime:true},{id:'Kamchatka Standard Time',offset:720,offsetHours:12,displayName:'(UTC+12:00) Petropavlovsk-Kamchatsky - Old',supportsDaylightSavingTime:true},{id:'Fiji Standard Time',offset:720,offsetHours:12,displayName:'(UTC+12:00) Fiji',supportsDaylightSavingTime:true},{id:'New Zealand Standard Time',offset:720,offsetHours:12,displayName:'(UTC+12:00) Auckland, Wellington',supportsDaylightSavingTime:true},{id:'UTC+12',offset:720,offsetHours:12,displayName:'(UTC+12:00) Coordinated Universal Time+12',supportsDaylightSavingTime:false},{id:'Tonga Standard Time',offset:780,offsetHours:13,displayName:'(UTC+13:00) Nuku\'alofa',supportsDaylightSavingTime:false},{id:'Samoa Standard Time',offset:780,offsetHours:13,displayName:'(UTC+13:00) Samoa',supportsDaylightSavingTime:true}],__daysToMonth365=[0,31,59,90,120,151,181,212,243,273,304,334,365],__daysToMonth366=[0,31,60,91,121,152,182,213,244,274,305,335,366],__daysPer4Years=365*4+1,__daysPer100Years=(365*4+1)*25-1,__daysPer400Years=((365*4+1)*25-1)*4+1,// Number of days from 1/1/0001 to 12/31/1600
__daysTo1601=(((365*4+1)*25-1)*4+1)*4,// Number of days from 1/1/0001 to 12/30/1899
__daysTo1899=(((365*4+1)*25-1)*4+1)*4+((365*4+1)*25-1)*3-367,// Number of days from 1/1/0001 to 12/31/9999
__daysTo10000=(((365*4+1)*25-1)*4+1)*25-366,__minTicks=0,__maxTicks=((((365*4+1)*25-1)*4+1)*25-366)*(1000*10000*3600*24)-1,__maxMillis=((((365*4+1)*25-1)*4+1)*25-366)*(1000*60*60*24);JQX.Utilities.Assign('TimeSpan',function(){function TimeSpan(){babelHelpers.classCallCheck(this,TimeSpan);var that=this;that.ticksPerMillisecond=10000;that.millisecondsPerTick=1/10000;that.ticksPerSecond=1000*10000;that.secondsPerTick=1/(1000*10000);that.ticksPerMinute=1000*10000*60;that.minutesPerTick=1/(1000*10000*60);that.ticksPerHour=1000*10000*3600;that.hoursPerTick=1/(1000*10000*3600);that.ticksPerDay=1000*10000*3600*24;that.daysPerTick=1/(1000*10000*3600*24);that.millisPerSecond=1000;that.millisPerMinute=1000*60;that.millisPerHour=1000*60*60;that.millisPerDay=1000*60*60*24;that._ticks=0;if(arguments.length===1){if(isNaN(arguments[0])){throw new Error('Argument must be a number.');}that._ticks=arguments[0];}else if(arguments.length===3){that._ticks=that.timeToMS(arguments[0],arguments[1],arguments[2],0);}else if(arguments.length===4){var days=arguments[0],hours=arguments[1],minutes=arguments[2],seconds=arguments[3],milliseconds=0,totalMilliSeconds=(days*3600*24+hours*3600+minutes*60+seconds)*1000+milliseconds;that._ticks=totalMilliSeconds*that.ticksPerMillisecond;}else if(arguments.length===5){var _days=arguments[0],_hours=arguments[1],_minutes=arguments[2],_seconds=arguments[3],_milliseconds=arguments[4],_totalMilliSeconds=(_days*3600*24+_hours*3600+_minutes*60+_seconds)*1000+_milliseconds;that._ticks=_totalMilliSeconds*that.ticksPerMillisecond;}}babelHelpers.createClass(TimeSpan,[{key:'ticks',value:function ticks(){return this._ticks;}},{key:'days',value:function days(){var that=this;return parseInt(that._ticks/that.ticksPerDay);}},{key:'timeToMS',value:function timeToMS(hour,minute,second,milliseconds){var totalSeconds=hour*3600+minute*60+second+milliseconds/1000;return parseInt(totalSeconds*this.ticksPerSecond);}},{key:'hours',value:function hours(){var that=this;return parseInt(that._ticks/that.ticksPerHour)%24;}},{key:'milliseconds',value:function milliseconds(){var that=this;return parseInt(that._ticks/that.ticksPerMillisecond)%1000;}},{key:'minutes',value:function minutes(){var that=this;return parseInt(that._ticks/that.ticksPerMinute)%60;}},{key:'seconds',value:function seconds(){var that=this;return parseInt(that._ticks/that.ticksPerSecond)%60;}},{key:'totalDays',value:function totalDays(){var that=this;return parseInt(that._ticks*that.daysPerTick);}},{key:'totalHours',value:function totalHours(){var that=this;return parseInt(that._ticks*that.hoursPerTick);}},{key:'totalMilliseconds',value:function totalMilliseconds(){var that=this,temp=that._ticks*that.millisecondsPerTick;return parseInt(temp);}},{key:'totalMinutes',value:function totalMinutes(){var that=this;return parseInt(that._ticks*that.minutesPerTick);}},{key:'totalSeconds',value:function totalSeconds(){var that=this;return parseInt(that._ticks*that.secondsPerTick);}},{key:'add',value:function add(ts){var result=this._ticks+ts._ticks,timeSpan=new JQX.Utilities.TimeSpan(result);return timeSpan;}},{key:'subtract',value:function subtract(ts){var result=this._ticks-ts._ticks;return new JQX.Utilities.TimeSpan(result);}},{key:'duration',value:function duration(){var that=this;if(that._ticks>=0){return new JQX.Utilities.TimeSpan(that._ticks);}else{return new JQX.Utilities.TimeSpan(-that._ticks);}}},{key:'equals',value:function equals(ts){return this._ticks===ts._ticks;}},{key:'valueOf',value:function valueOf(){return this._ticks;}},{key:'compare',value:function compare(t1,t2){if(t1._ticks>t2._ticks){return 1;}if(t1._ticks<t2._ticks){return-1;}return 0;}},{key:'interval',value:function interval(value,scale){var tmp=value*scale,millis=tmp+(value>=0?0.5:-0.5);return new JQX.Utilities.TimeSpan(millis*this.ticksPerMillisecond);}},{key:'fromDays',value:function fromDays(value){var that=this;return that.interval(value,that.millisPerDay);}},{key:'fromHours',value:function fromHours(value){var that=this;return that.interval(value,that.millisPerHour);}},{key:'fromMilliseconds',value:function fromMilliseconds(value){return this.interval(value,1);}},{key:'fromMinutes',value:function fromMinutes(value){var that=this;return that.interval(value,that.millisPerMinute);}},{key:'fromSeconds',value:function fromSeconds(value){var that=this;return that.interval(value,that.millisPerSecond);}},{key:'fromTicks',value:function fromTicks(value){return new JQX.Utilities.TimeSpan(value);}},{key:'toString',value:function toString(){return this.totalMilliseconds().toString();}},{key:'negate',value:function negate(){return new JQX.Utilities.TimeSpan(-this._ticks);}}]);return TimeSpan;}());JQX.Utilities.Assign('DateTime',function(){function DateTime(){babelHelpers.classCallCheck(this,DateTime);function getUTCDate(ISOString){var parseResult=that.regexISOString.exec(ISOString);UTCDate=new JQX.Utilities.DateTime(parseFloat(parseResult[1]),parseFloat(parseResult[2]),parseFloat(parseResult[3]),parseFloat(parseResult[4]),parseFloat(parseResult[5]),parseFloat(parseResult[6]),parseFloat(parseResult[7]),0,0,0,0,0,0,0,'UTC');}var that=this;var UTCDate=void 0;that.ticksPerMillisecond=10000;that.millisecondsPerTick=1/10000;that.ticksPerSecond=1000*10000;that.secondsPerTick=1/(1000*10000);that.ticksPerMinute=1000*10000*60;that.minutesPerTick=1/(1000*10000*60);that.ticksPerHour=1000*10000*3600;that.hoursPerTick=1/(1000*10000*3600);that.ticksPerDay=1000*10000*3600*24;that.daysPerTick=1/(1000*10000*3600*24);that.millisPerSecond=1000;that.millisPerMinute=1000*60;that.millisPerHour=1000*60*60;that.millisPerDay=1000*60*60*24;that.daysPerYear=365;that.daysPer4Years=__daysPer4Years;that.daysPer100Years=__daysPer100Years;that.daysPer400Years=__daysPer400Years;// Number of days from 1/1/0001 to 12/31/1600
that.daysTo1601=__daysTo1601;// Number of days from 1/1/0001 to 12/30/1899
that.daysTo1899=__daysTo1899;// Number of days from 1/1/0001 to 12/31/9999
that.daysTo10000=__daysTo10000;that.minTicks=0;that.maxTicks=__maxTicks;that.maxMillis=__maxMillis;that.datePartYear=0;that.datePartDayOfYear=1;that.datePartMonth=2;that.datePartDay=3;that.daysToMonth365=__daysToMonth365;that.daysToMonth366=__daysToMonth366;that.minValue=new Date(0);that.maxValue=new Date(((((365*4+1)*25-1)*4+1)*25-366)*(1000*10000*3600*24)-1);that.ticksMask=0x3FFFFFFFFFFFFFFF;that.flagsMask=0xC000000000000000;that.localMask=0x8000000000000000;that.ticksCeiling=0x4000000000000000;that.kindUnspecified=0x0000000000000000;that.kindUtc=0x4000000000000000;that.kindLocal=0x8000000000000000;that.kindLocalAmbiguousDst=0xC000000000000000;that.kindShift=62;that.regexTrim=/^\s+|\s+$/g;that.regexInfinity=/^[+-]?infinity$/i;that.regexHex=/^0x[a-f0-9]+$/i;that.regexParseFloat=/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/;that.regexISOString=/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/;that.calendar={// separator of parts of a date (e.g. '/' in 11/05/1955)
'/':'/',// separator of parts of a time (e.g. ':' in 05:44 PM)
':':':',// the first day of the week (0 = Sunday, 1 = Monday, etc)
firstDay:0,days:{// full day names
names:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],// abbreviated day names
namesAbbr:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],// shortest day names
namesShort:['Su','Mo','Tu','We','Th','Fr','Sa']},months:{// full month names (13 months for lunar calendards -- 13th month should be '' if not lunar)
names:['January','February','March','April','May','June','July','August','September','October','November','December',''],// abbreviated month names
namesAbbr:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec','']},// AM and PM designators in one of these forms:
// The usual view, and the upper and lower case versions
//      [standard,lowercase,uppercase]
// The culture does not use AM or PM (likely all standard date formats use 24 hour time)
//      null
AM:['AM','am','AM'],PM:['PM','pm','PM'],eras:[// eras in reverse chronological order.
// name: the name of the era in this culture (e.g. A.D., C.E.)
// start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.
// offset: offset in years from gregorian calendar
{'name':'A.D.','start':null,'offset':0}],twoDigitYearMax:2029,patterns:{// short date pattern
d:'M/d/yyyy',// long date pattern
D:'dddd, MMMM dd, yyyy',// short time pattern
t:'h:mm tt',// long time pattern
T:'h:mm:ss tt',// long date, short time pattern
f:'dddd, MMMM dd, yyyy h:mm tt',// long date, long time pattern
F:'dddd, MMMM dd, yyyy h:mm:ss tt',// month/day pattern
M:'MMMM dd',// month/year pattern
Y:'yyyy MMMM',// S is a sortable format that does not vary by culture
S:'yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss',// formatting of dates in MySQL DataBases
ISO:'yyyy-MM-dd hh:mm:ss',ISO2:'yyyy-MM-dd HH:mm:ss',d1:'dd.MM.yyyy',d2:'dd-MM-yyyy',zone1:'yyyy-MM-ddTHH:mm:ss-HH:mm',zone2:'yyyy-MM-ddTHH:mm:ss+HH:mm',custom:'yyyy-MM-ddTHH:mm:ss.fff',custom2:'yyyy-MM-dd HH:mm:ss.fff',// full precision (from year to yoctoseconds)
FP:'yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo',// alternative full precision (from year to yoctoseconds, no delimiters)
FPA:'yyyy/MM/dd HH:mm:ss:fffuunnppeeaaxxoo',// alternative full precision (from year to yoctoseconds, no delimiters)
FPA2:'yyyy-MM-dd HH:mm:ss:fffuunnppeeaaxxoo',// full precision time (from hours to yoctoseconds)
FT:'HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo',// processor precision (from year to picoseconds)
PP:'yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp',// processor precision time (from hours to picoseconds)
PT:'HH:mm:ss:fff:uu:nn:pp'},percentsymbol:'%',currencysymbol:'$',currencysymbolposition:'before',decimalseparator:'.',thousandsseparator:','};that.dateData=0;that.timeZone=null;that.timeZones=__timeZones;that._codeToUnit={'u':'_microsecond','uu':'_microsecond','n':'_nanosecond','nn':'_nanosecond','p':'_picosecond','pp':'_picosecond','e':'_femtosecond','ee':'_femtosecond','a':'_attosecond','aa':'_attosecond','x':'_zeptosecond','xx':'_zeptosecond','o':'_yoctosecond','oo':'_yoctosecond'};that._smallUnits=['_microsecond','_nanosecond','_picosecond','_femtosecond','_attosecond','_zeptosecond','_yoctosecond'];that._microsecond=0;that._nanosecond=0;that._picosecond=0;that._femtosecond=0;that._attosecond=0;that._zeptosecond=0;that._yoctosecond=0;if(arguments.length===0){var date=new Date();that.dateData=that.dateToMS(date.getFullYear(),date.getMonth()+1,date.getDate())+that.timeToMS(date.getHours(),date.getMinutes(),date.getSeconds(),date.getMilliseconds());}else if(arguments.length===1){if(arguments[0]===undefined)arguments[0]='todayDate';var isNumber=typeof arguments[0]==='number'&&isFinite(arguments[0]);if(!isNumber&&typeof arguments[0]==='string'){var _date=void 0;if(arguments[0]==='today'){_date=new Date();}else if(arguments[0]==='todayDate'){_date=new Date();_date.setHours(0,0,0,0);}else if(that.regexISOString.test(arguments[0])){getUTCDate(arguments[0]);}else{_date=that.tryparseDate(arguments[0]);}if(_date){that.dateData=that.dateToMS(_date.getFullYear(),_date.getMonth()+1,_date.getDate())+that.timeToMS(_date.getHours(),_date.getMinutes(),_date.getSeconds(),_date.getMilliseconds());}}else{if(typeof arguments[0]==='number'){that.dateData=arguments[0];}else{if(arguments[0]instanceof Date){var _date2=arguments[0];that.dateData=that.dateToMS(_date2.getFullYear(),_date2.getMonth()+1,_date2.getDate())+that.timeToMS(_date2.getHours(),_date2.getMinutes(),_date2.getSeconds(),_date2.getMilliseconds());}else{that.dateData=arguments[0];}}}}else if(arguments.length===2){if(arguments[0]===undefined)arguments[0]='todayDate';var _isNumber=typeof arguments[0]==='number'&&isFinite(arguments[0]);if(!_isNumber&&typeof arguments[0]==='string'){var _date3=void 0;if(arguments[0]==='today'){_date3=new Date();}else if(arguments[0]==='todayDate'){_date3=new Date();_date3.setHours(0,0,0,0);}else if(that.regexISOString.test(arguments[0])){getUTCDate(arguments[0]);}else{_date3=that.tryparseDate(arguments[0]);}if(_date3){that.dateData=that.dateToMS(_date3.getFullYear(),_date3.getMonth()+1,_date3.getDate())+that.timeToMS(_date3.getHours(),_date3.getMinutes(),_date3.getSeconds(),_date3.getMilliseconds());}}else{if(typeof arguments[0]==='number'){that.dateData=arguments[0];}else{if(arguments[0]instanceof Date){var _date4=arguments[0];that.dateData=that.dateToMS(_date4.getFullYear(),_date4.getMonth()+1,_date4.getDate())+that.timeToMS(_date4.getHours(),_date4.getMinutes(),_date4.getSeconds(),_date4.getMilliseconds());}else{that.dateData=arguments[0];}}}that.validateTimeZone(arguments[1]);}else if(arguments.length>2){if(typeof arguments[0]==='string'){var _date5=that.tryparseDate(arguments[0],arguments[2],arguments[1]);that.dateData=that.dateToMS(_date5.getFullYear(),_date5.getMonth()+1,_date5.getDate())+that.timeToMS(_date5.getHours(),_date5.getMinutes(),_date5.getSeconds(),_date5.getMilliseconds());}else{var year=arguments[0],month=arguments[1]-1,day=arguments[2],hour=arguments[3]||0,minute=arguments[4]||0,second=arguments[5]||0,millisecond=arguments[6]||0,microsecond=arguments[7]||0,nanosecond=arguments[8]||0,picosecond=arguments[9]||0,femtosecond=arguments[10]||0,attosecond=arguments[11]||0,zeptosecond=arguments[12]||0,yoctosecond=arguments[13]||0,_date6=new Date(year,month,day,hour,minute,second,millisecond);if(year<1970){_date6.setFullYear(year);}that.dateData=that.dateToMS(_date6.getFullYear(),_date6.getMonth()+1,_date6.getDate())+that.timeToMS(_date6.getHours(),_date6.getMinutes(),_date6.getSeconds(),_date6.getMilliseconds());that._microsecond=microsecond;that._nanosecond=nanosecond;that._picosecond=picosecond;that._femtosecond=femtosecond;that._attosecond=attosecond;that._zeptosecond=zeptosecond;that._yoctosecond=yoctosecond;if(arguments[14]){that.validateTimeZone(arguments[14]);}}}if(!that.timeZone){that.validateTimeZone('Local');}if(UTCDate){var convertedUTCDate=UTCDate.toTimeZone(that.timeZone);that.dateData=convertedUTCDate.dateData;}}babelHelpers.createClass(DateTime,[{key:'internalMS',value:function internalMS(){return this.dateData;}// Returns a given date part of this DateTithat. This method is used
// to compute the year, day-of-year, month, or day part.
},{key:'getDatePart',value:function getDatePart(part){var that=this,ms=that.internalMS();// n = number of days since 1/1/0001
var n=parseInt(ms/that.millisPerDay);// y400 = number of whole 400-year periods since 1/1/0001
var y400=parseInt(n/that.daysPer400Years);// n = day number within 400-year period
n-=y400*that.daysPer400Years;// y100 = number of whole 100-year periods within 400-year period
var y100=parseInt(n/that.daysPer100Years);// Last 100-year period has an extra day, so decrement result if 4
if(y100===4)y100=3;// n = day number within 100-year period
n-=y100*that.daysPer100Years;// y4 = number of whole 4-year periods within 100-year period
var y4=parseInt(n/that.daysPer4Years);// n = day number within 4-year period
n-=y4*that.daysPer4Years;// y1 = number of whole years within 4-year period
var y1=parseInt(n/that.daysPerYear);// Last year has an extra day, so decrement result if 4
if(y1===4)y1=3;// If year was requested, compute and return it
if(part===that.datePartYear){return parseInt(y400*400+y100*100+y4*4+y1+1);}// n = day number within year
n-=y1*that.daysPerYear;// If day-of-year was requested, return it
if(part===that.datePartDayOfYear)return parseInt(n+1);// Leap year calculation looks different from IsLeapYear since y1, y4,
// and y100 are relative to year 1, not year 0
var leapYear=y1===3&&(y4!==24||y100===3),days=leapYear?that.daysToMonth366:that.daysToMonth365;// All months have less than 32 days, so n >> 5 is a good conservative
// estimate for the month
var m=n>>5+1;// m = 1-based month number
while(n>=days[m]){m++;}// If month was requested, return it
if(part===that.datePartMonth)return parseInt(m);// Return 1-based day-of-month
return parseInt(n-days[m-1]+1);}},{key:'dayOfWeek',value:function dayOfWeek(){var that=this,ms=that.dateData,dayOfWeek=parseInt(ms/that.millisPerDay+1)%7;return dayOfWeek;}},{key:'dayOfYear',value:function dayOfYear(){var that=this;return that.getDatePart(that.datePartDayOfYear);}},{key:'weekOfYear',value:function weekOfYear(firstDay){var that=this,dateObj=that.toDate(),dowOffset=firstDay||that.calendar.firstDay,//default dowOffset to zero
newYear=new Date(dateObj.getFullYear(),0,1),daynum=Math.floor((dateObj.getTime()-newYear.getTime()-(dateObj.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000)+1;var day=newYear.getDay()-dowOffset;//the day of week the year begins on
day=day>=0?day:day+7;var weeknum=void 0;//if the year starts before the middle of a week
if(day<4){weeknum=Math.floor((daynum+day-1)/7)+1;if(weeknum>52){var nYear=new Date(dateObj.getFullYear()+1,0,1);var nday=nYear.getDay()-dowOffset;nday=nday>=0?nday:nday+7;/*if the next year starts before the middle of
                  the week, it is week #1 of that year*/weeknum=nday<4?1:53;}}else{weeknum=Math.floor((daynum+day-1)/7);}return weeknum;}},{key:'subtract',value:function subtract(date){var that=this;return new JQX.Utilities.TimeSpan(that.dateData*that.ticksPerMillisecond-date.dateData*that.ticksPerMillisecond);}},{key:'dateToMS',value:function dateToMS(year,month,day){var that=this;if(year>=1&&year<=9999&&month>=1&&month<=12){year=parseInt(year);var days=that.isLeapYear(year)?that.daysToMonth366:that.daysToMonth365;if(day>=1&&day<=days[month]-days[month-1]){var y=year-1;var n=y*365+parseInt(y/4)-parseInt(y/100)+parseInt(y/400)+days[month-1]+day-1;return n*that.millisPerDay;}}}},{key:'isLeapYear',value:function isLeapYear(year){if(year<1||year>9999){throw new Error('Year out of Range');}return year%4===0&&(year%100!==0||year%400===0);}},{key:'timeToMS',value:function timeToMS(hour,minute,second,ms){var that=this;if(hour>=0&&hour<24&&minute>=0&&minute<60&&second>=0&&second<60){var totalSeconds=parseInt(hour*3600+minute*60+second);if(ms>0&&ms<1000){return totalSeconds*that.millisPerSecond+ms;}return totalSeconds*that.millisPerSecond;}}},{key:'daysInMonth',value:function daysInMonth(year,month){if(month<1||month>12){throw new Error('Month out of Range');}var that=this,days=that.isLeapYear(year)?that.daysToMonth366:that.daysToMonth365;return days[month]-days[month-1];}},{key:'arrayIndexOf',value:function arrayIndexOf(array,item){return array.indexOf(item);}},{key:'startsWith',value:function startsWith(value,pattern){return value.indexOf(pattern)===0;}},{key:'endsWith',value:function endsWith(value,pattern){return value.substr(value.length-pattern.length)===pattern;}},{key:'trim',value:function trim(value){return(value+'').replace(this.regexTrim,'');}},{key:'expandFormat',value:function expandFormat(calendar,format){// expands unspecified or single character date formats into the full pattern.
format=format||'F';var pattern=void 0,patterns=calendar.patterns,len=format.length;if(patterns[format]){return patterns[format];}if(len===1){pattern=patterns[format];if(!pattern){throw'Invalid date format string \''+format+'\'.';}format=pattern;}else if(len===2&&format.charAt(0)==='%'){// %X escape format -- intended as a custom format string that is only one character, not a built-in format.
format=format.charAt(1);}return format;}},{key:'getEra',value:function getEra(date,eras){if(!eras)return 0;if(typeof date==='string'){return 0;}var start=void 0,ticks=date.getTime();for(var i=0,l=eras.length;i<l;i++){start=eras[i].start;if(start===null||ticks>=start){return i;}}return 0;}},{key:'toUpper',value:function toUpper(value){// 'he-IL' has non-breaking space in weekday names.
return value.split('\xA0').join(' ').toUpperCase();}},{key:'toUpperArray',value:function toUpperArray(arr){var results=[];for(var i=0,l=arr.length;i<l;i++){results[i]=this.toUpper(arr[i]);}return results;}},{key:'getEraYear',value:function getEraYear(date,cal,era,sortable){var year=date.getFullYear();if(!sortable&&cal.eras){// convert normal gregorian year to era-shifted gregorian
// year by subtracting the era offset
year-=cal.eras[era].offset;}return year;}},{key:'getDayIndex',value:function getDayIndex(cal,value,abbr){var that=this,days=cal.days;var ret=void 0,upperDays=cal._upperDays;if(!upperDays){cal._upperDays=upperDays=[that.toUpperArray(days.names),that.toUpperArray(days.namesAbbr),that.toUpperArray(days.namesShort)];}value=value.toUpperCase();if(abbr){ret=that.arrayIndexOf(upperDays[1],value);if(ret===-1){ret=that.arrayIndexOf(upperDays[2],value);}}else{ret=that.arrayIndexOf(upperDays[0],value);}return ret;}},{key:'getMonthIndex',value:function getMonthIndex(cal,value,abbr){var that=this;var months=cal.months,monthsGen=cal.monthsGenitive||cal.months,upperMonths=cal._upperMonths,upperMonthsGen=cal._upperMonthsGen;if(!upperMonths){cal._upperMonths=upperMonths=[that.toUpperArray(months.names),that.toUpperArray(months.namesAbbr)];cal._upperMonthsGen=upperMonthsGen=[that.toUpperArray(monthsGen.names),that.toUpperArray(monthsGen.namesAbbr)];}value=that.toUpper(value);var i=that.arrayIndexOf(abbr?upperMonths[1]:upperMonths[0],value);if(i<0){i=that.arrayIndexOf(abbr?upperMonthsGen[1]:upperMonthsGen[0],value);}return i;}},{key:'appendPreOrPostMatch',value:function appendPreOrPostMatch(preMatch,strings){// appends pre- and post- token match strings while removing escaped characters.
// Returns a single quote count which is used to determine if the token occurs
// in a string literal.
var quoteCount=0,escaped=false;for(var i=0,il=preMatch.length;i<il;i++){var c=preMatch.charAt(i);switch(c){case'\'':if(escaped){strings.push('\'');}else{quoteCount++;}escaped=false;break;case'\\':if(escaped){strings.push('\\');}escaped=!escaped;break;default:strings.push(c);escaped=false;break;}}return quoteCount;}},{key:'getTokenRegExp',value:function getTokenRegExp(){// regular expression for matching date and time tokens in format strings.
return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyyy|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|uu|u|nn|n|pp|p|ee|e|aa|a|xx|x|oo|o|i{1,24}|zzz|zz|z|gg|g/g;}},{key:'tryparseDate',value:function tryparseDate(value,calendar,format){var that=this;if(calendar===undefined||calendar===null){calendar=that.calendar;}if(format!==undefined){if(Array.isArray(format)){for(var i=0;i<format.length;i++){var _tryParse=that.parseDate(value,format[i],calendar);if(_tryParse){return _tryParse;}}}var tryParse=that.parseDate(value,format,calendar);if(tryParse)return tryParse;}if(value==='')return null;if(value!==null&&value!==undefined&&!value.substring){value=value.toString();}if(value!==null&&value!==undefined&&value.substring(0,6)==='/Date('){var jsonDateRE=/^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/;var date=new Date(+value.replace(/\/Date\((\d+)\)\//,'$1'));if(date==='Invalid Date'){var m=value.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/);date=null;if(m){date=new Date(1*m[1]+3600000*m[2]+60000*m[3]);}}if(date===null||date===undefined||date==='Invalid Date'||isNaN(date)){var arr=jsonDateRE.exec(value);if(arr){// 0 - complete results; 1 - ticks; 2 - sign; 3 - minutes
var result=new Date(parseInt(arr[1]));if(arr[2]){var mins=parseInt(arr[3]);if(arr[2]==='-'){mins=-mins;}var current=result.getUTCMinutes();result.setUTCMinutes(current-mins);}if(!isNaN(result.valueOf())){return result;}}}return date;}var defaultPatterns={jqxdate:'yyyy-MM-dd HH:mm:ss',// short date pattern
d:'M/d/yyyy',// long date pattern
D:'dddd, MMMM dd, yyyy',// short time pattern
t:'h:mm tt',// long time pattern
T:'h:mm:ss tt',// long date, short time pattern
f:'dddd, MMMM dd, yyyy h:mm tt',// long date, long time pattern
F:'dddd, MMMM dd, yyyy h:mm:ss tt',// month/day pattern
M:'MMMM dd',// month/year pattern
Y:'yyyy MMMM',// S is a sortable format that does not vary by culture
S:'yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss',// formatting of dates in MySQL DataBases
ISO:'yyyy-MM-dd hh:mm:ss',ISO2:'yyyy-MM-dd HH:mm:ss',ISO8601:'yyyy-MM-ddTHH:mm:ss.sssZ',d1:'dd.MM.yyyy',d2:'dd-MM-yyyy',d3:'MM-dd-yyyy',d4:'MM.dd.yyyy',zone1:'yyyy-MM-ddTHH:mm:ss-HH:mm',zone2:'yyyy-MM-ddTHH:mm:ss+HH:mm',custom:'yyyy-MM-ddTHH:mm:ss.fff',custom2:'yyyy-MM-dd HH:mm:ss.fff',iso:'yyyy-MM-ddTHH:mm:ssZ',iso_date1:'yyyy-MM-dd',iso_date2:'yyyy-MM-dd',iso_date3:'yyyy-ddd',iso_date4:'yyyy-MM-dd HH:mm',iso_date5:'yyyy-MM-dd HH:mm Z',iso_date6:'yyyy-MMM-dd',iso_date7:'yyyy-MM',iso_date8:'yyyy-MMM',iso_date9:'yyyy-MMMM',iso_date10:'yyyy-MMMM-dd',iso_time1:'HH:mm:ss.tttt',iso_time2:'HH:mm:ss',iso_time3:'HH:mm',iso_time4:'HH',iso_time5:'yyyyyy-MM-dd',iso_time6:'yyyyyy-MM-dd'};for(var prop in defaultPatterns){var _date7=that.parseDate(value,defaultPatterns[prop],calendar);if(_date7){return _date7;}}var patterns=calendar.patterns;for(var _prop in patterns){var _date8=that.parseDate(value,patterns[_prop],calendar);if(_date8){if(_prop==='ISO'){var tmpDate=that.parseDate(value,patterns['ISO2'],calendar);if(tmpDate)return tmpDate;}return _date8;}}var dateParts=void 0;if(typeof value==='string'){value=that.trim(value);var splitParts=[':','/','-',' ',','];var replaceAll=function replaceAll(find,replace,str){return str.replace(new RegExp(find,'g'),replace);};value=replaceAll(', ',',',value);var timePart='';var datePart=value;if(value.indexOf(':')>=0){timePart=value.substring(value.indexOf(':')-2);timePart=that.trim(timePart);datePart=value.substring(0,value.indexOf(':')-2);}else if(value.toUpperCase().indexOf('AM')>=0){timePart=value.substring(value.toUpperCase().indexOf('AM')-2);timePart=that.trim(timePart);datePart=value.substring(0,value.toUpperCase().indexOf('AM')-2);}else if(value.toUpperCase().indexOf('PM')>=0){timePart=value.substring(value.toUpperCase().indexOf('PM')-2);timePart=that.trim(timePart);datePart=value.substring(0,value.toUpperCase().indexOf('PM')-2);}var parseDate=new Date();var parsed=false;if(datePart){for(var _i20=0;_i20<splitParts.length;_i20++){if(datePart.indexOf(splitParts[_i20])>=0){dateParts=datePart.split(splitParts[_i20]);break;}}var days=new Array();var months=new Array();var years=new Array();var dayPart=null;var monthPart=null;for(var _i21=0;_i21<dateParts.length;_i21++){var part=dateParts[_i21];var isDay=that.parseDate(part,'d',calendar)||that.parseDate(part,'dd',calendar)||that.parseDate(part,'ddd',calendar)||that.parseDate(part,'dddd',calendar);if(isDay){days.push(isDay.getDate());if(part.length>2){dayPart=_i21;break;}}}for(var _i22=0;_i22<dateParts.length;_i22++){var _part=dateParts[_i22],isMonth=that.parseDate(_part,'M',calendar)||that.parseDate(_part,'MM',calendar)||that.parseDate(_part,'MMM',calendar)||that.parseDate(_part,'MMMM',calendar);if(isMonth){if(dayPart!==null&&dayPart!==undefined&&dayPart===_i22)continue;months.push(isMonth.getMonth());if(_part.length>2){monthPart=_i22;break;}}}for(var _i23=0;_i23<dateParts.length;_i23++){var _part2=dateParts[_i23];var isYear=that.parseDate(_part2,'yyyy',calendar);if(isYear){if(dayPart!==null&&dayPart!==undefined&&dayPart===_i23)continue;if(monthPart!==null&&monthPart!==undefined&&monthPart===_i23)continue;years.push(isYear.getFullYear());}}var dates=new Array();for(var d=days.length-1;d>=0;d--){for(var _m=0;_m<months.length;_m++){for(var y=0;y<years.length;y++){var _result3=new Date(years[y],months[_m],days[d]);if(years[y]<1970)_result3.setFullYear(years[y]);if(!isNaN(_result3.getTime())){dates.push(_result3);}}}}if(dates.length>0){parseDate=dates[0];parsed=true;}}if(timePart){var timeParts=timePart.indexOf(':')>=0?timePart.split(':'):timePart;var parsedTime=that.parseDate(timePart,'h:mm tt',calendar)||that.parseDate(timePart,'HH:mm:ss.fff',calendar)||that.parseDate(timePart,'HH:mm:ss.ff',calendar)||that.parseDate(timePart,'h:mm:ss tt',calendar)||that.parseDate(timePart,'HH:mm:ss.tttt',calendar)||that.parseDate(timePart,'HH:mm:ss',calendar)||that.parseDate(timePart,'HH:mm',calendar)||that.parseDate(timePart,'HH',calendar);var hour=0,minute=0,second=0,milisecond=0;if(parsedTime&&!isNaN(parsedTime.getTime())){hour=parsedTime.getHours();minute=parsedTime.getMinutes();second=parsedTime.getSeconds();milisecond=parsedTime.getMilliseconds();}else{if(timeParts.length===1){hour=parseInt(timeParts[0]);}if(timeParts.length===2){hour=parseInt(timeParts[0]);minute=parseInt(timeParts[1]);}if(timeParts.length===3){hour=parseInt(timeParts[0]);minute=parseInt(timeParts[1]);if(timeParts[2].indexOf('.')>=0){second=parseInt(timeParts[2].toString().split('.')[0]);milisecond=parseInt(timeParts[2].toString().split('.')[1]);}else{second=parseInt(timeParts[2]);}}if(timeParts.length===4){hour=parseInt(timeParts[0]);minute=parseInt(timeParts[1]);second=parseInt(timeParts[2]);milisecond=parseInt(timeParts[3]);}}if(parseDate&&!isNaN(hour)&&!isNaN(minute)&&!isNaN(second)&&!isNaN(milisecond)){parseDate.setHours(hour,minute,second,milisecond);parsed=true;}}if(parsed){return parseDate;}}if(value!==null&&value!==undefined){dateParts=[':','/','-'];var canParse=true;for(var _part3=0;_part3<dateParts.length;_part3++){if(value.indexOf(dateParts[_part3])!==-1){canParse=false;}}if(canParse){var number=new Number(value);if(!isNaN(number)){return new Date(number);}}}return null;}},{key:'getParseRegExp',value:function getParseRegExp(cal,format){var that=this;// converts a format string into a regular expression with groups that
// can be used to extract date fields from a date string.
// check for a cached parse regex.
var re=cal._parseRegExp;if(!re){cal._parseRegExp=re={};}else{var reFormat=re[format];if(reFormat){return reFormat;}}// expand single digit formats, then escape regular expression characters.
var expFormat=that.expandFormat(cal,format).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,'\\\\$1'),regexp=['^'],groups=[],index=0,quoteCount=0,tokenRegExp=that.getTokenRegExp(),match=void 0;// iterate through each date token found.
while((match=tokenRegExp.exec(expFormat))!==null){var preMatch=expFormat.slice(index,match.index);index=tokenRegExp.lastIndex;// don't replace any matches that occur inside a string literal.
quoteCount+=that.appendPreOrPostMatch(preMatch,regexp);if(quoteCount%2){regexp.push(match[0]);continue;}// add a regex group for the token.
var m=match[0],len=m.length,add=void 0;switch(m){case'dddd':case'ddd':case'MMMM':case'MMM':case'gg':case'g':add='(\\D+)';break;case'tt':case't':add='(\\D*)';break;case'yyyyy':add='(\\d{1,4})';break;case'yyyy':add='(\\d{'+len+'})';break;case'fff':case'ff':case'f':add='(\\d{1,'+len+'})';break;case'dd':case'd':case'MM':case'M':case'yy':case'y':case'HH':case'H':case'hh':case'h':case'mm':case'm':case'ss':case's':add='(\\d\\d?)';break;case'uu':case'nn':case'pp':case'ee':case'aa':case'xx':case'oo':add='(\\d{1,3})';break;case'zzz':add='([+-]?\\d\\d?:\\d{2})';break;case'zz':case'z':add='([+-]?\\d\\d?)';break;case'/':add='/';// To include slash in a capturing group → add = '(\\' + cal['/'] + ')';
break;default:if(/i{1,24}/.test(m)){add='(\\d{'+m.length+'})';}else{throw'Invalid date format pattern \''+m+'\'.';}}if(add){regexp.push(add);}if(m==='/'){continue;}groups.push(match[0]);}that.appendPreOrPostMatch(expFormat.slice(index),regexp);regexp.push('$');// allow whitespace to differ when matching formats.
var regexpStr=regexp.join('').replace(/\s+/g,'\\s+'),parseRegExp={'regExp':regexpStr,'groups':groups};// cache the regex for this format.
return re[format]=parseRegExp;}},{key:'outOfRange',value:function outOfRange(value,low,high){return value<low||value>high;}},{key:'expandYear',value:function expandYear(cal,year){var that=this;// expands 2-digit year into 4 digits.
var now=new Date(),era=that.getEra(now);if(year<100){var twoDigitYearMax=cal.twoDigitYearMax;twoDigitYearMax=typeof twoDigitYearMax==='string'?new Date().getFullYear()%100+parseInt(twoDigitYearMax,10):twoDigitYearMax;var curr=that.getEraYear(now,cal,era);year+=curr-curr%100;if(year>twoDigitYearMax){year-=100;}}return year;}},{key:'padZeros',value:function padZeros(num,c){var r=void 0,s=num+'',zeros=['0','00','000'];if(c>1&&s.length<c){r=zeros[c-2]+s;return r.substr(r.length-c,c);}else{r=s;}return r;}},{key:'parseDate',value:function parseDate(value,format,calendar){var that=this;if(calendar===undefined||calendar===null){calendar=that.calendar;}// try to parse the date string by matching against the format string
// while using the specified culture for date field names.
value=that.trim(value);var cal=calendar,// convert date formats into regular expressions with groupings.
// use the regexp to determine the input format and extract the date fields.
parseInfo=that.getParseRegExp(cal,format),match=new RegExp(parseInfo.regExp).exec(value);if(match===null){return null;}// found a date format that matches the input.
var groups=parseInfo.groups,era=null,year=null,month=null,date=null,weekDay=null,hour=0,hourOffset=void 0,min=0,sec=0,msec=0,tzMinOffset=null,pmHour=false;// iterate the format groups to extract and set the date fields.
for(var j=0,jl=groups.length;j<jl;j++){var matchGroup=match[j+1];if(matchGroup){var current=groups[j],clength=current.length,matchInt=parseInt(matchGroup,10);switch(current){case'dd':case'd':// Day of month.
date=matchInt;// check that date is generally in valid range, also checking overflow below.
if(that.outOfRange(date,1,31))return null;break;case'MMM':case'MMMM':case'MMMMM':case'MMMMMM':case'MMMMMMM':case'MMMMMMMM':month=that.getMonthIndex(cal,matchGroup,clength===3);if(that.outOfRange(month,0,11))return null;break;case'M':case'MM':// Month.
month=matchInt-1;if(that.outOfRange(month,0,11))return null;break;case'y':case'yy':case'yyyy':year=clength<4?that.expandYear(cal,matchInt):matchInt;if(that.outOfRange(year,0,9999))return null;break;case'h':case'hh':// Hours (12-hour clock).
hour=matchInt;if(hour===12)hour=0;if(that.outOfRange(hour,0,11))return null;break;case'H':case'HH':// Hours (24-hour clock).
hour=matchInt;if(that.outOfRange(hour,0,23))return null;break;case'm':case'mm':// Minutes.
min=matchInt;if(that.outOfRange(min,0,59))return null;break;case's':case'ss':// Seconds.
sec=matchInt;if(that.outOfRange(sec,0,59))return null;break;case'tt':case't':// AM/PM designator.
// see if it is standard, upper, or lower case PM. If not, ensure it is at least one of
// the AM tokens. If not, fail the parse for this format.
pmHour=cal.PM&&(matchGroup===cal.PM[0]||matchGroup===cal.PM[1]||matchGroup===cal.PM[2]);if(!pmHour&&(!cal.AM||matchGroup!==cal.AM[0]&&matchGroup!==cal.AM[1]&&matchGroup!==cal.AM[2]))return null;break;case'f':// Deciseconds.
case'ff':// Centiseconds.
case'fff':// Milliseconds.
msec=matchInt*Math.pow(10,3-clength);if(that.outOfRange(msec,0,999))return null;break;case'uu':case'nn':case'pp':case'ee':case'aa':case'xx':case'oo':if(that.outOfRange(matchInt,0,1000)){return null;}that[that._codeToUnit[current]]=matchInt;break;case'ddd':// Day of week.
case'dddd':// Day of week.
weekDay=that.getDayIndex(cal,matchGroup,clength===3);if(that.outOfRange(weekDay,0,6))return null;break;case'zzz':{// Time zone offset in +/- hours:min.
var offsets=matchGroup.split(/:/);if(offsets.length!==2)return null;hourOffset=parseInt(offsets[0],10);if(that.outOfRange(hourOffset,-12,13))return null;var minOffset=parseInt(offsets[1],10);if(that.outOfRange(minOffset,0,59))return null;tzMinOffset=hourOffset*60+(that.startsWith(matchGroup,'-')?-minOffset:minOffset);break;}case'z':case'zz':// Time zone offset in +/- hours.
hourOffset=matchInt;if(that.outOfRange(hourOffset,-12,13))return null;tzMinOffset=hourOffset*60;break;case'g':case'gg':{var eraName=matchGroup;if(!eraName||!cal.eras)return null;eraName=this.trim(eraName.toLowerCase());for(var i=0,l=cal.eras.length;i<l;i++){if(eraName===cal.eras[i].nathat.toLowerCase()){era=i;break;}}// could not find an era with that name
if(era===null)return null;break;}default:{var precisionDigits=matchGroup;if(precisionDigits.length%3===1){precisionDigits+='00';}else if(precisionDigits.length%3===2){precisionDigits+='0';}msec=parseInt(precisionDigits.slice(0,3),10);precisionDigits=precisionDigits.slice(3);var unitIndex=0;while(precisionDigits.length>0){that[that._smallUnits[unitIndex]]=parseInt(precisionDigits.slice(0,3),10);precisionDigits=precisionDigits.slice(3);unitIndex++;}}}}}var result=new Date(),defaultYear=void 0,convert=cal.convert;defaultYear=result.getFullYear();if(year===null){year=defaultYear;}else if(cal.eras){// year must be shifted to normal gregorian year
// but not if year was not specified, its already normal gregorian
// per the main if clause above.
year+=cal.eras[era||0].offset;}// set default day and month to 1 and January, so if unspecified, these are the defaults
// instead of the current day/month.
if(month===null){month=0;}if(date===null){date=1;}// now have year, month, and date, but in the culture's calendar.
// convert to gregorian if necessary
if(convert){result=convert.toGregorian(year,month,date);// conversion failed, must be an invalid match
if(result===null)return null;}else{// have to set year, month and date together to avoid overflow based on current date.
result.setFullYear(year,month,date);// check to see if date overflowed for specified month (only checked 1-31 above).
if(result.getDate()!==date)return null;// invalid day of week.
if(weekDay!==null&&result.getDay()!==weekDay){return null;}}// if pm designator token was found make sure the hours fit the 24-hour clock.
if(pmHour&&hour<12){hour+=12;}result.setHours(hour,min,sec,msec);if(tzMinOffset!==null){// adjust timezone to utc before applying local offset.
var adjustedMin=result.getMinutes()-(tzMinOffset+result.getTimezoneOffset());// Safari limits hours and minutes to the range of -127 to 127.  We need to use setHours
// to ensure both these fields will not exceed this range.  adjustedMin will range
// somewhere between -1440 and 1500, so we only need to split this into hours.
result.setHours(result.getHours()+parseInt(adjustedMin/60,10),adjustedMin%60);}return result;}},{key:'toString',value:function toString(format,calendar){var that=this;if(format===undefined){format='yyyy-MM-dd HH:mm:ss';}var formatStamp=that.dateData.toString()+that.getFractionsOfSecondStamp()+format+(that.timeZone||'');if(JQX.Utilities.DateTime.cache&&JQX.Utilities.DateTime.cache[formatStamp]){return JQX.Utilities.DateTime.cache[formatStamp];}var value=that.toDate();if(calendar===undefined||calendar===null){calendar=that.calendar;}if(typeof value==='string'){return value;}if(!format||!format.length||format==='i'){var _ret6=void 0;_ret6=that.formatDate(value,calendar.patterns.F,calendar);return _ret6;}var eras=calendar.eras,sortable=format==='s';format=that.expandFormat(calendar,format);// Start with an empty string
var ret=[];var hour=void 0,quoteCount=0,tokenRegExp=that.getTokenRegExp(),converted=void 0;function getPart(date,part){if(converted){return converted[part];}if(date.getMonth!==undefined){switch(part){case 0:return date.getFullYear();case 1:return date.getMonth();case 2:return date.getDate();}}}for(;;){// Save the current index
var index=tokenRegExp.lastIndex,// Look for the next pattern
ar=tokenRegExp.exec(format);// Append the text before the pattern (or the end of the string if not found)
var preMatch=format.slice(index,ar?ar.index:format.length);quoteCount+=that.appendPreOrPostMatch(preMatch,ret);if(!ar){break;}// do not replace any matches that occur inside a string literal.
if(quoteCount%2){ret.push(ar[0]);continue;}var current=ar[0],clength=current.length;var part=void 0;if(/i{1,24}/.test(current)){ret.push(that.getFirstNDigitsOfPrecision(current.length));continue;}switch(current){case'ddd'://Day of the week, as a three-letter abbreviation
case'dddd':{// Day of the week, using the full name
var names=clength===3?calendar.days.namesAbbr:calendar.days.names;ret.push(names[value.getDay()]);break;}case'd':// Day of month, without leading zero for single-digit days
case'dd':// Day of month, with leading zero for single-digit days
ret.push(that.padZeros(getPart(value,2),clength));break;case'MMM':// Month, as a three-letter abbreviation
case'MMMM':// Month, using the full name
part=getPart(value,1);ret.push(calendar.months[clength===3?'namesAbbr':'names'][part]);break;case'M':// Month, as digits, with no leading zero for single-digit months
case'MM':// Month, as digits, with leading zero for single-digit months
ret.push(that.padZeros(getPart(value,1)+1,clength));break;case'y':// Year, as two digits, but with no leading zero for years less than 10
case'yy':// Year, as two digits, with leading zero for years less than 10
case'yyyy':// Year represented by four full digits
part=that.getEraYear(value,calendar,that.getEra(value,eras),sortable);if(clength<4){part=part%100;}ret.push(that.padZeros(part,clength));break;case'h':// Hours with no leading zero for single-digit hours, using 12-hour clock
case'hh':// Hours with leading zero for single-digit hours, using 12-hour clock
hour=value.getHours()%12;if(hour===0)hour=12;ret.push(that.padZeros(hour,clength));break;case'H':// Hours with no leading zero for single-digit hours, using 24-hour clock
case'HH':// Hours with leading zero for single-digit hours, using 24-hour clock
ret.push(that.padZeros(value.getHours(),clength));break;case'm':// Minutes with no leading zero  for single-digit minutes
case'mm':// Minutes with leading zero  for single-digit minutes
ret.push(that.padZeros(value.getMinutes(),clength));break;case's':// Seconds with no leading zero for single-digit seconds
case'ss':// Seconds with leading zero for single-digit seconds
ret.push(that.padZeros(value.getSeconds(),clength));break;case't':// One character am/pm indicator ('a' or 'p')
case'tt':// Multicharacter am/pm indicator
part=value.getHours()<12?calendar.AM?calendar.AM[0]:' ':calendar.PM?calendar.PM[0]:' ';ret.push(clength===1?part.charAt(0):part);break;case'f':// Deciseconds
case'ff':// Centiseconds
case'fff':// Milliseconds
ret.push(that.padZeros(value.getMilliseconds(),3).substr(0,clength));break;case'u':case'n':case'p':case'e':case'a':case'x':case'o':ret.push(that[that._codeToUnit[current]]);break;case'uu':case'nn':case'pp':case'ee':case'aa':case'xx':case'oo':ret.push(that.padZeros(that[that._codeToUnit[current]],3));break;case'z':// Time zone offset, no leading zero                
case'zz':// Time zone offset with leading zero
//hour = value.getTimezoneOffset() / 60;
//ret.push((hour <= 0 ? '+' : '-') + that.padZeros(Math.floor(Math.abs(hour)), clength));
ret.push((that.timeZoneOffsetHours>=0?'+':'-')+that.padZeros(Math.floor(Math.abs(that.timeZoneOffsetHours)),clength));break;case'zzz'://    // Time zone offset with leading zero
//    hour = value.getTimezoneOffset() / 60;
//    ret.push((hour <= 0 ? '+' : '-') + that.padZeros(Math.floor(Math.abs(hour)), 2) +
//    // Hard coded ':' separator, rather than using calendar.TimeSeparator
//    // Repeated here for consistency, plus ':' was already assumed in date parsing.
//':' + that.padZeros(Math.abs(value.getTimezoneOffset() % 60), 2));
ret.push((that.timeZoneOffsetHours>=0?'+':'-')+that.padZeros(Math.floor(Math.abs(that.timeZoneOffsetHours)),2)+':'+that.padZeros(Math.abs(that.timeZoneOffsetHours%1)*60,2));break;case'g':case'gg':if(calendar.eras){ret.push(calendar.eras[that.getEra(value,eras)].name);}break;case'/':ret.push(calendar['/']);break;default:throw'Invalid date format pattern \''+current+'\'.';}}var result=ret.join('');if(!JQX.Utilities.DateTime.cache){JQX.Utilities.DateTime.cache=new Array();}JQX.Utilities.DateTime.cache[formatStamp]=result;return result;}/**
     * Returns a time stamp from the microseconds, nanoseconds, picoseconds, femtoseconds, attoseconds, zeptoseconds and yoctoseconds.
     */},{key:'getFractionsOfSecondStamp',value:function getFractionsOfSecondStamp(){var that=this;return that._microsecond.toString()+that._nanosecond+that._picosecond+that._femtosecond+that._attosecond+that._zeptosecond+that._yoctosecond;}},{key:'getFirstNDigitsOfPrecision',value:function getFirstNDigitsOfPrecision(precision,noMilliseconds){var that=this,result=''+(noMilliseconds!==true?that.padZeros(that.millisecond(),3):'')+that.padZeros(that._microsecond,3)+that.padZeros(that._nanosecond,3)+that.padZeros(that._picosecond,3)+that.padZeros(that._femtosecond,3)+that.padZeros(that._attosecond,3)+that.padZeros(that._zeptosecond,3)+that.padZeros(that._yoctosecond,3);return result.slice(0,precision);}},{key:'copySmallTimePartValues',value:function copySmallTimePartValues(newDate){var that=this;newDate._microsecond=that._microsecond;newDate._nanosecond=that._nanosecond;newDate._picosecond=that._picosecond;newDate._femtosecond=that._femtosecond;newDate._attosecond=that._attosecond;newDate._zeptosecond=that._zeptosecond;newDate._yoctosecond=that._yoctosecond;}},{key:'add',value:function add(value,scale,createNew){var that=this;var ms=that.internalMS();if(scale===undefined){if(createNew===false){that.dateData=ms+parseInt(value._ticks/that.ticksPerMillisecond);return that;}var _newDate=new JQX.Utilities.DateTime(ms+parseInt(value._ticks/that.ticksPerMillisecond));that.copyTimeZone(_newDate);that.copySmallTimePartValues(_newDate);return _newDate;}var millis=value*scale;if(millis<=-that.maxMillis||millis>=that.maxMillis)throw new Error('Out of Range');if(createNew===false){that.dateData=ms+millis;return that;}var newDate=new JQX.Utilities.DateTime(ms+millis);that.copyTimeZone(newDate);that.copySmallTimePartValues(newDate);return newDate;}},{key:'addDays',value:function addDays(value,createNew){var that=this;return that.add(value,that.millisPerDay,createNew);}/**
     * Clones a DateTime object.
     */},{key:'clone',value:function clone(){var that=this,date=new JQX.Utilities.DateTime(that.dateData);that.copyTimeZone(date);that.copySmallTimePartValues(date);return date;}},{key:'clearTime',value:function clearTime(){var that=this,month=that.month(),year=that.year(),day=that.day(),newDate=new JQX.Utilities.DateTime(year,month,day,0,0,0,0);that.copyTimeZone(newDate);return newDate;}},{key:'addHours',value:function addHours(value,createNew){var that=this;return that.add(value,that.millisPerHour,createNew);}},{key:'addDeciseconds',value:function addDeciseconds(value,createNew){return this.add(value*100,1,createNew);}},{key:'addCentiseconds',value:function addCentiseconds(value,createNew){return this.add(value*10,1,createNew);}},{key:'addMilliseconds',value:function addMilliseconds(value,createNew){return this.add(value,1,createNew);}},{key:'addMinutes',value:function addMinutes(value,createNew){var that=this;return that.add(value,that.millisPerMinute,createNew);}},{key:'addMonths',value:function addMonths(months,createNew){var that=this;if(months<-120000||months>120000)throw new Error('Invalid Months Value');var y=parseInt(that.getDatePart(that.datePartYear)),m=parseInt(that.getDatePart(that.datePartMonth)),d=parseInt(that.getDatePart(that.datePartDay));if(months%12===0){y=y+months/12;}else{var i=m-1+months;if(i>=0){m=i%12+1;y=y+i/12;}else{m=12+(i+1)%12;y=y+(i-11)/12;}y=parseInt(y);}if(y<1||y>9999){throw new Error('Year out of range');}var days=that.daysInMonth(y,m);if(d>days)d=days;if(createNew===false){that.dateData=that.dateToMS(y,m,d)+that.internalMS()%that.millisPerDay;return that;}var newDate=new JQX.Utilities.DateTime(that.dateToMS(y,m,d)+that.internalMS()%that.millisPerDay);that.copyTimeZone(newDate);that.copySmallTimePartValues(newDate);return newDate;}},{key:'addSeconds',value:function addSeconds(value,createNew){var that=this;return that.add(value,that.millisPerSecond,createNew);}},{key:'addYears',value:function addYears(value,createNew){return this.addMonths(value*12,createNew);}/**
     * Adds or removes microseconds.
     */},{key:'addMicroseconds',value:function addMicroseconds(value,createNew){if(value===0){return;}var that=this;var millisecondsToAdd=void 0,microseconds=void 0;if(value<0&&that.hour()===0&&that.minute()===0&&that.second()===0&&that.millisecond()===0&&that._microsecond===0){millisecondsToAdd=parseInt(value/1000,10)-1;microseconds=1000+value%1000;}var totalMilliseconds=that.timeToMS(that.hour(),that.minute(),that.second(),that.millisecond())*1000+that._microsecond,updatedTotalMilliseconds=totalMilliseconds+value;if(millisecondsToAdd===undefined){millisecondsToAdd=parseInt(updatedTotalMilliseconds/1000,10)-parseInt(totalMilliseconds/1000,10);}if(microseconds===undefined){microseconds=parseInt(updatedTotalMilliseconds%1000,10);}var newDateTimeObject=void 0;if(millisecondsToAdd!==0){newDateTimeObject=that.addMilliseconds(millisecondsToAdd,createNew);}if(createNew===false){that._microsecond=microseconds;}else{if(!newDateTimeObject){newDateTimeObject=that.clone();}newDateTimeObject._microsecond=microseconds;return newDateTimeObject;}}/**
     * Adds or removes parts of a second.
     */},{key:'addFractionsOfSecond',value:function addFractionsOfSecond(value,createNew,unit,biggerUnit,biggerUnitMethod){if(value===0){return;}var that=this,total=that[biggerUnit]*1000+that[unit],updatedTotal=value+total;var biggerUnitToAdd=parseInt(updatedTotal/1000,10)-parseInt(total/1000,10),units=parseInt(updatedTotal%1000,10),newDateTimeObject=void 0;if(value<0&&updatedTotal<0&&units<0){biggerUnitToAdd--;units=1000+units;}if(biggerUnitToAdd!==0){newDateTimeObject=that[biggerUnitMethod](biggerUnitToAdd,createNew);}if(createNew===false){that[unit]=units;}else{if(!newDateTimeObject){newDateTimeObject=that.clone();}newDateTimeObject[unit]=units;return newDateTimeObject;}}/**
     * Adds or removes nanoseconds.
     */},{key:'addNanoseconds',value:function addNanoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_nanosecond','_microsecond','addMicroseconds');}/**
     * Adds or removes picoseconds.
     */},{key:'addPicoseconds',value:function addPicoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_picosecond','_nanosecond','addNanoseconds');}/**
     * Adds or removes femtoseconds.
     */},{key:'addFemtoseconds',value:function addFemtoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_femtosecond','_picosecond','addPicoseconds');}/**
     * Adds or removes attoseconds.
     */},{key:'addAttoseconds',value:function addAttoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_attosecond','_femtosecond','addFemtoseconds');}/**
     * Adds or removes zeptoseconds.
     */},{key:'addZeptoseconds',value:function addZeptoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_zeptosecond','_attosecond','addAttoseconds');}/**
     * Adds or removes yoctoseconds.
     */},{key:'addYoctoseconds',value:function addYoctoseconds(value,createNew){return this.addFractionsOfSecond(value,createNew,'_yoctosecond','_zeptosecond','addZeptoseconds');}},{key:'getTimeZoneOffset',value:function getTimeZoneOffset(){var today=new Date(),jan=new Date(today.getFullYear(),0,1),jul=new Date(today.getFullYear(),6,1),dst=today.getTimezoneOffset()<Math.max(jan.getTimezoneOffset(),jul.getTimezoneOffset());return{offset:-(today.getTimezoneOffset()/60),dst:+dst};}},{key:'isInDaylightSavingTime',value:function isInDaylightSavingTime(){var today=new Date(),winter=new Date(today.getFullYear(),0,1),summer=new Date(today.getFullYear(),6,1);return this.date().getTimezoneOffset()<Math.max(winter.getTimezoneOffset(),summer.getTimezoneOffset());}},{key:'supportsDaylightSavingTime',value:function supportsDaylightSavingTime(){var today=new Date(),winter=new Date(today.getFullYear(),0,1),summer=new Date(today.getFullYear(),6,1);return winter.getTimezoneOffset()!==summer.getTimezoneOffset();}},{key:'date',value:function date(){var that=this,month=that.month(),year=that.year(),day=that.day(),newDate=new JQX.Utilities.DateTime(year,month,day);that.copyTimeZone(newDate);return newDate;}},{key:'isWeekend',value:function isWeekend(){var that=this;return that.dayOfWeek()===0||that.dayOfWeek()===6;}},{key:'toDate',value:function toDate(timeZone){var that=this,month=that.month(),year=that.year(),day=that.day(),hour=that.hour(),minute=that.minute(),second=that.second(),millisecond=that.millisecond();var result=new Date(year,month-1,day);if(year<1970){result.setFullYear(year);}result.setHours(hour,minute,second,millisecond);if(timeZone){var matches=that.timeZones.filter(function(zone){return zone.id===timeZone;});if(matches.length){var tzMinOffset=matches[0].offset;var localTime=result.getTime();var localOffset=result.getTimezoneOffset()*60*1000;if(that.timeZone){var timeZoneMatches=that.timeZones.filter(function(zone){return zone.id===that.timeZone;});if(timeZoneMatches.length){localOffset=-timeZoneMatches[0].offset*60*1000;}}// obtain UTC time in msec
var utc=localTime+localOffset;// create new Date object for different city
// using supplied offset
result=new Date(utc+60*1000*tzMinOffset);}}return result;}},{key:'toTimeZone',value:function toTimeZone(timeZone){var that=this;var tz=timeZone;if(tz===null||tz===undefined){tz='Local';}if(that.timeZone===tz){return that.clone();}var matches=that.timeZones.filter(function(zone){return zone.id===tz;});if(matches.length===0){return that.clone();}var date=this.toDate(tz),jqxDate=new JQX.Utilities.DateTime(date);jqxDate.timeZone=tz;jqxDate.timeZoneOffset=matches[0].offset;jqxDate.timeZoneOffsetHours=matches[0].offsetHours;that.copySmallTimePartValues(jqxDate);return jqxDate;}},{key:'day',value:function day(){var that=this;return that.getDatePart(that.datePartDay);}},{key:'month',value:function month(){var that=this;return that.getDatePart(that.datePartMonth);}},{key:'year',value:function year(){var that=this;return that.getDatePart(that.datePartYear);}},{key:'millisecond',value:function millisecond(){return parseInt(this.internalMS()%1000);}},{key:'hour',value:function hour(){var that=this;return parseInt(Math.floor(that.internalMS()/that.millisPerHour)%24);}},{key:'minute',value:function minute(){var that=this;return parseInt(that.internalMS()/that.millisPerMinute%60);}},{key:'second',value:function second(){var that=this;return parseInt(that.internalMS()/that.millisPerSecond%60);}},{key:'microsecond',value:function microsecond(){return this._microsecond;}},{key:'nanosecond',value:function nanosecond(){return this._nanosecond;}},{key:'picosecond',value:function picosecond(){return this._picosecond;}},{key:'femtosecond',value:function femtosecond(){return this._femtosecond;}},{key:'attosecond',value:function attosecond(){return this._attosecond;}},{key:'zeptosecond',value:function zeptosecond(){return this._zeptosecond;}},{key:'yoctosecond',value:function yoctosecond(){return this._yoctosecond;}},{key:'valueOf',value:function valueOf(){return this.dateData;}},{key:'equals',value:function equals(date){var that=this;return that.dateData===date.dateData&&that._microsecond===date._microsecond&&that._nanosecond===date._nanosecond&&that._picosecond===date._picosecond&&that._femtosecond===date._femtosecond&&that._attosecond===date._attosecond&&that._zeptosecond===date._zeptosecond&&that._yoctosecond===date._yoctosecond;}},{key:'equalDateParts',value:function equalDateParts(date){var that=this;if(that.year()===date.year()&&that.month()===date.month()&&that.day()===date.day()){return true;}return false;}/**
     * Compares two dates.
     */},{key:'compare',value:function compare(date){var that=this;if(that.equals(date)){return 0;}var timeParts=['dateData','_microsecond','_nanosecond','_picosecond','_femtosecond','_attosecond','_zeptosecond','_yoctosecond'];for(var i=0;i<timeParts.length;i++){var timePart=timeParts[i];if(that[timePart]>date[timePart]){return 1;}else if(that[timePart]<date[timePart]){return-1;}}return 0;}},{key:'toDateString',value:function toDateString(){return this.toDate().toDateString();}},{key:'toLocaleDateString',value:function toLocaleDateString(){var that=this;return that.toDate().toLocaleDateString(that.calendar.locale);}},{key:'toLocaleString',value:function toLocaleString(){var that=this;return that.toDate().toLocaleString(that.calendar.locale);}},{key:'toLocaleTimeString',value:function toLocaleTimeString(){var that=this;return that.toDate().toLocaleTimeString(that.calendar.locale);}},{key:'validateTimeZone',value:function validateTimeZone(timeZone){var that=this;if(typeof timeZone!=='string'){return;}var matches=that.timeZones.filter(function(zone){return zone.id===timeZone;});if(matches.length===0){return;}that.timeZone=timeZone;that.timeZoneOffset=matches[0].offset;that.timeZoneOffsetHours=matches[0].offsetHours;}},{key:'copyTimeZone',value:function copyTimeZone(newDateTime){var that=this;newDateTime.timeZone=that.timeZone;newDateTime.timeZoneOffset=that.timeZoneOffset;newDateTime.timeZoneOffsetHours=that.timeZoneOffsetHours;}},{key:'getTimeStamp',value:function getTimeStamp(){var that=this,timeStamp=new JQX.Utilities.BigNumber(that.dateData.toString()+that.getFirstNDigitsOfPrecision(undefined,true));return timeStamp;}}],[{key:'validateDate',value:function validateDate(value,referenceValue,formatString){if(value instanceof JQX.Utilities.DateTime){return value;}if(value instanceof Date){return new JQX.Utilities.DateTime(value);}try{if(new RegExp(/^\d{1,2}\/\d{1,2}\/\d{4}(, \d{1,2}:\d{2}:\d{1,2} [A|P]M)?$/).test(value)){var constructedDate=new Date(value);if(!isNaN(constructedDate.getTime())){return new JQX.Utilities.DateTime(constructedDate);}}if(typeof value==='string'){return this.parseDateString(value,referenceValue,formatString);}if(typeof value==='number'){return new JQX.Utilities.DateTime(new Date(value));}}catch(error){//
}return referenceValue;}},{key:'parseDateString',value:function parseDateString(value,referenceValue,formatString){var parseAttemptDate=new Date(value);if(!isNaN(parseAttemptDate.getTime())){return new JQX.Utilities.DateTime(parseAttemptDate);}var indexOfDate=value.indexOf('Date('),indexOfDateTime=value.indexOf('DateTime('),indexOfBracket=value.lastIndexOf(')');var validValue=value;if((indexOfDate!==-1||indexOfDateTime!==-1)&&indexOfBracket!==-1){if(indexOfDate!==-1){validValue=value.slice(indexOfDate+5,indexOfBracket);}else{validValue=value.slice(indexOfDateTime+9,indexOfBracket);}validValue=validValue.replace(/'/g,'').replace(/"/g,'').replace(/^\s+|\s+$|\s+(?=\s)/g,'');if(validValue.trim()===''){return new JQX.Utilities.DateTime();}if(new RegExp(/(^(\d+)(\s*,\s*\d+)+(\s*,\s*[a-zA-Z ]+)?$)/g).test(validValue)){validValue=validValue.split(',');validValue.map(function(argument,index){if(!isNaN(validValue[index])){validValue[index]=parseInt(argument);}else{validValue[index]=argument.trim();}});if(indexOfDate!==-1){validValue[1]++;}validValue.unshift(null);validValue=new(Function.prototype.bind.apply(JQX.Utilities.DateTime,validValue))();return validValue;}}else{var parseAttemptDateTime=new JQX.Utilities.DateTime(),parseAttempt=parseAttemptDateTime.parseDate(value,formatString);if(parseAttempt){validValue=new JQX.Utilities.DateTime(parseAttempt);parseAttemptDateTime.copySmallTimePartValues(validValue);return validValue;}}if(validValue.trim()===''){return referenceValue;}if(!isNaN(validValue)){validValue=new Date(parseInt(validValue,10));return new JQX.Utilities.DateTime(validValue);}try{var splitValue=validValue.split(',');if(splitValue.length===2){splitValue[1]=splitValue[1].trim();splitValue.unshift(null);validValue=new(Function.prototype.bind.apply(JQX.Utilities.DateTime,splitValue))();}else{validValue=new JQX.Utilities.DateTime(validValue);}}catch(error){validValue=referenceValue;}return validValue;}},{key:'fromFullTimeStamp',value:function fromFullTimeStamp(timeStamp){timeStamp=timeStamp.toString();var dateTime=new JQX.Utilities.DateTime(parseFloat(timeStamp.slice(0,timeStamp.length-21)));var smallTimeParts=timeStamp.slice(timeStamp.length-21),unitIndex=0;while(smallTimeParts.length>0){dateTime[dateTime._smallUnits[unitIndex]]=parseInt(smallTimeParts.slice(0,3),10);smallTimeParts=smallTimeParts.slice(3);unitIndex++;}return dateTime;}/**
     * Returns full DateTime constructor parameters.
     */},{key:'getConstructorParameters',value:function getConstructorParameters(oldValue){return[oldValue.year(),oldValue.month(),oldValue.day(),oldValue.hour(),oldValue.minute(),oldValue.second(),oldValue.millisecond(),oldValue._microsecond,oldValue._nanosecond,oldValue._picosecond,oldValue._femtosecond,oldValue._attosecond,oldValue._zeptosecond,oldValue._yoctosecond,oldValue.timeZone];}/**
     * Detects whether the formatString contains only date or time information, or both.
     */},{key:'detectDisplayMode',value:function detectDisplayMode(value,formatString,formatStringRegExp){if(value.calendar.patterns[formatString]){if(['d','D','M','Y','d1','d2'].indexOf(formatString)!==-1){return'calendar';}if(['t','T','FT','PT'].indexOf(formatString)!==-1){return'timePicker';}return'default';}var dateParts=['d','M','y'],timeParts=['h','H','m','s','t','f','u','n','p','e','a','x','o'],groups=formatStringRegExp.groups;var calendar=false,timePicker=false;for(var i=0;i<groups.length;i++){var char=groups[i].charAt(0);if(dateParts.indexOf(char)!==-1){calendar=true;}else if(timeParts.indexOf(char)!==-1){timePicker=true;}if(calendar&&timePicker){break;}}if(calendar===timePicker){return'default';}if(calendar){return'calendar';}return'timePicker';}/**
     * Gets and stores month and day names based on locale.
     */},{key:'getLocalizedNames',value:function getLocalizedNames(locale){var days={names:[],namesAbbr:[],namesShort:[]},months={names:[],namesAbbr:[]};if(this[locale]){return this[locale];}for(var i=23;i<30;i++){var date=new Date(2017,6,i),_name4=date.toLocaleString(locale,{'weekday':'long'});days.names.push(_name4);days.namesAbbr.push(date.toLocaleString(locale,{'weekday':'short'}));days.namesShort.push(_name4.substring(0,2));}for(var _i24=0;_i24<12;_i24++){var _date9=new Date(2017,_i24,1),_name5=_date9.toLocaleString(locale,{'month':'long'});months.names.push(_name5);months.namesAbbr.push(_name5.substring(0,3));}months.names.push('');months.namesAbbr.push('');this[locale]={days:days,months:months};return this[locale];}}]);return DateTime;}());// Draw class
JQX.Utilities.Assign('Draw',function(){function Draw(host,renderEngine){babelHelpers.classCallCheck(this,Draw);var that=this;that.host=host;that.renderEngine=renderEngine||'';that.refresh();var functions=['clear','removeElement','attr','getAttr','line','circle','rect','path','pieslice','pieSlicePath','text','measureText'];for(var i in functions){that._addFn(JQX.Utilities.Draw.prototype,functions[i]);}}babelHelpers.createClass(Draw,[{key:'_addFn',value:function _addFn(target,name){if(target[name])return;target[name]=function(){return this.renderer[name].apply(this.renderer,arguments);};}},{key:'_initRenderer',value:function _initRenderer(host){return this.createRenderer(this,host);}},{key:'_internalRefresh',value:function _internalRefresh(){var self=this;if(!self.renderer){self.host.innerHTML='';self._initRenderer(self.host);}// validate visiblity
if(window.getComputedStyle(self.host).display==='none'){return;}var renderer=self.renderer;if(!renderer)return;var rect=renderer.getRect();self._render({x:1,y:1,width:rect.width,height:rect.height});}},{key:'_render',value:function _render(rect){this._plotRect=rect;}// Public API
},{key:'refresh',value:function refresh(){this._internalRefresh();}},{key:'getSize',value:function getSize(){var rect=this._plotRect;return{width:rect.width,height:rect.height};}},{key:'toGreyScale',value:function toGreyScale(color){if(color.indexOf('#')===-1)return color;var rgb=this.cssToRgb(color);rgb[0]=rgb[1]=rgb[2]=Math.round(0.3*rgb[0]+0.59*rgb[1]+0.11*rgb[2]);var hex=this.rgbToHex(rgb[0],rgb[1],rgb[2]);return'#'+hex[0]+hex[1]+hex[2];}},{key:'decToHex',value:function decToHex(dec){return dec.toString(16);}},{key:'hexToDec',value:function hexToDec(hex){return parseInt(hex,16);}},{key:'rgbToHex',value:function rgbToHex(r,g,b){return[this.decToHex(r),this.decToHex(g),this.decToHex(b)];}},{key:'hexToRgb',value:function hexToRgb(h,e,x){return[this.hexToDec(h),this.hexToDec(e),this.hexToDec(x)];}},{key:'cssToRgb',value:function cssToRgb(color){if(color.indexOf('rgb')<=-1){return this.hexToRgb(color.substring(1,3),color.substring(3,5),color.substring(5,7));}return color.substring(4,color.length-1).split(',');}},{key:'hslToRgb',value:function hslToRgb(hsl){var r=void 0,g=void 0,b=void 0;var h=parseFloat(hsl[0]);var s=parseFloat(hsl[1]);var l=parseFloat(hsl[2]);if(s===0){r=g=b=l;}else{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=this.hueToRgb(p,q,h+1/3);g=this.hueToRgb(p,q,h);b=this.hueToRgb(p,q,h-1/3);}return[r*255,g*255,b*255];}},{key:'hueToRgb',value:function hueToRgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;else if(t<1/2)return q;else if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}},{key:'rgbToHsl',value:function rgbToHsl(rgb){var r=parseFloat(rgb[0])/255;var g=parseFloat(rgb[1])/255;var b=parseFloat(rgb[2])/255;var max=Math.max(r,g,b),min=Math.min(r,g,b);var h=void 0,s=void 0,l=(max+min)/2;if(max===min){h=s=0;}else{var diff=max-min;s=l>0.5?diff/(2-max-min):diff/(max+min);switch(max){case r:h=(g-b)/diff+(g<b?6:0);break;case g:h=(b-r)/diff+2;break;case b:h=(r-g)/diff+4;break;}h/=6;}return[h,s,l];}},{key:'swap',value:function swap(x,y){var tmp=x;x=y;y=tmp;}},{key:'getNum',value:function getNum(arr){if(arr.constructor!==Array){if(isNaN(arr))return 0;}else{for(var i=0;i<arr.length;i++){if(!isNaN(arr[i]))return arr[i];}}return 0;}},{key:'_ptRotate',value:function _ptRotate(x,y,cx,cy,angle){var radius=Math.sqrt(Math.pow(Math.abs(x-cx),2)+Math.pow(Math.abs(y-cy),2));var currAngle=Math.asin((x-cx)/radius);var newAngle=currAngle+angle;x=cx+Math.cos(newAngle)*radius;y=cy+Math.sin(newAngle)*radius;return{x:x,y:y};}},{key:'log',value:function log(val,base){return Math.log(val)/(base?Math.log(base):1);}},{key:'_mod',value:function _mod(a,b){var min=Math.abs(a>b?b:a);var scale=1;if(min!==0){while(min*scale<100){scale*=10;}}a=a*scale;b=b*scale;return a%b/scale;}},{key:'createRenderer',value:function createRenderer(widgetInstance,host){var self=widgetInstance;var renderer=self.renderer=null;if(document.createElementNS&&self.renderEngine!=='HTML5'){renderer=new JQX.Utilities.SvgRenderer(this);}if(renderer===null&&(self.renderEngine==='HTML5'||self.renderEngine===undefined)){renderer=new JQX.Utilities.HTML5Renderer(this);}renderer.init(host);self.renderer=renderer;return renderer;}},{key:'getByPriority',value:function getByPriority(arr){var value=undefined;for(var i=0;i<arr.length;i++){var current=arr[i];if(current!==undefined&&current!==null&&current!==''){value=current;break;}}return value;}},{key:'get',value:function get(array,index,key){return key!==undefined?array[index][key]:array[index];}},{key:'min',value:function min(array,key){var min=NaN;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(isNaN(min)||val<min)min=val;}return min;}},{key:'max',value:function max(array,key){var max=NaN;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(isNaN(max)||val>max)max=val;}return max;}},{key:'sum',value:function sum(array,key){var sum=0;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(!isNaN(val))sum+=val;}return sum;}},{key:'count',value:function count(array,key){var count=0;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(!isNaN(val))count++;}return count;}},{key:'avg',value:function avg(array,key){return this.sum(array,key)/Math.max(1,this.count(array,key));}},{key:'filter',value:function filter(array,fn){if(!fn)return array;var out=[];for(var i=0;i<array.length;i++){if(fn(array[i]))out.push(array[i]);}return out;}},{key:'scale',value:function scale(val,range,scale_range,params){if(isNaN(val))return NaN;if(val<Math.min(range.min,range.max)||val>Math.max(range.min,range.max)){if(!params||params['ignore_range']!==true)return NaN;}var outVal=NaN;var percent=1;if(range.type===undefined||range.type!=='logarithmic'){var denom=Math.abs(range.max-range.min);if(!denom)denom=1;percent=Math.abs(val-Math.min(range.min,range.max))/denom;}else if(range.type==='logarithmic'){var logBase=range.base;if(isNaN(logBase))logBase=10;var min=Math.min(range.min,range.max);if(min<=0)min=1;var max=Math.max(range.min,range.max);if(max<=0)max=1;var maxPow=this.log(max,logBase);max=Math.pow(logBase,maxPow);var minPow=this.log(min,logBase);min=Math.pow(logBase,minPow);var valPow=this.log(val,logBase);percent=Math.abs(valPow-minPow)/(maxPow-minPow);}if(scale_range.type==='logarithmic'){var _logBase=scale_range.base;if(isNaN(_logBase))_logBase=10;var _maxPow=this.log(scale_range.max,_logBase),_minPow=this.log(scale_range.min,_logBase);if(scale_range.flip)percent=1-percent;var _valPow=Math.min(_minPow,_maxPow)+percent*Math.abs(_maxPow-_minPow);outVal=Math.pow(_logBase,_valPow);}else{outVal=Math.min(scale_range.min,scale_range.max)+percent*Math.abs(scale_range.max-scale_range.min);if(scale_range.flip)outVal=Math.max(scale_range.min,scale_range.max)-outVal+scale_range.min;}return outVal;}},{key:'axis',value:function axis(min,max,preferedCount){if(preferedCount<=1)return[max,min];if(isNaN(preferedCount)||preferedCount<2)preferedCount=2;var decimalPlaces=0;while(Math.round(min)!==min&&Math.round(max)!==max&&decimalPlaces<10){min*=10;max*=10;decimalPlaces++;}var preferedIntSize=(max-min)/preferedCount;while(decimalPlaces<10&&Math.round(preferedIntSize)!==preferedIntSize){min*=10;max*=10;preferedIntSize*=10;decimalPlaces++;}var scale=[1,2,5];var i=0,intSizeNext=void 0;// eslint-disable-next-line
while(true){var idx=i%scale.length;var pow=Math.floor(i/scale.length);var intSizeCurr=Math.pow(10,pow)*scale[idx];idx=(i+1)%scale.length;pow=Math.floor((i+1)/scale.length);intSizeNext=Math.pow(10,pow)*scale[idx];if(preferedIntSize>=intSizeCurr&&preferedIntSize<intSizeNext)break;i++;}var intSizeSelected=intSizeNext;var out=[];var curr=this.renderer._rnd(min,intSizeSelected,false);var denominator=decimalPlaces<=0?1:Math.pow(10,decimalPlaces);while(curr<max+intSizeSelected){out.push(curr/denominator);curr+=intSizeSelected;}return out;}},{key:'_widgetToImage',value:function _widgetToImage(widgetInstance,type,fileName,fnCallback,pageOrientation){var self=widgetInstance;if(!self)return false;if(fileName===undefined||fileName==='')fileName='image.'+type;var renderEngineSaved=self.renderEngine;var enableAnimationsSaved=self.animation;self.animation='none';// try switching to HTML5
self.renderEngine='HTML5';if(self.renderEngine!==renderEngineSaved){try{self.refresh();}catch(e){self.renderEngine=renderEngineSaved;self.refresh();self.animation=enableAnimationsSaved;return false;}}var canvas=self.renderer.getContainer().firstElementChild;var continueExport=true;if(typeof fnCallback==='function'){continueExport=fnCallback(widgetInstance,canvas);}var result=true;if(continueExport)result=this.exportImage(widgetInstance,canvas,type,fileName,pageOrientation);// switch back to existing engine
if(self.renderEngine!==renderEngineSaved){self.renderEngine=renderEngineSaved;self.refresh();self.animation=enableAnimationsSaved;}return result;}},{key:'_saveAsImage',value:function _saveAsImage(type,fileName){return this._widgetToImage(this,type,fileName);}},{key:'saveAsPNG',value:function saveAsPNG(filename){return this._saveAsImage('png',filename);}},{key:'saveAsJPEG',value:function saveAsJPEG(filename){return this._saveAsImage('jpeg',filename);}},{key:'exportImage',value:function exportImage(widgetInstance,canvas,type,fileName,pageOrientation){if(!canvas)return false;var isPDF=type.toLowerCase()==='pdf';if(isPDF)type='jpeg';if(fileName===undefined||fileName==='')fileName='image.'+type;var result=true;if(type==='print'){var newWindow=window.open('','','width=800,height=500'),printDocument=newWindow.document.open(),pageContent='<!DOCTYPE html>'+'<html>'+'<head>'+'<meta charset="utf-8" />'+'<title>jQWidgets Chart</title>'+'</head>'+'<body><img src="'+canvas.toDataURL()+'" /></html>';try{printDocument.write(pageContent);printDocument.close();setTimeout(function(){newWindow.print();newWindow.close();},100);}catch(error){//
}return;}try{if(canvas){if(isPDF){pageOrientation=pageOrientation||'portrait';var data=canvas.toDataURL('image/'+type),docDefinition={content:{image:data,width:Math.min(canvas.width/1.35,pageOrientation==='portrait'?515:762)},pageOrientation:pageOrientation};try{pdfMake.createPdf(docDefinition).download(fileName);}catch(error){widgetInstance.error(widgetInstance.localize('missingReference',{files:'pdfmake.min.js'}));}}else{if(!JQX.Utilities.DataExporter){widgetInstance.error(widgetInstance.localize('missingReference',{files:'jqxexport.js'}));}var dataExporter=new JQX.Utilities.DataExporter();canvas.toBlob(function(blob){dataExporter.downloadFile(blob,type,fileName);});}}}catch(e){result=false;}return result;}}]);return Draw;}());// SvgRenderer class
JQX.Utilities.Assign('Renderer',function(){function Renderer(draw){babelHelpers.classCallCheck(this,Renderer);var that=this;that.draw=draw;that._gradients={};that._toRadiansCoefficient=Math.PI*2/360;}babelHelpers.createClass(Renderer,[{key:'pieSlicePath',value:function pieSlicePath(x,y,innerRadius,outerRadius,angleFrom,angleTo,centerOffset){if(!outerRadius)outerRadius=1;var diff=Math.abs(angleFrom-angleTo);var lFlag=diff>180?1:0;if(diff>=360){angleTo=angleFrom+359.99;}var radFrom=angleFrom*this._toRadiansCoefficient;var radTo=angleTo*this._toRadiansCoefficient;var x1=x,x2=x,y1=y,y2=y;var isDonut=!isNaN(innerRadius)&&innerRadius>0;if(isDonut)centerOffset=0;var radFromCos=Math.cos(radFrom),radFromSin=Math.sin(radFrom),radToCos=Math.cos(radTo),radToSin=Math.sin(radTo);if(centerOffset+innerRadius>0){if(centerOffset>0){var midAngle=diff/2+angleFrom;var radMid=midAngle*this._toRadiansCoefficient;x+=centerOffset*Math.cos(radMid);y-=centerOffset*Math.sin(radMid);}if(isDonut){x1=x+innerRadius*radFromCos;y1=y-innerRadius*radFromSin;x2=x+innerRadius*radToCos;y2=y-innerRadius*radToSin;}}var x3=x+outerRadius*radFromCos;var x4=x+outerRadius*radToCos;var y3=y-outerRadius*radFromSin;var y4=y-outerRadius*radToSin;var path='';var isPartialCircle=Math.abs(Math.abs(angleTo-angleFrom)-360)>0.02;if(isDonut){path='M '+x2+','+y2;path+=' a'+innerRadius+','+innerRadius;path+=' 0 '+lFlag+',1 '+(x1-x2)+','+(y1-y2);if(isPartialCircle)path+=' L'+x3+','+y3;else path+=' M'+x3+','+y3;path+=' a'+outerRadius+','+outerRadius;path+=' 0 '+lFlag+',0 '+(x4-x3)+','+(y4-y3);if(isPartialCircle)path+=' Z';}else{path='M '+x4+','+y4;path+=' a'+outerRadius+','+outerRadius;path+=' 0 '+lFlag+',1 '+(x3-x4)+','+(y3-y4);if(isPartialCircle){path+=' L'+x+','+y;path+=' Z';}}return path;}},{key:'measureText',value:function measureText(text,angle,params,includeTextPartsInfo){var textPartsInfo=this._getTextParts(text,angle,params);var tw=textPartsInfo.width;var th=textPartsInfo.height;if(false===includeTextPartsInfo)th/=0.6;var retVal={};if(isNaN(angle))angle=0;if(angle===0){retVal={width:this._rup(tw),height:this._rup(th)};}else{var rads=angle*Math.PI*2/360;var sn=Math.abs(Math.sin(rads));var cs=Math.abs(Math.cos(rads));var bh=Math.abs(tw*sn+th*cs);var bw=Math.abs(tw*cs+th*sn);retVal={width:this._rup(bw),height:this._rup(bh)};}if(includeTextPartsInfo)retVal.textPartsInfo=textPartsInfo;//retVal.height += 5;
return retVal;}},{key:'alignTextInRect',value:function alignTextInRect(x,y,width,height,textWidth,textHeight,halign,valign,angle,rotateAround){var rads=angle*Math.PI*2/360;var sn=Math.sin(rads);var cs=Math.cos(rads);var h2=textWidth*sn;var w2=textWidth*cs;if(halign==='center'||halign===''||halign==='undefined')x=x+width/2;else if(halign==='right')x=x+width;if(valign==='center'||valign==='middle'||valign===''||valign==='undefined')y=y+height/2;else if(valign==='bottom')y+=height-textHeight/2;else if(valign==='top')y+=textHeight/2;rotateAround=rotateAround||'';var adjustY='middle';if(rotateAround.indexOf('top')!==-1)adjustY='top';else if(rotateAround.indexOf('bottom')!==-1)adjustY='bottom';var adjustX='center';if(rotateAround.indexOf('left')!==-1)adjustX='left';else if(rotateAround.indexOf('right')!==-1)adjustX='right';if(adjustX==='center'){x-=w2/2;y-=h2/2;}else if(adjustX==='right'){x-=w2;y-=h2;}if(adjustY==='top'){x-=textHeight*sn;y+=textHeight*cs;}else if(adjustY==='middle'){x-=textHeight*sn/2;y+=textHeight*cs/2;}x=this._rup(x);y=this._rup(y);return{x:x,y:y};}},{key:'adjustColor',value:function adjustColor(color,adj){if(typeof color!=='string')return'#000000';if(color.indexOf('#')===-1)return color;var draw=this.draw;var rgb=draw.cssToRgb(color);var hsl=draw.rgbToHsl(rgb);hsl[2]=Math.min(1,hsl[2]*adj);hsl[1]=Math.min(1,hsl[1]*adj*1.1);rgb=draw.hslToRgb(hsl);color='#';for(var i=0;i<3;i++){var c=Math.round(rgb[i]);c=draw.decToHex(c);if(c.toString().length===1)color+='0';color+=c;}return color.toUpperCase();}},{key:'_rup',value:function _rup(n){var nr=Math.round(n);if(n>nr)nr++;return nr;}},{key:'_ptdist',value:function _ptdist(x1,y1,x2,y2){return Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));}},{key:'_rnd',value:function _rnd(num,unit,toGreater,fast){if(isNaN(num))return num;if(undefined===fast)fast=true;var a=num-(fast===true?num%unit:this._mod(num,unit));if(num===a)return a;if(toGreater){if(num>a)a+=unit;}else{if(a>num)a-=unit;}return unit===1?Math.round(a):a;}},{key:'_ptrnd',value:function _ptrnd(val){if(!document.createElementNS){if(Math.round(val)===val)return val;return this._rnd(val,1,false,true);}var rnd=this._rnd(val,0.5,false,true);if(Math.abs(rnd-Math.round(rnd))!==0.5){return rnd>val?rnd-0.5:rnd+0.5;}return rnd;}},{key:'_getContrastColor',value:function _getContrastColor(color){if(color===undefined){return undefined;}var rgb=this.draw.hexToRgb(color.slice(1,3),color.slice(3,5),color.slice(5,7)),luminance=(0.299*rgb[0]+0.587*rgb[1]+0.114*rgb[2])/255;if(luminance>0.6){return'#000000';}else{return'#FFFFFF';}}}]);return Renderer;}());// SvgRenderer class
JQX.Utilities.Assign('SvgRenderer',function(_JQX$Utilities$Render){babelHelpers.inherits(SvgRenderer,_JQX$Utilities$Render);function SvgRenderer(draw){babelHelpers.classCallCheck(this,SvgRenderer);var _this=babelHelpers.possibleConstructorReturn(this,(SvgRenderer.__proto__||Object.getPrototypeOf(SvgRenderer)).call(this,draw));var that=_this;that._svgns='http://www.w3.org/2000/svg';that._openGroups=[];that._clipId=0;return _this;}babelHelpers.createClass(SvgRenderer,[{key:'init',value:function init(host){var container=document.createElement('div');container.className='drawContainer';container.onselectstart=function(){return false;};host.appendChild(container);this.host=host;this.container=container;try{var svg=document.createElementNS(this._svgns,'svg');svg.setAttribute('version','1.1');svg.setAttribute('width','100%');svg.setAttribute('height','100%');svg.setAttribute('overflow','hidden');container.appendChild(svg);this.canvas=svg;}catch(e){return false;}this._id=new Date().getTime();this.clear();return true;}},{key:'getType',value:function getType(){return'SVG';}},{key:'refresh',value:function refresh(){}},{key:'getRect',value:function getRect(){return{x:0,y:0,width:Math.max(this._rup(this.host.offsetWidth)-1,0),height:Math.max(this._rup(this.host.offsetHeight)-1,0)};}},{key:'getContainer',value:function getContainer(){return this.container;}},{key:'clear',value:function clear(){while(this.canvas.childNodes.length>0){this.removeElement(this.canvas.firstElementChild);}this._defaultParent=undefined;this._defs=document.createElementNS(this._svgns,'defs');this._gradients={};this.canvas.appendChild(this._defs);}},{key:'removeElement',value:function removeElement(element){if(undefined===element)return;try{while(element.firstChild){this.removeElement(element.firstChild);}if(element.parentNode)element.parentNode.removeChild(element);else this.canvas.removeChild(element);}catch(error){//
}}},{key:'beginGroup',value:function beginGroup(){var parent=this._activeParent();var g=document.createElementNS(this._svgns,'g');parent.appendChild(g);this._openGroups.push(g);return g;}},{key:'endGroup',value:function endGroup(){if(this._openGroups.length===0)return;this._openGroups.pop();}},{key:'_activeParent',value:function _activeParent(){return this._openGroups.length===0?this.canvas:this._openGroups[this._openGroups.length-1];}},{key:'createClipRect',value:function createClipRect(rect){var c=document.createElementNS(this._svgns,'clipPath');var r=document.createElementNS(this._svgns,'rect');this.attr(r,{x:rect.x,y:rect.y,width:rect.width,height:rect.height,fill:'none'});this._clipId=this._clipId||0;c.id='cl'+this._id+'_'+(++this._clipId).toString();c.appendChild(r);this._defs.appendChild(c);return c;}},{key:'getWindowHref',value:function getWindowHref(){// Get modified href. This is needed to handle cases where the page uses <base> tags.
var href=window.location.href;if(!href)return href;href=href.replace(/([\('\)])/g,'\\$1');// escape brackets & quotes (Chrome)
href=href.replace(/#.*$/,'');// remove bookmark links
return href;}},{key:'setClip',value:function setClip(elem,clip){var url='url('+this.getWindowHref()+'#'+clip.id+')';return this.attr(elem,{'clip-path':url});}},{key:'addHandler',value:function addHandler(element,event,fn){element.addEventListener(event,fn);}},{key:'removeHandler',value:function removeHandler()/*element, event, fn*/{//if ($(element).off)
//    $(element).off(event, fn);
//else
//    $(element).unbind(event, fn);
}},{key:'on',value:function on(element,event,fn){this.addHandler(element,event,fn);}},{key:'off',value:function off(element,event,fn){this.removeHandler(element,event,fn);}},{key:'shape',value:function shape(name,params){var s=document.createElementNS(this._svgns,name);if(!s)return undefined;for(var param in params){s.setAttribute(param,params[param]);}this._activeParent().appendChild(s);return s;}},{key:'_getTextParts',value:function _getTextParts(text,angle,params){var textPartsInfo={width:0,height:0,parts:[]};if(undefined===text)return textPartsInfo;var coeff=0.6;var textParts=text.toString().split('<br>');var parent=this._activeParent();var txt=document.createElementNS(this._svgns,'text');this.attr(txt,params);for(var i=0;i<textParts.length;i++){var textPart=textParts[i];var txtNode=txt.ownerDocument.createTextNode(textPart);txt.appendChild(txtNode);parent.appendChild(txt);var bbox=void 0;try{bbox=txt.getBBox();}catch(e){//
}var tw=this._rup(bbox.width);var th=this._rup(bbox.height*coeff);txt.removeChild(txtNode);textPartsInfo.width=Math.max(textPartsInfo.width,tw);textPartsInfo.height+=th+(i>0?4:0);textPartsInfo.parts.push({width:tw,height:th,text:textPart});}parent.removeChild(txt);return textPartsInfo;}},{key:'_measureText',value:function _measureText(text,angle,params,includeTextPartsInfo){return babelHelpers.get(SvgRenderer.prototype.__proto__||Object.getPrototypeOf(SvgRenderer.prototype),'measureText',this).call(this,text,angle,params,includeTextPartsInfo);}},{key:'measureText',value:function measureText(text,angle,params){return this._measureText(text,angle,params,false);}},{key:'text',value:function text(_text,x,y,width,height,angle,params,clip,halign,valign,rotateAround){var sz=this._measureText(_text,angle,params,true,this);var textPartsInfo=sz.textPartsInfo;var textParts=textPartsInfo.parts;var color=this._getContrastColor(arguments[11]);var gClip=void 0;if(!halign)halign='center';if(!valign)valign='center';if(textParts.length>1||clip)gClip=this.beginGroup();if(clip){var crect=this.createClipRect({x:this._rup(x)-1,y:this._rup(y)-1,width:this._rup(width)+2,height:this._rup(height)+2});this.setClip(gClip,crect);}//this.rect(x, y, width, height, {fill: 'yellow', stroke: 'red'});
var parent=this._activeParent();var tw=0,th=0;tw=textPartsInfo.width;th=textPartsInfo.height;if(isNaN(width)||width<=0)width=tw;if(isNaN(height)||height<=0)height=th;var w=width||0;var h=height||0;var yOffset=0;if(!angle||angle===0){y+=th;if(valign==='center'||valign==='middle')y+=(h-th)/2;else if(valign==='bottom')y+=h-th;if(!width)width=tw;if(!height)height=th;parent=this._activeParent();var txt=void 0;for(var i=textParts.length-1;i>=0;i--){txt=document.createElementNS(this._svgns,'text');this.attr(txt,params);this.attr(txt,{cursor:'default'});var txtNode=txt.ownerDocument.createTextNode(textParts[i].text);txt.appendChild(txtNode);var xOffset=x;var wPart=textParts[i].width;var hPart=textParts[i].height;if(halign==='center')xOffset+=(w-wPart)/2;else if(halign==='right')xOffset+=w-wPart;this.attr(txt,{x:this._rup(xOffset),y:this._rup(y+yOffset),width:this._rup(wPart),height:this._rup(hPart)});if(color!==undefined){txt.style.fill=color;}parent.appendChild(txt);yOffset-=textParts[i].height+4;}if(gClip){this.endGroup();return gClip;}return txt;}var point=this.alignTextInRect(x,y,width,height,tw,th,halign,valign,angle,rotateAround);x=point.x;y=point.y;var gTranslate=this.shape('g',{transform:'translate('+x+','+y+')'});var gRotate=this.shape('g',{transform:'rotate('+angle+')'});gTranslate.appendChild(gRotate);// add the text blocks
yOffset=0;for(var _i25=textParts.length-1;_i25>=0;_i25--){var tx=document.createElementNS(this._svgns,'text');this.attr(tx,params);this.attr(tx,{cursor:'default'});var _txtNode=tx.ownerDocument.createTextNode(textParts[_i25].text);tx.appendChild(_txtNode);var _xOffset=0;var _wPart=textParts[_i25].width;var _hPart=textParts[_i25].height;if(halign==='center')_xOffset+=(textPartsInfo.width-_wPart)/2;else if(halign==='right')_xOffset+=textPartsInfo.width-_wPart;this.attr(tx,{x:this._rup(_xOffset),y:this._rup(yOffset),width:this._rup(_wPart),height:this._rup(_hPart)});gRotate.appendChild(tx);yOffset-=_hPart+4;}parent.appendChild(gTranslate);if(gClip)this.endGroup();return gTranslate;}},{key:'line',value:function line(x1,y1,x2,y2,params){var line=this.shape('line',{x1:x1,y1:y1,x2:x2,y2:y2});this.attr(line,params);return line;}},{key:'path',value:function path(points,params){var s=this.shape('path');s.setAttribute('d',points);if(params){this.attr(s,params);}return s;}},{key:'rect',value:function rect(x,y,w,h,params){x=this._ptrnd(x);y=this._ptrnd(y);w=Math.max(1,this._rnd(w,1,false));h=Math.max(1,this._rnd(h,1,false));var s=this.shape('rect',{x:x,y:y,width:w,height:h});if(params)this.attr(s,params);return s;}},{key:'circle',value:function circle(x,y,r,params){var s=this.shape('circle',{cx:x,cy:y,r:r});if(params)this.attr(s,params);return s;}},{key:'pieslice',value:function pieslice(x,y,innerRadius,outerRadius,angleFrom,angleTo,centerOffset,params){var pathCmd=this.pieSlicePath(x,y,innerRadius,outerRadius,angleFrom,angleTo,centerOffset);var s=this.shape('path');s.setAttribute('d',pathCmd);if(params)this.attr(s,params);return s;}},{key:'attr',value:function attr(element,params){if(!element||!params)return;for(var param in params){if(param==='textContent')element.textContent=params[param];else{element.setAttribute(param,params[param]);}}}},{key:'removeAttr',value:function removeAttr(element,params){if(!element||!params)return;for(var param in params){if(param==='textContent')element.textContent='';else{element.removeAttribute(params[param]);}}}},{key:'getAttr',value:function getAttr(element,key){return element['getAttribute'](key);}},{key:'_toLinearGradient',value:function _toLinearGradient(color,isVertical,stops){var id='grd'+this._id+color.replace('#','')+(isVertical?'v':'h');var url='url('+this.getWindowHref()+'#'+id+')';if(this._gradients[url])return url;var gr=document.createElementNS(this._svgns,'linearGradient');this.attr(gr,{x1:'0%',y1:'0%',x2:isVertical?'0%':'100%',y2:isVertical?'100%':'0%',id:id});for(var i=0;i<stops.length;i++){var stop=stops[i];var s=document.createElementNS(this._svgns,'stop');var st='stop-color:'+this.adjustColor(color,stop[1]);this.attr(s,{offset:stop[0]+'%',style:st});gr.appendChild(s);}this._defs.appendChild(gr);this._gradients[url]=true;return url;}},{key:'_toRadialGradient',value:function _toRadialGradient(color,stops,coords){var id='grd'+this._id+color.replace('#','')+'r'+(coords!==undefined?coords.key:'');var url='url('+this.getWindowHref()+'#'+id+')';if(this._gradients[url])return url;var gr=document.createElementNS(this._svgns,'radialGradient');if(coords===undefined)this.attr(gr,{cx:'50%',cy:'50%',r:'100%',fx:'50%',fy:'50%',id:id});else this.attr(gr,{cx:coords.x,cy:coords.y,r:coords.outerRadius,id:id,gradientUnits:'userSpaceOnUse'});for(var i=0;i<stops.length;i++){var stop=stops[i];var s=document.createElementNS(this._svgns,'stop');var st='stop-color:'+this.adjustColor(color,stop[1]);this.attr(s,{offset:stop[0]+'%',style:st});gr.appendChild(s);}this._defs.appendChild(gr);this._gradients[url]=true;return url;}}]);return SvgRenderer;}(JQX.Utilities.Renderer));// HTML5Renderer class
JQX.Utilities.Assign('HTML5Renderer',function(_JQX$Utilities$Render2){babelHelpers.inherits(HTML5Renderer,_JQX$Utilities$Render2);function HTML5Renderer(draw){babelHelpers.classCallCheck(this,HTML5Renderer);var _this2=babelHelpers.possibleConstructorReturn(this,(HTML5Renderer.__proto__||Object.getPrototypeOf(HTML5Renderer)).call(this,draw));var that=_this2;that._renderers=new JQX.Utilities.HTML5RenderHelpers(that);return _this2;}babelHelpers.createClass(HTML5Renderer,[{key:'init',value:function init(host){try{this.host=host;var chartContainer=document.createElement('div'),canvas=document.createElement('canvas');chartContainer.className='chartContainer';chartContainer.style.position='relative';chartContainer.onselectstart=function(){return false;};canvas.id='__jqxCanvasWrap';canvas.style.width='100%';canvas.style.height='100%';chartContainer.appendChild(canvas);host.appendChild(chartContainer);this.canvas=canvas;canvas.width=host.offsetWidth;canvas.height=host.offsetHeight;this.ctx=canvas.getContext('2d');this._elements={};this._maxId=0;this._gradientId=0;this._gradients={};this._currentPoint={x:0,y:0};this._lastCmd='';this._pos=0;}catch(e){return false;}return true;}},{key:'getType',value:function getType(){return'HTML5';}},{key:'getContainer',value:function getContainer(){var container=this.host.getElementsByClassName('chartContainer')[0];return container;}},{key:'getRect',value:function getRect(){return{x:0,y:0,width:this.canvas.width-1,height:this.canvas.height-1};}},{key:'beginGroup',value:function beginGroup(){}},{key:'endGroup',value:function endGroup(){}},{key:'setClip',value:function setClip(){}},{key:'createClipRect',value:function createClipRect(){}},{key:'addHandler',value:function addHandler(){// unsupported
}},{key:'removeHandler',value:function removeHandler(){// unsupported
}},{key:'on',value:function on(element,event,fn){this.addHandler(element,event,fn);}},{key:'off',value:function off(element,event,fn){this.removeHandler(element,event,fn);}},{key:'clear',value:function clear(){this._elements={};this._maxId=0;this._renderers._gradients={};this._gradientId=0;}},{key:'removeElement',value:function removeElement(element){if(undefined===element)return;if(this._elements[element.id])delete this._elements[element.id];}},{key:'shape',value:function shape(name,params){var s={type:name,id:this._maxId++};for(var param in params){s[param]=params[param];}this._elements[s.id]=s;return s;}},{key:'attr',value:function attr(element,params){for(var param in params){element[param]=params[param];}}},{key:'removeAttr',value:function removeAttr(element,params){for(var param in params){delete element[params[param]];}}},{key:'rect',value:function rect(x,y,w,h,params){if(isNaN(x))throw'Invalid value for "x"';if(isNaN(y))throw'Invalid value for "y"';if(isNaN(w))throw'Invalid value for "width"';if(isNaN(h))throw'Invalid value for "height"';var s=this.shape('rect',{x:x,y:y,width:w,height:h});if(params)this.attr(s,params);return s;}},{key:'path',value:function path(pathCmd,params){var s=this.shape('path',params);this.attr(s,{d:pathCmd});return s;}},{key:'line',value:function line(x1,y1,x2,y2,params){return this.path('M '+x1+','+y1+' L '+x2+','+y2,params);}},{key:'circle',value:function circle(x,y,r,params){var s=this.shape('circle',{x:x,y:y,r:r});if(params)this.attr(s,params);return s;}},{key:'pieslice',value:function pieslice(x,y,innerRadius,outerRadius,angleFrom,angleTo,centerOffset,params){var element=this.path(this.pieSlicePath(x,y,innerRadius,outerRadius,angleFrom,angleTo,centerOffset),params);this.attr(element,{x:x,y:y,innerRadius:innerRadius,outerRadius:outerRadius,angleFrom:angleFrom,angleTo:angleTo});return element;}},{key:'_getCSSStyle',value:function _getCSSStyle(name){var measureElement=document.createElement('div');measureElement.className=name;measureElement.style.position='absolute';measureElement.style.visibility='hidden';this.host.appendChild(measureElement);var style=window.getComputedStyle(measureElement);style={color:style.color,fontFamily:style.fontFamily,fontSize:style.fontSize,fontWeight:style.fontWeight};this.host.removeChild(measureElement);return style;}},{key:'_getTextParts',value:function _getTextParts(text,angle,params){var fontFamily='Arial';var fontSize='10pt';var fontWeight='';if(params&&params['class']){var style=this._getCSSStyle(params['class']);if(style['fontSize'])fontSize=style['fontSize'];if(style['fontFamily'])fontFamily=style['fontFamily'];if(style['fontWeight'])fontWeight=style['fontWeight'];}this.ctx.font=fontWeight+' '+fontSize+' '+fontFamily;var textPartsInfo={width:0,height:0,parts:[]};var coeff=0.6;var textParts=text.toString().split('<br>');for(var i=0;i<textParts.length;i++){var textPart=textParts[i];var tw=this.ctx.measureText(textPart).width;var span=document.createElement('span');span.className='jqxchart';span.font=this.ctx.font;span.textContent=textPart;this.host.appendChild(span);var th=span.offsetHeight*coeff;this.host.removeChild(span);textPartsInfo.width=Math.max(textPartsInfo.width,this._rup(tw));textPartsInfo.height+=th+(i>0?4:0);textPartsInfo.parts.push({width:tw,height:th,text:textPart});}return textPartsInfo;}},{key:'_measureText',value:function _measureText(text,angle,params,includeTextPartsInfo){return babelHelpers.get(HTML5Renderer.prototype.__proto__||Object.getPrototypeOf(HTML5Renderer.prototype),'measureText',this).call(this,text,angle,params,includeTextPartsInfo);}},{key:'measureText',value:function measureText(text,angle,params){return this._measureText(text,angle,params,false);}},{key:'text',value:function text(_text2,x,y,width,height,angle,params,clip,halign,valign,rotateAround){var t=this.shape('text',{text:_text2,x:x,y:y,width:width,height:height,angle:angle,clip:clip,halign:halign,valign:valign,rotateAround:rotateAround});if(params)this.attr(t,params);t.fontFamily='Arial';t.fontSize='10pt';t.fontWeight='';t.color=this._getContrastColor(arguments[11]);if(params&&params['class']){var style=this._getCSSStyle(params['class']);t.fontFamily=style.fontFamily||t.fontFamily;t.fontSize=style.fontSize||t.fontSize;t.fontWeight=style['fontWeight']||t.fontWeight;t.color=t.color||style.color;}t.color=t.color||'#000000';var sz=this._measureText(_text2,0,params,true);this.attr(t,{textPartsInfo:sz.textPartsInfo,textWidth:sz.width,textHeight:sz.height});if(width<=0||isNaN(width))this.attr(t,{width:sz.width});if(height<=0||isNaN(height))this.attr(t,{height:sz.height});return t;}},{key:'_toLinearGradient',value:function _toLinearGradient(color,isVertical,stops){if(this._renderers._gradients[color])return color;var colorStops=[];for(var i=0;i<stops.length;i++){colorStops.push({percent:stops[i][0]/100,color:this.adjustColor(color,stops[i][1])});}var name='gr'+this._gradientId++;this.createGradient(name,isVertical?'vertical':'horizontal',colorStops);return name;}},{key:'_toRadialGradient',value:function _toRadialGradient(color,stops){if(this._renderers._gradients[color])return color;var colorStops=[];for(var i=0;i<stops.length;i++){colorStops.push({percent:stops[i][0]/100,color:this.adjustColor(color,stops[i][1])});}var name='gr'+this._gradientId++;this.createGradient(name,'radial',colorStops);return name;}},{key:'createGradient',value:function createGradient(name,orientation,colorStops){this._renderers.createGradient(this,name,orientation,colorStops);}},{key:'refresh',value:function refresh(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(var element in this._elements){var params=this._elements[element];this._renderers.setFillStyle(this,params);this._renderers.setStroke(this,params);this._renderers[this._elements[element].type](this.ctx,params);}}}]);return HTML5Renderer;}(JQX.Utilities.Renderer));// HTML5RenderHelpers class
JQX.Utilities.Assign('HTML5RenderHelpers',function(){function HTML5RenderHelpers(HTML5Renderer){babelHelpers.classCallCheck(this,HTML5RenderHelpers);this.HTML5Renderer=HTML5Renderer;this._cmds='mlcazq';}babelHelpers.createClass(HTML5RenderHelpers,[{key:'ptrnd',value:function ptrnd(val){if(Math.abs(Math.round(val)-val)===0.5)return val;var rnd=Math.round(val);if(rnd<val)rnd=rnd-1;return rnd+0.5;}},{key:'createGradient',value:function createGradient(context,name,orientation,colorStops){context._gradients[name]={orientation:orientation,colorStops:colorStops};}},{key:'setStroke',value:function setStroke(context,params){var ctx=context.ctx,strokeWidth=params['stroke-width'];ctx.strokeStyle=params['stroke']||'transparent';if(strokeWidth===0){ctx.lineWidth=0.01;}else if(strokeWidth!==undefined){ctx.lineWidth=strokeWidth;}else{ctx.lineWidth=1;}if(params['fill-opacity']!==undefined){ctx.globalAlpha=params['fill-opacity'];}else if(params['opacity']!==undefined){ctx.globalAlpha=params['opacity'];}else{ctx.globalAlpha=1;}if(ctx.setLineDash){if(params['stroke-dasharray'])ctx.setLineDash(params['stroke-dasharray'].split(','));else ctx.setLineDash([]);}}},{key:'setFillStyle',value:function setFillStyle(context,params){var ctx=context.ctx;ctx.fillStyle='transparent';if(params['fill-opacity']!==undefined){ctx.globalAlpha=params['fill-opacity'];}else if(params['opacity']!==undefined){ctx.globalAlpha=params['opacity'];}else{ctx.globalAlpha=1;}if(params.fill&&params.fill.indexOf('#')===-1&&context._gradients[params.fill]){var isVertical=context._gradients[params.fill].orientation!=='horizontal';var isRadial=context._gradients[params.fill].orientation==='radial';var x1=this.ptrnd(params.x);var y1=this.ptrnd(params.y);var x2=this.ptrnd(params.x+(isVertical?0:params.width));var y2=this.ptrnd(params.y+(isVertical?params.height:0));var gradient=void 0;if((params.type==='circle'||params.type==='path'||params.type==='rect')&&isRadial){var x=this.ptrnd(params.x),y=this.ptrnd(params.y);var r1=params.innerRadius||0,r2=params.outerRadius||params.r||0;if(params.type==='rect'){x+=params.width/2;y+=params.height/2;}gradient=ctx.createRadialGradient(x,y,r1,x,y,r2);}if(!isRadial){if(isNaN(x1)||isNaN(x2)||isNaN(y1)||isNaN(y2)){x1=0;y1=0;x2=isVertical?0:ctx.canvas.width;y2=isVertical?ctx.canvas.height:0;}gradient=ctx.createLinearGradient(x1,y1,x2,y2);}var colorStops=context._gradients[params.fill].colorStops;for(var i=0;i<colorStops.length;i++){gradient.addColorStop(colorStops[i].percent,colorStops[i].color);}ctx.fillStyle=gradient;}else if(params.fill){ctx.fillStyle=params.fill;}}},{key:'rect',value:function rect(ctx,params){if(params.width===0||params.height===0)return;ctx.fillRect(this.ptrnd(params.x),this.ptrnd(params.y),params.width,params.height);ctx.strokeRect(this.ptrnd(params.x),this.ptrnd(params.y),params.width,params.height);}},{key:'circle',value:function circle(ctx,params){if(params.r===0)return;ctx.beginPath();ctx.arc(this.ptrnd(params.x),this.ptrnd(params.y),params.r,0,Math.PI*2,false);ctx.closePath();ctx.fill();ctx.stroke();}},{key:'_parsePoint',value:function _parsePoint(str){var x=this._parseNumber(str);var y=this._parseNumber(str);return{x:x,y:y};}},{key:'_parseNumber',value:function _parseNumber(str){var numStarted=false,i=void 0;for(i=this._pos;i<str.length;i++){if(str[i]>='0'&&str[i]<='9'||str[i]==='.'||str[i]==='e'||str[i]==='-'&&!numStarted||str[i]==='-'&&i>=1&&str[i-1]==='e'){numStarted=true;continue;}if(!numStarted&&(str[i]===' '||str[i]===',')){this._pos++;continue;}break;}var val=parseFloat(str.substring(this._pos,i));if(isNaN(val))return undefined;this._pos=i;return val;}},{key:'_isRelativeCmd',value:function _isRelativeCmd(cmd){return this._cmds.indexOf(cmd)!==-1;}},{key:'_parseCmd',value:function _parseCmd(string){for(var i=this._pos;i<string.length;i++){if(this._cmds.toLowerCase().indexOf(string[i].toLowerCase())!==-1){this._pos=i+1;this._lastCmd=string[i];return this._lastCmd;}if(string[i]===' '){this._pos++;continue;}if(string[i]>='0'&&string[i]<='9'){this._pos=i;if(this._lastCmd==='')break;else return this._lastCmd;}}return undefined;}},{key:'_toAbsolutePoint',value:function _toAbsolutePoint(point){return{x:this._currentPoint.x+point.x,y:this._currentPoint.y+point.y};}},{key:'path',value:function path(ctx,params){var _this3=this;var path=params.d;this._pos=0;this._lastCmd='';var firstPoint=undefined;this._currentPoint={x:0,y:0};ctx.beginPath();while(this._pos<path.length){var cmd=this._parseCmd(path);if(cmd===undefined)break;if(cmd==='M'||cmd==='m'){var point=this._parsePoint(path);if(point===undefined)break;ctx.moveTo(point.x,point.y);this._currentPoint=point;if(firstPoint===undefined)firstPoint=point;continue;}if(cmd==='L'||cmd==='l'){var _point=this._parsePoint(path);if(_point===undefined)break;ctx.lineTo(_point.x,_point.y);this._currentPoint=_point;continue;}if(cmd==='A'||cmd==='a'){var _ret7=function(){var rx=_this3._parseNumber(path);var ry=_this3._parseNumber(path);var angle=_this3._parseNumber(path)*(Math.PI/180.0);var largeFlag=_this3._parseNumber(path);var sweepFlag=_this3._parseNumber(path);var endPoint=_this3._parsePoint(path);if(_this3._isRelativeCmd(cmd)){endPoint=_this3._toAbsolutePoint(endPoint);}if(rx===0||ry===0)return'continue';var cp=_this3._currentPoint;/// START
// x1', y1'
var cp2={x:Math.cos(angle)*(cp.x-endPoint.x)/2.0+Math.sin(angle)*(cp.y-endPoint.y)/2.0,y:-Math.sin(angle)*(cp.x-endPoint.x)/2.0+Math.cos(angle)*(cp.y-endPoint.y)/2.0};// adjust radii
var adj=Math.pow(cp2.x,2)/Math.pow(rx,2)+Math.pow(cp2.y,2)/Math.pow(ry,2);if(adj>1){rx*=Math.sqrt(adj);ry*=Math.sqrt(adj);}// cx', cy'
var s=(largeFlag===sweepFlag?-1:1)*Math.sqrt((Math.pow(rx,2)*Math.pow(ry,2)-Math.pow(rx,2)*Math.pow(cp2.y,2)-Math.pow(ry,2)*Math.pow(cp2.x,2))/(Math.pow(rx,2)*Math.pow(cp2.y,2)+Math.pow(ry,2)*Math.pow(cp2.x,2)));if(isNaN(s))s=0;var cp3={x:s*rx*cp2.y/ry,y:s*-ry*cp2.x/rx};// cx, cy
var centerPoint={x:(cp.x+endPoint.x)/2.0+Math.cos(angle)*cp3.x-Math.sin(angle)*cp3.y,y:(cp.y+endPoint.y)/2.0+Math.sin(angle)*cp3.x+Math.cos(angle)*cp3.y};// vector magnitude
var m=function m(v){return Math.sqrt(Math.pow(v[0],2)+Math.pow(v[1],2));};// ratio between two vectors
var r=function r(u,v){return(u[0]*v[0]+u[1]*v[1])/(m(u)*m(v));};// angle between two vectors
var a=function a(u,v){return(u[0]*v[1]<u[1]*v[0]?-1:1)*Math.acos(r(u,v));};// initial angle
var startAngle=a([1,0],[(cp2.x-cp3.x)/rx,(cp2.y-cp3.y)/ry]);// angle delta
var u=[(cp2.x-cp3.x)/rx,(cp2.y-cp3.y)/ry];var v=[(-cp2.x-cp3.x)/rx,(-cp2.y-cp3.y)/ry];var deltaAngle=a(u,v);if(r(u,v)<=-1)deltaAngle=Math.PI;if(r(u,v)>=1)deltaAngle=0;if(sweepFlag===0&&deltaAngle>0)deltaAngle=deltaAngle-2*Math.PI;if(sweepFlag===1&&deltaAngle<0)deltaAngle=deltaAngle+2*Math.PI;var r1=rx>ry?rx:ry;var sx=rx>ry?1:rx/ry;var sy=rx>ry?ry/rx:1;ctx.translate(centerPoint.x,centerPoint.y);ctx.rotate(angle);ctx.scale(sx,sy);ctx.arc(0,0,r1,startAngle,startAngle+deltaAngle,1-sweepFlag);ctx.scale(1/sx,1/sy);ctx.rotate(-angle);ctx.translate(-centerPoint.x,-centerPoint.y);return'continue';}();if(_ret7==='continue')continue;}if((cmd==='Z'||cmd==='z')&&firstPoint!==undefined){ctx.lineTo(firstPoint.x,firstPoint.y);this._currentPoint=firstPoint;continue;}if(cmd==='C'||cmd==='c'){var p1=this._parsePoint(path);var p2=this._parsePoint(path);var p3=this._parsePoint(path);ctx.bezierCurveTo(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);this._currentPoint=p3;continue;}if(cmd==='Q'||cmd==='q'){var _p=this._parsePoint(path);var _p2=this._parsePoint(path);ctx.quadraticCurveTo(_p.x,_p.y,_p2.x,_p2.y);this._currentPoint=_p2;continue;}}ctx.fill();ctx.stroke();ctx.closePath();}},{key:'text',value:function text(ctx,params){var x=this.ptrnd(params.x);var y=this.ptrnd(params.y);var width=this.ptrnd(params.width);var height=this.ptrnd(params.height);var halign=params.halign;var valign=params.valign;var angle=params.angle;var rotateAround=params.rotateAround;var textPartsInfo=params.textPartsInfo;var textParts=textPartsInfo.parts;var clip=params.clip;if(clip===undefined)clip=true;ctx.save();if(!halign)halign='center';if(!valign)valign='center';if(clip){ctx.rect(x,y,width,height);ctx.clip();}var tw=params.textWidth;var th=params.textHeight;var w=width||0;var h=height||0;ctx.fillStyle=params.color;ctx.font=params.fontWeight+' '+params.fontSize+' '+params.fontFamily;if(!angle||angle===0){y+=th;if(valign==='center'||valign==='middle')y+=(h-th)/2;else if(valign==='bottom')y+=h-th;if(!width)width=tw;if(!height)height=th;var _yOffset=0;for(var i=textParts.length-1;i>=0;i--){var textPart=textParts[i];var xOffset=x;var wPart=textParts[i].width;if(halign==='center')xOffset+=(w-wPart)/2;else if(halign==='right')xOffset+=w-wPart;ctx.fillText(textPart.text,xOffset,y+_yOffset);_yOffset-=textPart.height+(i>0?4:0);}ctx.restore();return;}var point=this.HTML5Renderer.alignTextInRect(x,y,width,height,tw,th,halign,valign,angle,rotateAround);x=point.x;y=point.y;var rads=angle*Math.PI*2/360;ctx.translate(x,y);ctx.rotate(rads);var yOffset=0;var maxW=textPartsInfo.width;for(var _i26=textParts.length-1;_i26>=0;_i26--){var _xOffset2=0;if(halign==='center')_xOffset2+=(maxW-textParts[_i26].width)/2;else if(halign==='right')_xOffset2+=maxW-textParts[_i26].width;ctx.fillText(textParts[_i26].text,_xOffset2,yOffset);yOffset-=textParts[_i26].height+4;}ctx.restore();}}]);return HTML5RenderHelpers;}());// Plot class
JQX.Utilities.Assign('Plot',function(){function Plot(renderer){babelHelpers.classCallCheck(this,Plot);this.renderer=renderer;}babelHelpers.createClass(Plot,[{key:'get',value:function get(array,index,key){return key!==undefined?array[index][key]:array[index];}},{key:'min',value:function min(array,key){var min=NaN;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(isNaN(min)||val<min)min=val;}return min;}},{key:'max',value:function max(array,key){var max=NaN;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(isNaN(max)||val>max)max=val;}return max;}},{key:'sum',value:function sum(array,key){var sum=0;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(!isNaN(val))sum+=val;}return sum;}},{key:'count',value:function count(array,key){var count=0;for(var i=0;i<array.length;i++){var val=this.get(array,i,key);if(!isNaN(val))count++;}return count;}},{key:'avg',value:function avg(array,key){return this.sum(array,key)/Math.max(1,this.count(array,key));}},{key:'filter',value:function filter(array,fn){if(!fn)return array;var out=[];for(var i=0;i<array.length;i++){if(fn(array[i]))out.push(array[i]);}return out;}},{key:'scale',value:function scale(val,range,scale_range,params){if(isNaN(val))return NaN;if(val<Math.min(range.min,range.max)||val>Math.max(range.min,range.max)){if(!params||params['ignore_range']!==true)return NaN;}var outVal=NaN;var percent=1;if(range.type===undefined||range.type!=='logarithmic'){var denom=Math.abs(range.max-range.min);if(!denom)denom=1;percent=Math.abs(val-Math.min(range.min,range.max))/denom;}else if(range.type==='logarithmic'){var logBase=range.base;if(isNaN(logBase))logBase=10;var min=Math.min(range.min,range.max);if(min<=0)min=1;var max=Math.max(range.min,range.max);if(max<=0)max=1;var maxPow=Math.log(max)/Math.log(logBase);max=Math.pow(logBase,maxPow);var minPow=Math.log(min)/Math.log(logBase);min=Math.pow(logBase,minPow);var valPow=Math.log(val)/Math.log(logBase);percent=Math.abs(valPow-minPow)/(maxPow-minPow);}if(scale_range.type==='logarithmic'){var _logBase2=scale_range.base;if(isNaN(_logBase2))_logBase2=10;var _maxPow2=Math.log(scale_range.max)/Math.log(_logBase2);var _minPow2=Math.log(scale_range.min)/Math.log(_logBase2);if(scale_range.flip)percent=1-percent;var _valPow2=Math.min(_minPow2,_maxPow2)+percent*Math.abs(_maxPow2-_minPow2);outVal=Math.pow(_logBase2,_valPow2);}else{outVal=Math.min(scale_range.min,scale_range.max)+percent*Math.abs(scale_range.max-scale_range.min);if(scale_range.flip)outVal=Math.max(scale_range.min,scale_range.max)-outVal+scale_range.min;}return outVal;}},{key:'axis',value:function axis(min,max,preferedCount){if(preferedCount<=1)return[max,min];//let minSave = min;
//let maxSave = max;
if(isNaN(preferedCount)||preferedCount<2)preferedCount=2;var decimalPlaces=0;while(Math.round(min)!==min&&Math.round(max)!==max&&decimalPlaces<10){min*=10;max*=10;decimalPlaces++;}var preferedIntSize=(max-min)/preferedCount;while(decimalPlaces<10&&Math.round(preferedIntSize)!==preferedIntSize){min*=10;max*=10;preferedIntSize*=10;decimalPlaces++;}var scale=[1,2,5];//let itemsCount = 0;
var i=0;var intSizeNext=void 0;// eslint-disable-next-line
while(true){var idx=i%scale.length;var pow=Math.floor(i/scale.length);var intSizeCurr=Math.pow(10,pow)*scale[idx];idx=(i+1)%scale.length;pow=Math.floor((i+1)/scale.length);intSizeNext=Math.pow(10,pow)*scale[idx];if(preferedIntSize>=intSizeCurr&&preferedIntSize<intSizeNext)break;i++;}var intSizeSelected=intSizeNext;var out=[];var curr=this.renderer._rnd(min,intSizeSelected,false);var denominator=decimalPlaces<=0?1:Math.pow(10,decimalPlaces);while(curr<max+intSizeSelected){out.push(curr/denominator);curr+=intSizeSelected;}return out;}}]);return Plot;}());JQX.Utilities.Assign('FilterGroup',function(){function FilterGroup(){babelHelpers.classCallCheck(this,FilterGroup);var that=this;that.stringConditions=['EMPTY','NOT_EMPTY','CONTAINS','CONTAINS_CASE_SENSITIVE','DOES_NOT_CONTAIN','DOES_NOT_CONTAIN_CASE_SENSITIVE','STARTS_WITH','STARTS_WITH_CASE_SENSITIVE','ENDS_WITH','ENDS_WITH_CASE_SENSITIVE','EQUAL','EQUAL_CASE_SENSITIVE','NULL','NOT_NULL'];that.numericConditions=['EQUAL','NOT_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','NULL','NOT_NULL'];that.dateConditions=['EQUAL','NOT_EQUAL','LESS_THAN','LESS_THAN_OR_EQUAL','GREATER_THAN','GREATER_THAN_OR_EQUAL','NULL','NOT_NULL'];that.booleanConditions=['EQUAL','NOT_EQUAL','NULL','NOT_NULL'];that.filters=new Array();that.logicalOperators=new Array();}babelHelpers.createClass(FilterGroup,[{key:'evaluate',value:function evaluate(value){var that=this;var result=true;for(var i=0;i<that.filters.length;i++){var currentResult=that.filters[i].evaluate(value);if(i===0){result=currentResult;}else{if(that.logicalOperators[i]===1||that.logicalOperators[i]==='or'){result=result||currentResult;}else{result=result&&currentResult;}}}return result;}},{key:'getFiltersCount',value:function getFiltersCount(){return this.filters.length;}},{key:'setConditions',value:function setConditions(filterType,conditions){var that=this;switch(filterType){case'numeric':that.numericConditions=conditions;break;case'string':that.stringConditions=conditions;break;case'date':case'time':that.dateConditions=conditions;break;case'bool':case'boolean':that.booleanConditions=conditions;break;}}},{key:'getConditions',value:function getConditions(filterType){var that=this;var array=new Array();switch(filterType){case'numeric':array=that.numericConditions.slice(0);break;case'string':array=that.stringConditions.slice(0);break;case'date':case'time':array=that.dateConditions.slice(0);break;case'bool':case'boolean':array=that.booleanConditions.slice(0);break;}return array;}},{key:'generateFilterKey',value:function generateFilterKey(){var S4=function S4(){return((1+Math.random())*0x10000|0).toString(16).substring(1);};return S4()+'-'+S4()+'-'+S4();}},{key:'createFilter',value:function createFilter(filterType,filterValue,filterCondition,customfilter,formatString,locale,timeOnly){if(filterType===null||filterType===undefined){return null;}switch(filterType){case'int':case'float':case'int64':case'double':case'numeric':case'number':case'numericFilter':return new JQX.Utilities.NumericFilter(filterValue,filterCondition.toUpperCase());case'string':case'stringFilter':return new JQX.Utilities.StringFilter(filterValue,filterCondition.toUpperCase(),locale);case'date':case'time':case'dateFilter':return new JQX.Utilities.DateFilter(filterValue,filterCondition.toUpperCase(),formatString,locale,timeOnly);case'bool':case'boolean':case'booleanFilter':return new JQX.Utilities.BooleanFilter(filterValue,filterCondition.toUpperCase());case'custom':return new JQX.Utilities.CustomFilter(filterValue,filterCondition.toUpperCase(),customfilter);}throw new Error('jqxGrid: There is no such filter type. The available filter types are: "numericFilter", "stringFilter", "dateFilter" and "booleanFilter"');}},{key:'getFilters',value:function getFilters(){var that=this;var filtersArray=new Array();for(var i=0;i<that.filters.length;i++){var filter=that.filters[i];if(filter instanceof FilterGroup){var filters=filter.getFilters();filtersArray.push({value:filters,logicalOperator:that.logicalOperators[i],type:'FilterGroup'});}else{var filterObject={value:filter.value,condition:filter.condition,logicalOperator:that.logicalOperators[i],type:filter.type};if(filter.data){filterObject.id=filter.data;}filtersArray.push(filterObject);}}return filtersArray;}},{key:'addFilter',value:function addFilter(logicalOperator,filter){var that=this;that.filters[that.filters.length]=filter;filter.key=that.generateFilterKey();that.logicalOperators[that.logicalOperators.length]=logicalOperator;}},{key:'removeFilter',value:function removeFilter(filter){var that=this;for(var i=0;i<that.filters.length;i++){if(that.filters[i].key===filter.key){that.filters.splice(i,1);that.logicalOperators.splice(i,1);break;}}}},{key:'getOperatorAt',value:function getOperatorAt(index){var that=this;if(index===undefined||index===null){return null;}if(index<0||index>that.filters.length){return null;}return that.logicalOperators[index];}},{key:'setOperatorAt',value:function setOperatorAt(index,logicalOperator){var that=this;if(index===undefined||index===null){return null;}if(index<0||index>that.filters.length){return null;}that.logicalOperators[logicalOperator]=logicalOperator;}},{key:'getFilterAt',value:function getFilterAt(index){var that=this;if(index===undefined||index===null){return null;}if(index<0||index>that.filters.length){return null;}return that.filters[index];}},{key:'setFilterAt',value:function setFilterAt(index,filter){var that=this;if(index===undefined||index===null){return null;}if(index<0||index>that.filters.length){return null;}filter.key=that.generateFilterKey();that.filters[index]=filter;}},{key:'clear',value:function clear(){var that=this;that.filters=new Array();that.logicalOperators=new Array();}},{key:'getUniqueValues',value:function getUniqueValues(details,context){var data=details.data,uniqueValues=[],treeViewSource=[],timeOnly=details.filterType==='dateFilter'&&details.displayMode==='timePicker';var compareFunction=void 0,blanks=false;for(var i=0;i<data.length;i++){var currentValue=data[i][details.dataField];if(currentValue===''||currentValue===null||currentValue===undefined){blanks=true;continue;}var label=void 0;if(timeOnly){label=new JQX.Utilities.DateTime(currentValue).toString(details.formatString);}else{label=currentValue.toString();}if(uniqueValues.indexOf(label)===-1){uniqueValues.push(label);treeViewSource.push({label:label,value:currentValue,customAttribute:'default-item'});}}switch(details.filterType){case'numericFilter':case'booleanFilter':compareFunction=function compareFunction(a,b){return a.value-b.value;};break;case'stringFilter':compareFunction=function compareFunction(a,b){return new Intl.Collator().compare(a.value,b.value);};break;case'dateFilter':if(timeOnly){compareFunction=function compareFunction(a,b){try{var aHours=a.value.getHours(),bHours=b.value.getHours();if(aHours!==bHours){return aHours-bHours;}var aMinutes=a.value.getMinutes(),bMinutes=b.value.getMinutes();if(aMinutes!==bMinutes){return aMinutes-bMinutes;}var aSeconds=a.value.getSeconds(),bSeconds=b.value.getSeconds();if(aSeconds!==bSeconds){return aSeconds-bSeconds;}return 0;}catch(error){return-1;}};}else{compareFunction=function compareFunction(a,b){try{return a.value.getTime()-b.value.getTime();}catch(error){return-1;}};}break;}treeViewSource.sort(compareFunction);if(details.filterType==='booleanFilter'){treeViewSource.map(function(item){item.label=item.label.toUpperCase();});}if(blanks){treeViewSource.push({label:context.localize('blanks'),value:'',customAttribute:'default-item'});}return treeViewSource;}}]);return FilterGroup;}());JQX.Utilities.Assign('StringFilter',function(){function StringFilter(filterValue,condition,locale){babelHelpers.classCallCheck(this,StringFilter);var that=this;that.value=filterValue;that.condition=condition;that.locale=locale||'en';that.type='stringFilter';}babelHelpers.createClass(StringFilter,[{key:'evaluate',value:function evaluate(value){var that=this,filterValue=that.value,condition=that.condition;if(value===null||value===undefined||value===''){if(condition==='NULL')return true;if(condition==='EQUAL'&&value===filterValue){return true;}if(condition==='NOT_EQUAL'&&value!==filterValue){return true;}if(condition!=='EMPTY')return false;else if(value==='')return true;}var val='';try{val=value.toString();}catch(error){return true;}var compare=function compare(val,filterValue){var locale=that.locale;switch(condition){case'EQUAL':return val.localeCompare(filterValue,locale,{sensitivity:'accent'})===0;case'EQUAL_CASE_SENSITIVE':return val.localeCompare(filterValue,locale,{sensitivity:'variant'})===0;case'NOT_EQUAL':return val.localeCompare(filterValue,locale,{sensitivity:'accent'})!==0;case'NOT_EQUAL_CASE_SENSITIVE':return val.localeCompare(filterValue,locale,{sensitivity:'variant'})!==0;case'CONTAINS':return val.toLowerCase().indexOf(filterValue.toLowerCase())!==-1;case'CONTAINS_CASE_SENSITIVE':return val.indexOf(filterValue)!==-1;case'DOES_NOT_CONTAIN':return val.toLowerCase().indexOf(filterValue.toLowerCase())===-1;case'DOES_NOT_CONTAIN_CASE_SENSITIVE':return val.indexOf(filterValue)===-1;case'EMPTY':return val==='';case'NOT_EMPTY':return val!=='';case'NOT_NULL':return val!==null;case'STARTS_WITH':val=val.substring(0,filterValue.length);return val.localeCompare(filterValue,locale,{sensitivity:'accent'})===0;case'ENDS_WITH':val=val.substring(val.length-filterValue.length,val.length);return val.localeCompare(filterValue,locale,{sensitivity:'accent'})===0;case'ENDS_WITH_CASE_SENSITIVE':val=val.substring(val.length-filterValue.length,val.length);return val.localeCompare(filterValue,locale,{sensitivity:'variant'})===0;case'STARTS_WITH_CASE_SENSITIVE':val=val.substring(0,filterValue.length);return val.localeCompare(filterValue,locale,{sensitivity:'variant'})===0;default:return false;}};var filterValues=new Array();if(filterValue&&filterValue.indexOf)if(filterValue.indexOf('|')>=0||filterValue.indexOf(' AND ')>=0||filterValue.indexOf(' OR ')>=0||filterValue.indexOf(' and ')>=0||filterValue.indexOf(' or ')>=0){var result=compare(val,filterValue);if(result){return result;}var andLowerCaseFilters=filterValue.indexOf(' and ')>=0?filterValue.split(' and '):new Array(),orLowerCaseFilters=filterValue.indexOf(' or ')>=0?filterValue.split(' or '):new Array(),delimiterFilters=filterValue.indexOf('|')>=0?filterValue.split('|'):new Array();var andFilters=filterValue.indexOf(' AND ')>=0?filterValue.split(' AND '):new Array(),orFilters=filterValue.indexOf(' OR ')>=0?filterValue.split(' OR '):new Array();if(delimiterFilters.length>0){for(var i=0;i<delimiterFilters.length;i++){delimiterFilters[i]=delimiterFilters[i].trim;}}var commaFilters=filterValue.indexOf(' ')>=0?filterValue.split(' '):new Array();if(commaFilters.length>0){for(var _i27=0;_i27<commaFilters.length;_i27++){commaFilters[_i27]=commaFilters[_i27].trim;}}andFilters=andFilters.concat(commaFilters);andFilters=andFilters.concat(andLowerCaseFilters);orFilters=orFilters.concat(delimiterFilters);orFilters=orFilters.concat(orLowerCaseFilters);if(andFilters.length>0){for(var _i28=0;_i28<andFilters.length;_i28++){if(!andFilters[_i28].indexOf(' OR ')>=0){filterValues.push(andFilters[_i28]);}}}if(orFilters.length>0){for(var _i29=0;_i29<orFilters.length;_i29++){if(!orFilters[_i29].indexOf(' AND ')>=0){filterValues.push(orFilters[_i29]);}}}var filterresult=undefined;for(var j=0;j<filterValues.length;j++){var _value8=filterValues[j],_result4=compare(val,_value8),filteroperator=j<andFilters.length?'and':'or';if(filterresult===undefined){filterresult=_result4;}else{if(filteroperator==='or'){filterresult=filterresult||_result4;}else{filterresult=filterresult&&_result4;}}}return filterresult;}return compare(val,filterValue);}}]);return StringFilter;}());JQX.Utilities.Assign('BooleanFilter',function(){function BooleanFilter(filterValue,condition){babelHelpers.classCallCheck(this,BooleanFilter);var that=this;that.value=filterValue;that.condition=condition;that.type='booleanFilter';}babelHelpers.createClass(BooleanFilter,[{key:'evaluate',value:function evaluate(value){var that=this,filterValue=that.value,condition=that.condition;var val=value;switch(condition){case'EQUAL':return val===filterValue;case'NOT_EQUAL':return val!==filterValue;case'NULL':return value===null||value===undefined||value==='';case'NOT_NULL':return!(value===null||value===undefined||value==='');default:return false;}}}]);return BooleanFilter;}());JQX.Utilities.Assign('NumericFilter',function(){function NumericFilter(filterValue,condition){babelHelpers.classCallCheck(this,NumericFilter);var that=this;that.value=filterValue;that.condition=condition;that.type='numericFilter';}babelHelpers.createClass(NumericFilter,[{key:'evaluate',value:function evaluate(value){var that=this;var filterValue=that.value,condition=that.condition;if(value===null||value===undefined||value===''){if(condition==='NOT_NULL')return false;if(condition==='NULL')return true;else{switch(condition){case'EQUAL':return value===filterValue;case'NOT_EQUAL':return value!==filterValue;}return false;}}else{if(condition==='NULL')return false;if(condition==='NOT_NULL')return true;}var val=value;try{val=parseFloat(val);}catch(error){if(value.toString()!=='')return false;}var compare=function compare(val,filterValue){if(typeof val==='number'&&typeof filterValue!=='number'){filterValue=parseFloat(filterValue);}switch(condition){case'EQUAL':return val===filterValue;case'NOT_EQUAL':return val!==filterValue;case'GREATER_THAN':return val>filterValue;case'GREATER_THAN_OR_EQUAL':return val>=filterValue;case'LESS_THAN':return val<filterValue;case'LESS_THAN_OR_EQUAL':return val<=filterValue;case'STARTS_WITH':filterValue=filterValue.toString().toLowerCase();return val.toString().toLowerCase().substring(0,filterValue.length)===filterValue;case'ENDS_WITH':val=val.toString().toLowerCase();filterValue=filterValue.toString().toLowerCase();return val.substring(val.length-filterValue.length,val.length)===filterValue;case'ENDS_WITH_CASE_SENSITIVE':val=val.toString();filterValue=filterValue.toString();return val.substring(val.length-filterValue.length,val.length)===filterValue;case'STARTS_WITH_CASE_SENSITIVE':filterValue=filterValue.toString();return val.toString().substring(0,filterValue.length)===filterValue;case'CONTAINS':return val.toString().toLowerCase().indexOf(filterValue.toString().toLowerCase())!==-1;case'CONTAINS_CASE_SENSITIVE':return val.toString().indexOf(filterValue.toString())!==-1;case'DOES_NOT_CONTAIN':return val.toString().toLowerCase().indexOf(filterValue.toString().toLowerCase())===-1;case'DOES_NOT_CONTAIN_CASE_SENSITIVE':return val.toString().indexOf(filterValue.toString())===-1;default:return true;}};var filterValues=new Array();if(filterValue&&filterValue.indexOf)if(filterValue.indexOf('|')>=0||filterValue.indexOf(' AND ')>=0||filterValue.indexOf(' OR ')>=0||filterValue.indexOf(' and ')>=0||filterValue.indexOf(' or ')>=0){var result=compare(val,filterValue);if(result){return result;}filterValue=filterValue.toString();var andLowerCaseFilters=filterValue.indexOf(' and ')>=0?filterValue.split(' and '):new Array(),orLowerCaseFilters=filterValue.indexOf(' or ')>=0?filterValue.split(' or '):new Array(),delimiterFilters=filterValue.indexOf('|')>=0?filterValue.split('|'):new Array();var andFilters=filterValue.indexOf(' AND ')>=0?filterValue.split(' AND '):new Array(),orFilters=filterValue.indexOf(' OR ')>=0?filterValue.split(' OR '):new Array();andFilters=andFilters.concat(andLowerCaseFilters);orFilters=orFilters.concat(orLowerCaseFilters);if(delimiterFilters.length>0){for(var i=0;i<delimiterFilters.length;i++){delimiterFilters[i]=delimiterFilters[i].trim;}}orFilters=orFilters.concat(delimiterFilters);if(andFilters.length>0){for(var _i30=0;_i30<andFilters.length;_i30++){if(!andFilters[_i30].indexOf(' OR ')>=0){filterValues.push(andFilters[_i30]);}}}if(orFilters.length>0){for(var _i31=0;_i31<orFilters.length;_i31++){if(!orFilters[_i31].indexOf(' AND ')>=0){filterValues.push(orFilters[_i31]);}}}var filterresult=undefined;for(var j=0;j<filterValues.length;j++){var _value9=filterValues[j];if(_value9&&_value9.indexOf&&_value9.indexOf('..')>=0){var values=_value9.toString().split('..');if(values.length===2){result=val>=values[0]&&val<=values[1];}}else{result=compare(val,_value9);}var filteroperator=j<andFilters.length?'and':'or';if(filterresult===undefined){filterresult=result;}else{if(filteroperator==='or'){filterresult=filterresult||result;}else{filterresult=filterresult&&result;}}}return filterresult;}if(filterValue&&filterValue.indexOf&&filterValue.indexOf('..')>=0){filterValues=filterValue.toString().split('..');if(filterValues.length===2){return val>=filterValues[0]&&val<=filterValues[1];}}return compare(val,filterValue);}}]);return NumericFilter;}());JQX.Utilities.Assign('DateFilter',function(){function DateFilter(filterValue,condition,formatString,locale,timeOnly){babelHelpers.classCallCheck(this,DateFilter);var that=this,parseAttemptDateTime=new JQX.Utilities.DateTime();that.value=filterValue;that.type='dateFilter';if(formatString!==undefined){var parsedDate=parseAttemptDateTime.parseDate(filterValue,formatString);if(parsedDate!==null){that.filterdate=parsedDate;}else{var result=parseAttemptDateTime.tryparseDate(filterValue);if(result!==null){that.filterdate=result;}}}else{var tmpvalue=new Date(filterValue);if(tmpvalue.toString()==='NaN'||tmpvalue.toString()==='Invalid Date'){that.filterdate=parseAttemptDateTime.tryparseDate(filterValue);}else{that.filterdate=tmpvalue;}}if(!that.filterdate){var _tmpvalue=new Date(filterValue);if(_tmpvalue.toString()==='NaN'||_tmpvalue.toString()==='Invalid Date'){that.filterdate=parseAttemptDateTime.tryparseDate(filterValue);}else{that.filterdate=_tmpvalue;}}that.condition=condition;that.formatString=formatString;that.timeOnly=timeOnly;}babelHelpers.createClass(DateFilter,[{key:'evaluate',value:function evaluate(value){var that=this,condition=that.condition,formatString=that.formatString;var filterValue=that.value;if(that.timeOnly){return that.evaluateTimeOnly(value);}if(value===null||value===undefined||value===''){if(condition==='NOT_NULL'){return false;}if(condition==='NULL'){return true;}else{switch(condition){case'EQUAL':return value===filterValue;case'NOT_EQUAL':return value!==filterValue;}return false;}}else{if(condition==='NULL')return false;if(condition==='NOT_NULL')return true;}var val=new Date(),compareTimePart=void 0;val.setFullYear(1900,0,1);val.setHours(12,0,0,0);try{var parseAttemptDateTime=new JQX.Utilities.DateTime(),tmpvalue=new Date(value);if(tmpvalue.toString()==='NaN'||tmpvalue.toString()==='Invalid Date'){value=parseAttemptDateTime.tryparseDate(value);}else{value=tmpvalue;}val=value;compareTimePart=false;if(formatString!==undefined){if(formatString.indexOf('t')>=0||formatString.indexOf('T')>=0||formatString.indexOf(':')>=0||formatString.indexOf('f')>=0){compareTimePart=true;if(filterValue&&filterValue.toString().indexOf(':')===-1){var result=parseAttemptDateTime.tryparseDate(filterValue.toString()+':00');if(result!==null){that.filterdate=result;}}}}if(!compareTimePart){val.setHours(0);val.setMinutes(0);val.setSeconds(0);}}catch(error){if(value.toString()!=='')return false;}if(that.filterdate!==null){filterValue=that.filterdate;}else if(filterValue&&filterValue.indexOf&&(filterValue.indexOf(':')!==-1||!isNaN(parseInt(filterValue)))){var tmpFilter=new Date(val);tmpFilter.setHours(12,0,0,0);var timeStrings=filterValue.split(':');for(var i=0;i<timeStrings.length;i++){if(i===0){tmpFilter.setHours(timeStrings[i]);}if(i===1){tmpFilter.setMinutes(timeStrings[i]);}if(i===2){tmpFilter.setSeconds(timeStrings[i]);}}filterValue=tmpFilter;}if(compareTimePart){if(filterValue&&filterValue.setFullYear){if(val&&val.getFullYear){if(formatString.indexOf('d')===-1&&formatString.indexOf('M')===-1&&formatString.indexOf('y')===-1){filterValue.setFullYear(val.getFullYear(),val.getMonth(),val.getDate());}}}}var compare=function compare(val,filterValue){if(val===null)val='';switch(condition){case'EQUAL':return val.toString()===filterValue.toString();case'NOT_EQUAL':return val.toString()!==filterValue.toString();case'GREATER_THAN':return val>filterValue;case'GREATER_THAN_OR_EQUAL':return val>=filterValue;case'LESS_THAN':return val<filterValue;case'LESS_THAN_OR_EQUAL':return val<=filterValue;case'STARTS_WITH':filterValue=filterValue.toString().toLowerCase();return val.toString().toLowerCase().substring(0,filterValue.length)===filterValue;case'ENDS_WITH':val=val.toString().toLowerCase();filterValue=filterValue.toString().toLowerCase();return val.substring(val.length-filterValue.length,val.length)===filterValue;case'ENDS_WITH_CASE_SENSITIVE':val=val.toString();filterValue=filterValue.toString();return val.substring(val.length-filterValue.length,val.length)===filterValue;case'STARTS_WITH_CASE_SENSITIVE':filterValue=filterValue.toString();return val.toString().substring(0,filterValue.length)===filterValue;case'CONTAINS':return val.toString().toLowerCase().indexOf(filterValue.toString().toLowerCase())!==-1;case'CONTAINS_CASE_SENSITIVE':return val.toString().indexOf(filterValue.toString())!==-1;case'DOES_NOT_CONTAIN':return val.toString().toLowerCase().indexOf(filterValue.toString().toLowerCase())===-1;case'DOES_NOT_CONTAIN_CASE_SENSITIVE':return val.toString().indexOf(filterValue.toString())===-1;default:return true;}};var filterValues=new Array();if(filterValue&&filterValue.indexOf)if(filterValue.indexOf('|')>=0||filterValue.indexOf(' AND ')>=0||filterValue.indexOf(' OR ')>=0||filterValue.indexOf(' and ')>=0||filterValue.indexOf(' or ')>=0){var _result5=compare(val,filterValue);if(_result5){return _result5;}var andLowerCaseFilters=filterValue.indexOf(' and ')>=0?filterValue.split(' and '):new Array(),orLowerCaseFilters=filterValue.indexOf(' or ')>=0?filterValue.split(' or '):new Array(),delimiterFilters=filterValue.indexOf('|')>=0?filterValue.split('|'):new Array();var andFilters=filterValue.indexOf(' AND ')>=0?filterValue.split(' AND '):new Array(),orFilters=filterValue.indexOf(' OR ')>=0?filterValue.split(' OR '):new Array();andFilters=andFilters.concat(andLowerCaseFilters);orFilters=orFilters.concat(orLowerCaseFilters);if(delimiterFilters.length>0){for(var _i32=0;_i32<delimiterFilters.length;_i32++){delimiterFilters[_i32]=delimiterFilters[_i32].trim;}}orFilters=orFilters.concat(delimiterFilters);if(andFilters.length>0){for(var _i33=0;_i33<andFilters.length;_i33++){if(!andFilters[_i33].indexOf(' OR ')>=0){filterValues.push(andFilters[_i33]);}}}if(orFilters.length>0){for(var _i34=0;_i34<orFilters.length;_i34++){if(!orFilters[_i34].indexOf(' AND ')>=0){filterValues.push(orFilters[_i34]);}}}var filterresult=undefined;for(var j=0;j<filterValues.length;j++){var _value10=filterValues[j];if(_value10&&_value10.indexOf&&_value10.indexOf('..')>=0){var values=_value10.toString().split('..');if(values.length===2){_result5=val>=values[0]&&val<=values[1];}}else{_result5=compare(val,_value10);}var filteroperator=j<andFilters.length?'and':'or';if(filterresult===undefined){filterresult=_result5;}else{if(filteroperator==='or'){filterresult=filterresult||_result5;}else{filterresult=filterresult&&_result5;}}}return filterresult;}if(filterValue&&filterValue.indexOf&&filterValue.indexOf('..')>=0){filterValues=filterValue.toString().split('..');if(filterValues.length===2){return val>=filterValues[0]&&val<=filterValues[1];}}return compare(val,filterValue);}},{key:'evaluateTimeOnly',value:function evaluateTimeOnly(value){var that=this,filterValue=that.value;if(!filterValue){if(!value){return true;}return false;}else if(!value||!(value instanceof Date)){return false;}var valueHours=value.getHours(),filterValueHours=filterValue.getHours();if(valueHours!==filterValueHours){return false;}var valueMinutes=value.getMinutes(),filterValueMinutes=filterValue.getMinutes();if(valueMinutes!==filterValueMinutes){return false;}var valueSeconds=value.getSeconds(),filterValueSeconds=filterValue.getSeconds();if(valueSeconds!==filterValueSeconds){return false;}return true;}}]);return DateFilter;}());JQX.Utilities.Assign('CustomFilter',function(){function CustomFilter(filterValue,condition,customfilter){babelHelpers.classCallCheck(this,CustomFilter);var that=this;that.value=filterValue;that.condition=condition;that.customfilter=customfilter;}babelHelpers.createClass(CustomFilter,[{key:'evaluate',value:function evaluate(value){var that=this;return that.customfilter(that.value,value,that.condition);}}]);return CustomFilter;}());JQX.FilterGroup=JQX.Utilities.FilterGroup;JQX.StringFilter=JQX.Utilities.StringFilter;JQX.NumericFilter=JQX.Utilities.NumericFilter;JQX.DateFilter=JQX.Utilities.DateFilter;JQX.CustomFilter=JQX.Utilities.CustomFilter;var bigIntNativeSupport=void 0;try{BigInt;bigIntNativeSupport=true;}catch(error){bigIntNativeSupport=false;}// BigNumber class in JQX.Utilities
JQX.Utilities.Assign('BigNumber',function(){//+ Jonas Raoni Soares Silva
//@ http://jsfromhell.com/classes/bignumber [rev. #4]
function UtilitiesBigNumber(n,p,r){babelHelpers.classCallCheck(this,UtilitiesBigNumber);var o=this,i;if(JQX.Utilities.BigNumber.bigIntSupport){if(n instanceof JQX.Utilities.BigNumber){if(Array.isArray(n._d)){n=(n._s?'-':'')+(n._d.slice(0,n._f).join('')||'0')+(n._f!=n._d.length?'.'+n._d.slice(n._f).join(''):'');}else{return new JQX.Utilities.BigNumber(n._d);}}try{if(n===null){o._d=BigInt(0);}else if(typeof n==='string'&&n.toLowerCase().indexOf('e')!==-1){o._d=BigInt(parseFloat(n));}else{o._d=BigInt(n);}}catch(error){try{var numberParts=n.toString().split('.');var _result6=BigInt(numberParts[0]),firstDecimalDigit=parseInt(numberParts[1].charAt(0));if(_result6>0&&firstDecimalDigit>=5){_result6=_result6+BigInt(1);}else if(_result6<0){if(firstDecimalDigit>5){_result6=_result6-BigInt(1);}else if(firstDecimalDigit===5){var iterator=1,nextChar=numberParts[1].charAt(iterator),roundDown=false;while(nextChar!==''){iterator++;nextChar=numberParts[1].charAt(iterator);if(nextChar!=='0'){roundDown=true;break;}}if(roundDown){_result6=_result6-BigInt(1);}}}o._d=_result6;}catch(error){o._d=BigInt(0);}}o._f=o._d.toString().replace('-','').length;o._s=o._d<0;return;}if(n instanceof JQX.Utilities.BigNumber){if(typeof n._d==='bigint'){return new JQX.Utilities.BigNumber(n._d.toString());}for(i in{precision:0,roundType:0,_s:0,_f:0}){o[i]=n[i];}o._d=n._d.slice();if(n._s&&n._d.length===1&&n._d[0]===0){// n is -0
o._s=false;}return;}if(n!==undefined){if(n==='-0'){n='0';}// exponential notation support
if(new RegExp(/e/i).test(n)){var stringExponential=n.toString().toLowerCase(),indexOfE=stringExponential.indexOf('e'),mantissa=new JQX.Utilities.BigNumber(stringExponential.slice(0,indexOfE)),exponent=stringExponential.slice(indexOfE+2),sign=stringExponential.slice(indexOfE+1,indexOfE+2),bigTen=new JQX.Utilities.BigNumber(10),multyplyBy=bigTen.pow(sign+exponent),result=mantissa.multiply(multyplyBy);n=result.toString();}}o.precision=isNaN(p=Math.abs(p))?JQX.Utilities.BigNumber.defaultPrecision:p;o.roundType=isNaN(r=Math.abs(r))?JQX.Utilities.BigNumber.defaultRoundType:r;o._s=(n+='').charAt(0)=='-';o._f=((n=n.replace(/[^\d.]/g,'').split('.',2))[0]=n[0].replace(/^0+/,'')||'0').length;for(i=(n=o._d=(n.join('')||'0').split('')).length;i;n[--i]=+n[i]){}o.round();}babelHelpers.createClass(UtilitiesBigNumber,[{key:'add',value:function add(n){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d+new JQX.Utilities.BigNumber(n)._d);}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);if(that.isZero()&&that._s){// that.toString() is '-0'
that._s=false;}if(n===0||n.constructor===JQX.Utilities.BigNumber&&n._d.length===1&&n._d[0]===0){return new JQX.Utilities.BigNumber(that);}if(that._s!=(n=new JQX.Utilities.BigNumber(n))._s)return n._s^=1,that.subtract(n);var o=new JQX.Utilities.BigNumber(that),a=o._d,b=n._d,la=o._f,lb=n._f,i,r;n=Math.max(la,lb);la!=lb&&((lb=la-lb)>0?o._zeroes(b,lb,1):o._zeroes(a,-lb,1));i=(la=a.length)==(lb=b.length)?a.length:((lb=la-lb)>0?o._zeroes(b,lb):o._zeroes(a,-lb)).length;for(r=0;i;r=(a[--i]=a[i]+b[i]+r)/10>>>0,a[i]%=10){}return r&&++n&&a.unshift(r),o._f=n,o.round();}},{key:'subtract',value:function subtract(n){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d-new JQX.Utilities.BigNumber(n)._d);}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);if(that.isZero()&&that._s){// that.toString() is '-0'
that._s=false;}if(n===0||n.constructor===JQX.Utilities.BigNumber&&n._d.length===1&&n._d[0]===0){return new JQX.Utilities.BigNumber(that);}if(that._s!=(n=new JQX.Utilities.BigNumber(n))._s)return n._s^=1,that.add(n);var o=new JQX.Utilities.BigNumber(that),c=o.abs().compare(n.abs())+1,a=c?o:n,b=c?n:o,la=a._f,lb=b._f,d=la,i,j;a=a._d,b=b._d,la!=lb&&((lb=la-lb)>0?o._zeroes(b,lb,1):o._zeroes(a,-lb,1));for(i=(la=a.length)==(lb=b.length)?a.length:((lb=la-lb)>0?o._zeroes(b,lb):o._zeroes(a,-lb)).length;i;){if(a[--i]<b[i]){for(j=i;j&&!a[--j];a[j]=9){}--a[j],a[i]+=10;}b[i]=a[i]-b[i];}return c||(o._s^=1),o._f=d,o._d=b,o.round();}},{key:'multiply',value:function multiply(n){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d*new JQX.Utilities.BigNumber(n)._d);}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);var o=new JQX.Utilities.BigNumber(that),r=o._d.length>=(n=new JQX.Utilities.BigNumber(n))._d.length,a=(r?o:n)._d,b=(r?n:o)._d,la=a.length,lb=b.length,x=new JQX.Utilities.BigNumber(),i,j,s;for(i=lb;i;r&&s.unshift(r),x.set(x.add(new JQX.Utilities.BigNumber(s.join(''))))){for(s=new Array(lb- --i).join('0').split(''),r=0,j=la;j;r+=a[--j]*b[i],s.unshift(r%10),r=r/10>>>0){}}return o._s=o._s!=n._s,o._f=((r=la+lb-o._f-n._f)>=(j=(o._d=x._d).length)?that._zeroes(o._d,r-j+1,1).length:j)-r,o.round();}},{key:'divide',value:function divide(n){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d/new JQX.Utilities.BigNumber(n)._d);}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);if((n=new JQX.Utilities.BigNumber(n))=='0')throw new Error('Division by 0');else if(that=='0')return new JQX.Utilities.BigNumber();var o=new JQX.Utilities.BigNumber(that),a=o._d,b=n._d,la=a.length-o._f,lb=b.length-n._f,r=new JQX.Utilities.BigNumber(),i=0,j,s,l,f=1,c=0,e=0;r._s=o._s!=n._s,r.precision=Math.max(o.precision,n.precision),r._f=+r._d.pop(),la!=lb&&o._zeroes(la>lb?b:a,Math.abs(la-lb));n._f=b.length,b=n,b._s=false,b=b.round();for(n=new JQX.Utilities.BigNumber();a[0]=='0';a.shift()){}out:do{for(l=c=0,n=='0'&&(n._d=[],n._f=0);i<a.length&&n.compare(b)==-1;++i){(l=i+1==a.length,!f&&++c>1||(e=l&&n=='0'&&a[i]=='0'))&&(r._f==r._d.length&&++r._f,r._d.push(0));a[i]=='0'&&n=='0'||(n._d.push(a[i]),++n._f);if(e)break out;if(l&&n.compare(b)==-1&&(r._f==r._d.length&&++r._f,1)||(l=0))while(r._d.push(0),n._d.push(0),++n._f,n.compare(b)==-1){}}if(f=0,n.compare(b)==-1&&!(l=0))while(l?r._d.push(0):l=1,n._d.push(0),++n._f,n.compare(b)==-1){}var y;for(s=new JQX.Utilities.BigNumber(),j=0;n.compare(y=s.add(b))+1&&++j;s.set(y)){}n.set(n.subtract(s)),!l&&r._f==r._d.length&&++r._f,r._d.push(j);}while((i<a.length||n!='0')&&r._d.length-r._f<=r.precision);return r.round();}},{key:'mod',value:function mod(n){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d%new JQX.Utilities.BigNumber(n)._d);}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);var result=that.subtract(that.divide(n).intPart().multiply(n));if(result.isZero()&&result._s){result._s=!result._s;}return result;}},{key:'pow',value:function pow(n){if(JQX.Utilities.BigNumber.bigIntSupport){var result=BigInt(1);for(var _i35=BigInt(0);_i35<new JQX.Utilities.BigNumber(n)._d;_i35=_i35+BigInt(1)){result=result*this._d;}return new JQX.Utilities.BigNumber(result);// Use the following solution when UglifyJS supports **
//return new JQX.Utilities.BigNumber(this._d ** new JQX.Utilities.BigNumber(n)._d);
}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);var o=new JQX.Utilities.BigNumber(that),i;if((n=new JQX.Utilities.BigNumber(n).intPart())==0)return o.set(1);for(i=Math.abs(n);--i;o.set(o.multiply(that))){}return n<0?o.set(new JQX.Utilities.BigNumber(1).divide(o)):o;}},{key:'set',value:function set(n){n=new JQX.Utilities.BigNumber(n);this._d=n._d;this._f=n._f;this._s=n._s;return this;}},{key:'compare',value:function compare(n){if(JQX.Utilities.BigNumber.bigIntSupport){var otherNumber=new JQX.Utilities.BigNumber(n)._d;if(this._d===otherNumber){return 0;}if(this._d>otherNumber){return 1;}return-1;}var that=this.normalizeOperand(this);n=that.normalizeOperand(n);var a=that,la=that._f,b=new JQX.Utilities.BigNumber(n),lb=b._f,r=[-1,1],i,l,arr;if(a.isZero()&&b.isZero()){return 0;}if(a._s!=b._s)return a._s?-1:1;if(la!=lb)return r[la>lb^a._s];for(la=(arr=a._d).length,lb=(b=b._d).length,i=-1,l=Math.min(la,lb);++i<l;){if(arr[i]!=b[i])return r[arr[i]>b[i]^a._s];}return la!=lb?r[la>lb^a._s]:0;}},{key:'negate',value:function negate(){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d*BigInt(-1));}var that=this.normalizeOperand(this);var n=new JQX.Utilities.BigNumber(that);return n._s^=1,n;}},{key:'abs',value:function abs(){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d<0?this._d*BigInt(-1):this._d);}var that=this.normalizeOperand(this);var n=new JQX.Utilities.BigNumber(that);return n._s=0,n;}},{key:'intPart',value:function intPart(){if(JQX.Utilities.BigNumber.bigIntSupport){return new JQX.Utilities.BigNumber(this._d);}var that=this.normalizeOperand(this);return new JQX.Utilities.BigNumber((that._s?'-':'')+(that._d.slice(0,that._f).join('')||'0'));}},{key:'valueOf',value:function valueOf(radix,wordLength){var that=this.normalizeOperand(this);return that.toString(radix,wordLength);}},{key:'toString',value:function toString(radix,wordLength,leadingZeros){function negativeBinary(result,radix,wordLength){var reversedResult='';if(String.prototype.repeat){var zeroPadding='0'.repeat(wordLength-result.length);result=zeroPadding+result;}{while(result.length<wordLength){result='0'+result;}}reversedResult=result.replace(/0/g,'a');reversedResult=reversedResult.replace(/1/g,'b');reversedResult=reversedResult.replace(/a/g,'1');reversedResult=reversedResult.replace(/b/g,'0');var plusOne=true;var finalResult='';for(var j=reversedResult.length-1;j>=0;j--){var currentDigit=reversedResult.charAt(j);var newDigit;if(currentDigit==='0'){if(plusOne===true){newDigit='1';plusOne=false;}else{newDigit='0';}}else{if(plusOne===true){newDigit='0';}else{newDigit='1';}}finalResult=newDigit+''+finalResult;}switch(radix){case 2:return finalResult;case 8:var totalOct,zeroesToAdd;switch(wordLength){case 8:totalOct=3;zeroesToAdd='0';break;case 16:totalOct=6;zeroesToAdd='00';break;case 32:totalOct=11;zeroesToAdd='0';break;case 64:totalOct=22;zeroesToAdd='00';break;}finalResult=zeroesToAdd+finalResult;var octResult='';for(var k=totalOct;k>=1;k--){var currentOct=finalResult[k*3-3]+''+finalResult[k*3-2]+''+finalResult[k*3-1];octResult=parseInt(currentOct,2).toString(8)+''+octResult;}return octResult;case 16:var totalHex;switch(wordLength){case 8:totalHex=2;break;case 16:totalHex=4;break;case 32:totalHex=8;break;case 64:totalHex=16;break;}var hexResult='';for(var l=totalHex;l>=1;l--){var currentHex=finalResult[l*4-4]+''+finalResult[l*4-3]+''+finalResult[l*4-2]+''+finalResult[l*4-1];hexResult=parseInt(currentHex,2).toString(16)+''+hexResult;}return hexResult.toUpperCase();}}function toBinary(positiveNumber){var two=new JQX.Utilities.BigNumber(2),remainder,remaindersArray=[],temp;if(positiveNumber===undefined){temp=o;}else{temp=positiveNumber;}do{remainder=temp.mod(two);remaindersArray.push(remainder.toString());temp=temp.subtract(remainder).divide(two).intPart();}while(temp.compare(new JQX.Utilities.BigNumber(0))===1);return remaindersArray.reverse().join('');}function toOctal(binary){var result='';while(binary.length%3!==0){binary='0'+binary;}for(var k=binary.length/3;k>=1;k--){var currentOct=binary[k*3-3]+''+binary[k*3-2]+''+binary[k*3-1];result=parseInt(currentOct,2).toString(8)+''+result;}return result;}function toHexadecimal(binary){var result='';while(binary.length%4!==0){binary='0'+binary;}for(var l=binary.length/4;l>=1;l--){var currentHex=binary[l*4-4]+''+binary[l*4-3]+''+binary[l*4-2]+''+binary[l*4-1];result=parseInt(currentHex,2).toString(16)+''+result;}return result;}var o=void 0,decimal=void 0;if(JQX.Utilities.BigNumber.bigIntSupport){o=this;if(Array.isArray(o._d)){decimal=(o._s?'-':'')+(o._d.slice(0,o._f).join('')||'0')+(o._f!=o._d.length?'.'+o._d.slice(o._f).join(''):'');}else{decimal=this._d.toString();}}else{o=this.normalizeOperand(this);decimal=(o._s?'-':'')+(o._d.slice(0,o._f).join('')||'0')+(o._f!=o._d.length?'.'+o._d.slice(o._f).join(''):'');}if(radix===undefined||radix===10){return decimal;}var result=void 0;if(o.compare(0)>-1){switch(radix){case 2:result=toBinary();if(leadingZeros){result=result.padStart(wordLength,'0');}break;case 8:result=toOctal(toBinary());break;case 16:result=toHexadecimal(toBinary()).toUpperCase();if(leadingZeros){result=result.padStart(wordLength/4,'0');}break;}}else{var positiveNumber=o.negate(),positiveBinary=toBinary(positiveNumber);result=negativeBinary(positiveBinary,radix,wordLength);}return result;}},{key:'_zeroes',value:function _zeroes(n,l,t){var s=['push','unshift'][t||0];for(++l;--l;n[s](0)){}return n;}},{key:'round',value:function round(){if('_rounding'in this)return this;var $=JQX.Utilities.BigNumber,r=this.roundType,b=this._d,d,p,n,x;for(this._rounding=true;this._f>1&&!b[0];--this._f,b.shift()){}for(d=this._f,p=this.precision+d,n=b[p];b.length>d&&!b[b.length-1];b.pop()){}x=(this._s?'-':'')+(p-d?'0.'+this._zeroes([],p-d-1).join(''):'')+1;if(b.length>p){n&&(r==$.DOWN?false:r==$.UP?true:r==$.CEIL?!this._s:r==$.FLOOR?this._s:r==$.HALF_UP?n>=5:r==$.HALF_DOWN?n>5:r==$.HALF_EVEN?n>=5&&b[p-1]&1:false)&&this.add(x);b.splice(p,b.length-p);}return delete this._rounding,this;}},{key:'isZero',value:function isZero(){return this._d.length===1&&this._d[0]===0;}},{key:'normalizeOperand',value:function normalizeOperand(n){if(n instanceof JQX.Utilities.BigNumber&&typeof n._d==='bigint'){return new JQX.Utilities.BigNumber(n._d.toString());}return n;}}],[{key:'defaultPrecision',get:function get(){return 40;}},{key:'defaultRoundType',get:function get(){return 4;}},{key:'bigIntSupport',get:function get(){return bigIntNativeSupport&&JQX.Utilities.BigNumber.ignoreBigIntNativeSupport!==true;}}]);return UtilitiesBigNumber;}());/**
 * A class for instantiating a number processor object.
 */JQX.Utilities.Assign('NumericProcessor',function NumericProcessor(context,numericFormatProperty){babelHelpers.classCallCheck(this,NumericProcessor);switch(context[numericFormatProperty]){case'integer':return new JQX.Utilities.IntegerNumericProcessor(context,numericFormatProperty);case'floatingPoint':return new JQX.Utilities.DecimalNumericProcessor(context,numericFormatProperty);case'complex':return new JQX.Utilities.ComplexNumericProcessor(context,numericFormatProperty);}});/**
 * A base class for processesing numbers.
 */JQX.Utilities.Assign('BaseNumericProcessor',function(){function BaseNumericProcessor(context,numericFormatProperty){babelHelpers.classCallCheck(this,BaseNumericProcessor);var that=this;that.context=context;that._longestLabelSize=0;that.numericFormatProperty=numericFormatProperty;that.regexScientificNotation=new RegExp(/^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)(Y|Z|E|P|T|G|M|k|c|m|u|n|p|f|a|z|y){1}$/);// regular expressions for scientific notation
that.regexNoLeadingZero=new RegExp(/^(-)?[.]\d+$/);that.regexLeadingZero=new RegExp(/^[+\-]?(0+)[1-9]+|^[+\-]?(0{2,})[.]|^(0{2,})$/);that.prefixesToPowers={'Y':24,'Z':21,'E':18,'P':15,'T':12,'G':9,'M':6,'k':3,'c':-2,'m':-3,'u':-6,'n':-9,'p':-12,'f':-15,'a':-18,'z':-21,'y':-24};if(window.NIComplex){that.complexConstructor=window.NIComplex;}else{that.complexConstructor=JQX.Utilities.Complex;}}babelHelpers.createClass(BaseNumericProcessor,[{key:'prepareForValidation',value:function prepareForValidation(initialValidation,programmaticValue,value){var that=this.context,initialOrProgrammatic=initialValidation||programmaticValue!==undefined;value=value.toString();value=value.replace(/\s/g,'');value=that._discardDecimalSeparator(value);if(this.regexLeadingZero.test(value)){var testResult=this.regexLeadingZero.exec(value);if(testResult[1]){value=value.replace(testResult[1],'');}else if(testResult[2]){value=value.replace(testResult[2],'0');}else{value=value.replace(testResult[3],'0');}}if(this.regexNoLeadingZero.test(value)){if(value.charAt(0)==='-'){value='-0'+value.slice(1);}else{value='0'+value;}}else if((that[this.numericFormatProperty]==='integer'&&(that._radixNumber===10||initialOrProgrammatic)||that[this.numericFormatProperty]==='floatingPoint')&&this.regexScientificNotation.test(value)){// scientific notation test
value=this.scientificToDecimal(value);}var complexNumberIsEntered=false,enteredComplexNumber=void 0;if(that[this.numericFormatProperty]==='complex'&&that._regexSpecial.nonNumericValue.test(value)===false){try{if(that._regexSpecial.exaValue.test(value)){// handles ambiguous "exa" case
var indexOfExa=value.indexOf('E'),realPart=parseFloat(value.slice(0,indexOfExa))*Math.pow(10,18),imaginaryPart=parseFloat(value.slice(indexOfExa+1,-1));enteredComplexNumber=new this.complexConstructor(realPart,imaginaryPart);}else{enteredComplexNumber=new this.complexConstructor(value);}complexNumberIsEntered=true;}catch(error){complexNumberIsEntered=false;}}// if the entered value is not a number
if(complexNumberIsEntered===false&&(!initialOrProgrammatic&&that._regex[that._radixNumber].test(value)===false||initialOrProgrammatic&&that._regex[10].test(value)===false)){that._handleNonNumericValue(initialValidation,programmaticValue,value);return;}return{value:value,enteredComplexNumber:enteredComplexNumber};}/**
     * Checks if a number is in exponential notation.
     */},{key:'isENotation',value:function isENotation(value){var eNotationRegex=new RegExp(/e/i);return eNotationRegex.test(value.toString());}/**
     * Converts a number in scientific notation to a plain number.
     */},{key:'scientificToDecimal',value:function scientificToDecimal(scientificValue){var parts=this.regexScientificNotation.exec(scientificValue),numericPart=parts[1],prefix=parts[2],number=parseFloat(numericPart)*Math.pow(10,this.prefixesToPowers[prefix]);return number;}/**
     * Creates a label dummy element.
     */},{key:'_createMeasureLabel',value:function _createMeasureLabel(){var context=this.context,measureLabel=document.createElement('div');measureLabel.className='jqx-label';measureLabel.style.position='absolute';measureLabel.style.visibility='hidden';if(context.scalePosition!=='far'){context._measureLabelScale=context.$.scaleNear;}else{context._measureLabelScale=context.$.scaleFar;}context._measureLabelScale.appendChild(measureLabel);return measureLabel;}/**
     * Adds a major tick and its respective label.
     */},{key:'_addMajorTickAndLabel',value:function _addMajorTickAndLabel(htmlValue,labelSize,plot,value,middle){var that=this.context,leftOrTop=that._settings.leftOrTop,offset=this.valueToPx(value);var currentTick='',currentLabel='';if(parseInt(offset)>parseInt(that._measurements.trackLength)){return{tick:currentTick,label:currentLabel};}if(that.logarithmicScale){htmlValue=that._formatLabel(Math.pow(10,value));}if(that.nodeName.toLowerCase()==='jqx-tank'||that._intervalHasChanged){var tickIntervalLabelSize=that._tickIntervalHandler.labelsSize;if(middle){that._labelDummy.innerHTML=htmlValue;var tickPosition=this.valueToPx(value),maxPosition=this.valueToPx(that._drawMax),minPosition=this.valueToPx(that._drawMin),_labelSize=that._labelDummy[that._settings.size],labelOtherSize=that.orientation==='vertical'?that._labelDummy.offsetWidth:that._labelDummy.offsetHeight,distanceToMin=(_labelSize+tickIntervalLabelSize.minLabelSize)/2,distanceToMax=(_labelSize+tickIntervalLabelSize.maxLabelSize)/2;that._normalLayout?plot=tickPosition+distanceToMax<maxPosition&&tickPosition-distanceToMin>minPosition:plot=tickPosition-distanceToMax>maxPosition&&tickPosition+distanceToMin<minPosition;if(labelOtherSize>this._longestLabelSize){this._longestLabelSize=labelOtherSize;}}else{this._longestLabelSize=Math.max(tickIntervalLabelSize.minLabelOtherSize,tickIntervalLabelSize.maxLabelOtherSize,this._longestLabelSize);}}that._tickValues.push(value);currentTick='<div style="'+leftOrTop+': '+offset+'px;" class="jqx-tick"></div>';if(plot!==false){if(labelSize===undefined){that._labelDummy.innerHTML=htmlValue;labelSize=that._labelDummy[that._settings.size];}var labelOffset=offset-labelSize/2;currentLabel+='<div class="jqx-label'+(middle?' jqx-label-middle':'')+'" style="'+leftOrTop+': '+labelOffset+'px;">'+htmlValue+'</div>';}return{tick:currentTick,label:currentLabel};}/**
     * Gets the internal numeric word length based on the "wordLength" property.
     */},{key:'getWordLength',value:function getWordLength(wordLength){this.context._unsigned=wordLength.charAt(0)==='u';switch(wordLength){case'int8':case'uint8':return 8;case'int16':case'uint16':return 16;case'int32':case'uint32':return 32;case'int64':case'uint64':return 64;}}/**
     * Returns the angle equivalent of a value.
     */},{key:'getAngleByValue',value:function getAngleByValue(value,calculateDrawValue,returnDegrees){var that=this.context;if(calculateDrawValue!==false&&that.logarithmicScale){value=Math.log10(value);}var angleOffset=(value-that._drawMin)*that._angleRangeCoefficient;var degrees=void 0;if(!that.inverted){degrees=that.endAngle-angleOffset;}else{degrees=that.startAngle+angleOffset;}if(returnDegrees){return degrees;}return degrees*Math.PI/180+Math.PI/2;}/**
     * Returns the value equivalent of an angle.
     */},{key:'getValueByAngle',value:function getValueByAngle(angle,integer){var that=this.context;var minuendAngle=void 0,subtrahendAngle=void 0,value=void 0;if(!that.inverted){minuendAngle=that.endAngle;subtrahendAngle=angle;}else{minuendAngle=angle;subtrahendAngle=that._normalizedStartAngle;}while(minuendAngle<subtrahendAngle){minuendAngle+=360;}value=(minuendAngle-subtrahendAngle)/that._angleDifference*that._range+parseFloat(that._drawMin);if(that.logarithmicScale){if(that.customInterval){return parseFloat(Math.pow(10,this.getCoercedValue(value,true)).toFixed(12));}value=Math.pow(10,value);}if(integer&&!that.coerce){return Math.round(value);}value=this.createDescriptor(value,undefined,true,true);return this.getCoercedValue(value,false);}/**
     * Updates the values of the Gauge and its digital display and fires the "change" event.
     */},{key:'updateGaugeValue',value:function updateGaugeValue(newValue){var that=this.context,oldValue=that.value;that.value=newValue;that._drawValue=that.logarithmicScale?Math.log10(newValue).toString():newValue;that._number=this.createDescriptor(that.value);that.$.digitalDisplay.value=newValue;that.$.fireEvent('change',{'value':newValue,'oldValue':oldValue});delete that._valueBeforeCoercion;}/**
     * Validates the start or end value of a Gauge color range.
     */},{key:'validateColorRange',value:function validateColorRange(value){var that=this.context;return Math.min(Math.max(value,that.min),that.max);}/**
     * Returns a value based on the passed "draw" value.
     */},{key:'getActualValue',value:function getActualValue(value){if(!this.context.logarithmicScale){return value;}else{return Math.pow(10,value);}}/**
     * Draws minor ticks on a Gauge logarithmic scale.
     */},{key:'drawGaugeLogarithmicScaleMinorTicks',value:function drawGaugeLogarithmicScaleMinorTicks(majorTickValues,majorStep,drawMinor){var that=this.context;var firstWholePower=void 0;if(majorStep instanceof JQX.Utilities.BigNumber){majorStep=parseFloat(majorStep.toString());}for(var _i36 in majorTickValues){firstWholePower=_i36;if(_i36>=0&&_i36%1===0){break;}}// positive powers
for(var _i37=parseFloat(firstWholePower);_i37<that._drawMax;_i37+=majorStep){for(var j=2;j<=9;j++){var _value11=j*Math.pow(10,_i37+majorStep-1);if(_value11<that.max){drawMinor(_value11);}}}// negative powers
for(var _i38=parseFloat(firstWholePower);_i38>that._drawMin;_i38-=majorStep){for(var _j3=2;_j3<=9;_j3++){var _value12=_j3*Math.pow(10,_i38-1);if(_value12>that.min){drawMinor(_value12);}}}}/**
     * Returns the difference between two angles.
     */},{key:'_getAngleDifference',value:function _getAngleDifference(angle1,angle2){var phi=Math.abs(angle2-angle1)%360,distance=phi>180?360-phi:phi;return distance;}/**
     * Plots custom ticks.
     */},{key:'addCustomTicks',value:function addCustomTicks(){var numericProcessor=this,that=numericProcessor.context,normalScale=!that.logarithmicScale;var ticks='',labels='';function createTickAndLabel(i){var currentLabel=that.customTicks[i],value=normalScale?numericProcessor.createDescriptor(currentLabel):Math.log10(currentLabel),middle=i>0&&i<that.customTicks.length-1,currentTickAndLabel=numericProcessor._addMajorTickAndLabel(that._formatLabel(currentLabel),undefined,true,value,middle);ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;}numericProcessor._longestLabelSize=0;that._tickValues=[];that._labelDummy=numericProcessor._createMeasureLabel();if(!that._normalLayout){for(var _i39=that.customTicks.length-1;_i39>=0;_i39--){createTickAndLabel(_i39);}}else{for(var _i40=0;_i40<that.customTicks.length;_i40++){createTickAndLabel(_i40);}}if(that.nodeName.toLowerCase()==='jqx-tank'){that._updateScaleWidth(numericProcessor._longestLabelSize);}that._appendTicksAndLabelsToScales(ticks,labels);}/**
     * Plots the Gauge's custom ticks.
     */},{key:'addGaugeCustomTicks',value:function addGaugeCustomTicks(){var numericProcessor=this,that=numericProcessor.context,distance=that._distance,majorTickWidth=that._measurements.radius-distance.majorTickDistance;var drawTick=void 0,drawLabel=void 0;if(that.ticksVisibility!=='none'&&that._plotTicks!==false){drawTick=function drawTick(angle){that._drawTick(angle,majorTickWidth,'major');};}else{drawTick=function drawTick(){};}if(that.labelsVisibility!=='none'&&that._plotLabels!==false){drawLabel=function drawLabel(angle,currentLabel,middle){that._drawLabel(angle,currentLabel,distance.labelDistance,middle);};}else{drawLabel=function drawLabel(){};}function createTickAndLabel(i){var currentLabel=that.customTicks[i],value=numericProcessor.createDescriptor(currentLabel),angle=numericProcessor.getAngleByValue(value,true),middle=i>0&&i<that.customTicks.length-1;drawTick(angle);drawLabel(angle,currentLabel,middle);}for(var _i41=that.customTicks.length-1;_i41>=0;_i41--){createTickAndLabel(_i41);}}}]);return BaseNumericProcessor;}());/**
 * A class for processesing integer numbers.
 */JQX.Utilities.Assign('IntegerNumericProcessor',function(_JQX$Utilities$BaseNu){babelHelpers.inherits(IntegerNumericProcessor,_JQX$Utilities$BaseNu);function IntegerNumericProcessor(context,numericFormatProperty){babelHelpers.classCallCheck(this,IntegerNumericProcessor);var _this4=babelHelpers.possibleConstructorReturn(this,(IntegerNumericProcessor.__proto__||Object.getPrototypeOf(IntegerNumericProcessor)).call(this,context,numericFormatProperty));var that=_this4;that.context=context;that.defaultMins={int8:'-128',uint8:'0',int16:'-32768',uint16:'0',int32:'-2147483648',uint32:'0',int64:'-9223372036854775808',uint64:'0'};that.defaultMaxs={int8:'127',uint8:'255',int16:'32767',uint16:'65535',int32:'2147483647',uint32:'4294967295',int64:'9223372036854775807',uint64:'18446744073709551615'};return _this4;}babelHelpers.createClass(IntegerNumericProcessor,[{key:'createDescriptor',value:function createDescriptor(initialValue,supportsENotation,validateConstruction,validateMinMax,discardRadix){var that=this.context;var returnValue=void 0;if(initialValue.constructor!==JQX.Utilities.BigNumber){var radix=!discardRadix&&that._radixNumber?that._radixNumber:10;if(radix===10&&supportsENotation&&initialValue.constructor!==JQX.Utilities.BigNumber&&this.isENotation(initialValue)){if(JQX.Utilities.BigNumber.bigIntSupport){initialValue=new JQX.Utilities.BigNumber(Math.round(initialValue));}else{initialValue=new JQX.Utilities.NumberRenderer(initialValue).largeExponentialToDecimal();}}if(that._toBigNumberDecimal){returnValue=that._toBigNumberDecimal(initialValue.toString(radix,that._wordLengthNumber),radix);}else{returnValue=new JQX.Utilities.BigNumber(initialValue);}}else{returnValue=new JQX.Utilities.BigNumber(initialValue);}if(validateConstruction){// if the entered number is negative and the "wordLength" is "uint", the number is set to 0
if(that._unsigned&&returnValue.compare(0)===-1){returnValue=returnValue.set(0);}if(validateMinMax){// if the entered number is outside the range defined by "min" and "max", the number is changed to the value of "min" or "max"
returnValue=this.validate(returnValue,that._minObject,that._maxObject);}returnValue=this.round(returnValue);}return returnValue;}/**
    * Returns a rounded BigNumber object
    */},{key:'round',value:function round(value){var context=this.context;// eslint-disable-next-line
if(value instanceof window.JQX.Utilities.BigNumber&&typeof value._d==='bigint'){return value;}else if(value instanceof window.JQX.Utilities.BigNumber===false||!context._wordLengthNumber||context._wordLengthNumber<64){return new JQX.Utilities.BigNumber(Math.round(value.toString()));}var fraction=value.mod(1);if(!(fraction._d.length===1&&fraction._d[0]===0)){// if the entered number is with a decimal value, it is rounded up or down to its nearest integer equivalent
value=value.intPart();if(!value._s){// round positive number
if(fraction._d[1]>4){value=value.add(1);}}else{// round negative number
if(fraction._d[1]>5||fraction._d[1]===5&&fraction._d[2]){value=value.add(-1);}}}return value;}/**
     * Validates value.
     */},{key:'validate',value:function validate(initialValue,min,max){var returnValue=void 0;if(initialValue.compare(min)===-1){returnValue=min;}else if(initialValue.compare(max)===1){returnValue=max;}else{returnValue=initialValue;}return returnValue;}/**
     * Validates min/max.
     */},{key:'validateMinMax',value:function validateMinMax(validateMin,validateMax){var that=this.context;var defaultMin=this.defaultMins[that.wordLength],defaultBigMin=new JQX.Utilities.BigNumber(defaultMin),defaultMax=this.defaultMaxs[that.wordLength],defaultBigMax=new JQX.Utilities.BigNumber(defaultMax),numericScale=that.mode!=='date';if(that._numberRenderer===undefined){that._numberRenderer=new JQX.Utilities.NumberRenderer();}if(validateMin&&numericScale){if(that.min!==null){that.min=that.min.toString().replace(/\s/g,'');if(this.regexScientificNotation.test(that.min)){that.min=this.scientificToDecimal(that.min);}}var currentBigMin=this.round(new JQX.Utilities.BigNumber(that.min));if(that.min!==null&&(!that._minIsNull||!that._initialized)&&currentBigMin.compare(defaultBigMin)>=0){that._minObject=currentBigMin;}else{that._minIsNull=true;that.min=defaultMin;that._minObject=defaultBigMin;}}if(validateMax&&numericScale){if(that.max!==null){that.max=that.max.toString().replace(/\s/g,'');if(this.regexScientificNotation.test(that.max)){that.max=this.scientificToDecimal(that.max);}}var currentBigMax=this.round(new JQX.Utilities.BigNumber(that.max));if(that.max!==null&&(!that._maxIsNull||!that._initialized)&&currentBigMax.compare(defaultBigMax)<=0){that._maxObject=currentBigMax;}else{that._maxIsNull=true;that.max=defaultMax;that._maxObject=defaultBigMax;}}if(!numericScale){that._minObject=new JQX.Utilities.BigNumber(that.min);that._maxObject=new JQX.Utilities.BigNumber(that.max);}if(!this.compare(that._minObject,that._maxObject)){//Set default values
that._minObject=defaultBigMin;that._maxObject=defaultBigMax;that._drawMin=that.logarithmicScale?0:defaultMin;that._drawMax=that.logarithmicScale?10:defaultMax;that.min=defaultMin;that.max=defaultMax;}if(!numericScale){that._minDate=JQX.Utilities.DateTime.fromFullTimeStamp(that.min);that._maxDate=JQX.Utilities.DateTime.fromFullTimeStamp(that.max);}}/**
     * Converts value to pixels.
     */},{key:'valueToPx',value:function valueToPx(value){var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;var that=this.context,lengthRangeRatio=new JQX.Utilities.BigNumber(that._measurements.trackLength).divide(new JQX.Utilities.BigNumber(that._range));var result=void 0;if(that._normalLayout){var drawMin=that._drawMin instanceof JQX.Utilities.BigNumber?that._drawMin:new JQX.Utilities.BigNumber(that._drawMin);value=new JQX.Utilities.BigNumber(value);result=parseFloat(lengthRangeRatio.multiply(value.subtract(drawMin)).toString());}else{var drawMax=that._drawMax instanceof JQX.Utilities.BigNumber?that._drawMax:new JQX.Utilities.BigNumber(that._drawMax);result=parseFloat(this.round(drawMax.subtract(value).multiply(lengthRangeRatio)).toString());}JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return result;}/**
    * Returns the value equivalent of a pixel offset.
    */},{key:'pxToValue',value:function pxToValue(px){var that=this.context,ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;var result=void 0;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;if(that._normalLayout){result=that._valuePerPx.multiply(px-that._trackStart);}else{result=that._valuePerPx.multiply(that._trackEnd-px);}result=this.round(result).toString();JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;if(that.logarithmicScale){var power=parseFloat(result)+parseFloat(that._drawMin);//that._drawValue = power;
return new JQX.Utilities.BigNumber(Math.round(Math.pow(10,power)));}var returnedValue=this.createDescriptor(that._minObject.add(result),false,true,true);//that._drawValue = returnedValue;
return returnedValue;}/**
     * BigNumber compare method.
     */},{key:'compare',value:function compare(initialValue,otherValue,thorough){if((initialValue===null||otherValue===null)&&initialValue!==otherValue){return true;}if(initialValue.constructor!==JQX.Utilities.BigNumber){initialValue=new JQX.Utilities.BigNumber(initialValue);}var result=initialValue.compare(otherValue);if(thorough!==true){return result!==0;}return result;}/**
     * Increments/Decrements value. Keyboard navigation operations.
     */},{key:'incrementDecrement',value:function incrementDecrement(initialValue,operation,stepObject){var that=this.context;var returnValue=void 0;if(initialValue.constructor!==JQX.Utilities.BigNumber){initialValue=new JQX.Utilities.BigNumber(initialValue);}if(operation==='add'){returnValue=initialValue.add(stepObject);if(that._drawMax!==undefined){return returnValue.compare(that._drawMax)>0?new JQX.Utilities.BigNumber(that._drawMax):returnValue;}}else{returnValue=initialValue.subtract(stepObject);if(that._drawMin!==undefined){return returnValue.compare(that._drawMin)<0?new JQX.Utilities.BigNumber(that._drawMin):returnValue;}}return returnValue;}/**
     * Renders the value. Scientific notation renderer.
     */},{key:'render',value:function render(initialValue,ignoreRadixNumber){var context=this.context;if(!context.scientificNotation&&ignoreRadixNumber===true){return new JQX.Utilities.NumberRenderer(new JQX.Utilities.BigNumber(initialValue)).bigNumberToExponent(context.significantDigits);}// scientific notation
var returnValue=initialValue;if(context.scientificNotation&&ignoreRadixNumber===true){returnValue=new JQX.Utilities.NumberRenderer(returnValue).toScientific(context.significantDigits,context.precisionDigits);}else if(typeof initialValue!=='string'){returnValue=initialValue.toString(context._radixNumber,context._wordLengthNumber,context.leadingZeros);}return returnValue;}/**
     * Adds tank\'s ticks and labels.
     */},{key:'addTicksAndLabels',value:function addTicksAndLabels(){var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;var that=this.context,trackLength=that._measurements.trackLength,normalLayout=that._normalLayout,ticksFrequency=that._majorTicksInterval,tickscount=this.round(new JQX.Utilities.BigNumber(that._range).divide(ticksFrequency)),ticksDistance=trackLength/tickscount,min=new JQX.Utilities.BigNumber(that._drawMin),max=new JQX.Utilities.BigNumber(that._drawMax);var first=void 0,second=void 0,distanceModifier=void 0,last=void 0,firstLabelValue=void 0,firstLabelSize=void 0,lastLabelValue=void 0,lastLabelSize=void 0,currentTickAndLabel=void 0,ticks='',labels='';that._tickValues=[];this._longestLabelSize=0;if(normalLayout){first=min;second=ticksFrequency.add(first.subtract(first.mod(ticksFrequency)));distanceModifier=second.subtract(first);firstLabelValue=that._formatLabel(min);firstLabelSize=that._tickIntervalHandler.labelsSize.minLabelSize;last=max;lastLabelValue=that._formatLabel(max);lastLabelSize=that._tickIntervalHandler.labelsSize.maxLabelSize;}else{first=max;second=first.subtract(first.mod(ticksFrequency));distanceModifier=first.subtract(second);firstLabelValue=that._formatLabel(max);firstLabelSize=that._tickIntervalHandler.labelsSize.maxLabelSize;last=min;lastLabelValue=that._formatLabel(min);lastLabelSize=that._tickIntervalHandler.labelsSize.minLabelSize;}that._labelDummy=this._createMeasureLabel();currentTickAndLabel=this._addMajorTickAndLabel(firstLabelValue,firstLabelSize,true,first);// first tick and label
ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;// special case for second tick and label
var distanceFromFirstToSecond=distanceModifier.divide(ticksFrequency).multiply(ticksDistance);if(second.compare(that.max)!==0&&distanceFromFirstToSecond.compare(trackLength)<0){// second item rendering
var secondItemHtmlValue=that._formatLabel(second.toString()),plotSecond=distanceFromFirstToSecond.compare(firstLabelSize)>0;currentTickAndLabel=this._addMajorTickAndLabel(secondItemHtmlValue,undefined,plotSecond,second,true);ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;}currentTickAndLabel=this.addMiddleMajorTicks(tickscount,ticksDistance,distanceFromFirstToSecond,distanceModifier,normalLayout,ticksFrequency);ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;currentTickAndLabel=this._addMajorTickAndLabel(lastLabelValue,lastLabelSize,true,last);// last tick and label
ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;if(that.mode!=='date'){ticks+=this.addMinorTicks(normalLayout);}that._measureLabelScale.removeChild(that._labelDummy);delete that._labelDummy;delete that._measureLabelScale;if(that.nodeName.toLowerCase()==='jqx-tank'){that._updateScaleWidth(this._longestLabelSize);}that._appendTicksAndLabelsToScales(ticks,labels);JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;}/**
    * Adds the middle major ticks and their respective labels.
    */},{key:'addMiddleMajorTicks',value:function addMiddleMajorTicks(tickscount,ticksDistance,distanceFromFirstToSecond,distanceModifier,normalLayout,ticksFrequency){var that=this.context;var majorTicks='',majorLabels='',valuePlusExponent=void 0;for(var _i42=1;_i42<tickscount;_i42++){var number=distanceFromFirstToSecond.add(_i42*ticksDistance),_value13=void 0;if(normalLayout){_value13=ticksFrequency.multiply(_i42).add(distanceModifier.add(new JQX.Utilities.BigNumber(that._drawMin)));}else{_value13=new JQX.Utilities.BigNumber(that._drawMax).subtract(distanceModifier).subtract(ticksFrequency.multiply(_i42));// if the value of the penultimate is 0 we add the exponent to accurately calculate its size
if(_i42===tickscount-1&&_value13.compare(0)===0){that._numberRenderer.numericValue=that._tickIntervalHandler.nearestPowerOfTen;valuePlusExponent=that._numberRenderer.bigNumberToExponent(1);}}if(_value13.compare(that._drawMax)!==0){var htmlValue=that._formatLabel(_value13.toString()),plot=true;that._labelDummy.innerHTML=valuePlusExponent?valuePlusExponent:htmlValue;var dimensionValue=that._labelDummy[that._settings.size];if(number.add(dimensionValue).compare(tickscount*ticksDistance)>=0){// + 5 is an experimental value
plot=false;// does not plot the second to last label if it intersects with the last one
}var currentTickAndLabel=this._addMajorTickAndLabel(htmlValue,undefined,plot,_value13,true);majorTicks+=currentTickAndLabel.tick;majorLabels+=currentTickAndLabel.label;}}return{tick:majorTicks,label:majorLabels};}/**
     * Adds minor ticks.
     */},{key:'addMinorTicks',value:function addMinorTicks(normalLayout){function addMinorTick(i){if(tickValues.indexOf(i)===-1&&i%minorTicksInterval===0){minorTicks+='<div style="'+leftOrTop+': '+that._numericProcessor.valueToPx(i)+'px;" class="jqx-tick jqx-tick-minor"></div>';}}var that=this.context,tickValues=that._tickValues,nearestPowerOfTen=that._tickIntervalHandler.nearestPowerOfTen,minorTicksInterval=that._minorTicksInterval,leftOrTop=that._settings.leftOrTop;var firstTickValue=void 0,secondTickValue=void 0,lastTickValue=void 0,minorTicks='';if(normalLayout){firstTickValue=tickValues[0];secondTickValue=tickValues[1];lastTickValue=tickValues[tickValues.length-1];}else{firstTickValue=tickValues[tickValues.length-1];secondTickValue=tickValues[tickValues.length-2];lastTickValue=tickValues[0];}if(that.logarithmicScale){addMinorTickOnLogarithmicScale();}else{// minor ticks from the beginning to the second major tick
for(var _i43=secondTickValue;firstTickValue.compare(_i43)<0;_i43=_i43.subtract(nearestPowerOfTen)){addMinorTick(_i43);}// minor ticks from the second major tick to the end
for(var _i44=secondTickValue.add(nearestPowerOfTen);lastTickValue.compare(_i44)>0;_i44=_i44.add(nearestPowerOfTen)){addMinorTick(_i44);}}function addMinorTickOnLogarithmicScale(){var trackLength=that._measurements.trackLength,partialTrackLength=trackLength/tickValues.length,modifierCoef=0.1;if(partialTrackLength<20){modifierCoef=1;}else if(partialTrackLength>=20&&partialTrackLength<40){modifierCoef=secondTickValue-firstTickValue>1?1:0.5;}else if(partialTrackLength>=40&&partialTrackLength<80){modifierCoef=0.2;}var nearestPowerOf10BelowMax=Math.floor(that._drawMax),distanceToNearestPowerOf10=that._drawMax-nearestPowerOf10BelowMax,ticksOnPowerOf10=that._drawMax-that._drawMin>tickValues.length;for(var j=that._drawMax;j>0;j=j-1){var range=distanceToNearestPowerOf10>0?Math.pow(10,j-distanceToNearestPowerOf10+1):Math.pow(10,j),modifier=range*modifierCoef;for(var _i45=range;_i45>0;_i45=_i45-modifier){if(_i45<that.max&&_i45>that.min){var _value14=new JQX.Utilities.BigNumber(Math.log10(_i45));if(_value14%1===0&&ticksOnPowerOf10||!ticksOnPowerOf10){minorTicks+='<div style="'+leftOrTop+': '+that._numericProcessor.valueToPx(_value14)+'px;" class="jqx-tick jqx-tick-minor"></div>';}}}}}return minorTicks;}/**
     * Validates custom ticks.
     */},{key:'validateCustomTicks',value:function validateCustomTicks(){var that=this.context,numericScale=that.mode!=='date';var validCustomTicks=[];for(var _i46=0;_i46<that.customTicks.length;_i46++){var currentTick=that.customTicks[_i46];if(numericScale){currentTick=this.createDescriptor(currentTick,false,true);}else if(currentTick._d===undefined){currentTick=JQX.Utilities.DateTime.validateDate(currentTick).getTimeStamp();}if(currentTick.compare(that._minObject)>=0&&currentTick.compare(that._maxObject)<=0){validCustomTicks.push(currentTick);}}validCustomTicks.sort(function(a,b){return a.compare(b);});if(numericScale){for(var _i47=0;_i47<validCustomTicks.length;_i47++){validCustomTicks[_i47]=validCustomTicks[_i47].toString();}validCustomTicks=validCustomTicks.filter(function(element,index,array){return!index||element!==array[index-1];});}that.customTicks=validCustomTicks.slice(0);}/**
     * Plots the Gauge's ticks and labels.
     */},{key:'addGaugeTicksAndLabels',value:function addGaugeTicksAndLabels(){var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;var that=this.context,numericProcessor=this,maxLabelHeight=Math.max(that._tickIntervalHandler.labelsSize.minLabelSize,that._tickIntervalHandler.labelsSize.maxLabelSize),majorStep=that._majorTicksInterval,minorStep=that._minorTicksInterval,majorTickValues={},distance=that._distance,radius=that._measurements.radius,majorTickWidth=radius-distance.majorTickDistance,minorTickWidth=radius-distance.minorTickDistance,bigDrawMin=new JQX.Utilities.BigNumber(that._drawMin),bigDrawMax=new JQX.Utilities.BigNumber(that._drawMax);var drawMajor=void 0,drawMinor=void 0,addLabel=void 0,currentAngle=void 0,angleAtMin=void 0,angleAtMax=void 0;if(that.ticksVisibility!=='none'&&that._plotTicks!==false){drawMajor=function drawMajor(angle){that._drawTick(angle,majorTickWidth,'major');};drawMinor=function drawMinor(value){that._drawTick(numericProcessor.getAngleByValue(value,true),minorTickWidth,'minor');};}else{drawMajor=function drawMajor(){};drawMinor=function drawMinor(){};}if(that.labelsVisibility!=='none'&&that._plotLabels!==false){addLabel=function addLabel(angle,currentLabel,middle){that._drawLabel(angle,currentLabel,distance.labelDistance,middle);};}else{addLabel=function addLabel(){};}if(!that.inverted){angleAtMin=that.endAngle;angleAtMax=that.startAngle;}else{angleAtMin=that.startAngle;angleAtMax=that.endAngle;}// first major tick and label
currentAngle=numericProcessor.getAngleByValue(bigDrawMin,false);drawMajor(currentAngle);majorTickValues[that._drawMin.toString()]=true;addLabel(currentAngle,that.min,false);var second=bigDrawMin.subtract(bigDrawMin.mod(majorStep)),firstMinTick=void 0;if(bigDrawMin.compare(0)!==-1){second=second.add(majorStep);}// determines the value at the first minor tick
for(var _i48=new JQX.Utilities.BigNumber(second);_i48.compare(bigDrawMin)!==-1;_i48=_i48.subtract(minorStep)){firstMinTick=_i48;}// second major tick and label
currentAngle=numericProcessor.getAngleByValue(second,false);drawMajor(currentAngle);majorTickValues[second.toString()]=true;if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMin,numericProcessor.getAngleByValue(second,false,true))/360)>maxLabelHeight){addLabel(currentAngle,this.getActualValue(second),second.compare(bigDrawMax)===-1);}var i=void 0;// middle major ticks and labels
for(i=second.add(majorStep);i.compare(bigDrawMax.subtract(majorStep))===-1;i=i.add(majorStep)){currentAngle=numericProcessor.getAngleByValue(i,false);drawMajor(currentAngle);majorTickValues[i.toString()]=true;addLabel(currentAngle,this.getActualValue(i),true);}if(majorTickValues[i.toString()]===undefined&&i.compare(bigDrawMax)!==1){// second-to-last major tick and label
currentAngle=numericProcessor.getAngleByValue(i,false);drawMajor(currentAngle);majorTickValues[i.toString()]=true;if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMax,numericProcessor.getAngleByValue(i,false,true))/360)>=maxLabelHeight){addLabel(currentAngle,this.getActualValue(i),true);}if(that._normalizedStartAngle!==that.endAngle){// last major tick and label
currentAngle=numericProcessor.getAngleByValue(bigDrawMax,false);drawMajor(currentAngle);if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMax,angleAtMin)/360)>=maxLabelHeight){addLabel(currentAngle,that.max,false);}}}if(that.mode==='date'){JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return;}// minor ticks
if(!that.logarithmicScale){for(var j=firstMinTick;j.compare(bigDrawMax)===-1;j=j.add(minorStep)){if(majorTickValues[j.toString()]){continue;// does not plot minor ticks over major ones
}drawMinor(j);}}else{this.drawGaugeLogarithmicScaleMinorTicks(majorTickValues,majorStep,drawMinor);}JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;}/**
     * Sets toolTip's value and updates the value of the element.
     */},{key:'updateToolTipAndValue',value:function updateToolTipAndValue(value,oldValue,changeValue){var that=this.context,logarithmicScale=that.logarithmicScale;that._updateTooltipValue(value.toString());if(logarithmicScale){value=parseFloat(Math.pow(10,parseFloat(value)).toFixed(11));}value=value instanceof JQX.Utilities.BigNumber?value:new JQX.Utilities.BigNumber(value);var stringifiedValue=value.toString();that._number=value;that._drawValue=logarithmicScale?Math.log10(stringifiedValue):value;// eslint-disable-next-line
if(value.compare(oldValue)!==0&&changeValue){if(that.mode==='numeric'){that.value=stringifiedValue;value=stringifiedValue;}else{oldValue=that._valueDate;that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(stringifiedValue);that.value=value;value=that._valueDate;}if(!that._programmaticValueIsSet){that.$.fireEvent('change',{'value':value,'oldValue':oldValue});}if(that.$.hiddenInput){that.$.hiddenInput.value=value;}}}/**
     * Validates the interval property.
     */},{key:'validateInterval',value:function validateInterval(interval){var that=this.context,range=that._maxObject.subtract(that._minObject);that._validInterval=new JQX.Utilities.BigNumber(interval);that._validInterval=this.round(that._validInterval);if(that._validInterval.compare(range)===1){that._validInterval=range;}that.interval=that._validInterval.toString();}/**
     * Returns a coerced value based on the interval.
     */},{key:'getCoercedValue',value:function getCoercedValue(value,useDrawVariables,logarithmicGauge){var that=this.context;if(!that.coerce){return value;}var normalScale=!that.logarithmicScale;value=value instanceof JQX.Utilities.BigNumber?value:new JQX.Utilities.BigNumber(value);var minValue=void 0,maxValue=void 0;if(that.customInterval){var customTicks=that.customTicks;if(customTicks.length===0){return value;}var difference=void 0,closestValue=void 0;if(normalScale||logarithmicGauge){minValue=that._minObject;difference=minValue.subtract(value).abs();closestValue=minValue;for(var _i49=0;_i49<customTicks.length;_i49++){var currentTickObject=this.createDescriptor(customTicks[_i49]),currentDifference=currentTickObject.subtract(value).abs();if(currentDifference.compare(difference)===-1){difference=currentDifference;closestValue=currentTickObject;}}}else{minValue=that._drawMin;difference=Math.abs(minValue-parseFloat(value.toString()));closestValue=minValue;for(var _i50=0;_i50<customTicks.length;_i50++){var _currentTickObject=Math.log10(customTicks[_i50]),_currentDifference=Math.abs(_currentTickObject-value);if(_currentDifference<difference){difference=_currentDifference;closestValue=_currentTickObject;}}closestValue=new JQX.Utilities.BigNumber(closestValue);}return closestValue;}var interval=that._validInterval;if(that.mode==='date'){if(that._dateIncrementMethod==='addYears'){return this.coerceYear(value);}else if(that._dateIncrementMethod==='addMonths'){return this.coerceMonth(value);}else{interval=new JQX.Utilities.BigNumber(that._dateIntervalNumber).multiply(interval);}}if(useDrawVariables!==false){minValue=new JQX.Utilities.BigNumber(that._drawMin);maxValue=new JQX.Utilities.BigNumber(that._drawMax);}else{minValue=new JQX.Utilities.BigNumber(that.min);maxValue=new JQX.Utilities.BigNumber(that.max);}var noMin=value.subtract(minValue),remainder=noMin.mod(interval);if(remainder.compare(0)===0){return value;}var lowerValue=noMin.subtract(remainder),greaterValue=lowerValue.add(interval);if(noMin.subtract(lowerValue).abs().compare(noMin.subtract(greaterValue).abs())<0){return lowerValue.add(minValue);}else{var biggerValue=greaterValue.add(minValue);return biggerValue.compare(maxValue)<=0?biggerValue:lowerValue.add(minValue);}}},{key:'coerceMonth',value:function coerceMonth(value){var that=this.context,interval=parseFloat(that._validInterval),date=JQX.Utilities.DateTime.fromFullTimeStamp(value),year=date.year(),month=date.month(),day=date.day(),minYear=that._minDate.year(),minMonth=that._minDate.month(),totalMonths=(that._maxDate.year()-minYear-1)*12+12-minMonth+that._maxDate.month();var currentMonths=(year-1-minYear)*12+(12-minMonth)+month;if(interval===1){if([1,3,5,7,8,10,12].indexOf(month)!==-1){if(day>16||day===16&&date.hour()>11){currentMonths++;}}else if(month===2){if(date.isLeapYear(year)){if(day>15||day===15&&date.hour()>11){currentMonths++;}}else if(day>14){currentMonths++;}}else if(day>15){currentMonths++;}}currentMonths=this.getCoercedTimePart(0,totalMonths,currentMonths,interval);var result=that._minDate.addMonths(currentMonths,true);if(result.compare(that._maxDate)===1){result=that._minDate.addMonths(currentMonths-interval,true);}that._drawValue=new JQX.Utilities.BigNumber(result.getTimeStamp());return that._drawValue;}},{key:'coerceYear',value:function coerceYear(value){var that=this.context,interval=parseFloat(that._validInterval),date=JQX.Utilities.DateTime.fromFullTimeStamp(value),maxYear=that._maxDate.year(),updatedValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(that._minDate);var year=date.year();if(date.month()>6){year++;}var coercedTimePart=this.getCoercedTimePart(that._minDate.year(),maxYear,year,interval);if(coercedTimePart>maxYear){coercedTimePart-=interval;}updatedValueConstructorParameters[0]=coercedTimePart;updatedValueConstructorParameters.unshift(null);var valueDate=new(Function.prototype.bind.apply(JQX.Utilities.DateTime,updatedValueConstructorParameters))();that._drawValue=new JQX.Utilities.BigNumber(valueDate.getTimeStamp());return that._drawValue;}},{key:'getCoercedTimePart',value:function getCoercedTimePart(min,max,value,interval){var noMin=value-min,remainder=noMin%interval;if(remainder===0){return value;}var lowerValue=parseFloat((noMin-remainder).toFixed(12)),greaterValue=lowerValue+interval;if(max-min<=interval){return value>=min+(max-min)/2?max:min;}if(Math.abs(noMin-lowerValue)<Math.abs(noMin-greaterValue)){return lowerValue+min;}else{var biggerValue=greaterValue+min;return biggerValue>max?lowerValue+min:biggerValue;}}/**
     * Updates the value of the Tank and the "value" property and triggers the respective events.
     */},{key:'updateValue',value:function updateValue(value){var that=this.context;value=value instanceof JQX.Utilities.BigNumber?value:new JQX.Utilities.BigNumber(value);var renderedValue=this.validate(value,that._minObject,that._maxObject);var oldValue=that.value,valueDetail=void 0,difference=void 0;that._number=renderedValue;that._drawValue=that.logarithmicScale?Math.log10(renderedValue):renderedValue;if(that.mode==='numeric'){valueDetail=value.toString();that.value=valueDetail;difference=this.compare(value,oldValue);}else{oldValue=JQX.Utilities.DateTime.fromFullTimeStamp(oldValue);that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(value);that.value=value;value=that._valueDate;valueDetail=value;difference=value.compare(oldValue)!==0;}if(!that._programmaticValueIsSet&&(difference||that._scaleTypeChangedFlag)){that.$.fireEvent('change',{'value':valueDetail,'oldValue':oldValue});}if(that.$.hiddenInput){that.$.hiddenInput.value=value;}that._moveThumbBasedOnValue(that._drawValue);}/**
     * Returns value per pixel.
     */},{key:'getValuePerPx',value:function getValuePerPx(range,pxRange){var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;var result=new JQX.Utilities.BigNumber(range).divide(pxRange);JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return result;}/**
     * Restricts the thumbs to not pass each other.
     */},{key:'restrictValue',value:function restrictValue(values){if(values[1].constructor===JQX.Utilities.BigNumber){if(values[1].compare(values[0])===-1){values[1].set(values[0]);}}else{if(values[1]<values[0]){values[1]=values[0];}}}/**
     * Returns the angle equivalent of a value.
     */},{key:'getAngleByValue',value:function getAngleByValue(value,calculateDrawValue,returnDegrees){var that=this.context,ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;if(that._wordLengthNumber<64){JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return babelHelpers.get(IntegerNumericProcessor.prototype.__proto__||Object.getPrototypeOf(IntegerNumericProcessor.prototype),'getAngleByValue',this).call(this,parseFloat(value.toString()),calculateDrawValue,returnDegrees);}if(value instanceof JQX.Utilities.BigNumber===false){value=new JQX.Utilities.BigNumber(value);}if(calculateDrawValue!==false&&that.logarithmicScale){value=new JQX.Utilities.BigNumber(Math.log10(value.toString()));}var angleOffset=value.subtract(that._drawMin).multiply(that._angleRangeCoefficient);var degrees=void 0;if(!that.inverted){degrees=angleOffset.multiply(-1).add(that.endAngle);}else{degrees=angleOffset.add(that.startAngle);}degrees=parseFloat(degrees.toString());JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;if(returnDegrees){return degrees;}return degrees*Math.PI/180+Math.PI/2;}/**
     * Returns the value equivalent of an angle.
     */},{key:'getValueByAngle',value:function getValueByAngle(angle){var that=this.context;if(that._wordLengthNumber<64){return babelHelpers.get(IntegerNumericProcessor.prototype.__proto__||Object.getPrototypeOf(IntegerNumericProcessor.prototype),'getValueByAngle',this).call(this,angle,true);}var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;var minuendAngle=void 0,subtrahendAngle=void 0,value=void 0;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;if(!that.inverted){minuendAngle=that.endAngle;subtrahendAngle=angle;}else{minuendAngle=angle;subtrahendAngle=that._normalizedStartAngle;}while(minuendAngle<subtrahendAngle){minuendAngle+=360;}value=new JQX.Utilities.BigNumber((minuendAngle-subtrahendAngle)/that._angleDifference).multiply(that._range).add(that._drawMin);if(that.logarithmicScale){value=new JQX.Utilities.BigNumber(Math.pow(10,value.toString()));}var result=void 0;if(that.coerce){result=this.getCoercedValue(value,false);}else{result=this.round(value);}JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return new JQX.Utilities.BigNumber(result);}/**
     * Updates the values of the Gauge and its digital display and fires the "change" event.
     */},{key:'updateGaugeValue',value:function updateGaugeValue(newValue){if(newValue instanceof JQX.Utilities.BigNumber===false){return babelHelpers.get(IntegerNumericProcessor.prototype.__proto__||Object.getPrototypeOf(IntegerNumericProcessor.prototype),'updateGaugeValue',this).call(this,newValue);}var that=this.context,oldValue=that._getEventValue();if(that.mode==='numeric'){that.value=newValue.toString();that.$.digitalDisplay.value=that.value;}else{that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(newValue);that.value=newValue;that.$.digitalDisplay.$.input.value=that._valueDate;}that._drawValue=that.logarithmicScale?Math.log10(that.value).toString():that.value;that._number=newValue;that.$.fireEvent('change',{'value':that._getEventValue(),'oldValue':oldValue});}/**
     * Validates the start or end value of a Gauge color range.
     */},{key:'validateColorRange',value:function validateColorRange(value){var that=this.context;if(that._wordLengthNumber<64){return babelHelpers.get(IntegerNumericProcessor.prototype.__proto__||Object.getPrototypeOf(IntegerNumericProcessor.prototype),'validateColorRange',this).call(this,value);}if(that.mode==='numeric'){value=new JQX.Utilities.BigNumber(value);}else{value=JQX.Utilities.DateTime.validateDate(value);value=value.getTimeStamp();}var bigMin=new JQX.Utilities.BigNumber(that.min),bigMax=new JQX.Utilities.BigNumber(that.max);if(value.compare(bigMin)===-1){value=bigMin;}if(value.compare(bigMax)===1){value=bigMax;}return value;}/**
     * Locks the Gauge's interaction with the mouse.
     */},{key:'lockRotation',value:function lockRotation(directionCondition,newValue){var that=this.context;if(newValue instanceof JQX.Utilities.BigNumber===false){newValue=new JQX.Utilities.BigNumber(newValue);}if(directionCondition&&newValue.compare(that._number)===-1){that._lockCW=true;if(newValue.compare(that._maxObject)===-1){return new JQX.Utilities.BigNumber(that._maxObject);}}else if(!directionCondition&&newValue.compare(that._number)===1){that._lockCCW=true;if(newValue.compare(that._minObject)===1){return new JQX.Utilities.BigNumber(that._minObject);}}}/**
     * Gets the angle-range coefficient.
     */},{key:'getAngleRangeCoefficient',value:function getAngleRangeCoefficient(){var that=this.context,ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;that._angleRangeCoefficient=new JQX.Utilities.BigNumber(that._angleDifference).divide(that._range);JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;}}]);return IntegerNumericProcessor;}(JQX.Utilities.BaseNumericProcessor));/**
 * A class for processesing floating point numbers.
 */JQX.Utilities.Assign('DecimalNumericProcessor',function(_JQX$Utilities$BaseNu2){babelHelpers.inherits(DecimalNumericProcessor,_JQX$Utilities$BaseNu2);function DecimalNumericProcessor(context,numericFormatProperty){babelHelpers.classCallCheck(this,DecimalNumericProcessor);var _this5=babelHelpers.possibleConstructorReturn(this,(DecimalNumericProcessor.__proto__||Object.getPrototypeOf(DecimalNumericProcessor)).call(this,context,numericFormatProperty));_this5.context=context;return _this5;}/**
     * Returns the precise modulo of the mod operation.
     */babelHelpers.createClass(DecimalNumericProcessor,[{key:'getPreciseModulo',value:function getPreciseModulo(dividend,divisor,moduloCoefficient){var sign=dividend>=0?1:-1;dividend=Math.abs(dividend);divisor=Math.abs(divisor);if(typeof moduloCoefficient==='undefined'){var dividendExponential=dividend.toExponential(),divisorExponential=divisor.toExponential(),dividendExponent=parseInt(dividendExponential.slice(dividendExponential.indexOf('e')+1),10),divisorExponent=parseInt(divisorExponential.slice(divisorExponential.indexOf('e')+1),10),dividendRoundCoefficient=dividendExponent<0?Math.abs(dividendExponent):0,divisorRoundCoefficient=divisorExponent<0?Math.abs(divisorExponent):0,_roundCoefficient=Math.max(dividendRoundCoefficient,divisorRoundCoefficient);this.roundCoefficient=_roundCoefficient;if(dividend<divisor){return sign*dividend;}if(dividend===divisor){return 0;}if((dividend<-1||dividend>1)&&(divisor<-1||divisor>1||divisor===1)){if(dividend%1===0&&divisor%1===0){return sign*(dividend%divisor);}else{var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;var result=sign*parseFloat(new JQX.Utilities.BigNumber(dividend).mod(divisor).toString());JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;return result;}}var _moduloCoefficient=Math.pow(10,_roundCoefficient);return sign*(dividend*_moduloCoefficient%(divisor*_moduloCoefficient)/_moduloCoefficient);}return sign*(Math.round(dividend*moduloCoefficient)%Math.round(divisor*moduloCoefficient));}/**
     * Creates a descriptor.
     */},{key:'createDescriptor',value:function createDescriptor(initialValue,supportsENotation,validateConstruction,validateMinMax){var returnValue=parseFloat(initialValue);if(validateMinMax){returnValue=this.validate(returnValue,this.context._minObject,this.context._maxObject);}return returnValue;}/**
     * Returns a rounded number
     */},{key:'round',value:function round(value){return Math.round(value);}/**
     * Validates the value.
     */},{key:'validate',value:function validate(initialValue,min,max){var returnValue=void 0;if(initialValue<min){returnValue=min;}else if(initialValue>max){returnValue=max;}else{returnValue=initialValue;}return returnValue;}/**
     * Validates min/max.
     */},{key:'validateMinMax',value:function validateMinMax(validateMin,validateMax){var that=this.context,checkSpecialRegexMin=typeof that._regexSpecial!=='undefined'?that._regexSpecial.inf.test(that.min):false,checkSpecialRegexMax=typeof that._regexSpecial!=='undefined'?that._regexSpecial.inf.test(that.max):false;if(validateMin){if(that.min===null||checkSpecialRegexMin){that.min=-Infinity;that._minObject=-Infinity;}else{that.min=that.min.toString().replace(/\s/g,'');if(this.regexScientificNotation.test(that.min)){that.min=this.scientificToDecimal(that.min);}that._minObject=that._discardDecimalSeparator(that.min);}}if(validateMax){if(that.max===null||checkSpecialRegexMax){that.max=Infinity;that._maxObject=Infinity;}else{that.max=that.max.toString().replace(/\s/g,'');if(this.regexScientificNotation.test(that.max)){that.max=this.scientificToDecimal(that.max);}that._maxObject=that._discardDecimalSeparator(that.max);}}if(!this.compare(that._minObject,that._maxObject)){//Set default values
that._maxObject=parseFloat(that._maxObject)+1;that.max=that._maxObject;}}/**
     * Returns the pixel equivalent of a value.
     */},{key:'valueToPx',value:function valueToPx(value){var that=this.context,lengthRangeRatio=that._measurements.trackLength/that._range;var result=void 0;if(that._normalLayout){result=lengthRangeRatio*(value-that._drawMin);}else{result=lengthRangeRatio*(that._drawMax-value);}return Math.round(result);}/**
     * Returns the value equivalent of a pixel offset.
     */},{key:'pxToValue',value:function pxToValue(px){var that=this.context;var result=void 0;if(that._normalLayout){result=(px-that._trackStart)*that._valuePerPx;}else{result=(that._trackEnd-px)*that._valuePerPx;}if(that.logarithmicScale){var power=result+parseFloat(that._drawMin);return Math.pow(10,power);}return this.validate(result+that._minObject,that._minObject,that._maxObject);}/**
     * Decimal compare method.
     */},{key:'compare',value:function compare(initialValue,otherValue,thorough){initialValue=parseFloat(initialValue);otherValue=parseFloat(otherValue);if(thorough!==true){return initialValue!==otherValue;}if(initialValue<otherValue){return-1;}if(initialValue>otherValue){return 1;}return 0;}/**
     * Increments/Decrements value. Keyboard navigation operations.
     */},{key:'incrementDecrement',value:function incrementDecrement(initialValue,operation,stepObject){var that=this.context;var returnValue=void 0;if(operation==='add'){returnValue=parseFloat(initialValue)+parseFloat(stepObject);if(that._drawMax!==undefined){return returnValue>parseFloat(that._drawMax)?that._drawMax:returnValue;}}else{returnValue=parseFloat(initialValue)-parseFloat(stepObject);if(that._drawMin!==undefined){return returnValue<parseFloat(that._drawMin)?that._drawMin:returnValue;}}return returnValue;}/**
     * Renders the value.
     */},{key:'render',value:function render(initialValue){var that=this.context,checkSpecialRegex=typeof that._regexSpecial!=='undefined'?that._regexSpecial.nonNumericValue.test(initialValue):false;if(checkSpecialRegex){return initialValue;}else{var numberRenderer=new JQX.Utilities.NumberRenderer(initialValue);if(that.scientificNotation){return numberRenderer.toScientific(that.significantDigits,that.precisionDigits);}else{return numberRenderer.toDigits(that.significantDigits,that.precisionDigits);}}}/**
     * Adds tank's ticks and labels.
     */},{key:'addTicksAndLabels',value:function addTicksAndLabels(){var that=this.context,trackLength=that._measurements.trackLength,normalLayout=that._normalLayout,ticksFrequency=that._majorTicksInterval,tickscount=Math.round(that._range/parseFloat(ticksFrequency.toString())),ticksDistance=trackLength/tickscount,min=parseFloat(that._drawMin),max=parseFloat(that._drawMax);var first=void 0,second=void 0,distanceModifier=void 0,last=void 0,firstLabelValue=void 0,firstLabelSize=void 0,lastLabelValue=void 0,lastLabelSize=void 0,currentTickAndLabel=void 0,ticks='',labels='';that._tickValues=[];this._longestLabelSize=0;if(normalLayout){first=min;//handling specific case
if(that.logarithmicScale&&min<0&&min!==-1){second=parseFloat(first-this.getPreciseModulo(first,ticksFrequency));}else{second=parseFloat(first-this.getPreciseModulo(first,ticksFrequency)+parseFloat(ticksFrequency));}distanceModifier=second-first;firstLabelValue=that._formatLabel(min);firstLabelSize=that._tickIntervalHandler.labelsSize.minLabelSize;last=max;lastLabelValue=that._formatLabel(max);lastLabelSize=that._tickIntervalHandler.labelsSize.maxLabelSize;}else{first=max;second=parseFloat(first-this.getPreciseModulo(first,ticksFrequency));distanceModifier=first-second;firstLabelValue=that._formatLabel(max);firstLabelSize=that._tickIntervalHandler.labelsSize.maxLabelSize;last=min;lastLabelValue=that._formatLabel(min);lastLabelSize=that._tickIntervalHandler.labelsSize.minLabelSize;}that._labelDummy=this._createMeasureLabel();currentTickAndLabel=this._addMajorTickAndLabel(firstLabelValue,firstLabelSize,true,first);// first tick and label
ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;// special case for second tick and label
var distanceFromFirstToSecond=distanceModifier/ticksFrequency*ticksDistance;if(second.toString()!==that._drawMax.toString()&&distanceFromFirstToSecond<trackLength){// second item rendering
var secondItemHtmlValue=that._formatLabel(second.toString()),plotSecond=firstLabelSize<distanceFromFirstToSecond;currentTickAndLabel=this._addMajorTickAndLabel(secondItemHtmlValue,undefined,plotSecond,second,true);ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;}currentTickAndLabel=this.addMiddleMajorTicks(tickscount,ticksDistance,distanceFromFirstToSecond,distanceModifier,normalLayout,ticksFrequency);ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;currentTickAndLabel=this._addMajorTickAndLabel(lastLabelValue,lastLabelSize,true,last);// last tick and label
ticks+=currentTickAndLabel.tick;labels+=currentTickAndLabel.label;ticks+=this.addMinorTicks(normalLayout);that._measureLabelScale.removeChild(that._labelDummy);delete that._labelDummy;delete that._measureLabelScale;if(that.nodeName.toLowerCase()==='jqx-tank'){that._updateScaleWidth(this._longestLabelSize);}that._appendTicksAndLabelsToScales(ticks,labels);}/**
   * Adds the middle major ticks and their respective labels.
   */},{key:'addMiddleMajorTicks',value:function addMiddleMajorTicks(tickscount,ticksDistance,distanceFromFirstToSecond,distanceModifier,normalLayout,ticksFrequency){var that=this.context;var majorTicks='',majorLabels='';for(var _i51=1;_i51<tickscount;_i51++){var number=_i51*ticksDistance+distanceFromFirstToSecond,_value15=void 0;if(normalLayout){_value15=parseFloat(that._drawMin)+ticksFrequency*_i51+distanceModifier;}else{_value15=parseFloat(that._drawMax)-ticksFrequency*_i51-distanceModifier;}if(_value15.toString()!==that._drawMax.toString()){var htmlValue=that._formatLabel(_value15.toString()),plot=true;that._labelDummy.innerHTML=htmlValue;var dimensionValue=that._labelDummy[that._settings.size];if(number+dimensionValue>=tickscount*ticksDistance){// + 32 is an Experimental value
plot=false;}var currentTickAndLabel=this._addMajorTickAndLabel(htmlValue,undefined,plot,_value15,true);majorTicks+=currentTickAndLabel.tick;majorLabels+=currentTickAndLabel.label;}}return{tick:majorTicks,label:majorLabels};}/**
     * Adds minor ticks.
     */},{key:'addMinorTicks',value:function addMinorTicks(normalLayout){function getPreciseFraction(i){return parseFloat(i.toFixed(roundCoefficient));}function addMinorTick(i){if(tickValues.indexOf(i)===-1&&that._numericProcessor.getPreciseModulo(i,minorTicksInterval,moduloCoefficient)===0){minorTicks+='<div style="'+leftOrTop+': '+that._numericProcessor.valueToPx(i)+'px;" class="jqx-tick jqx-tick-minor"></div>';}}var that=this.context,tickValues=that._tickValues,nearestPowerOfTen=that._tickIntervalHandler.nearestPowerOfTen,minorTicksInterval=that._minorTicksInterval,roundCoefficient=Math.log10(nearestPowerOfTen)<0?Math.round(Math.abs(Math.log10(nearestPowerOfTen))):0,moduloCoefficient=Math.pow(10,roundCoefficient),leftOrTop=that._settings.leftOrTop;var firstTickValue=void 0,secondTickValue=void 0,lastTickValue=void 0,minorTicks='';if(normalLayout){firstTickValue=tickValues[0];secondTickValue=tickValues[1];lastTickValue=tickValues[tickValues.length-1];}else{firstTickValue=tickValues[tickValues.length-1];secondTickValue=tickValues[tickValues.length-2];lastTickValue=tickValues[0];}if(that.logarithmicScale){addMinorTickOnLogarithmicScale();}else{// minor ticks from the beginning to the second major tick
for(var _i52=secondTickValue;_i52>firstTickValue;_i52=getPreciseFraction(_i52-nearestPowerOfTen)){addMinorTick(_i52);}// minor ticks from the second major tick to the end
for(var _i53=getPreciseFraction(secondTickValue+nearestPowerOfTen);_i53<lastTickValue;_i53=getPreciseFraction(_i53+nearestPowerOfTen)){addMinorTick(_i53);}}function addMinorTickOnLogarithmicScale(){var trackLength=that._measurements.trackLength,partialTrackLength=trackLength/tickValues.length,modifierCoef=0.1;if(partialTrackLength<20){modifierCoef=1;}else if(partialTrackLength>=20&&partialTrackLength<40){modifierCoef=secondTickValue-firstTickValue>1?1:0.5;}else if(partialTrackLength>=40&&partialTrackLength<80){modifierCoef=0.2;}var nearestPowerOf10BelowMax=Math.floor(that._drawMax),distanceToNearestPowerOf10=that._drawMax-nearestPowerOf10BelowMax,ticksOnPowerOf10=that._drawMax-that._drawMin>tickValues.length;for(var j=that._drawMax;j>that._drawMin-1;j=j-1){var range=distanceToNearestPowerOf10>0?Math.pow(10,j-distanceToNearestPowerOf10+1):Math.pow(10,j),modifier=range*modifierCoef;for(var _i54=range;_i54>0;_i54=_i54-modifier){if(_i54<that.max&&_i54>that.min){var _value16=new JQX.Utilities.BigNumber(Math.log10(_i54));if(_value16%1===0&&ticksOnPowerOf10||!ticksOnPowerOf10){minorTicks+='<div style="'+leftOrTop+': '+that._numericProcessor.valueToPx(_value16)+'px;" class="jqx-tick jqx-tick-minor"></div>';}}}}}return minorTicks;}/**
     * Validates custom ticks.
     */},{key:'validateCustomTicks',value:function validateCustomTicks(){var that=this.context;var validCustomTicks=[];for(var _i55=0;_i55<that.customTicks.length;_i55++){var currentTick=that.customTicks[_i55],currentTickObject=this.createDescriptor(currentTick);if(currentTickObject>=that._minObject&&currentTickObject<=that._maxObject){validCustomTicks.push(currentTickObject.toString());}}validCustomTicks.sort(function(a,b){return a-b;});validCustomTicks=validCustomTicks.filter(function(element,index,array){return!index||element!==array[index-1];});that.customTicks=validCustomTicks.slice(0);}/**
     * Plots the Gauge's ticks and labels.
     */},{key:'addGaugeTicksAndLabels',value:function addGaugeTicksAndLabels(){var that=this.context,numericProcessor=this,maxLabelHeight=Math.max(that._tickIntervalHandler.labelsSize.minLabelSize,that._tickIntervalHandler.labelsSize.maxLabelSize),majorStep=that._majorTicksInterval,minorStep=that._minorTicksInterval,majorTickValues={},distance=that._distance,radius=that._measurements.radius,majorTickWidth=radius-distance.majorTickDistance,minorTickWidth=radius-distance.minorTickDistance;var drawMajor=void 0,drawMinor=void 0,addLabel=void 0,currentAngle=void 0,angleAtMin=void 0,angleAtMax=void 0;if(that.ticksVisibility!=='none'&&that._plotTicks!==false){drawMajor=function drawMajor(angle){that._drawTick(angle,majorTickWidth,'major');};drawMinor=function drawMinor(value){that._drawTick(numericProcessor.getAngleByValue(value,true),minorTickWidth,'minor');};}else{drawMajor=function drawMajor(){};drawMinor=function drawMinor(){};}if(that.labelsVisibility!=='none'&&that._plotLabels!==false){addLabel=function addLabel(angle,currentLabel,middle){that._drawLabel(angle,currentLabel,distance.labelDistance,middle);};}else{addLabel=function addLabel(){};}if(!that.inverted){angleAtMin=that.endAngle;angleAtMax=that.startAngle;}else{angleAtMin=that.startAngle;angleAtMax=that.endAngle;}// first major tick and label
currentAngle=numericProcessor.getAngleByValue(that._drawMin,false);drawMajor(currentAngle);majorTickValues[that._drawMin]=true;addLabel(currentAngle,that.min,false);var second=that._drawMin-numericProcessor.getPreciseModulo(that._drawMin,majorStep),firstMinTick=void 0;if(that._drawMin>=0){second+=majorStep;}// determines the value at the first minor tick
for(var _i56=second;_i56>=that._drawMin;_i56=_i56-minorStep){firstMinTick=_i56;}// second major tick and label
currentAngle=numericProcessor.getAngleByValue(second,false);drawMajor(currentAngle);majorTickValues[second]=true;if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMin,numericProcessor.getAngleByValue(second,false,true))/360)>maxLabelHeight){addLabel(currentAngle,this.getActualValue(second),second<that._drawMax);}var i=void 0;// middle major ticks and labels
for(i=second+majorStep;i<that._drawMax-majorStep;i+=majorStep){currentAngle=numericProcessor.getAngleByValue(i,false);drawMajor(currentAngle);majorTickValues[i]=true;addLabel(currentAngle,this.getActualValue(i),true);}if(majorTickValues[i]===undefined&&i<=that._drawMax){// second-to-last major tick and label
currentAngle=numericProcessor.getAngleByValue(i,false);drawMajor(currentAngle);majorTickValues[i]=true;if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMax,numericProcessor.getAngleByValue(i,false,true))/360)>=maxLabelHeight){addLabel(currentAngle,this.getActualValue(i),true);}if(that._normalizedStartAngle!==that.endAngle){// last major tick and label
currentAngle=numericProcessor.getAngleByValue(that._drawMax,false);drawMajor(currentAngle);majorTickValues[that._drawMax]=true;if(2*Math.PI*that._measurements.innerRadius*(this._getAngleDifference(angleAtMax,angleAtMin)/360)>=maxLabelHeight){addLabel(currentAngle,that.max,false);}}}// minor ticks
if(!that.logarithmicScale){for(var j=firstMinTick;j<that._drawMax;j+=minorStep){if(majorTickValues[j]){continue;// does not plot minor ticks over major ones
}drawMinor(j);}}else{this.drawGaugeLogarithmicScaleMinorTicks(majorTickValues,majorStep,drawMinor);}}/**
     * Sets toolTip's value and updates the value of the element.
     */},{key:'updateToolTipAndValue',value:function updateToolTipAndValue(value,oldValue,changeValue){var that=this.context,logarithmicScale=that.logarithmicScale;that._updateTooltipValue(value);if(logarithmicScale){value=parseFloat(Math.pow(10,parseFloat(value)).toFixed(11));}var stringifiedValue=value.toString();that._number=value;that._drawValue=logarithmicScale?Math.log10(stringifiedValue):value;// eslint-disable-next-line
if(stringifiedValue!==oldValue&&changeValue){that.value=that._discardDecimalSeparator(stringifiedValue);if(!that._programmaticValueIsSet){that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}if(that.$.hiddenInput){that.$.hiddenInput.value=that.value;}}}/**
     * Validates the interval property.
     */},{key:'validateInterval',value:function validateInterval(interval){var that=this.context,range=that._maxObject-that._minObject;that._validInterval=Math.min(parseFloat(interval),range);that.interval=that._validInterval;}/**
     * Returns a coerced value based on the interval.
     */},{key:'getCoercedValue',value:function getCoercedValue(value,useDrawVariables,logarithmicGauge){var that=this.context;if(!that.coerce){return value;}var normalScale=!that.logarithmicScale,minValue=void 0,maxValue=void 0;if(that.customInterval){var customTicks=that.customTicks;if(customTicks.length===0){return value;}normalScale=normalScale||logarithmicGauge;if(useDrawVariables!==false){minValue=parseFloat(that._drawMin);}else{minValue=that._minObject;}var difference=Math.abs(minValue-value),closestValue=minValue;for(var _i57=0;_i57<customTicks.length;_i57++){var currentTickObject=this.createDescriptor(customTicks[_i57]),currentTickValue=normalScale?currentTickObject:Math.log10(currentTickObject),currentDifference=Math.abs(currentTickValue-value);if(currentDifference<difference){difference=currentDifference;closestValue=currentTickValue;}}return closestValue;}if(useDrawVariables!==false){minValue=parseFloat(that._drawMin);maxValue=parseFloat(that._drawMax);}else{minValue=parseFloat(that.min);maxValue=parseFloat(that.max);}var noMin=value-minValue,remainder=this.getPreciseModulo(noMin,parseFloat(that.interval)),coef=this.roundCoefficient;if(remainder===0){return value;}if(this.roundCoefficient===0){coef=12;}var lowerValue=parseFloat((noMin-remainder).toFixed(coef)),greaterValue=lowerValue+parseFloat(that.interval);if(that.max-that.min<=parseFloat(that.interval)&&normalScale){var min=minValue,max=maxValue;return value>=min+(max-min)/2?max:min;}if(Math.abs(noMin-lowerValue)<Math.abs(noMin-greaterValue)){return lowerValue+minValue;}else{var biggerValue=greaterValue+minValue;return biggerValue>maxValue?lowerValue+minValue:biggerValue;}}/**
       * Updates the value of the Tank and the "value" property and triggers the respective events.
       */},{key:'updateValue',value:function updateValue(value){var that=this.context,renderedValue=this.validate(value,that._minObject,that._maxObject),oldActualValue=that.value;if(value.toString()!==oldActualValue.toString()||that._scaleTypeChangedFlag){that.value=value.toString();that._number=renderedValue;if(!that._programmaticValueIsSet){that.$.fireEvent('change',{'value':that.value,'oldValue':oldActualValue});}}else{that.value=typeof value==='string'?value:value.toString();}that._drawValue=that.logarithmicScale?Math.log10(renderedValue).toString():renderedValue.toString();that._moveThumbBasedOnValue(that._drawValue);if(that.$.hiddenInput){that.$.hiddenInput.value=that.value;}}/**
     * Returns value per pixel.
     */},{key:'getValuePerPx',value:function getValuePerPx(range,pxRange){return parseFloat(range)/pxRange;}/**
     * Restricts the thumbs to not pass each other.
     */},{key:'restrictValue',value:function restrictValue(values){if(values[1]<values[0]){values[1]=values[0];}}/**
     * Locks the Gauge's interaction with the mouse.
     */},{key:'lockRotation',value:function lockRotation(directionCondition,newValue){var that=this.context;if(directionCondition&&newValue<that._number){that._lockCW=true;if(newValue<that._maxObject){return that._maxObject;}}else if(!directionCondition&&newValue>that._number){that._lockCCW=true;if(newValue>that._minObject){return that._minObject;}}}/**
     * Gets the angle-range coefficient.
     */},{key:'getAngleRangeCoefficient',value:function getAngleRangeCoefficient(){var that=this.context;that._angleRangeCoefficient=that._angleDifference/that._range;}}]);return DecimalNumericProcessor;}(JQX.Utilities.BaseNumericProcessor));/**
 * A class for processesing complex numbers.
 */JQX.Utilities.Assign('ComplexNumericProcessor',function(_JQX$Utilities$BaseNu3){babelHelpers.inherits(ComplexNumericProcessor,_JQX$Utilities$BaseNu3);function ComplexNumericProcessor(context,numericFormatProperty){babelHelpers.classCallCheck(this,ComplexNumericProcessor);var _this6=babelHelpers.possibleConstructorReturn(this,(ComplexNumericProcessor.__proto__||Object.getPrototypeOf(ComplexNumericProcessor)).call(this,context,numericFormatProperty));_this6.context=context;return _this6;}/**
     * Creates a Complex number descriptor.
     */babelHelpers.createClass(ComplexNumericProcessor,[{key:'createDescriptor',value:function createDescriptor(initialValue,supportsENotation,validateConstruction,validateMinMax,discardRadix,presetComplexNumber){var returnValue=void 0;if(presetComplexNumber){returnValue=presetComplexNumber;}else{if(initialValue.constructor===this.complexConstructor){returnValue=new this.complexConstructor(initialValue.realPart,initialValue.imaginaryPart);}else{returnValue=new this.complexConstructor(initialValue);}}if(validateMinMax){returnValue=this.validate(returnValue,this.context._minObject,this.context._maxObject);}return returnValue;}/**
     * Validates value.
     */},{key:'validate',value:function validate(initialValue,min,max){var returnValue=initialValue;if(min!==-Infinity){if(this.compareComplexNumbers(initialValue,min)===-1){returnValue=new this.complexConstructor(min.realPart,min.imaginaryPart);}}else if(max!==Infinity){if(this.compareComplexNumbers(initialValue,max)===1){returnValue=new this.complexConstructor(max.realPart,max.imaginaryPart);}}return returnValue;}/**
     * Complex number compare method.
     */},{key:'compare',value:function compare(initialValue,otherValue,thorough){if(thorough!==true){return this.compareComplexNumbers(initialValue,otherValue)!==0;}return this.compareComplexNumbers(initialValue,otherValue);}/**
     * Validates min/max.
     */},{key:'validateMinMax',value:function validateMinMax(validateMin,validateMax){var that=this.context;if(validateMin){if(that.min===null||that._regexSpecial.inf.test(that.min)){that.min=-Infinity;that._minObject=-Infinity;}else{that._minObject=new this.complexConstructor(that.min);}}if(validateMax){if(that.max===null||that._regexSpecial.inf.test(that.max)){that.max=Infinity;that._maxObject=Infinity;}else{that._maxObject=new this.complexConstructor(that.max);}}}/**
     * Increments/Decrements value. Keyboard navigation operations.
     */},{key:'incrementDecrement',value:function incrementDecrement(initialValue,operation){var returnValue=new this.complexConstructor(initialValue.realPart,initialValue.imaginaryPart),spinButtonsStepObject=this.context._spinButtonsStepObject;if(operation==='add'){returnValue.realPart+=spinButtonsStepObject.realPart;returnValue.imaginaryPart+=spinButtonsStepObject.imaginaryPart;}else{returnValue.realPart-=spinButtonsStepObject.realPart;returnValue.imaginaryPart-=spinButtonsStepObject.imaginaryPart;}return returnValue;}/**
     * Renders the value. Complex number renderer.
     */},{key:'render',value:function render(initialValue){var returnValue=initialValue;if(this.context._regexSpecial.nonNumericValue.test(initialValue)===false){var realPart=returnValue.realPart,imaginaryPart=returnValue.imaginaryPart,sign=void 0,significantDigits=this.context.significantDigits,precisionDigits=this.context.precisionDigits;if(imaginaryPart>=0){sign='+';}else{sign='-';imaginaryPart=Math.abs(imaginaryPart);}var realPartRenderer=new JQX.Utilities.NumberRenderer(realPart),imaginaryPartRenderer=new JQX.Utilities.NumberRenderer(imaginaryPart);if(this.context.scientificNotation){realPart=realPartRenderer.toScientific(significantDigits,precisionDigits);imaginaryPart=imaginaryPartRenderer.toScientific(significantDigits,precisionDigits);}else{realPart=realPartRenderer.toDigits(significantDigits,precisionDigits);imaginaryPart=imaginaryPartRenderer.toDigits(significantDigits,precisionDigits);}returnValue=realPart+' '+sign+' '+imaginaryPart+'i';}return returnValue;}/**
     * Complex number compare method.
     */},{key:'compareComplexNumbers',value:function compareComplexNumbers(left,right){if(left instanceof this.complexConstructor===false||right instanceof this.complexConstructor===false){// if at least one of the numbers is not an JQX.Utilities.Complex object, the numbers are different
return-1;}var leftReal=left.realPart,rightReal=right.realPart;if(leftReal<rightReal){return-1;}else if(leftReal>rightReal){return 1;}else{var leftImaginary=left.imaginaryPart,rightImaginary=right.imaginaryPart;if(leftImaginary<rightImaginary){return-1;}else if(leftImaginary>rightImaginary){return 1;}else{return 0;}}}}]);return ComplexNumericProcessor;}(JQX.Utilities.BaseNumericProcessor));JQX.Utilities.Assign('NumberRenderer',function(){function NumberRenderer(numericValue){babelHelpers.classCallCheck(this,NumberRenderer);var that=this;that.numericValue=numericValue;that.powersToPrefixes={'24':'Y','21':'Z','18':'E','15':'P','12':'T','9':'G','6':'M','3':'k','0':'','-2':'c','-3':'m','-6':'u','-9':'n','-12':'p','-15':'f','-18':'a','-21':'z','-24':'y'};// dummy localization object
that.localizationObject={currencysymbol:'$',currencysymbolposition:'before',decimalseparator:'.',thousandsseparator:',',defaultPrecision:2};}babelHelpers.createClass(NumberRenderer,[{key:'isENotation',value:function isENotation(value){return new RegExp(/e/i).test(value);}/**
     * Converts a large exponential value to its decimal representation (used when "inputFormat" is 'integer').
     */},{key:'largeExponentialToDecimal',value:function largeExponentialToDecimal(exponential){var validateExponent=void 0;if(exponential===undefined){exponential=this.numericValue;validateExponent=true;}var stringExponential=exponential.toString().toLowerCase(),indexOfE=stringExponential.indexOf('e'),mantissa=new JQX.Utilities.BigNumber(stringExponential.slice(0,indexOfE)),sign=stringExponential.slice(indexOfE+1,indexOfE+2);if(sign!=='+'&&sign!=='-'){stringExponential=stringExponential.slice(0,indexOfE)+'e+'+stringExponential.slice(indexOfE+1);sign='+';}var exponent=stringExponential.slice(indexOfE+2),bigTen=new JQX.Utilities.BigNumber(10),multyplyBy=bigTen.pow(sign+(validateExponent?Math.min(20,exponent):exponent)),result=mantissa.multiply(multyplyBy);return result.toString();}/**
     * Converts a BigNumber integer value to an exponential value
     */},{key:'bigNumberToExponent',value:function bigNumberToExponent(significantDigits,forceExponentialResult){var value=this.numericValue;if(value.constructor!==JQX.Utilities.BigNumber){value=new JQX.Utilities.BigNumber(value);}var numberLength=value._f;var numericString=value.toString();if(numberLength<=10){// 32-bit or lower
if(forceExponentialResult){return parseFloat(numericString).toExponential(significantDigits!==null?significantDigits-1:undefined);}else{return new JQX.Utilities.NumberRenderer(parseFloat(numericString)).toDigits(significantDigits);}}else{// 64-bit
if(significantDigits>=numberLength&&!forceExponentialResult){return numericString;}else{var sign=void 0;if(value._s===false){sign='';}else{sign='-';numericString=numericString.slice(1);}var nextDigit=parseFloat(numericString.slice(significantDigits,significantDigits+1));if(nextDigit>=5){numericString=new JQX.Utilities.BigNumber(numericString.slice(0,significantDigits)).add(1).toString();}var digitsAfterDecimalSeparator=numericString.slice(1,significantDigits);if(forceExponentialResult){significantDigits--;if(digitsAfterDecimalSeparator.length>0&&significantDigits>digitsAfterDecimalSeparator.length){digitsAfterDecimalSeparator=digitsAfterDecimalSeparator+'0'.repeat(significantDigits-digitsAfterDecimalSeparator.length);}else if(digitsAfterDecimalSeparator.length===0){digitsAfterDecimalSeparator='0'.repeat(significantDigits);}}else{while(digitsAfterDecimalSeparator.length>0&&digitsAfterDecimalSeparator.charAt(digitsAfterDecimalSeparator.length-1)==='0'){digitsAfterDecimalSeparator=digitsAfterDecimalSeparator.slice(0,digitsAfterDecimalSeparator.length-1);}}var decimalSeparator=digitsAfterDecimalSeparator.length>0?'.':'',power=numberLength-1;return sign+numericString.slice(0,1)+decimalSeparator+digitsAfterDecimalSeparator+'E+'+power;}}}/**
     * Converts a plain number to scientific notation.
     */},{key:'toScientific',value:function toScientific(){var that=this;var exponentialValue=void 0;if(that.numericValue._d){exponentialValue=that.bigNumberToExponent(arguments[0]!==null?arguments[0]:arguments[1]+1,true).toLowerCase();}else{exponentialValue=Number(that.numericValue.toString()).toExponential();}var indexOfE=exponentialValue.indexOf('e'),power=exponentialValue.slice(indexOfE+1);var coefficient=parseFloat(exponentialValue.slice(0,indexOfE));if(power==='-2'){return coefficient+'c';}var remainderPower=parseInt(power,10)%3;if(remainderPower>0){for(var _i58=0;_i58<remainderPower;_i58++){coefficient=coefficient*10;}}else if(remainderPower<0){var ignored=JQX.Utilities.BigNumber.ignoreBigIntNativeSupport;JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=true;coefficient=parseFloat(new JQX.Utilities.BigNumber(coefficient).multiply(Math.pow(10,remainderPower)).toString());JQX.Utilities.BigNumber.ignoreBigIntNativeSupport=ignored;}if(power>0){var removeSign=coefficient>=0?0:1,floatFix=exponentialValue.slice(removeSign,indexOfE).length-remainderPower-2;if(floatFix>=0){coefficient=coefficient.toFixed(floatFix);}}var coefficientRenderer=new JQX.Utilities.NumberRenderer(coefficient);coefficient=coefficientRenderer.toDigits(arguments[0],arguments[1]);var finalPower=parseInt(power,10)-remainderPower,scientificValue=coefficient+that.powersToPrefixes[finalPower.toString()];return scientificValue;}/**
     * Converts a BigNumber to scientific notation.
     */},{key:'bigNumberToScientific',value:function bigNumberToScientific(){var that=this,power=that.numericValue._f-1,remainderPower=parseInt(power,10)%3,finalPower=parseInt(power,10)-remainderPower;var stringRepresentation=that.numericValue.toString(),sign=void 0,scientificValue=void 0;if(stringRepresentation.charAt(0)==='-'){sign='-';stringRepresentation=stringRepresentation.slice(1);}else{sign='';}if(arguments[0]!==null){scientificValue=stringRepresentation.slice(0,arguments[0]);if(parseFloat(stringRepresentation.slice(arguments[0],arguments[0]+1))>=5){scientificValue=new JQX.Utilities.BigNumber(scientificValue).add(1).toString();}while(scientificValue.length>1+remainderPower&&scientificValue.charAt(scientificValue.length-1)==='0'){scientificValue=scientificValue.slice(0,scientificValue.length-1);}}else if(arguments[1]!==null){scientificValue=stringRepresentation.slice(0,arguments[1]+1);if(parseFloat(stringRepresentation.slice(arguments[1]+1,arguments[1]+2))>=5){scientificValue=new JQX.Utilities.BigNumber(scientificValue).add(1).toString();}if(arguments[1]+remainderPower>scientificValue.length-1){scientificValue=scientificValue+'0'.repeat(arguments[1]+remainderPower-scientificValue.length+1);}}if(scientificValue.length>1+remainderPower){scientificValue=scientificValue.slice(0,1+remainderPower)+'.'+scientificValue.slice(1+remainderPower);}return sign+scientificValue+that.powersToPrefixes[finalPower.toString()];}/**
     * Applies the significant digits or precision digits settings to the number.
     */},{key:'toDigits',value:function toDigits(significantDigits,precisionDigits){var that=this;var renderedValue=void 0;if(significantDigits!==null){renderedValue=that.applySignificantDigits(significantDigits);}else if(precisionDigits!==null){renderedValue=that.applyPrecisionDigits(precisionDigits);}else{renderedValue=that.applySignificantDigits(8);}return renderedValue;}/**
     * Returns the number with a specified number of significant digits.
     */},{key:'applySignificantDigits',value:function applySignificantDigits(significantDigits){var that=this;significantDigits=Math.max(1,Math.min(significantDigits,21));// removes insignificant trailing zeroes
function removeTrailingZeroes(value){while(value.charAt(value.length-1)==='0'){value=value.slice(0,-1);}if(value.charAt(value.length-1)==='.'){value=value.slice(0,-1);}return value;}var renderedValue=parseFloat(that.numericValue).toPrecision(significantDigits).toUpperCase();if(renderedValue.indexOf('.')!==-1){if(that.isENotation(renderedValue)){var indexOfDecimalSeparator=renderedValue.indexOf('.'),indexOfE=renderedValue.indexOf('E');var digitsAfterDecimalSeparator=renderedValue.slice(indexOfDecimalSeparator,indexOfE);digitsAfterDecimalSeparator=removeTrailingZeroes(digitsAfterDecimalSeparator);renderedValue=renderedValue.slice(0,indexOfDecimalSeparator)+digitsAfterDecimalSeparator+renderedValue.slice(indexOfE);}else{renderedValue=removeTrailingZeroes(renderedValue);}}return renderedValue;}/**
     * Returns the number with a specified number of precision digits.
     */},{key:'applyPrecisionDigits',value:function applyPrecisionDigits(precisionDigits){var that=this;precisionDigits=Math.max(0,Math.min(precisionDigits,20));var renderedValue=parseFloat(that.numericValue).toFixed(precisionDigits);if(that.isENotation(renderedValue)){renderedValue=that.largeExponentialToDecimal(renderedValue)+'.'+'0'.repeat(precisionDigits);}return renderedValue;}/**
     * Returns the logarithm of a value (for use in logarithmic scales).
     */},{key:'getLogarithm',value:function getLogarithm(base){var value=this.numericValue;var result=void 0;if(base===undefined){base=10;}if(base===10){try{result=Math.log10(value);}catch(error){result=Math.log(value)/Math.log(10);}}else{result=Math.log(value)/Math.log(base);}return result;}/**
     * Applies separators.
     */},{key:'applySeparators',value:function applySeparators(number,noThousandsSeparator){var that=this;number=number.toString();var dotIndex=number.indexOf('.');if(dotIndex!==-1){var integerPart=number.slice(0,dotIndex),fractionalPart=number.slice(dotIndex+1);return that.applyThousandsSeparator(integerPart,noThousandsSeparator)+that.localizationObject.decimalseparator+fractionalPart;}else{return that.applyThousandsSeparator(number,noThousandsSeparator);}}/**
     * Applies thousands separator.
     */},{key:'applyThousandsSeparator',value:function applyThousandsSeparator(number,noThousandsSeparator){if(noThousandsSeparator){return number;}var sign='';number=number.toString();if(number.charAt(0)==='-'){sign='-';number=number.slice(1);}var digits=number.split('').reverse();for(var _i59=2;_i59<digits.length-1;_i59+=3){digits[_i59]=this.localizationObject.thousandsseparator+digits[_i59];}digits.reverse();digits=digits.join('');return sign+digits;}/**
     * Returns a formatted representation of a number.
     */},{key:'formatNumber',value:function formatNumber(number,formatSpecifier,wordLength){var that=this;if(arguments[3]===undefined){delete that._ignoreMinus;}delete that._wordLengthNumber;if(!/^([a-zA-Z]\d*)$/g.test(formatSpecifier)){try{var _result7=that.applyCustomFormat(number,formatSpecifier);return _result7;}catch(error){return number.toString();}}var format=formatSpecifier.slice(0,1);var precision=formatSpecifier.slice(1);if(precision!==''){if(isNaN(parseFloat(precision))||parseFloat(precision)<0||parseFloat(precision)>99){precision='';}else if(parseFloat(precision)%1!==0){precision=Math.round(precision);}}if(number._d){that.inputFormat='integer';}else if(number.imaginaryPart){return that.formatComplexNumber(number,formatSpecifier,format,precision);}else{that.inputFormat='floatingPoint';}var numericProcessor=new JQX.Utilities.NumericProcessor(that,'inputFormat'),numericObject=numericProcessor.createDescriptor(number),result=void 0;that._wordLengthNumber=numericProcessor.getWordLength(wordLength?wordLength:'int32');if(that.inputFormat==='integer'){numericObject=numericProcessor.round(numericObject);}that.numericValue=numericObject;switch(format){case'C':case'c':// Currency
if(precision===''){precision=that.localizationObject.defaultPrecision;}precision=parseFloat(precision);if(that.inputFormat==='floatingPoint'){result=that.applyPrecisionDigits(precision);}else{result=numericObject.toString()+(precision>0?'.'+'0'.repeat(precision):'');}result=that.applySeparators(result);if(that.localizationObject.currencysymbolposition==='before'){if(result.charAt(0)==='-'){return'-'+that.localizationObject.currencysymbol+result.slice(1);}return that.localizationObject.currencysymbol+result;}return result+' '+that.localizationObject.currencysymbol;case'D':case'd':{// Decimal; integer-only
result=numericObject;if(that.inputFormat==='floatingPoint'){result=Math.round(numericObject);}result=result.toString();if(precision===''){return result;}var sign='';if(result.charAt(0)==='-'){sign='-';result=result.slice(1);}var difference=precision-result.length;if(difference>0){result='0'.repeat(difference)+result;}return sign+result;}case'E':case'e':case'U':case'u':{// Exponential (scientific)
if(precision===''){precision=6;}if(that.inputFormat==='floatingPoint'){result=numericObject.toExponential(precision);}else{result=that.bigNumberToExponent(parseFloat(precision)+1,true).toLowerCase();}var indexOfE=result.indexOf('e'),numbersInExponent=result.slice(indexOfE+2).length;if(numbersInExponent<3){result=result.slice(0,indexOfE+2)+'0'.repeat(3-numbersInExponent)+result.slice(indexOfE+2);}if(format.toLowerCase()==='u'){return that.exponentialToSuperscript(that.applySeparators(result,true));}if(format==='E'){result=result.toUpperCase();}return that.applySeparators(result,true);}case'F':case'f':case'N':case'n':// Fixed-point and Number
if(precision===''){precision=that.localizationObject.defaultPrecision;}precision=parseFloat(precision);if(that.inputFormat==='floatingPoint'){result=that.applyPrecisionDigits(precision);}else{result=numericObject.toString()+(precision>0?'.'+'0'.repeat(precision):'');}return that.applySeparators(result,format.toLowerCase()==='f');case'G':case'g':{// General
if(precision===''||precision==='0'){if(that.inputFormat==='floatingPoint'){precision=15;}else{switch(wordLength){case'int8':case'uint8':precision=3;break;case'int16':case'uint16':precision=5;break;case'int64':precision=19;break;case'uint64':precision=20;break;default:precision=10;}}}precision=parseFloat(precision);var scientificRepresentation=that.formatNumber(number,'E'+precision,wordLength),eIndex=scientificRepresentation.indexOf('E');var exponent=parseInt(scientificRepresentation.slice(eIndex+1),10);if(exponent>-5&&exponent<precision){if(that.inputFormat==='floatingPoint'){return that.applySeparators(that.applySignificantDigits(precision),true);}else{return numericObject.toString();}}// removes leading zero in exponent
if(exponent>-100&&exponent<100){scientificRepresentation=scientificRepresentation.slice(0,eIndex+2)+scientificRepresentation.slice(eIndex+3);}// removes trailing zeros
if(scientificRepresentation.indexOf(that.localizationObject.decimalseparator)!==-1){while(scientificRepresentation.charAt(eIndex-1)==='0'){scientificRepresentation=scientificRepresentation.slice(0,eIndex-1)+scientificRepresentation.slice(eIndex);eIndex=scientificRepresentation.indexOf('E');}if(scientificRepresentation.charAt(eIndex-1)===that.localizationObject.decimalseparator){scientificRepresentation=scientificRepresentation.slice(0,eIndex-1)+scientificRepresentation.slice(eIndex);}}if(format==='g'){scientificRepresentation=scientificRepresentation.toLowerCase();}return scientificRepresentation;}case'P':case'p':// Percent
if(precision===''){precision=that.localizationObject.defaultPrecision;}precision=parseFloat(precision);if(that.inputFormat==='floatingPoint'){that.numericValue=numericObject*100;result=that.applyPrecisionDigits(precision);}else{result=numericObject.multiply(100).toString()+(precision>0?'.'+'0'.repeat(precision):'');}return that.applySeparators(result)+' %';case'B':case'b':case'O':case'o':case'X':case'x':{// Binary, Octal, and Hexadecimal; integer-only
if(that.inputFormat!=='integer'){that.inputFormat='integer';numericProcessor=new JQX.Utilities.NumericProcessor(that,'inputFormat');numericObject=numericProcessor.round(numericProcessor.createDescriptor(number));}var radix=void 0;switch(format){case'B':case'b':radix=2;break;case'O':case'o':radix=8;break;default:radix=16;}result=numericObject.toString(radix,that._wordLengthNumber);if(precision!==''){var leadingZeros=parseFloat(precision)-result.length;if(leadingZeros>0){result='0'.repeat(leadingZeros)+result;}}if(format==='x'){result=result.toLowerCase();}return result;}case'S':case's':if(precision===''){precision=that.localizationObject.defaultPrecision;}precision=parseFloat(precision);return that.toScientific(null,precision).replace('.',that.localizationObject.decimalseparator);default:return number.toString();}}/**
     * Returns a formatted representation of a complex number.
     */},{key:'formatComplexNumber',value:function formatComplexNumber(number,formatSpecifier,format){var that=this;switch(format){case'E':case'e':case'U':case'u':case'F':case'f':case'G':case'g':case'N':case'n':case'S':case's':if(number.imaginaryPart>=0){return that.formatNumber(number.realPart,formatSpecifier)+' + '+that.formatNumber(number.imaginaryPart,formatSpecifier)+'i';}else{return that.formatNumber(number.realPart,formatSpecifier)+' - '+that.formatNumber(Math.abs(number.imaginaryPart),formatSpecifier)+'i';}default:return number.toString();}}/**
     * Returns a formatted representation of a number.
     */},{key:'toString',value:function toString(number,formatSpecifier,wordLength){if(formatSpecifier){return this.formatNumber(number,formatSpecifier,wordLength);}else{return number.toString();}}/**
     * Applies a custom number format.
     */},{key:'applyCustomFormat',value:function applyCustomFormat(number,formatSpecifier){var that=this;//formatSpecifier = formatSpecifier.replace(/_.|\[\w*\]|.\*|\*./g, '');
formatSpecifier=formatSpecifier.replace(/_.|\[\w*\]|\*/g,'');formatSpecifier=formatSpecifier.replace(/\?/g,'#');var sections=formatSpecifier.split(';');if(typeof number==='string'&&isNaN(number)){return sections[sections.length-1].replace(/"/g,'').replace(/@/g,number.toString());}if(number._d){that.inputFormat='integer';}else if(number.imaginaryPart){return number.toString();}else{number=parseFloat(number);that.inputFormat='floatingPoint';}var numericProcessor=new JQX.Utilities.NumericProcessor(that,'inputFormat'),numericObject=numericProcessor.createDescriptor(number);if(that.inputFormat==='integer'){numericObject=numericProcessor.round(numericObject);}that.numericProcessor=numericProcessor;var currentSection=that.getRelevantFormatSection(sections,numericObject);if(currentSection===undefined){return number.toString();}if(currentSection.indexOf('@')!==-1){return sections[sections.length-1].replace(/"/g,'').replace(/@/g,number.toString());}var percentage=currentSection.replace(/".*"/g,'').indexOf('%')!==-1,textParts=that.getTextParts(currentSection);if(textParts.main.toLowerCase().indexOf('e')!==-1){return that.applyCustomExponentialFormat(numericObject,textParts,numericProcessor);}if(textParts.main.indexOf('/')!==-1){return that.applyCustomFractionalFormat(numericObject,textParts,numericProcessor);}if(percentage){if(that.inputFormat==='integer'){numericObject=numericObject.multiply(100);}else{numericObject=numericObject*100;}}if(textParts.main===''){if(!percentage){return textParts.suffix;}var stringifiedNumber=numericObject.toString();if(that._ignoreMinus&&stringifiedNumber.charAt(0)==='-'){stringifiedNumber=stringifiedNumber.slice(1);}return stringifiedNumber+textParts.suffix;}var numberFormat=textParts.main.replace(/[^0#,. \/]/g,''),indexOfPoint=numberFormat.indexOf('.');if(indexOfPoint!==-1){numberFormat=numberFormat.substring(0,indexOfPoint+1)+numberFormat.substring(indexOfPoint+1).replace(/\./g,'');// removes unnecessary trailing zero
if(numberFormat.charAt(numberFormat.length-1)==='.'){numberFormat=numberFormat.slice(0,numberFormat.length-1);}if(indexOfPoint===0){numberFormat='#'+numberFormat;}}// scales the number down by 1000 for every trailing comma
while(numberFormat.charAt(numberFormat.length-1)===','){numberFormat=numberFormat.slice(0,numberFormat.length-1);if(that.inputFormat==='floatingPoint'){numericObject/=1000;}else{numericObject=numericObject.multiply(0.001);}}if(that.inputFormat==='integer'){numericObject=numericProcessor.round(numericObject);}var thousandsSeparator=numberFormat.indexOf(',')!==-1;numberFormat=numberFormat.replace(/,/g,'');var numberFormatParts=numberFormat.split('.'),wholePartFormat=numberFormatParts[0];var decimalPartFormat=numberFormatParts[1],result='';if(numberFormatParts.length===1){if(that.inputFormat==='floatingPoint'){numericObject=numericProcessor.round(numericObject);}result=numericObject.toString();return that.setTextParts(that.formatWholeNumber(result,wholePartFormat,thousandsSeparator),textParts);}result=numericObject.toString();var numberParts=result.split('.'),formattedWholeNumber=that.formatWholeNumber(numberParts[0],wholePartFormat,thousandsSeparator),decimalNumber=numberParts[1]||'';if(decimalPartFormat.length<=decimalNumber.length){result=parseFloat(numericObject.toFixed(decimalPartFormat.length)).toString();numberParts=result.split('.');formattedWholeNumber=that.formatWholeNumber(numberParts[0],wholePartFormat,thousandsSeparator);decimalNumber=numberParts[1]||'';if(decimalNumber){return that.setTextParts(formattedWholeNumber+that.localizationObject.decimalseparator+decimalNumber.slice(0,decimalPartFormat.length),textParts);}}decimalPartFormat=decimalPartFormat.slice(decimalNumber.length-decimalPartFormat.length);var lastZeroIndex=decimalPartFormat.lastIndexOf('0');if(lastZeroIndex===-1){if(decimalNumber===''){return that.setTextParts(formattedWholeNumber,textParts);}return that.setTextParts(formattedWholeNumber+that.localizationObject.decimalseparator+decimalNumber,textParts);}else{return that.setTextParts(formattedWholeNumber+that.localizationObject.decimalseparator+decimalNumber+'0'.repeat(lastZeroIndex+1),textParts);}}/**
     * Returns relevant section of custom format specifier.
     */},{key:'getRelevantFormatSection',value:function getRelevantFormatSection(sections,number){var that=this,compareResult=that.numericProcessor.compare(number,0,true);if(compareResult===1){return sections[0];}var negativeNumberGroup=void 0,zeroGroup=void 0;if(sections.length>=3){that._ignoreMinus=true;negativeNumberGroup=1;zeroGroup=2;}else if(sections.length===2){that._ignoreMinus=true;zeroGroup=0;negativeNumberGroup=1;}else if(sections.length===1){zeroGroup=0;negativeNumberGroup=0;}if(compareResult===0){return sections[zeroGroup];}if(compareResult===-1){return sections[negativeNumberGroup];}}/**
     * Gets text parts of custom number format.
     */},{key:'getTextParts',value:function getTextParts(currentSection){var withoutQuotedText=currentSection.replace(/"[^"]*"/g,''),quotedSections=currentSection.match(/"[^"]*"/g),firstMainIndex=withoutQuotedText.search(/0|#|\./g),lastMainIndex=Math.max(withoutQuotedText.lastIndexOf('0'),withoutQuotedText.lastIndexOf('#'),withoutQuotedText.lastIndexOf('.'),withoutQuotedText.lastIndexOf(',')),main=withoutQuotedText.slice(firstMainIndex,lastMainIndex+1);if(main===''){return{prefix:'',main:'',suffix:currentSection.replace(/"/g,'')};}var firstIndex=currentSection.indexOf(main),lastIndex=firstIndex+main.length;if(quotedSections){for(var _i60=0;_i60<quotedSections.length;_i60++){var sectionIndex=currentSection.indexOf(quotedSections[_i60]);if(firstIndex>=sectionIndex&&lastIndex<=sectionIndex+quotedSections[_i60].length){firstIndex=currentSection.indexOf(main,sectionIndex+quotedSections[_i60].length);lastIndex=firstIndex+main.length;}}}var prefix=currentSection.slice(0,firstIndex).replace(/"/g,''),suffix=currentSection.slice(lastIndex).replace(/"/g,'');return{prefix:prefix,main:main,suffix:suffix};}/**
     * Applies custom exponential format.
     */},{key:'applyCustomExponentialFormat',value:function applyCustomExponentialFormat(number,textParts,numericProcessor){var that=this;var format=textParts.main,result=void 0;var thousandsSeparator=format.indexOf(',')!==-1;// format validation - start
format=format.replace(/[^0#.eE+-]/g,'');var indexOfE=format.toLowerCase().indexOf('e');format=format.substring(0,indexOfE+1)+format.substring(indexOfE+1).replace(/[eE\.]/g,'');var eLetter=format.charAt(indexOfE),indexOfPoint=format.indexOf('.');if(indexOfPoint!==-1){format=format.substring(0,indexOfPoint+1)+format.substring(indexOfPoint+1).replace(/\./g,'');}if(format.charAt(format.length-1)==='.'){format=format.slice(0,format.length-1);}// format validation - end
var parts=format.split(eLetter);var firstPart=parts[0];var significantParts=firstPart.split('.'),significantPart1=significantParts[0],significantPart2=significantParts[1],secondPart=parts[1];var numberWholePart=number.toString().split('.')[0].replace(/-/,''),exponentModifier=0;if(numberWholePart==='0'&&numericProcessor.compare(number,0)){var difference=significantPart1.length-1;while(parseInt(number)===0){exponentModifier++;number*=10;}numberWholePart=number.toString().split('.')[0].replace(/-/,'');exponentModifier+=difference;number*=Math.pow(10,difference);}if(thousandsSeparator){firstPart=firstPart.slice(0,1)+','+firstPart.slice(1);}if(numberWholePart.length<=significantPart1.length){result=that.formatNumber(number,firstPart,undefined,true)+eLetter+that.formatExponent(0-exponentModifier,secondPart);}else{var exponent=numberWholePart.length-significantPart1.length;var visibleNumber=that.inputFormat==='floatingPoint'?number/Math.pow(10,exponent):number.divide(Math.pow(10,exponent));if(!significantPart2){var roundedVisibleNumber=that.applyThousandsSeparator(numericProcessor.round(visibleNumber).toString(),!thousandsSeparator);result=roundedVisibleNumber+eLetter+that.formatExponent(exponent-exponentModifier,secondPart);}var decimalPartofVisibleNumber=visibleNumber.toString().split('.')[1]||'';if(decimalPartofVisibleNumber.length===significantPart2.length){result=that.applySeparators(visibleNumber,!thousandsSeparator)+eLetter+that.formatExponent(exponent-exponentModifier,secondPart);}else if(decimalPartofVisibleNumber.length<significantPart2.length){result=that.formatNumber(visibleNumber,firstPart,undefined,true)+eLetter+that.formatExponent(exponent-exponentModifier,secondPart);}else{visibleNumber=that.inputFormat==='floatingPoint'?visibleNumber.toFixed(significantPart2.length):visibleNumber=numericProcessor.round(number.divide(Math.pow(10,exponent-significantPart2.length))).divide(Math.pow(10,significantPart2.length));result=that.formatNumber(parseFloat(visibleNumber),firstPart,undefined,true)+eLetter+that.formatExponent(exponent-exponentModifier,secondPart);}}return that.setTextParts(result,textParts);}/**
     * Formats exponent.
     */},{key:'formatExponent',value:function formatExponent(exponent,format){var sign=void 0;if(['+','-'].indexOf(format.charAt(0))!==-1){sign=format.charAt(0);if(exponent>0&&sign==='-'||exponent<0&&sign==='+'){sign=undefined;}}if(exponent<0){exponent=Math.abs(exponent);sign='-';}format=format.replace(/[+-]/g,'');exponent=this.formatNumber(exponent,format,undefined,true);return(sign?sign:'')+exponent;}/**
     * Formats a whole number.
     */},{key:'formatWholeNumber',value:function formatWholeNumber(wholeNumber,format,thousandsSeparator){var that=this;var sign='';if(wholeNumber.charAt(0)==='-'){if(!that._ignoreMinus){sign='-';}wholeNumber=wholeNumber.slice(1);}if(wholeNumber==='0'){if(format==='#'.repeat(format.length)){return sign;}wholeNumber='';}if(format.length<=wholeNumber.length){return sign+that.applyThousandsSeparator(wholeNumber,!thousandsSeparator);}format=format.slice(0,format.length-wholeNumber.length);for(var _i61=format.length-1;_i61>=0;_i61--){if(format.charAt(_i61)==='0'){wholeNumber='0'+''+wholeNumber;}}return sign+that.applyThousandsSeparator(wholeNumber,!thousandsSeparator);}/**
     * Sets prefix and suffix around formatted number.
     */},{key:'setTextParts',value:function setTextParts(result,textParts){return textParts.prefix+result+textParts.suffix;}/**
     * Applies custom format with fraction.
     */},{key:'applyCustomFractionalFormat',value:function applyCustomFractionalFormat(numericObject,textParts,numericProcessor){var that=this,regex=/^([0#,]+[ ]+)?([0#,]+\/[0#,]+)$/;var format=textParts.main.trim(),result=void 0;if(!regex.test(format)){return numericObject.toString();}var formatParts=regex.exec(format);formatParts[2]=formatParts[2].replace(/,/g,'');if(that.inputFormat==='integer'){var fractionFormatParts=formatParts[2].split('/');if(formatParts[1]===undefined){result=that.formatNumber(numericObject,fractionFormatParts[0],undefined,true)+'/'+that.formatNumber(1,fractionFormatParts[1],undefined,true);}else{result=that.formatNumber(numericObject,formatParts[1].trim(),undefined,true);if(formatParts[2].indexOf('0')!==-1){result+=' '+that.formatNumber(0,fractionFormatParts[0],undefined,true)+'/'+that.formatNumber(1,fractionFormatParts[1],undefined,true);}}return that.setTextParts(result,textParts);}if(formatParts[1]===undefined){result=(numericObject<0?'-':'')+that.formatAsFraction(Math.abs(numericObject),formatParts[2]);}else{var wholePartFormat=formatParts[1].trim(),decimalPartFormat=formatParts[2];result=that.formatNumber(parseInt(numericObject,10),wholePartFormat,undefined,true)+' '+that.formatAsFraction(numericProcessor.getPreciseModulo(Math.abs(numericObject),1),decimalPartFormat);}return that.setTextParts(result.trim(),textParts);}/**
     * Formats a decimal number as a fraction.
     */},{key:'formatAsFraction',value:function formatAsFraction(number,format){var that=this,formatParts=format.split('/');if(number===0){if(format.indexOf('0')===-1){return'';}return that.formatNumber(0,formatParts[0],undefined,true)+'/'+that.formatNumber(1,formatParts[1],undefined,true);}if(number%1===0){return that.formatNumber(number,formatParts[0],undefined,true)+'/'+that.formatNumber(1,formatParts[1],undefined,true);}var approximations=[];that.approximateFractions(number,approximations);var length=formatParts[1].length>=2?2:1;var bestApproximationDifference=[],bestApproximationIndex=[];approximations.forEach(function(approximation,index){var length=approximation.denominator.toString().length,currentDifference=Math.abs(number-approximation.numerator/approximation.denominator);if(bestApproximationDifference[length]===undefined){bestApproximationIndex[length]=index;bestApproximationDifference[length]=currentDifference;return;}if(currentDifference<bestApproximationDifference[length]){bestApproximationIndex[length]=index;bestApproximationDifference[length]=currentDifference;}});var bestApproximation=bestApproximationIndex[length]?approximations[bestApproximationIndex[length]]:approximations[bestApproximationIndex[1]];return that.formatNumber(bestApproximation.numerator,formatParts[0],undefined,true)+'/'+that.formatNumber(bestApproximation.denominator,formatParts[1],undefined,true);}/**
     * Approximates fractions.
     */},{key:'approximateFractions',value:function approximateFractions(d,approximations){var numerators=[0,1];var denominators=[1,0];var maxNumerator=this.getMaxNumerator(d);var d2=d;var calcD=void 0,prevCalcD=NaN;for(var _i62=2;_i62<1000;_i62++){var L2=Math.floor(d2);numerators[_i62]=L2*numerators[_i62-1]+numerators[_i62-2];if(Math.abs(numerators[_i62])>maxNumerator)return;denominators[_i62]=L2*denominators[_i62-1]+denominators[_i62-2];calcD=numerators[_i62]/denominators[_i62];if(calcD===prevCalcD)return;approximations.push({numerator:numerators[_i62],denominator:denominators[_i62]});if(calcD===d)return;prevCalcD=calcD;d2=1/(d2-L2);}}/**
     * Gets maximal numerator.
     */},{key:'getMaxNumerator',value:function getMaxNumerator(f){var f2=null;var ixe=f.toString().indexOf('E');if(ixe===-1)ixe=f.toString().indexOf('e');if(ixe===-1)f2=f.toString();else f2=f.toString().substring(0,ixe);var digits=null;var ix=f2.toString().indexOf('.');if(ix===-1)digits=f2;else if(ix===0)digits=f2.substring(1,f2.length);else if(ix<f2.length)digits=f2.substring(0,ix)+f2.substring(ix+1,f2.length);var L=digits;var numDigits=L.toString().length;var L2=f;var numIntDigits=L2.toString().length;if(L2===0)numIntDigits=0;var numDigitsPastDecimal=numDigits-numIntDigits;for(var _i63=numDigitsPastDecimal;_i63>0&&L%2===0;_i63--){L/=2;}for(var _i64=numDigitsPastDecimal;_i64>0&&L%5===0;_i64--){L/=5;}return L;}/**
     * Represents an exponential value with superscripts.
     */},{key:'exponentialToSuperscript',value:function exponentialToSuperscript(exponentialValue){var indexOfE=exponentialValue.indexOf('e'),power=exponentialValue.slice(indexOfE+1).replace(/0{1,2}/,'');var scientificValue=exponentialValue.slice(0,indexOfE+1);scientificValue=scientificValue.replace('e','×10');scientificValue+=this.toSuperscript(power);scientificValue=scientificValue.replace('+','');return scientificValue;}/**
     * Converts a number to superscript.
     */},{key:'toSuperscript',value:function toSuperscript(value,supToNormal){var chars='-0123456789',sup='⁻⁰¹²³⁴⁵⁶⁷⁸⁹';var result='';for(var _i65=0;_i65<value.length;_i65++){if(supToNormal===true){var m=sup.indexOf(value.charAt(_i65));result+=m!==-1?chars[m]:value[_i65];}else{var n=chars.indexOf(value.charAt(_i65));result+=n!==-1?sup[n]:value[_i65];}}return result;}}]);return NumberRenderer;}());JQX.Utilities.Assign('TickIntervalHandler',function(){function TickIntervalHandler(context,minLabel,maxLabel,labelClass,dimension,integer,logarithmic){babelHelpers.classCallCheck(this,TickIntervalHandler);var that=this;that.context=context;that.minLabel=minLabel;that.maxLabel=maxLabel;that.labelClass=labelClass;that.dimension=dimension;that.logarithmic=logarithmic;if(!context.customInterval){that.labelsSize=that.getMinAndMaxLabelSize();}else if(context.customTicks.length>0){that.labelsSize=that.getCustomTicksLabelSize();}else{that.labelsSize={minLabelSize:0,minLabelOtherSize:0,maxLabelSize:0,maxLabelOtherSize:0};}if(!integer){that.getNiceInterval=that.getNiceIntervalFloatingPoint;that.getPossibleBiggerLabel=that.getPossibleBiggerLabelFloatingPoint;}else{that.getNiceInterval=that.getNiceIntervalInteger;that.getPossibleBiggerLabel=that.getPossibleBiggerLabelInteger;}}babelHelpers.createClass(TickIntervalHandler,[{key:'getInterval',value:function getInterval(type,min,max,track){function getSectorArcLength(){var arcLength=2*Math.PI*radius*(Math.abs(context.startAngle-context.endAngle)/360);// for angles in degrees
//let arcLength = Math.abs(context.startAngle - context.endAngle) * radius; // for angles in radians
return Math.round(arcLength);}var context=this.context,radius=context._measurements.innerRadius;var largestLabelSize=void 0,multiplier=1;if(type==='radial'){largestLabelSize=Math.max(this.labelsSize.minLabelSize,this.labelsSize.minLabelOtherSize,this.labelsSize.maxLabelSize,this.labelsSize.maxLabelOtherSize);multiplier=1.35;//multiplier = 5.25 / Math.max(1, Math.log10(radius * 2)); // original formula: 5.25 / Math.Max(1.0, Math.Log10(panelLogicalSize.Height))
}else{largestLabelSize=Math.max(this.labelsSize.minLabelSize,this.labelsSize.maxLabelSize);multiplier=1.45;}largestLabelSize*=multiplier;var trackDimension=void 0;if(type==='radial'){trackDimension=getSectorArcLength();}else{trackDimension=context[this.dimension]-this.labelsSize.minLabelSize/2-this.labelsSize.maxLabelSize/2;// track[this.dimension];
}trackDimension=Math.max(10,trackDimension);var divisionCountEstimate=Math.ceil(trackDimension/largestLabelSize),minorDivisionCountEstimate=type==='radial'?divisionCountEstimate*4:divisionCountEstimate*3;var majorInterval=this.getNiceInterval(min,max,divisionCountEstimate,true),minorInterval=this.getNiceInterval(min,max,minorDivisionCountEstimate);context._cachedLabelsSize=this.labelsSize;if(divisionCountEstimate>2&&!context.customInterval){var possibleSecondLabel=this.getPossibleBiggerLabel(divisionCountEstimate,majorInterval);if(possibleSecondLabel.length>Math.max(this.minLabel.length,this.maxLabel.length)){var oldMinLabel=this.minLabel;this.minLabel=possibleSecondLabel;this.labelsSize=this.getMinAndMaxLabelSize();context._cachedLabelsSize=this.labelsSize;var adjustedResult=this.getInterval(type,min,max,track);this.minLabel=oldMinLabel;this.labelsSize=this.getMinAndMaxLabelSize();return adjustedResult;}}return{major:majorInterval,minor:minorInterval};}},{key:'getNiceIntervalFloatingPoint',value:function getNiceIntervalFloatingPoint(min,max,divisionCountEstimate,majorInterval){var rangeDelta=max-min,exponent=Math.floor(Math.log10(rangeDelta)-Math.log10(divisionCountEstimate));var nearestPowerOfTen=Math.pow(10,exponent),factor=divisionCountEstimate*nearestPowerOfTen;var niceFactor=void 0;if(rangeDelta<2*factor){niceFactor=1;}else if(rangeDelta<3*factor){niceFactor=2;}else if(rangeDelta<7*factor){niceFactor=5;}else{niceFactor=10;}var niceInterval=niceFactor*nearestPowerOfTen;if(majorInterval&&this.context._range/niceInterval>divisionCountEstimate){switch(niceFactor){case 5:niceFactor=10;break;case 2:niceFactor=5;break;case 1:niceFactor=2;break;}niceInterval=niceFactor*nearestPowerOfTen;}this.nearestPowerOfTen=nearestPowerOfTen;if(this.logarithmic&&majorInterval){return Math.max(1,niceInterval);}return niceInterval;}},{key:'getPossibleBiggerLabelFloatingPoint',value:function getPossibleBiggerLabelFloatingPoint(divisionCountEstimate,majorInterval){var context=this.context;var secondValue=parseFloat(context.min-context._numericProcessor.getPreciseModulo(parseFloat(context.min),majorInterval)+parseFloat(majorInterval)),currentDrawValue=secondValue,largestLabel=void 0,currentLabel=void 0;if(this.logarithmic){secondValue=Math.pow(10,secondValue);}largestLabel=context._formatLabel(secondValue);for(var _i66=1;_i66<divisionCountEstimate;_i66++){currentDrawValue=currentDrawValue+majorInterval;if(currentDrawValue>=context._drawMax){break;}if(!this.logarithmic){currentLabel=currentDrawValue;}else{currentLabel=Math.pow(10,currentDrawValue);}currentLabel=context._formatLabel(currentLabel);if(currentLabel.length>largestLabel.length){largestLabel=currentLabel;}}return largestLabel;}},{key:'getNiceIntervalInteger',value:function getNiceIntervalInteger(min,max,divisionCountEstimate,majorInterval){var rangeDelta=new JQX.Utilities.BigNumber(max).subtract(new JQX.Utilities.BigNumber(min)),exponent=Math.floor(Math.log10(rangeDelta.toString())-Math.log10(divisionCountEstimate)),nearestPowerOfTen=new JQX.Utilities.BigNumber(10).pow(new JQX.Utilities.BigNumber(exponent)),factor=new JQX.Utilities.BigNumber(divisionCountEstimate).multiply(nearestPowerOfTen);var niceFactor=void 0;if(rangeDelta.compare(new JQX.Utilities.BigNumber(2*factor))===-1){niceFactor=1;}else if(rangeDelta.compare(new JQX.Utilities.BigNumber(3*factor))===-1){niceFactor=2;}else if(rangeDelta.compare(new JQX.Utilities.BigNumber(7*factor))===-1){niceFactor=5;}else{niceFactor=10;}var niceInterval=new JQX.Utilities.BigNumber(niceFactor).multiply(nearestPowerOfTen);if(majorInterval&&new JQX.Utilities.BigNumber(this.context._range).divide(niceInterval).compare(divisionCountEstimate)===1){switch(niceFactor){case 5:niceFactor=10;break;case 2:niceFactor=5;break;case 1:niceFactor=2;break;}niceInterval=new JQX.Utilities.BigNumber(niceFactor).multiply(nearestPowerOfTen);}if(niceInterval.compare(1)===-1){niceInterval=new JQX.Utilities.BigNumber(1);}this.nearestPowerOfTen=nearestPowerOfTen;return niceInterval;}},{key:'getPossibleBiggerLabelInteger',value:function getPossibleBiggerLabelInteger(divisionCountEstimate,majorInterval){var context=this.context,bigTen=new JQX.Utilities.BigNumber(10);var secondValue=new JQX.Utilities.BigNumber(context.min).subtract(new JQX.Utilities.BigNumber(context.min).mod(majorInterval)).add(majorInterval),currentDrawValue=secondValue,largestLabel=void 0,currentLabel=void 0;if(this.logarithmic){secondValue=bigTen.pow(secondValue);}largestLabel=context._formatLabel(secondValue);for(var _i67=1;_i67<divisionCountEstimate;_i67++){currentDrawValue=currentDrawValue.add(majorInterval);if(currentDrawValue.compare(context._drawMax)!==-1){break;}if(!this.logarithmic){currentLabel=currentDrawValue;}else{currentLabel=bigTen.pow(currentDrawValue);}currentLabel=context._formatLabel(currentLabel);if(currentLabel.length>largestLabel.length){largestLabel=currentLabel;}}return largestLabel;}},{key:'getMinAndMaxLabelSize',value:function getMinAndMaxLabelSize(){var that=this,context=that.context,container=context.$.container,measureLabel=document.createElement('span');measureLabel.className=that.labelClass;measureLabel.style.position='absolute';measureLabel.style.visibility='hidden';container.appendChild(measureLabel);measureLabel.innerHTML=that.minLabel;var minLabelSize=measureLabel[that.dimension],minLabelOtherSize=measureLabel[context._settings.otherSize];measureLabel.innerHTML=that.maxLabel;var maxLabelSize=measureLabel[that.dimension],maxLabelOtherSize=measureLabel[context._settings.otherSize];container.removeChild(measureLabel);return{minLabelSize:minLabelSize,minLabelOtherSize:minLabelOtherSize,maxLabelSize:maxLabelSize,maxLabelOtherSize:maxLabelOtherSize};}},{key:'getCustomTicksLabelSize',value:function getCustomTicksLabelSize(){var that=this,context=that.context,container=context.$.container,measureLabel=document.createElement('span'),customTicks=context.customTicks;measureLabel.className=that.labelClass;measureLabel.style.position='absolute';measureLabel.style.visibility='hidden';container.appendChild(measureLabel);measureLabel.innerHTML=context._formatLabel(customTicks[0]);var labelSize=measureLabel[that.dimension],labelOtherSize=measureLabel[context._settings.otherSize];for(var _i68=1;_i68<context.customTicks.length;_i68++){measureLabel.innerHTML=context._formatLabel(context.customTicks[_i68]);var currentSize=measureLabel[that.dimension],currentOtherSize=measureLabel[context._settings.otherSize];if(currentSize>labelSize){labelSize=currentSize;}if(currentOtherSize>labelOtherSize){labelOtherSize=currentOtherSize;}}container.removeChild(measureLabel);return{minLabelSize:labelSize,minLabelOtherSize:labelOtherSize,maxLabelSize:labelSize,maxLabelOtherSize:labelOtherSize};}}]);return TickIntervalHandler;}());/**
* Button custom element.
*/JQX('jqx-button',function(_JQX$ContentElement){babelHelpers.inherits(Button,_JQX$ContentElement);function Button(){babelHelpers.classCallCheck(this,Button);return babelHelpers.possibleConstructorReturn(this,(Button.__proto__||Object.getPrototypeOf(Button)).apply(this,arguments));}babelHelpers.createClass(Button,[{key:'template',/** Button's template. */value:function template(){return'<button class=\'jqx-button\' inner-h-t-m-l=\'[[innerHTML]]\' id=\'button\' type=\'[[type]]\' name=\'[[name]]\' value=\'[[value]]\' disabled=\'[[disabled]]\' role=\'button\'></button>';}},{key:'focus',value:function focus(){var that=this;if(!that.$.button){HTMLElement.prototype.focus.call(that);return;}that.$.button.focus();}},{key:'blur',value:function blur(){var that=this;if(!that.$.button){HTMLElement.prototype.blur.call(that);return;}that.$.button.blur();}},{key:'_upHandler',value:function _upHandler(event){var that=this;event.stopPropagation();that.$.setAttributeValue('active',false);}},{key:'_focusHandler',value:function _focusHandler(){var that=this;that.$.setAttributeValue('focus',true);}},{key:'_blurHandler',value:function _blurHandler(){var that=this;that.$.setAttributeValue('focus',false);}},{key:'_clickHandler',value:function _clickHandler(event){var that=this;if(that.clickMode!=='release'&&that.clickMode!=='pressAndRelease'||that.readonly){event.preventDefault();event.stopPropagation();}}},{key:'_downHandler',value:function _downHandler(event){var that=this;if(that.disabled){return;}//if (!that.enableShadowDOM) {
//    event.originalEvent.stopPropagation();
//}
if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(that,event.pageX,event.pageY);}that.$.setAttributeValue('active',true);if((that.clickMode==='press'||that.clickMode==='pressAndRelease')&&!that.readonly){var buttons='buttons'in event?event.buttons:event.which;that.$.fireEvent('click',{buttons:buttons,clientX:event.clientX,clientY:event.clientY,pageX:event.pageX,pageY:event.pageY,screenX:event.screenX,screenY:event.screenY});}}},{key:'_mouseEnterHandler',value:function _mouseEnterHandler(event){var that=this;if(that.readonly){return;}that.$button.setAttributeValue('hover',true);that.$.setAttributeValue('hover',true);if(that.clickMode==='hover'){var buttons='buttons'in event?event.buttons:event.which;that.$.fireEvent('click',{buttons:buttons,clientX:event.clientX,clientY:event.clientY,pageX:event.pageX,pageY:event.pageY,screenX:event.screenX,screenY:event.screenY});}}},{key:'_touchEndHandler',value:function _touchEndHandler(){var that=this;setTimeout(function(){that.$button.setAttributeValue('hover',false);that.$.setAttributeValue('hover',false);},300);}},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this;that.$button.setAttributeValue('hover',false);that.$.setAttributeValue('hover',false);}/**
* Called when a property is changed.
*/},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Button.prototype.__proto__||Object.getPrototypeOf(Button.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;if(propertyName==='disabled'){that._setFocusable();if(that.$button){that.$button.setAttributeValue('hover',false);}that.$.setAttributeValue('hover',false);if(that instanceof JQX.RepeatButton){that._stopRepeat();}}else if(propertyName==='unfocusable'){that._setFocusable();}}/**
     * Sets tab index 
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;var target=that.$.button?that.$.button:that;if(that.disabled||that.unfocusable){target.removeAttribute('tabindex');target.tabIndex=-1;return;}target.tabIndex=that.tabIndex>0?that.tabIndex:0;}},{key:'ready',value:function ready(){var that=this;babelHelpers.get(Button.prototype.__proto__||Object.getPrototypeOf(Button.prototype),'ready',this).call(this);that._setFocusable();}}],[{key:'properties',// Button's properties.
get:function get(){return{'value':{type:'string'},'name':{type:'string'},'type':{value:'button',type:'string'},'clickMode':{allowedValues:['hover','press','release','pressAndRelease'],type:'string',value:'release'}};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.button.css'];}},{key:'listeners',get:function get(){return{'button.down':'_downHandler','button.mouseenter':'_mouseEnterHandler','button.mouseleave':'_mouseLeaveHandler','button.touchend':'_touchEndHandler','button.click':'_clickHandler','button.up':'_upHandler','up':'_upHandler','button.focus':'_focusHandler','button.blur':'_blurHandler'};}}]);return Button;}(JQX.ContentElement));/**
* Repeat Button.
*/JQX('jqx-repeat-button',function(_JQX$Button){babelHelpers.inherits(RepeatButton,_JQX$Button);function RepeatButton(){babelHelpers.classCallCheck(this,RepeatButton);return babelHelpers.possibleConstructorReturn(this,(RepeatButton.__proto__||Object.getPrototypeOf(RepeatButton)).apply(this,arguments));}babelHelpers.createClass(RepeatButton,[{key:'_clickHandler',value:function _clickHandler(event){var that=this;if(that.clickMode!=='release'||that.preventDefaultClick||that.readonly||that.disabled){event.preventDefault();event.stopPropagation();that.preventDefaultClick=false;}}},{key:'_updateInBoundsFlag',value:function _updateInBoundsFlag(event){var that=this;that._isPointerInBounds=true;if(event.type==='mouseleave'){that._isPointerInBounds=false;that.$button.setAttributeValue('hover',false);that.$.setAttributeValue('hover',false);}else{that.$button.setAttributeValue('hover',true);that.$.setAttributeValue('hover',true);}var buttons='buttons'in event?event.buttons:event.which;if(buttons!==1){that._stopRepeat(event);}}},{key:'_startRepeat',value:function _startRepeat(event){var that=this;if(!that._initialTimer&&!that.readonly){that._initialTimer=setTimeout(function(){that._repeatTimer=setInterval(function(){if(that._isPointerInBounds){var buttons='buttons'in event?event.buttons:event.which;that.$.fireEvent('click',{buttons:buttons,clientX:event.clientX,clientY:event.clientY,pageX:event.pageX,pageY:event.pageY,screenX:event.screenX,screenY:event.screenY});that.preventDefaultClick=true;}},that.delay);},that.initialDelay);}}},{key:'_stopRepeat',value:function _stopRepeat(){var that=this;if(that.readonly){return;}that.$.setAttributeValue('active',false);if(that._repeatTimer){clearInterval(that._repeatTimer);that._repeatTimer=null;}if(that._initialTimer){clearTimeout(that._initialTimer);that._initialTimer=null;}}}],[{key:'properties',// button's properties.
get:function get(){return{'delay':{value:50,type:'number'},'initialDelay':{value:150,type:'number'}};}},{key:'listeners',get:function get(){return{'button.mousedown':'_startRepeat','button.mouseenter':'_updateInBoundsFlag','button.mouseleave':'_updateInBoundsFlag','document.mouseup':'_stopRepeat'};}}]);return RepeatButton;}(JQX.Button));/**
* Toggle Button.
*/JQX('jqx-toggle-button',function(_JQX$Button2){babelHelpers.inherits(ToggleButton,_JQX$Button2);function ToggleButton(){babelHelpers.classCallCheck(this,ToggleButton);return babelHelpers.possibleConstructorReturn(this,(ToggleButton.__proto__||Object.getPrototypeOf(ToggleButton)).apply(this,arguments));}babelHelpers.createClass(ToggleButton,[{key:'ready',/** Called when the element is ready. Used for one-time configuration of the ToggleButton. */value:function ready(){babelHelpers.get(ToggleButton.prototype.__proto__||Object.getPrototypeOf(ToggleButton.prototype),'ready',this).call(this);}/**
     * Overrides the inherited "click" handler of the inner button element.
     */},{key:'_buttonClickHandler',value:function _buttonClickHandler(){}},{key:'_buttonMouseLeaveHandler',value:function _buttonMouseLeaveHandler(){var that=this;that.removeAttribute('hover');}/**
     * Changes the check state on hover.
     */},{key:'_buttonMouseEnterHandler',value:function _buttonMouseEnterHandler(){var that=this;that.setAttribute('hover','');if(that.disabled||that.readonly||that.clickMode!=='hover'){return;}that._changeCheckState('pointer');that.focus();that._updateHidenInputNameAndValue();}/** Changes the check state wneh widget container is clicked. */},{key:'_documentUpHandler',value:function _documentUpHandler(){var that=this;if(!that._pressed){return;}that._pressed=false;if(that.disabled||that.readonly||that.clickMode==='press'){return;}that._changeCheckState('pointer');that.focus();that._updateHidenInputNameAndValue();}},{key:'_downHandler',value:function _downHandler(event){var that=this;if(that.disabled||that.readonly){return;}if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(that,event.pageX,event.pageY);}that._pressed=true;if(that.clickMode==='press'||that.clickMode==='pressAndRelease'){that._changeCheckState('pointer');that.$.fireEvent('click');that._updateHidenInputNameAndValue();}if(that.clickMode==='press'){event.preventDefault();event.stopPropagation();}}},{key:'_dragStartHandler',value:function _dragStartHandler(event){event.preventDefault();}/** Changes the check state when spacebar is pressed. */},{key:'_keyHandler',value:function _keyHandler(event){var that=this;if(that.disabled!==true&&!that.readonly&&event.keyCode===32){if(event.type==='keydown'){event.preventDefault();return;}if(that.switchMode==='none'){return;}that._changeCheckState('keyboard');that._updateHidenInputNameAndValue();}}/** Changes the check state. */},{key:'_changeCheckState',value:function _changeCheckState(changeType){var that=this;var oldValue=null;if(that.checked===null){that.checked=true;}else{oldValue=that.checked;that.checked=!that.checked;}that._handleTextSelection();that.$.fireEvent('change',{'value':that.checked,'oldValue':oldValue,changeType:changeType});}},{key:'_handleTextSelection',value:function _handleTextSelection(){var that=this;that.$.addClass('jqx-unselectable');if(that.timer){clearTimeout(that.timer);}that.timer=setTimeout(function(){return that.$.removeClass('jqx-unselectable');},500);}/**
    * Called when a property is changed.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(ToggleButton.prototype.__proto__||Object.getPrototypeOf(ToggleButton.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;if(propertyName==='checked'){that.$.fireEvent('change',{'value':newValue,'oldValue':oldValue,changeType:'api'});}switch(propertyName){case'trueTemplate':that._handleTemplate(true);break;case'falseTemplate':that._handleTemplate(false);break;case'indeterminateTemplate':that._handleTemplate();break;}}},{key:'_htmlBindOnInitialization',value:function _htmlBindOnInitialization(){var that=this;that._bindContentProperty('trueContent','jqx-true-content');that._bindContentProperty('falseContent','jqx-false-content');that._bindContentProperty('indeterminateContent','jqx-indeterminate-content');}},{key:'_bindContentProperty',value:function _bindContentProperty(propertyName,className){var that=this;if(!that.$[propertyName+'Container']){return;}var testElement=document.createElement('div');testElement.innerHTML=that.innerHTML;var elements=testElement.getElementsByClassName(className),element=void 0;if(elements.length>0){for(var _i69=0;_i69<elements.length;_i69++){element=elements[_i69];}}if(that[propertyName]===''){that[propertyName]=element===undefined?'':element.outerHTML;}that.$[propertyName+'Container'].innerHTML=that[propertyName];}},{key:'_updateContentProperties',value:function _updateContentProperties(){var that=this;update('trueContent');update('falseContent');update('indeterminateContent');function update(property){if(that.$[property+'Container']){that[property]=that.$[property+'Container'].innerHTML;}}}},{key:'_updateHidenInputValue',value:function _updateHidenInputValue(){var that=this;if(!that.$.hiddenInput){return;}var inputValue=void 0;if(that.checked===null){inputValue='null';}else if(that.checked===false){inputValue='off';}else{inputValue=that.value||'on';}that.$.hiddenInput.setAttribute('value',inputValue);}},{key:'_updateHidenInputName',value:function _updateHidenInputName(){var that=this;if(!that.$.hiddenInput){return;}var inputName=that.checked===false?'':that.name||'';that.$.hiddenInput.setAttribute('name',inputName);}},{key:'_updateHidenInputNameAndValue',value:function _updateHidenInputNameAndValue(){var that=this;that._updateHidenInputName();that._updateHidenInputValue();}/**
     * Apply a template to true/false/indeterminate states of the elements.
     */},{key:'_handleTemplate',value:function _handleTemplate(state,oldValue){var that=this;var template=void 0,templateTarget=void 0,value=void 0;if(state===true){template=that.trueTemplate;templateTarget=that.$.trueContentContainer;value=that.trueContent;}else if(state===false){template=that.falseTemplate;templateTarget=that.$.falseContentContainer;value=that.falseContent;}else{template=that.indeterminateTemplate;templateTarget=that.$.indeterminateContentContainer;value=that.indeterminateContent;}if(oldValue){templateTarget.innerHTML=value?value:'';}if(template===null||!template){return;}if(typeof template==='function'){template(templateTarget,{value:value});return;}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}template=document.getElementById(template);if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'template'}));return;}var content=template.content,childrenCount=content.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0,bindingDetails=[];for(var _i70=0;_i70<childrenCount;_i70++){bindingString=regex.exec(content.childNodes[_i70].innerHTML);while(bindingString){bindingDetails.push({childNodeIndex:_i70,bindingString:bindingString[0]});bindingString=regex.exec(content.childNodes[_i70].innerHTML);}}var bindingsCount=bindingDetails.length;var clone=document.importNode(template.content,true),bindingHolderElement=void 0,bindingStringsCount=void 0;for(var b=0;b<bindingsCount;b++){bindingHolderElement=clone.childNodes[bindingDetails[b].childNodeIndex];bindingStringsCount=bindingDetails.length;for(var _i71=0;_i71<bindingStringsCount;_i71++){bindingHolderElement.innerHTML=bindingHolderElement.innerHTML.replace(bindingDetails[b].bindingString,value);}}templateTarget.innerHTML='';for(var _i72=0;_i72<clone.childNodes.length;_i72++){if(clone.childNodes[_i72].outerHTML){templateTarget.innerHTML+=clone.childNodes[_i72].outerHTML;}}}}],[{key:'properties',// Toggle Button's properties.
get:function get(){return{'checked':{value:false,type:'boolean?'},'falseContent':{value:'',reflectToAttribute:false,type:'string'},'indeterminateContent':{value:'',reflectToAttribute:false,type:'string'},'indeterminate':{value:false,type:'boolean'},'trueContent':{value:'',reflectToAttribute:false,type:'string'},'indeterminateTemplate':{value:null,type:'any'},'trueTemplate':{value:null,type:'any'},'falseTemplate':{value:null,type:'any'},'type':{value:'toggle',type:'string',defaultReflectToAttribute:true,readonly:true}};}/**
    * Toggle Button's event listeners.
    */},{key:'listeners',get:function get(){return{'keydown':'_keyHandler','keyup':'_keyHandler','dragstart':'_dragStartHandler','button.click':'_buttonClickHandler','button.mouseenter':'_buttonMouseEnterHandler','button.mouseleave':'_buttonMouseLeaveHandler','document.up':'_documentUpHandler'};}}]);return ToggleButton;}(JQX.Button));/**
* CheckBox custom element.
*/JQX('jqx-check-box',function(_JQX$ToggleButton){babelHelpers.inherits(CheckBox,_JQX$ToggleButton);function CheckBox(){babelHelpers.classCallCheck(this,CheckBox);return babelHelpers.possibleConstructorReturn(this,(CheckBox.__proto__||Object.getPrototypeOf(CheckBox)).apply(this,arguments));}babelHelpers.createClass(CheckBox,[{key:'template',/** CheckBox's Html template. */value:function template(){return'<div id=\'container\' class=\'jqx-container\'>\n                 <div class =\'jqx-overlay\'></div>\n                 <span id=\'checkBoxInput\' class =\'jqx-input\'></span>\n                 <span id=\'checkBoxLabel\' inner-h-t-m-l=\'[[innerHTML]]\' class =\'jqx-label\'><content></content></span>\n                 <input id=\'hiddenInput\' class =\'jqx-hidden-input\' type=\'hidden\'>\n               </div>';}},{key:'_focusHandler',value:function _focusHandler(){var that=this;that.$.setAttributeValue('focus',true);}},{key:'_blurHandler',value:function _blurHandler(){var that=this;that.$.setAttributeValue('focus',false);}},{key:'_mouseEnterHandler',value:function _mouseEnterHandler(){var that=this;that.$.setAttributeValue('hover',true);}},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this;that.$.setAttributeValue('hover',false);}/** Called when the element is ready. Used for one-time configuration of the CheckBox. */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(CheckBox.prototype.__proto__||Object.getPrototypeOf(CheckBox.prototype),'ready',this).call(this);if(that.indeterminate){that._valueCashe=that.checked;that.checked=null;}that._updateHidenInputNameAndValue();}/**
  * Updates CheckBox when a property is changed.
  * @param {string} propertyName The name of the property.
  * @param {number/string} oldValue The previously entered value.
  * @param {number/string} newValue The new entered value.
  */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(CheckBox.prototype.__proto__||Object.getPrototypeOf(CheckBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;that._updateContentProperties();switch(propertyName){case'indeterminate':if(newValue){that._valueCashe=that.checked;that.checked=null;}else{that.checked=that._valueCashe;}that._updateHidenInputNameAndValue();break;case'value':that._updateHidenInputNameAndValue();break;case'checked':that._updateHidenInputNameAndValue();break;case'name':that._updateHidenInputName();break;}}/** Changes the check state on click. */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(!that._pressed){return;}that._pressed=false;that.$.setAttributeValue('active',false);if(that.disabled||that.readonly||that.checkMode==='input'&&target!==that.$.checkBoxInput||that.checkMode==='label'&&target!==that.$.checkBoxLabel){return;}if(that.clickMode==='press'){event.preventDefault();event.stopPropagation();return;}that._changeCheckState('pointer');that.focus();that._handleTextSelection();that._updateHidenInputNameAndValue();}/** Changes the check state on mouse down. */},{key:'_downHandler',value:function _downHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(that.disabled||that.readonly||that.checkMode==='input'&&target!==that.$.checkBoxInput||that.checkMode==='label'&&target!==that.$.checkBoxLabel){return;}that.$.setAttributeValue('active',true);if(that.hasRippleAnimation){var rect=that.$.checkBoxInput.getBoundingClientRect(),windowScrollX=window.scrollX||window.pageXOffset,windowScrollY=window.scrollY||window.pageYOffset;JQX.Utilities.Animation.Ripple.animate(that.$.checkBoxInput,rect.left+rect.width/2+windowScrollX,rect.top+rect.height/2+windowScrollY);}that._pressed=true;if(that.clickMode==='press'||that.clickMode==='pressAndRelease'){that._changeCheckState('pointer');that.$.fireEvent('click');that.focus();that._updateHidenInputNameAndValue();}}}],[{key:'properties',// CheckBox's properties.
get:function get(){return{'checkMode':{value:'both',allowedValues:['both','input','label'],type:'string'},'type':{value:'checkbox',type:'string',defaultReflectToAttribute:true,readonly:true}};}},{key:'listeners',get:function get(){return{'down':'_downHandler','document.up':'_documentUpHandler','checkBoxInput.mouseenter':'_mouseEnterHandler','checkBoxInput.mouseleave':'_mouseLeaveHandler','focus':'_focusHandler','blur':'_blurHandler'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.checkbox.css'];}}]);return CheckBox;}(JQX.ToggleButton));/**
* LED custom element.
*/JQX('jqx-led',function(_JQX$ToggleButton2){babelHelpers.inherits(Led,_JQX$ToggleButton2);function Led(){babelHelpers.classCallCheck(this,Led);return babelHelpers.possibleConstructorReturn(this,(Led.__proto__||Object.getPrototypeOf(Led)).apply(this,arguments));}babelHelpers.createClass(Led,[{key:'template',/** LED's Html template. */value:function template(){return'<div id=\'container\' class=\'jqx-container\'>\n                 <div id=\'ledAnimation\' class =\'jqx-animation\'></div>\n                 <div id=\'button\' class=\'jqx-input\'>\n                    <span id=\'falseContentContainer\' inner-h-t-m-l=\'[[falseContent]]\' class =\'jqx-false-content-container\'></span>\n                    <span id=\'indeterminateContentContainer\' inner-h-t-m-l=\'[[indeterminateContent]]\' class =\'jqx-indeterminate-content-container\'></span>\n                    <span id=\'trueContentContainer\' inner-h-t-m-l=\'[[trueContent]]\' class =\'jqx-true-content-container\'></span>\n                 </div>\n                 <input id=\'hiddenInput\' class =\'jqx-hidden-input\' type=\'hidden\'>\n               </div>';}/** Called when the element is ready. Used for one-time configuration of the Switch Button. */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(Led.prototype.__proto__||Object.getPrototypeOf(Led.prototype),'ready',this).call(this);that._htmlBindOnInitialization();if(that.indeterminate){that._valueCashe=that.checked;that.checked=null;}that._handleTemplate(true);that._handleTemplate(false);that._handleTemplate();that._updateHidenInputNameAndValue();}/**
   * Updates the LED when a property is  changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value.
   * @param {number/string} newValue The new entered value.
   */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Led.prototype.__proto__||Object.getPrototypeOf(Led.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'indeterminate':if(newValue){that._valueCashe=that.checked;that.checked=null;}else{that.checked=that._valueCashe;}that._updateHidenInputNameAndValue();break;case'trueContent':that.trueContent=newValue;that._handleTemplate(true);break;case'falseContent':that.falseContent=newValue;that._handleTemplate(false);break;case'indeterminateContent':that.indeterminateContent=newValue;that._handleTemplate();break;case'value':that._updateHidenInputNameAndValue();break;case'checked':that._updateHidenInputNameAndValue();break;case'name':that._updateHidenInputName();break;}}/** Changes the state wneh widget is clicked. */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;if(!that._pressed||that.readonly){return;}if(that.clickMode==='press'){event.preventDefault();event.stopPropagation();that._pressed=false;return;}babelHelpers.get(Led.prototype.__proto__||Object.getPrototypeOf(Led.prototype),'_documentUpHandler',this).call(this,event);that.indeterminate=false;that._updateHidenInputNameAndValue();that._pressed=false;}},{key:'_mouseDownHandler',value:function _mouseDownHandler(){var that=this;if(that.readonly||that.disabled){return;}that._pressed=true;if(that.clickMode==='press'||that.clickMode==='pressAndRelease'){that._changeCheckState('pointer');that.$.fireEvent('click');that.indeterminate=false;that._updateHidenInputNameAndValue();}}}],[{key:'properties',// LED's properties.
get:function get(){return{'shape':{value:'round',allowedValues:['round','square'],type:'string'}};}/**
   * CSS files needed for the element (ShadowDOM)
   */},{key:'styleUrls',get:function get(){return['jqx.led.css'];}}]);return Led;}(JQX.ToggleButton));/**
* Power Button custom element.
*/JQX('jqx-power-button',function(_JQX$ToggleButton3){babelHelpers.inherits(PowerButton,_JQX$ToggleButton3);function PowerButton(){babelHelpers.classCallCheck(this,PowerButton);return babelHelpers.possibleConstructorReturn(this,(PowerButton.__proto__||Object.getPrototypeOf(PowerButton)).apply(this,arguments));}babelHelpers.createClass(PowerButton,[{key:'template',/** PowerButton's Html template. */value:function template(){return'<div id=\'container\' class=\'jqx-container\'>\n                 <div id=\'powerButtonAnimation\' class =\'jqx-animation\'></div>\n                 <span id=\'button\' class =\'jqx-input\'></span>\n                 <input id=\'hiddenInput\' class =\'jqx-hidden-input\' type=\'hidden\'>\n               </div>';}/** Called when the element is ready. Used for one-time configuration of the PowerButton. */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(PowerButton.prototype.__proto__||Object.getPrototypeOf(PowerButton.prototype),'ready',this).call(this);that._updateHidenInputNameAndValue();}}],[{key:'styleUrls',/**
    * CSS files needed for the element (ShadowDOM)
    */get:function get(){return['jqx.powerbutton.css'];}}]);return PowerButton;}(JQX.ToggleButton));/**
* RadioButton custom element.
*/JQX('jqx-radio-button',function(_JQX$ToggleButton4){babelHelpers.inherits(RadioButton,_JQX$ToggleButton4);function RadioButton(){babelHelpers.classCallCheck(this,RadioButton);return babelHelpers.possibleConstructorReturn(this,(RadioButton.__proto__||Object.getPrototypeOf(RadioButton)).apply(this,arguments));}babelHelpers.createClass(RadioButton,[{key:'template',/** RadioButton's Html template. */value:function template(){return'<div  id=\'container\' class=\'jqx-container\'>\n                 <div class =\'jqx-overlay\'></div>\n                 <span id=\'radioButtonInput\' class =\'jqx-input\'></span>\n                 <span id=\'radioButtonLabel\' inner-h-t-m-l=\'[[innerHTML]]\' class =\'jqx-label\'><content></content></span>\n                 <input id=\'hiddenInput\' class =\'jqx-hidden-input\' type=\'hidden\'>\n               </div>';}},{key:'_radioMouseEnterHandler',value:function _radioMouseEnterHandler(){var that=this;that.$.setAttributeValue('hover',true);}},{key:'_radioMouseLeaveHandler',value:function _radioMouseLeaveHandler(){var that=this;that.$.setAttributeValue('hover',false);}},{key:'_focusHandler',value:function _focusHandler(){var that=this;that.$.setAttributeValue('focus',true);}},{key:'_blurHandler',value:function _blurHandler(){var that=this;that.$.setAttributeValue('focus',false);}},{key:'_mouseEnterHandler',value:function _mouseEnterHandler(){var that=this;that.$.setAttributeValue('hover',true);}},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this;that.$.setAttributeValue('hover',false);}/** Called when the element is ready. Used for one-time configuration of the RadioButton. */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(RadioButton.prototype.__proto__||Object.getPrototypeOf(RadioButton.prototype),'ready',this).call(this);that._handleMultipleCheckedInstances();that._updateHidenInputNameAndValue();}/**
     * Radio button down handler.
     */},{key:'_downHandler',value:function _downHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(that.disabled||that.readonly||that.checkMode==='input'&&target!==that.$.radioButtonInput||that.checkMode==='label'&&target!==that.$.radioButtonLabel){return;}that.$.setAttributeValue('active',true);if(that.hasRippleAnimation){var rect=that.$.radioButtonInput.getBoundingClientRect(),windowScrollX=window.scrollX||window.pageXOffset,windowScrollY=window.scrollY||window.pageYOffset;JQX.Utilities.Animation.Ripple.animate(that.$.radioButtonInput,rect.left+rect.width/2+windowScrollX,rect.top+rect.height/2+windowScrollY);}if(that._preventAction){that._preventAction=false;return;}if(that.clickMode==='release'||that.clickMode==='pressAndRelease'){that._pressed=true;}if(that.clickMode==='press'||that.clickMode==='pressAndRelease'){if(that.clickMode==='pressAndRelease'){if(that.groupName===''){that._checkedBeforeChange=that.parentNode.querySelector('jqx-radio-button[checked]');}else{that._checkedBeforeChange=document.querySelector('jqx-radio-button[group-name="'+that.groupName+'"][checked]');}}that._handleMouseInteraction();}}/**
     * Radio button mouseenter handler.
     */},{key:'_elementMouseEnterHandler',value:function _elementMouseEnterHandler(){var that=this;if(that.clickMode==='hover'&&!that.disabled&&!that.readonly){that._handleMouseInteraction();}}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(!that._pressed||that.disabled||that.readonly||that.checkMode==='input'&&target!==that.$.radioButtonInput||that.checkMode==='label'&&target!==that.$.radioButtonLabel){return;}if(that.clickMode==='release'){that._handleMouseInteraction();}else{// clickMode: 'pressAndRelease'
if(that._checkedBeforeChange===null){that.$.fireEvent('change',{'value':false,'oldValue':true,'changeType':'pointer'});that.checked=false;}else{that._checkedBeforeChange._changeCheckState('pointer');}that.focus();that._updateHidenInputNameAndValue();}that.$.setAttributeValue('active',false);that._pressed=false;}/**
     * Handles interaction with the mouse.
     */},{key:'_handleMouseInteraction',value:function _handleMouseInteraction(){var that=this;that._handleTextSelection();that._changeCheckState('pointer');that.focus();that._updateHidenInputNameAndValue();}/**
     * Reduce checked items in group to 1(latest selected item)
     */},{key:'_handleMultipleCheckedInstances',value:function _handleMultipleCheckedInstances(){var that=this,checkedRadioButtons=Array.from(document.querySelectorAll('jqx-radio-button[group-name="'+that.groupName+'"][checked]')),count=checkedRadioButtons.length;if(count<2){return;}checkedRadioButtons.forEach(function(item,i){return i<count-1&&(item.checked=false);});}/** Changes the check state. */},{key:'_changeCheckState',value:function _changeCheckState(changeType){var that=this;var radioButtonsGroup=document.querySelectorAll('jqx-radio-button[group-name="'+that.groupName+'"]');if(that.checked===true&&changeType==='api'||that.checked===false){if(radioButtonsGroup.length>0){that._changeCheckStateInGroup(radioButtonsGroup,changeType);}else{var parent=that.parentNode;radioButtonsGroup=parent.querySelectorAll('jqx-radio-button:not([group-name])');that._changeCheckStateInGroup(radioButtonsGroup,changeType);}}}/** Changes the check states in group of radio buttons. */},{key:'_changeCheckStateInGroup',value:function _changeCheckStateInGroup(elements,changeType){var that=this;for(var _i73=0;_i73<elements.length;_i73++){elements[_i73]._isUpdating=true;if(elements[_i73]===that){that.checked=true;that.$.fireEvent('change',{'value':true,'oldValue':false,'changeType':changeType});}else if(elements[_i73].checked){elements[_i73].checked=false;}elements[_i73]._isUpdating=false;}}/**
    * Updates the radio button/radio group when checked property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'value':that._updateHidenInputNameAndValue();break;case'checked':if(!that._isUpdating){that._changeCheckState('api');}that._updateHidenInputNameAndValue();break;case'name':that._updateHidenInputName();break;default:babelHelpers.get(RadioButton.prototype.__proto__||Object.getPrototypeOf(RadioButton.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}}],[{key:'properties',// RadioButton's properties.
get:function get(){return{'checkMode':{value:'both',allowedValues:['both','input','label'],type:'string'},'type':{value:'radio',type:'string',defaultReflectToAttribute:true,readonly:true},'groupName':{value:'',type:'string'}};}},{key:'listeners',get:function get(){return{'down':'_downHandler','document.up':'_documentUpHandler','mouseenter':'_elementMouseEnterHandler','radioButtonInput.mouseenter':'_radioMouseEnterHandler','radioButtonInput.mouseleave':'_radioMouseLeaveHandler','focus':'_focusHandler','blur':'_blurHandler'};}},{key:'styleUrls',get:function get(){return['jqx.radiobutton.css'];}}]);return RadioButton;}(JQX.ToggleButton));/**
* Switch Button custom element.
*/JQX('jqx-switch-button',function(_JQX$ToggleButton5){babelHelpers.inherits(SwitchButton,_JQX$ToggleButton5);function SwitchButton(){babelHelpers.classCallCheck(this,SwitchButton);return babelHelpers.possibleConstructorReturn(this,(SwitchButton.__proto__||Object.getPrototypeOf(SwitchButton)).apply(this,arguments));}babelHelpers.createClass(SwitchButton,[{key:'template',/** Switch Button's Html template. */value:function template(){return'<div  id=\'container\' class=\'jqx-container\'>\n                    <div  id=\'innerContainer\' class =\'jqx-inner-container\'>\n                           <span id=\'falseContentContainer\' inner-h-t-m-l=\'[[falseContent]]\' class =\'jqx-false-content-container\'></span>\n                           <span id=\'switchThumb\' class =\'jqx-thumb\'></span>\n                           <span id=\'trueContentContainer\' inner-h-t-m-l=\'[[trueContent]]\' class =\'jqx-true-content-container\'></span>\n                    </div>\n                    <input id=\'hiddenInput\' class =\'jqx-hidden-input\' type=\'hidden\'>\n               </div>';}/** Called when the element is ready. Used for one-time configuration of the Switch Button. */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(SwitchButton.prototype.__proto__||Object.getPrototypeOf(SwitchButton.prototype),'ready',this).call(this);var animationType=that.animation;if(that.hasAnimation){that.animation='none';}that._supportCSSVariables=JQX.Utilities.Core.CSSVariablesSupport()&&Boolean(window.getComputedStyle(that.$.container).getPropertyValue('--jqx-switch-button-default-width'));that._htmlBindOnInitialization();that._resizeHandler();that._initializePrivateVariables();that._getContainersSizeAndBreakPoint();if(that.indeterminate){that._valueCache=that.checked;that.checked=null;}that._handleTemplate(true);//Set the True Content
that._handleTemplate(false);//Set the False Content
that._handleTemplate();// Set the Indeterminate Content
that._updateHidenInputNameAndValue();that._updateThumbPosition();that.animation=animationType;}/** Changes the check state and fires event on mouse up. */},{key:'_mouseDownHandler',value:function _mouseDownHandler(event){var that=this;if(that.disabled||that.readonly||that.switchMode==='none'){return;}if(event.originalEvent.target.closest('.jqx-thumb')===that.$.switchThumb&&(that.switchMode==='default'||that.switchMode==='drag')){that._switchThumbDragStartHandler(event);}that._isSwitchClicked=that;that._updateContentProperties();if(that.clickMode!=='release'&&that.switchMode==='click'){that._updateStateOnClick();that.$.fireEvent('click');that.indeterminate=false;that._updateHidenInputNameAndValue();}}/** Changes the check state and updates CSS variables */},{key:'_updateStateOnClick',value:function _updateStateOnClick(){var that=this;that._changeCheckState();that.focus();}},{key:'_drag',value:function _drag(event){var that=this;if(!that._mouseDown){return;}if(JQX.Utilities.Core.isMobile){event.originalEvent.preventDefault();}that._switchThumbDragHandler(event);}/** Changes the check state wneh widget's thumb is dragged. */},{key:'_switchThumbDragStartHandler',value:function _switchThumbDragStartHandler(event){var that=this;if(that.disabled){return;}if(that.switchMode==='click'&&that.clickMode!=='release'){event.preventDefault();event.stopPropagation();}if(that._isInactiveOn('drag')){return;}that._mouseDown=true;that._getContainersSizeAndBreakPoint();that._pointerPosition=that.orientation==='vertical'?event.pageY:event.pageX;event.preventDefault();}},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that._mouseDown){event.preventDefault();}}/** Changes the check state wneh widget's thumb is dragged. */},{key:'_switchThumbDragHandler',value:function _switchThumbDragHandler(event){var that=this;if(that._isInactiveOn('drag')){return;}if(that._mouseDown===false){that._removeDragStyles();return;}if(!that.hasAttribute('dragged')){that.setAttribute('dragged','');}//delete that._isSwitchClicked;
var innerContainer=that.$.innerContainer,offset=that.$.container.getBoundingClientRect(),scrollDistance=that.orientation==='vertical'?document.body.scrollTop||document.documentElement.scrollTop:document.body.scrollLeft||document.documentElement.scrollLeft,containerOffset=that.orientation==='vertical'?offset.top+scrollDistance:offset.left+scrollDistance,diff=that.orientation==='vertical'?that._pointerPosition-innerContainer.offsetTop:that._pointerPosition-innerContainer.offsetLeft,pointerInRange=that._pointerPosition>=containerOffset&&that._pointerPosition<=containerOffset+that._switchContainerSize;var maxLeft=-1*(that.offsetWidth-that.$.switchThumb.offsetWidth),maxTop=-1*(that.offsetHeight-that.$.switchThumb.offsetHeight);that._pointerPosition=that.orientation==='vertical'?event.pageY:event.pageX;if(pointerInRange){var currentPosition=that._pointerPosition-diff;if(currentPosition<-that._switchTrackLength)currentPosition=-that._switchTrackLength;if(currentPosition>0)currentPosition=0;that.orientation==='vertical'?that.$.innerContainer.style.top=Math.max(maxTop,currentPosition)+'px':that.$.innerContainer.style.left=Math.max(maxLeft,currentPosition)+'px';}}/** Document Up Event Handler */},{key:'_switchThumbDropHandler',value:function _switchThumbDropHandler(){var that=this;if(that.hasAttribute('dragged')){that._endDrag();}else if(that._isSwitchClicked){that._endClick();}that._mouseDown=false;delete that._isSwitchClicked;}/**
     * Ends the dragging operation
     */},{key:'_endDrag',value:function _endDrag(){var that=this;that.indeterminate=false;that._updateHidenInputNameAndValue();if(that._isInactiveOn('drag')||!that._mouseDown){return;}that.removeAttribute('dragged');var switchOnPosition=that.orientation==='vertical'?that.$.innerContainer.offsetTop+that.$.switchThumb.offsetTop+that.$.switchThumb.clientHeight/2:that.$.innerContainer.offsetLeft+that.$.switchThumb.offsetLeft+that.$.switchThumb.clientWidth/2;var switchAfterBreakPoint=switchOnPosition>that._switchBreakPoint;if(that.checked!==null){if(!that.inverted===(switchAfterBreakPoint===that.checked)){that._changeCheckState(!that.checked);}}else{switchAfterBreakPoint?that._changeCheckState(that.inverted):that._changeCheckState(!that.inverted);}that._removeDragStyles();that._updateThumbPosition();}/**
     * Ends the click operation
     */},{key:'_endClick',value:function _endClick(){var that=this;//Click Handler
that._resizeHandler();if(that.disabled||that.readonly){return;}if(that._isInactiveOn('click')){return;}if(that.clickMode!=='release'&&that.clickMode!=='pressAndRelease'){//event.preventDefault();
//event.stopPropagation();
}else{that._updateStateOnClick();}that.indeterminate=false;that._updateHidenInputNameAndValue();}/**
    * Switch button onMouseEnter event handler.
    **/},{key:'_switchButtonOnMouseEnter',value:function _switchButtonOnMouseEnter(){var that=this;if(that.disabled||that.readonly){return;}that.$.addClass('hovered');}/**
    * Switch button onMouseLeave event handler.
    **/},{key:'_switchButtonOnMouseLeave',value:function _switchButtonOnMouseLeave(){var that=this;if(that.disabled||that.readonly){return;}that.$.removeClass('hovered');}/** Checks is handler active in particular switch mode. */},{key:'_isInactiveOn',value:function _isInactiveOn(switchMode){var that=this,isInactive=that.disabled||that.readonly||that.switchMode!==switchMode;if(that.switchMode==='default'){return false;}return isInactive;}/** Changes the check state wneh spacebar is pressed. */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this;if(that.disabled||that.readonly||event.keyCode!==32||that.switchMode==='none'){return;}that._getContainersSizeAndBreakPoint();that._changeCheckState();}/** Initializes private variables. */},{key:'_initializePrivateVariables',value:function _initializePrivateVariables(){var that=this;that._switchContainerSize=that._switchTrackLength=that._switchBreakPoint=that._pointerPosition=0;that._mouseDown=false;}/** Changes the check state. */},{key:'_changeCheckState',value:function _changeCheckState(optionalValue){var that=this;var oldValue=that.checked;if(oldValue===null&&optionalValue!==undefined){that.$.fireEvent('change',{'value':optionalValue,'oldValue':null});that.checked=optionalValue;that._updateThumbPosition();return;}if(that.checked===null){that.checked=true;}else{that.checked=!that.checked;}that._updateThumbPosition();that.$.fireEvent('change',{'value':that.checked,'oldValue':oldValue});that._updateHidenInputNameAndValue();}/**
    * Get the actual width of the Switch Button and Switch Button's breakpoint.
    */},{key:'_getContainersSizeAndBreakPoint',value:function _getContainersSizeAndBreakPoint(){var that=this;that._switchContainerSize=that.orientation==='vertical'?that.$.container.clientHeight:that.$.container.clientWidth;that._switchTrackLength=that.orientation==='vertical'?that._switchContainerSize-that.$.switchThumb.clientHeight:that._switchContainerSize-that.$.switchThumb.clientWidth;that._switchBreakPoint=that._switchContainerSize/2;}/**
    * Remove styles, related to absolute positioning of the thumb when it's dragged
    */},{key:'_removeDragStyles',value:function _removeDragStyles(){var that=this;that._supportCSSVariables?that.$.innerContainer.removeAttribute('style'):that.$.innerContainer.style.left='';that._supportCSSVariables?that.$.innerContainer.removeAttribute('style'):that.$.innerContainer.style.top='';that._mouseDown=false;}/**
    * Called when a property is changed.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;babelHelpers.get(SwitchButton.prototype.__proto__||Object.getPrototypeOf(SwitchButton.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);that._updateContentProperties();switch(propertyName){case'indeterminate':if(newValue){that._valueCache=that.checked;that.checked=null;}else{that.checked=that._valueCache;}break;case'trueContent':that.trueContent=newValue;break;case'falseContent':that.falseContent=newValue;break;case'orientation':that._resizeHandler();break;}that._getContainersSizeAndBreakPoint();that._removeDragStyles();that._resizeHandler();}/** Resize handler **/},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(!document.body.contains(that)){return;}var computedStyles=window.getComputedStyle(that,null),borderTopWidth=parseInt(computedStyles.getPropertyValue('border-top-width')),borderRightWidth=parseInt(computedStyles.getPropertyValue('border-right-width')),borderBottomWidth=parseInt(computedStyles.getPropertyValue('border-bottom-width')),borderLeftWidth=parseInt(computedStyles.getPropertyValue('border-left-width')),newWidth=that.orientation==='vertical'?that.offsetHeight-(borderTopWidth+borderBottomWidth):that.offsetWidth-(borderLeftWidth+borderRightWidth);that._getContainersSizeAndBreakPoint();if(that._supportCSSVariables){that.$.container.style.setProperty('--jqx-switch-button-default-width',newWidth+'px');}else{that._innerContainerSize=newWidth;that.$.innerContainer.style.height=that.$.innerContainer.style.width='';that.$.trueContentContainer.style.height=that.$.trueContentContainer.style.width='';that.$.falseContentContainer.style.height=that.$.falseContentContainer.style.width='';if(that.orientation==='horizontal'){that.$.innerContainer.style.setProperty('width',2*newWidth-that.$.switchThumb.clientWidth+'px');that.$.trueContentContainer.style.setProperty('width',that._switchTrackLength+'px');that.$.falseContentContainer.style.setProperty('width',that._switchTrackLength+'px');}else{that.$.innerContainer.style.setProperty('height',2*newWidth-that.$.switchThumb.clientHeight+'px');that.$.trueContentContainer.style.setProperty('height',that._switchTrackLength+'px');that.$.falseContentContainer.style.setProperty('height',that._switchTrackLength+'px');}that._updateThumbPosition();}}/**
     * Updates the thumb position when the browser doesn't support CSS variables
     */},{key:'_updateThumbPosition',value:function _updateThumbPosition(){var that=this;if(that._supportCSSVariables||(that.inverted?that.checked===true:that.checked===false)||!that._innerContainerSize){that.$.innerContainer.style.left=that.$.innerContainer.style.top='';return;}if(that.inverted?that.checked===false:that.checked){if(that.orientation==='horizontal'){that.$.innerContainer.style.left=-1*(that._innerContainerSize-that.$.switchThumb.offsetWidth)+'px';that.$.innerContainer.style.top='';}else{that.$.innerContainer.style.top=-1*(that._innerContainerSize-that.$.switchThumb.offsetHeight)+'px';that.$.innerContainer.style.left='';}}if(that.checked===null){if(that.orientation==='horizontal'){that.$.innerContainer.style.left=-1*(that._innerContainerSize/2-that.$.switchThumb.offsetWidth/2)+'px';that.$.innerContainer.style.top='';}else{that.$.innerContainer.style.top=-1*(that._innerContainerSize/2-that.$.switchThumb.offsetHeight/2)+'px';that.$.innerContainer.style.left='';}}}}],[{key:'properties',// Switch Button's properties.
get:function get(){return{'inverted':{value:false,type:'boolean'},'orientation':{value:'horizontal',allowedValues:['horizontal','vertical'],type:'string'},'switchMode':{value:'default',allowedValues:['default','click','drag','none'],type:'string'},'clickMode':{value:'release',allowedValues:['press','release','pressAndRelease'],type:'string'}};}/**
     * Switch Button's event listeners.
     */},{key:'listeners',get:function get(){return{'container.down':'_mouseDownHandler','document.move':'_drag','document.up':'_switchThumbDropHandler','mouseenter':'_switchButtonOnMouseEnter','mouseleave':'_switchButtonOnMouseLeave','resize':'_resizeHandler','container.resize':'_resizeHandler','document.selectstart':'_selectStartHandler'};}}]);return SwitchButton;}(JQX.ToggleButton));/**
* DropDownLst custom element.
*/JQX('jqx-drop-down-list',function(_JQX$ContentElement2){babelHelpers.inherits(DropDownList,_JQX$ContentElement2);function DropDownList(){babelHelpers.classCallCheck(this,DropDownList);return babelHelpers.possibleConstructorReturn(this,(DropDownList.__proto__||Object.getPrototypeOf(DropDownList)).apply(this,arguments));}babelHelpers.createClass(DropDownList,[{key:'template',/**
    * DropDownList's HTML template.
    */value:function template(){return'<div id="container">\n                    <span class="jqx-label" id="label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                        <div class="jqx-buttons-container" id="buttonsContainer">\n                            <span id="actionButton" class="jqx-input jqx-action-button"></span>\n                            <span id="dropDownButton" class="jqx-drop-down-button">\n                                <span id="arrow"></span>\n                            </span>\n                        </div>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                            <jqx-list-box id="listBox" unfocusable\n                                    animation="[[animation]]"\n                                    data-source="[[dataSource]]"\n                                    disabled="[[disabled]]"\n                                    display-loading-indicator="[[displayLoadingIndicator]]"\n                                    display-member="[[displayMember]]"\n                                    filterable="[[filterable]]"\n                                    filter-callback="[[filterCallback]]"\n                                    filter-mode="[[filterMode]]"\n                                    filter-input-placeholder="[[filterInputPlaceholder]]"\n                                    grouped="[[grouped]]"\n                                    group-member="[[groupMember]]"\n                                    item-height="[[itemHeight]]"\n                                    item-template="[[itemTemplate]]"\n                                    incremental-search-delay="[[incrementalSearchDelay]]"\n                                    incremental-search-mode="[[incrementalSearchMode]]"\n                                    loading-indicator-placeholder="[[loadingIndicatorPlaceholder]]"\n                                    loading-indicator-position="[[loadingIndicatorPosition]]"\n                                    name="[[name]]"\n                                    placeholder="[[dropDownPlaceholder]]"\n                                    readonly="[[readonly]]"\n                                    selected-indexes="{{selectedIndexes}}"\n                                    selection-mode="[[selectionMode]]"\n                                    selected-values="{{selectedValues}}"\n                                    sorted="[[sorted]]"\n                                    theme="[[theme]]"\n                                    value-member="[[valueMember]]"\n                                    horizontal-scroll-bar-visibility="[[horizontalScrollBarVisibility]]"\n                                    vertical-scroll-bar-visibility="[[verticalScrollBarVisibility]]"\n                                    virtualized="[[virtualized]]">\n                                <content></content>\n                            </jqx-list-box>\n                            <div id="resizeBar" class="jqx-drop-down-resize-bar">\n                                <div></div>\n                            </div>\n                         </div>\n                    </div>\n                    <span class="jqx-hint" id="hint">[[hint]]</span>\n                </div>';}/*
    * CSS files needed for the element (ShadowDOM)
    */},{key:'propertyChangedHandler',/**
    * Updates the DropDownList when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(DropDownList.prototype.__proto__||Object.getPrototypeOf(DropDownList.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'animation':that.$.dropDownContainer.setAttribute('animation',that.animation);break;case'disabled':that._setFocusable();that.close();that._positionDetection.handleAutoPositioning();break;case'dataSource':case'displayMember':case'inputMember'://when selectedValues is 0 and displayMember is changed set actionButton text to default.
if(that.$.actionButton){that.$.actionButton.innerHTML=that.placeholder;}//Check the new listBox size
that._setDropDownSize();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');break;case'dropDownAppendTo':that._positionDetection.dropDownAppendToChangedHandler();break;case'dropDownOpenMode':that._setFocusable();//Close the dropDownList without throwing events.
that.$dropDownContainer.addClass('jqx-visibility-hidden');that.$.dropDownButton.removeAttribute('selected');that.removeAttribute('drop-down-button-focus');that.removeAttribute('action-button-focus');that.opened=false;break;case'dropDownOverlay':if(!newValue){that._positionDetection.removeOverlay();}break;case'dropDownPosition':that._positionDetection.dropDownPositionChangedHandler();break;case'dropDownMinWidth':case'dropDownWidth':case'dropDownMaxWidth':case'dropDownHeight':case'dropDownMinHeight':case'dropDownMaxHeight':that._setDropDownSize();break;case'opened':if(that.disabled||that.readonly){return;}newValue?that.open():that.close();break;case'placeholder':that._applySelection();break;case'readonly':that.close();break;case'resizeIndicator':if(newValue){that.$.dropDownContainer.setAttribute('resize-indicator','');}else{that.$.dropDownContainer.removeAttribute('resize-indicator');}break;case'resizeMode':that.$.dropDownContainer.setAttribute('resize-mode',that.resizeMode);break;case'selectedValues':case'selectedIndexes':if(newValue.length===0){that.$.actionButton.innerHTML=that.placeholder;}else{that._applySelection();}break;case'selectionDisplayMode':that._applySelection();break;case'tokenTemplate':that._tokenTemplate=that._validateTemplate(that.tokenTemplate);that._applySelection();break;case'unfocusable':that._setFocusable();break;}}/**
    * Appends a jqx-list-item to the end of the DropDownList.
    */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}that.$.listBox.appendChild(node);if(that._dropDownSize&&that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Called when the element is attached from the DOM.
    */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(DropDownList.prototype.__proto__||Object.getPrototypeOf(DropDownList.prototype),'attached',this).call(this);if(!that.isCompleted||!that.$.dropDownContainer){return;}that._positionDetection.dropDownAttached('_setDropDownSize');that._positionDetection.checkBrowserBounds();}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(DropDownList.prototype.__proto__||Object.getPrototypeOf(DropDownList.prototype),'detached',this).call(this);if(!that.$.dropDownContainer){return;}that.close();that._positionDetection.dropDownDetached();}/**
    * Removes all items from DOM.
    */},{key:'clearItems',value:function clearItems(){var that=this;if(!that.$.listBox){return;}that.$.listBox.clearItems();that.$.actionButton.innerHTML=that.placeholder;}/**
    * Unselects all items.
    */},{key:'clearSelection',value:function clearSelection(){var that=this;if(!that.$.listBox){return;}that.$.listBox.clearSelection();that.$.actionButton.innerHTML=that.placeholder;}/**
    * Hides the drop down list.
    */},{key:'close',value:function close(){var that=this;if(that.$dropDownContainer.hasClass('jqx-visibility-hidden')){return;}var isClosingEventPrevented=that.$.fireEvent('closing').defaultPrevented;if(isClosingEventPrevented){return;}that.$dropDownContainer.addClass('jqx-visibility-hidden');that.$.fireEvent('close');if(that.$.dropDownButton){that.$.dropDownButton.removeAttribute('selected');}that.opened=false;that._preventDropDownClose=false;that._positionDetection.removeOverlay(true);if(that._edgeMacFF&&!that.hasAnimation&&that.$.dropDownContainer){that.$.dropDownContainer.style.top=that.$.dropDownContainer.style.left='';that.$dropDownContainer.addClass('not-in-view');}}/**
    * Creates a clone of the element.
    */},{key:'cloneNode',value:function cloneNode(){var that=this;if(!that.$.listBox){return;}var clone=HTMLElement.prototype.cloneNode.apply(that,Array.prototype.slice.call(arguments,0,1));//Set only those properties that have reflectToAttribute set to false.
clone.dataSource=that.dataSource;return clone;}/**
    * Ensures the desired item is visible by scrolling to it.
    */},{key:'ensureVisible',value:function ensureVisible(item){var that=this;if(!that.$.listBox){return;}that.$.listBox.ensureVisible(item);}/**
    * Returns a JQX.ListItem element if it's value is matched.
    */},{key:'getItem',value:function getItem(value){var that=this;if(!that.$.listBox){return;}return that.$.listBox.getItem(value);}/**
    * Returns an array with the items from the list.
    */},{key:'insert',/**
    * Inserts an item at a specified position.
    * @param {number} index The index at which a new item will be inserted.
    * @param {string/object/array} item Describes the properties of the item that will be inserted. 
     If string is passed, it will be processed as the label for the new item. 
     If an object is passed, it must contain valid properties for the item, e.g. { label, value, group, disabled }.
     If an array is passed, multiple items will be inserted in the list with the coressponding settings.
    */value:function insert(index,item){var that=this;if(!that.$.listBox){return;}that.$.listBox.insert(index,item);//Add the item to the ActionButton if the item is selected.
that._applySelection();if(that._dropDownSize&&that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Inserts a jqx-list-item to the DropDownList at a certain position.
    */},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!newNode||!referenceNode){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'insertBefore',node:'newNode/referenceNode'}));return;}if(!that.$.listBox){return;}that.$.listBox.insertBefore(newNode,referenceNode);if(that._dropDownSize&&that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Shows the drop down List.
    */},{key:'open',value:function open(){var that=this,getFirstFocusableItem=function getFirstFocusableItem(){for(var _i74=0;_i74<that.items.length;_i74++){if(!that.items[_i74].disabled){return that.items[_i74];}}};if(that.disabled||!that.offsetHeight){return;}if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')){return;}if(that.$dropDownContainer.hasClass('not-in-view')){that.$dropDownContainer.removeClass('not-in-view');}that.$.dropDownContainer.style.transition=null;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var rect=that.getBoundingClientRect();// handles the case, when the dropdown is opened, while it is still part of the dropdownlist's tree. 
if(that.$.container.contains(that.$.dropDownContainer)){var iterations=0;var interval=setInterval(function(){var rect=that.getBoundingClientRect();iterations++;if(rect.top===that._positionTop&&iterations<10){return;}that.open();clearInterval(interval);that._positionTop=rect.top;},100);return;}else if(rect.top!==that._positionTop){that._positionTop=rect.top;}}var isOpeningEventPrevented=that.$.fireEvent('opening').defaultPrevented;if(isOpeningEventPrevented){return;}that.opened=true;that._positionDetection.placeOverlay();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');that.$dropDownContainer.removeClass('jqx-visibility-hidden');that.$.fireEvent('open');if(that.$.dropDownButton){if(that.dropDownOpenMode==='dropDownButton'){that.$.dropDownButton.setAttribute('selected','');}else{that.$.dropDownButton.removeAttribute('selected');}}if(that.$.listBox&&!that._focusedItem||that._focusedItem&&!that._focusedItem._focused){if(that.selectedIndexes.length>0){that._focus(that.items[that.selectedIndexes[0]]);}else{that._focus(getFirstFocusableItem);}}if(that.$.input&&!JQX.Utilities.Core.isMobile){that.$.input.focus();}}/**
    * DropDownList ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(DropDownList.prototype.__proto__||Object.getPrototypeOf(DropDownList.prototype),'ready',this).call(this);var that=this;if(that.$.dropDownContainer){that._positionDetection=new JQX.Utilities.PositionDetection(that,that.$.dropDownContainer,that.$.container,'close');that._positionDetection.getDropDownParent(true);that._positionDetection.setDropDownPosition();that._calculateDropDownSize();that.$.dropDownContainer.setAttribute('resize-mode',that.resizeMode);if(that.resizeIndicator){that.$.dropDownContainer.setAttribute('resize-indicator','');}that._positionDetection.handleAutoPositioning();}if(that.opened){that.open();}//Used for the scroll handling
that._positionTop=that.getBoundingClientRect().top;that._edgeMacFF=JQX.Utilities.Core.Browser.Edge||JQX.Utilities.Core.Browser.Firefox&&navigator.platform.toLowerCase().indexOf('mac')!==-1;if(that._edgeMacFF&&that.hasAnimation&&that.$.dropDownContainer){that.$dropDownContainer.addClass('not-in-view');}that._createElement();}/**
    * Removes an item from the list box.
    * @param {number} index The index at which a new item will be inserted.
    */},{key:'remove',value:function remove(index){var that=this;if(!that.$.listBox){return;}that.$.listBox.remove(index);//Remove the item from the ActionButton if its present.
that._applySelection();if(that._dropDownSize&&that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Removes a jqx-list-item frop the DropDownList.
    */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node||!(node instanceof JQX.ListItem)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}that.$.listBox.removeChild(node);if(that._dropDownSize&&that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Selects an item by its HTML Element or Value.
    */},{key:'select',value:function select(item){var that=this;if(!that.$.listBox){return;}that.$.listBox.select(item);}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');that.$.actionButton.removeAttribute('tabindex');that.$.dropDownButton.removeAttribute('tabindex');return;}var index=that.tabIndex>0?that.tabIndex:0;if(that.dropDownOpenMode==='dropDownButton'){that.removeAttribute('tabindex');that.$.actionButton.setAttribute('tabindex',index);that.$.dropDownButton.setAttribute('tabindex',index);}else{that.$.actionButton.removeAttribute('tabindex');that.$.dropDownButton.removeAttribute('tabindex');that.tabIndex=index;}}/**
    * Checks for missing modules.
    */},{key:'unselect',/**
    * Unselects an item by its HTML Element or Value.
    */value:function unselect(item){var that=this;if(!that.$.listBox){return;}that.$.listBox.unselect(item);}/**
    * Updates an item from the list.
    * @param {number} index The index at which a new item will be inserted.
    * @param {string/object} settings The settings that will be applied to the item that will be updated.
      If a string is passed, it will be considered as the new label for the item.
      If an object is passed, it will should describe valid properties for the item, e.g. { label, value, group, disabled}.
    */},{key:'update',value:function update(index,details){var that=this;if(!that.$.listBox){return;}that.$.listBox.update(index,details);that._applySelection();}/**
     * Resizebar mousemouve event handler. 
     * @param {any} event
     */},{key:'_resizeBarMoveHandler',value:function _resizeBarMoveHandler(event){//Used to prevent page scrolling on iOS devices
if(event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
     * Creates a token for the selected items
     */},{key:'_createToken',value:function _createToken(){var that=this;var icon=void 0;var fragment=document.createDocumentFragment(),lastSelectedIndex=that.selectedIndexes[that.selectedIndexes.length-1];if(that.selectionDisplayMode==='plain'&&(that.selectionMode==='one'||that.selectionMode==='zeroOrOne'||that.selectionMode==='radioButton')){icon='';}else{if(that.selectionDisplayMode==='tokens'){if(that.selectedIndexes.length===1&&['oneOrManyExtended','oneOrMany','one','radioButton'].indexOf(that.selectionMode)>-1){icon='';}else{icon='&#10006';}}else{icon=that.selectedIndexes.length===1?'':',';}}var selectedIndexes=that.selectedIndexes,items=that.$.listBox._items;for(var _i75=0;_i75<selectedIndexes.length;_i75++){var selectedIndex=selectedIndexes[_i75];if(items[selectedIndex]){fragment.appendChild(that._applyTokenTemplate(items[selectedIndex][that.inputMember],that.selectionDisplayMode!=='tokens'&&selectedIndex===lastSelectedIndex?'':icon));}}return fragment;}/**
    * Sets the selection mode for the DropDownList.
    */},{key:'_applySelection',value:function _applySelection(){var that=this;if(that.selectionDisplayMode==='placeholder'||that.selectedIndexes.length===0){that.$.actionButton.innerHTML=that.placeholder;return;}if(!that.$.listBox._items||that.$.listBox._items.length===0){return;}that.$.actionButton.innerHTML='';that.$.actionButton.appendChild(that._createToken());}/**
    * Applies a template to the tokens
    */},{key:'_applyTokenTemplate',value:function _applyTokenTemplate(label,icon){var that=this;var element=document.createElement('span'),token=function token(){return'<span class=\'jqx-drop-down-list-selection-label\'>'+label+'</span><span class=\'jqx-drop-down-list-unselect-button\'>'+icon+'</span>';};element.classList.add('jqx-token');if(that._tokenTemplate){var content=document.importNode(that._tokenTemplate.content,true);var childrenCount=content.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0;for(var _i76=0;_i76<childrenCount;_i76++){bindingString=regex.exec(content.childNodes[_i76].innerHTML);if(bindingString){content.childNodes[_i76].innerHTML=content.childNodes[_i76].innerHTML.replace(bindingString[0],token());}if(content.childNodes[_i76].outerHTML){element.innerHTML+=content.childNodes[_i76].outerHTML;}}}else if(typeof that.tokenTemplate==='function'){that.tokenTemplate(element,{label:label,iconSeparator:icon});}else{element.innerHTML=token();}return element;}/**
     * BindingComplete event Handler. When the dataSource or size of listBox is changed.
     */},{key:'_bindingCompleteHandler',value:function _bindingCompleteHandler(){var that=this;if(!that.$.listBox){return;}requestAnimationFrame(function(){that._setDropDownSize();that._positionDetection.checkBrowserBounds();});}/**
    * Action/DropDown button mouse down event handler.
    */},{key:'_buttonsDownHandler',value:function _buttonsDownHandler(event){var that=this;if(that.disabled){return;}if(that.hasRippleAnimation){if(!that.$.buttonsContainer||that.dropDownOpenMode==='dropDownButton'){JQX.Utilities.Animation.Ripple.animate(event.target,event.pageX,event.pageY);}else{var target=that.$.buttonsContainer;target.firstElementChild.noRipple=true;JQX.Utilities.Animation.Ripple.animate(target,event.pageX,event.pageY);target.firstElementChild.noRipple=false;}}that._preventsSelectStart=true;if(that.dropDownOpenMode==='dropDownButton'&&event.target===that.$.actionButton){that.$.actionButton.setAttribute('active','');}//Used to handle closing after blur event is thrown
if(that.opened){that._preventDropDownClose=true;}}/**
    * DropDownList container mouse enter/leave events handler.
    */},{key:'_buttonsMouseEventsHandler',value:function _buttonsMouseEventsHandler(event){var that=this;if(that.disabled){return;}if(event.type==='mouseenter'){that.setAttribute('hover','');event.target.setAttribute('hover','');}else{that.removeAttribute('hover');event.target.removeAttribute('hover');}}/**
    * Calculates the dropDownSize and creates an object with the sizes
    */},{key:'_calculateDropDownSize',value:function _calculateDropDownSize(){var that=this;that._dropDownSize={};var computedStyle=window.getComputedStyle(that.$.dropDownContainer);var topBorder=parseFloat(computedStyle.getPropertyValue('border-top-width').trim()),bottomBorder=parseFloat(computedStyle.getPropertyValue('border-bottom-width').trim()),topMargin=parseFloat(computedStyle.getPropertyValue('margin-top').trim()),bottomMargin=parseFloat(computedStyle.getPropertyValue('margin-bottom').trim()),topPaddinng=parseFloat(computedStyle.getPropertyValue('padding-top').trim()),bottomPaddinng=parseFloat(computedStyle.getPropertyValue('padding-bottom').trim());if(JQX.Utilities.Core.CSSVariablesSupport()){that._dropDownSize.width=computedStyle.getPropertyValue('--jqx-drop-down-list-drop-down-width').trim();that._dropDownSize.height=computedStyle.getPropertyValue('--jqx-drop-down-list-drop-down-height').trim();}if(!that._dropDownSize.width||that._dropDownSize.width.indexOf('initial')>-1){that._dropDownSize.width=that.offsetWidth;}if(!that._dropDownSize.height){that._dropDownSize.height='auto';}that._dropDownSize.minHeight=parseFloat(computedStyle.getPropertyValue('min-height').trim());that._dropDownSize.maxHeight=parseFloat(computedStyle.getPropertyValue('max-height').trim());that._dropDownSize.borderWidth=(isNaN(topBorder)?0:topBorder)+(isNaN(bottomBorder)?0:bottomBorder);that._dropDownSize.paddingWidth=(isNaN(topPaddinng)?0:topPaddinng)+(isNaN(bottomPaddinng)?0:bottomPaddinng);that._dropDownSize.marginWidth=(isNaN(topMargin)?0:topMargin)+(isNaN(bottomMargin)?0:bottomMargin);}/**
    * Initializes the element.
    */},{key:'_createElement',value:function _createElement(){var that=this;that._tokenTemplate=that._validateTemplate(that.tokenTemplate);//Set properties.
that._applySelection();that._setDropDownSize();that._setFocusable();//Flag indicator for the ripple effect. Used to append the ripple to that specific element, not his firstElementChild like it's done usually.
//Used in class Ripple, method animate() in jqxelement.
that.$.arrow.noRipple=true;}/**
    * Document mouse down event handler.
    */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;if(that.disabled||that.readonly){return;}var target=event.originalEvent.target;if(target===that._overlay){that._overlayDown=true;}if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];var rootElement=target.getRootNode().host;while(rootElement){if(rootElement.closest('.jqx-drop-down-container')===that.$.dropDownContainer){that._isDropDownClicked=true;}rootElement=rootElement.getRootNode().host;}}else{that._isDropDownClicked=target.closest('.jqx-drop-down-container')===that.$.dropDownContainer;}that._buttonClicked=target.closest('.jqx-action-button')||target.closest('.jqx-drop-down-button');if(that.$.listBox){var listItem=target.closest('jqx-list-item');if(!that.$.listBox.contains(listItem)){listItem=undefined;}if(that.hasRippleAnimation&&listItem){JQX.Utilities.Animation.Ripple.animate(listItem,event.pageX,event.pageY);}if(listItem||target===that.$.listBox.$.filterInput||target.closest('.jqx-token')){that._preventDropDownClose=true;}}if(that._isDropDownClicked){that._preventDropDownClose=true;}if(target!==that.$.resizeBar||that.resizeMode==='none'){return;}if(!that._resizeDetails){that._resizeDetails={};}var computedStyle=that.$.dropDownContainer.getBoundingClientRect();that._resizeDetails.started=true;that._resizeDetails.x=event.pageX;that._resizeDetails.y=event.pageY;that._resizeDetails.width=that.$.dropDownContainer.offsetWidth;that._resizeDetails.height=that.$.dropDownContainer.offsetHeight;that._resizeDetails.offsetXL=event.clientX-computedStyle.left;that._resizeDetails.offsetXR=computedStyle.left+that.$.dropDownContainer.offsetWidth-event.clientX;that._resizeDetails.offsetY=computedStyle.top+that.$.dropDownContainer.offsetHeight-event.clientY;that._resizeDetails.offsetYtop=event.clientY-computedStyle.top;that._preventDropDownClose=true;}/**
     * Document Move Event handler
     * @param {any} event
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(that.dropDownOpenMode==='auto'&&that.dropDownAppendTo!==null){if(that.contains(target)||that.$.dropDownContainer.contains(target)){that._isElementHovered=true;}else{that._isElementHovered=false;that._autoClose();}}if(!that._resizeDetails||that._resizeDetails&&!that._resizeDetails.started){return;}that.setAttribute('resizing','');if(!that._resizeDetails.resizeEventFired){that.$.fireEvent('resizeStart',{'position':{left:event.pageX,top:event.pageY}});that._resizeDetails.resizeEventFired=true;}var doc=document.documentElement,computedStyle=that.$.dropDownContainer.getBoundingClientRect(),dropDownStyle=that.getBoundingClientRect(),direction=that.$.dropDownContainer.hasAttribute('top')?'top':'bottom';var size=void 0;function verticalResize(){size=event.pageY-that._resizeDetails.y;if(direction==='bottom'){//6 is the margin of document.body, we don't want scrollbars to be shown
that._resizeDetails.height=Math.min(doc.clientHeight-computedStyle.top-6,Math.max(0,that._resizeDetails.height+size));that._resizeDetails.y=Math.max(computedStyle.top+doc.scrollTop-that._resizeDetails.offsetY,Math.min(doc.clientHeight+doc.scrollTop-that._resizeDetails.offsetY*1.5,event.pageY));}else{that._resizeDetails.height=Math.min(that._dropDownSize.maxHeight,Math.max(0,Math.min(dropDownStyle.top,that._resizeDetails.height-size)));size=Math.max(0,computedStyle.top+(computedStyle.height-Math.max(that._dropDownSize.minHeight,that._resizeDetails.height)));if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var margin=Math.abs(parseFloat(getComputedStyle(that.$.dropDownContainer).getPropertyValue('margin-bottom')))||0;that.$.dropDownContainer.style.top=that.dropDownAppendTo&&that.dropDownAppendTo.length>0?margin+size+'px':'';}var minYCondition=dropDownStyle.top+doc.scrollTop+that._resizeDetails.offsetYtop;that._resizeDetails.y=Math.max(that._resizeDetails.offsetYtop,Math.min(minYCondition,Math.max(minYCondition-that._dropDownSize.maxHeight,event.pageY)));}that.$.dropDownContainer.style.height=that._resizeDetails.height+'px';}function horizontalResize(){//Resize only from corner
//if (that._resizeDetails.offsetXR > 20) {
//    return;
//}
size=event.pageX-that._resizeDetails.x;//6 is the margin of document.body, we don't want scrollbars to be shown
that._resizeDetails.width=Math.min(doc.clientWidth-computedStyle.left-6,Math.max(0,that._resizeDetails.width+size));that.$.dropDownContainer.style.width=that._resizeDetails.width+'px';that._resizeDetails.x=Math.max(computedStyle.left+doc.scrollLeft-that._resizeDetails.offsetXR,Math.min(doc.clientWidth+doc.scrollLeft-that._resizeDetails.offsetXR*1.5,event.pageX));}switch(that.resizeMode){case'vertical':verticalResize();break;case'horizontal':horizontalResize();break;case'both':horizontalResize();verticalResize();break;}}/**
    * Document Up handler.
    */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;that.$.actionButton.removeAttribute('active');if(that._resizeDetails&&that._resizeDetails.started){that._resizeDetails.started=that._resizeDetails.resizeEventFired=false;that.removeAttribute('resizing');that._preventDropDownClose=false;that.focus();that.$.fireEvent('resizeEnd',{'position':{left:event.pageX,top:event.pageY}});return;}if(that.disabled||that._isDropDownClicked||that.readonly){delete that._isDropDownClicked;return;}if(that._overlayDown){that.close();delete that._overlayDown;return;}var target=event.originalEvent.target,rootElement=target.closest?target.closest('jqx-drop-down-list'):undefined;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];rootElement=target.getRootNode().host;}that._preventsSelectStart=false;if(typeof target==='undefined'||target===that.$.resizeBar){return;}if(that.selectionDisplayMode==='tokens'&&target.classList.contains('jqx-drop-down-list-selection-label')&&rootElement===that){if(that.dropDownOpenMode!=='none'){that.open();}var _item11=that.$.listBox._items.filter(function(item){return item[that.inputMember].toString()===target.textContent;})[0];//Scroll to that item and focus it.
that.$.listBox._scrollView.scrollTop=_item11.offsetTop;that._focus(_item11);return;}if(that.selectionDisplayMode==='tokens'&&target.classList.contains('jqx-drop-down-list-unselect-button')&&rootElement===that){if(that.selectedIndexes.length===1&&['zeroOrMany','zeroOrOne','checkBox'].indexOf(that.selectionMode)<0){return;}that.unselect(that.$.listBox._items.filter(function(item){return item[that.inputMember].toString()===target.previousElementSibling.textContent;})[0]);return;}var isActionButtonPressed=target.closest('.jqx-action-button');if(that._buttonClicked){if(that.dropDownOpenMode==='dropDownButton'&&isActionButtonPressed&&that._buttonClicked===that.$.actionButton){that.$.fireEvent('actionButtonClick');}else if(target.closest('.jqx-drop-down-button')===that._buttonClicked||isActionButtonPressed===that._buttonClicked){that.$.fireEvent('dropDownButtonClick');}}that._buttonClicked=undefined;if(isActionButtonPressed===that.$.actionButton||target.closest('.jqx-drop-down-button')===that.$.dropDownButton){if(that.dropDownOpenMode==='dropDownButton'&&isActionButtonPressed===that.$.actionButton){that.close();return;}//Open/Close the dropDownList
that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&that.dropDownOpenMode!=='none'?that.open():that.close();return;}target=that._getUpEventTarget(target);if(target===undefined){return;}if(target!=='dropDownContainer'&&target!=='item'||target==='item'&&that.selectionMode!=='checkBox'&&that.selectionMode.indexOf('Many')<0){that.close();}}/**
    * DragStarted Event Handler
    * @param {any} event
    */},{key:'_dragStartHandler',value:function _dragStartHandler(event){var that=this;if(that._resizeDetails&&that._resizeDetails.started){event.preventDefault();}}/**
    * Dropdown transitionend handler.
    */},{key:'_dropDownTransitionendHandler',value:function _dropDownTransitionendHandler(){var that=this;if(that._edgeMacFF&&!that.opened&&that.hasAnimation){that.$.dropDownContainer.style.top=that.$.dropDownContainer.style.left='';that.$dropDownContainer.addClass('not-in-view');}}/**
    * Focuses an item. Accepts a JQX.ListItem element or a string, representing the value of an item.
    */},{key:'_focus',value:function _focus(item){this.$.listBox._focus(item);}/**
     * Element/DropDownButton blur event handler
     * @param {any} event
     */},{key:'_blurEventHandler',value:function _blurEventHandler(){var that=this;if(that.$.dropDownButton){that.removeAttribute('focus');that.$.dropDownButton.removeAttribute('focus');}if(that.$.actionButton){that.removeAttribute('focus');that.$.actionButton.removeAttribute('focus');}//NOT Applicable to jqxDropDownButton, because the contento of the popup is focusable !
if(that.nodeName&&that.nodeName==='JQX-DROP-DOWN-LIST'&&!that._preventDropDownClose){that.close();}}/**
     * Element focus event handler
     */},{key:'_focusEventHandler',value:function _focusEventHandler(){var that=this;if(that.$.dropDownButton){that.setAttribute('focus','');that.$.dropDownButton.setAttribute('focus','');}if(that.$.actionButton){that.setAttribute('focus','');that.$.actionButton.setAttribute('focus','');}that.removeAttribute('drop-down-button-focus');that.removeAttribute('action-button-focus');}/**
     * DropDownList drop-down-button and action-button focus/blur handlers
     * @param {any} event
     */},{key:'_buttonsFocusHandler',value:function _buttonsFocusHandler(event){var that=this;if(event.target===that.$.dropDownButton){if(event.type==='focus'){that.setAttribute('drop-down-button-focus','');}else{that.removeAttribute('drop-down-button-focus');//NOT Applicable to jqxDropDownButton, because the contento of the popup is focusable !
if(that.nodeName&&that.nodeName==='JQX-DROP-DOWN-LIST'&&!that._preventDropDownClose){that.close();}}}else{event.type==='focus'?that.setAttribute('action-button-focus',''):that.removeAttribute('action-button-focus');}}/**
     * Gets the target of a document up event.
     */},{key:'_getUpEventTarget',value:function _getUpEventTarget(originalTarget){var that=this;var target=originalTarget;while(target){if(target instanceof JQX.ListItem&&target.ownerListBox===that.$.listBox){if(target.unselectable||target.disabled){return;}target='item';break;}else if(target===that.$.dropDownContainer){target='dropDownContainer';break;}target=target.parentElement;}if(that.enableShadowDOM&&target!==null){target=originalTarget.getRootNode().host;while(target){if(target===that.$.dropDownContainer){target='dropDownContainer';break;}target=target.parentElement;}}return target;}/**
    * DropDown keydown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement,target=that.enableShadowDOM?event.composedPath()[0]:event.target;if(that.$.listBox&&target===that.$.listBox.$.filterInput||activeElement!==that&&activeElement!==that.$.dropDownButton&&activeElement!==that.$.actionButton){return;}switch(event.key){case'Enter':case' ':target.setAttribute('active','');event.preventDefault();if(target!==that.$.actionButton){that._keyPressed=true;if(that.opened){if(that._focusedItem){that.select(that._focusedItem);}if(event.key==='Enter'&&['none'].indexOf(that.selectionMode)<0||event.key===' '&&['none','one','radioButton'].indexOf(that.selectionMode)>-1){that.close();}}else if(!that.opened&&!that.readonly&&that.dropDownOpenMode!=='none'){that.open();}}break;case'End':case'Home':case'PageUp':case'PageDown':case'ArrowUp':case'ArrowDown':if(that.readonly){return;}if(event.altKey){that._keyPressed=false;that.$dropDownContainer.hasClass('jqx-visibility-hidden')?that.open():that.close();return;}event.preventDefault();that.$.listBox._handleKeyStrokes(event.key);break;case'Escape':event.preventDefault();that.close();break;default:if(that.readonly){return;}if(that.selectionMode==='oneOrManyExtended'){that.$.listBox._keysPressed[event.key]=true;}that.$.listBox._applyIncrementalSearch(event.key);break;}}/**
    * DropDown key up event handler.
    */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this,target=that.enableShadowDOM?event.composedPath()[0]:event.target;if(that.$.listBox&&target===that.$.listBox.$.filterInput){return;}if(event.key==='Enter'||event.key===' '){target.removeAttribute('active');if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')){that._keyPressed=false;//that.$.listBox.focus();
}}if(that.$.listBox&&that.selectionMode==='oneOrManyExtended'){that.$.listBox._keysPressed[event.key]=false;}}/**
    * DropDownList Change event handler.
    */},{key:'_listBoxChangeHandler',value:function _listBoxChangeHandler(event){var that=this;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0||that.enableShadowDOM){that.$.fireEvent('change',event.detail);}if(that.autoComplete==='list'&&event.detail){var lastSelectedItem=that.$.listBox._items[event.detail.index];that._lastSelectedItem=lastSelectedItem?lastSelectedItem:undefined;}that._applySelection(that.selectionMode,event.detail);}/**
     * ListBox itemClick event handler
     * @param {any} event
     */},{key:'_listBoxItemClickHandler',value:function _listBoxItemClickHandler(event){var that=this;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0||that.enableShadowDOM){that.$.fireEvent(event.type,event.detail);}if(that.selectionMode!=='checkBox'&&that.selectionMode.indexOf('Many')<0){that.close();}if(that.nodeName==='JQX-COMBO-BOX'&&!JQX.Utilities.Core.isMobile){that.$.input.focus();}delete that._isDropDownClicked;}/**
    * DropDownList key down handler.
    */},{key:'_listBoxKeyDownHandler',value:function _listBoxKeyDownHandler(event){var that=this;if(event.key==='Enter'){that.close();that.dropDownOpenMode==='dropDownButton'?that.$.dropDownButton.focus():that.focus();event.stopPropagation();return;}if(event.key==='Escape'){that.close();return;}}/**
    * Element container mouse enter event handler.
    */},{key:'_mouseEnterHandler',value:function _mouseEnterHandler(){var that=this;that._isElementHovered=true;if(that.tagName.indexOf('JQX-DROP-DOWN-')>-1&&that.dropDownOpenMode==='auto'&&!that.disabled&&!that.readonly){that.open();}}/**
    * Element container mouse leave event handler.
    */},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this;that.removeAttribute('hover');that._isElementHovered=false;if(that.dropDownOpenMode==='auto'&&!that.disabled&&!that.readonly){that._autoClose();}}/**
    * Mouse wheel event handler.
    */},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(event){var that=this;if(that.disabled||that.readonly||that.items&&that.items.length===0){return;}if(that.$dropDownContainer&&!that.$dropDownContainer.hasClass('jqx-visibility-hidden')){return;}if(that.$.listBox){event.preventDefault();that.$.listBox._handleKeyStrokes(event.deltaY>0?'ArrowDown':'ArrowUp');}}/**
     * Automatically closes the dropdown.
     */},{key:'_autoClose',value:function _autoClose(){var that=this;that._autoCloseTimeout=setTimeout(function(){if(!that._isElementHovered){that.close();}clearTimeout(that._autoCloseTimeout);}.bind(that),that.autoCloseDelay);}/**
    * Validates the value of the property
    * @param {any} oldValue - the old value
    * @param {any} value - the new value
    */},{key:'_propertyValidator',value:function _propertyValidator(oldValue,newValue){if(typeof newValue!=='number'&&typeof newValue!=='string'){return oldValue;}return newValue;}/**
     * Resize handler - recalculate the size of the popup if the element is initialized with a different size.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(that.resizeMode==='none'){that._calculateDropDownSize();that._setDropDownSize();}}/**
    * Document select start event handler.
    */},{key:'_selectStartHandler',value:function _selectStartHandler(event){if(this._preventsSelectStart){event.preventDefault();}}/**
    * Set DropDown Size.
    */},{key:'_setDropDownSize',value:function _setDropDownSize(){var that=this;if(!that._dropDownSize){that._calculateDropDownSize();}['dropDownMinWidth','dropDownMinHeight','dropDownMaxWidth','dropDownMaxHeight'].forEach(function(name){that.$.dropDownContainer.style[name.replace('dropDown','').replace(/^./,'m')]=that[name]?that[name]+(that[name].toString().endsWith('%')?'%':'px'):null;});if(that.dropDownWidth){if(that.dropDownWidth!=='auto'){that.$.dropDownContainer.style.width=(that.dropDownWidth==='initial'?that.offsetWidth:parseFloat(that.dropDownWidth))+'px';}else{that.$.dropDownContainer.style.width='auto';if(that.$.listBox){var horizontalOffset=2+2*parseInt(window.getComputedStyle(that.$.listBox.$.itemsContainer).getPropertyValue('--jqx-list-item-horizontal-offset'));that.$.dropDownContainer.style.width=horizontalOffset+that.$.listBox._scrollWidth+'px';}}}else{that.$.dropDownContainer.style.width=that._dropDownSize.width==='auto'?'auto':(parseFloat(that._dropDownSize.width)||0)+'px';}if(that.dropDownHeight&&that.dropDownHeight!=='auto'){that.$.dropDownContainer.style.height=parseFloat(that.dropDownHeight)+((that.dropDownHeight+'').indexOf('%')>-1?'%':'px');}else{if(that.$.listBox&&(that._dropDownSize.height==='auto'||that.dropDownHeight==='auto')){that.$.dropDownContainer.style.height='';var verticalOffset=2*parseInt(window.getComputedStyle(that.$.listBox.$.itemsContainer).getPropertyValue('--jqx-list-item-vertical-offset'));if(isNaN(verticalOffset)){verticalOffset=6;}var dropDownHeight=verticalOffset;if(that.$.listBox.items.length>0){that.$.listBox.items.map(function(item){return dropDownHeight+=item.height||item.offsetHeight;});}dropDownHeight=dropDownHeight+that._dropDownSize.paddingWidth+that._dropDownSize.borderWidth;that.$.dropDownContainer.style.height=dropDownHeight+'px';}else{that.$.dropDownContainer.style.height=that._dropDownSize.height;}}if(that.$.listBox){that.$.listBox._refreshLayout();}}/**
     * Style changed event handler
     * @param {any} event
     */},{key:'_styleChangedHandler',value:function _styleChangedHandler(event){var that=this;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var styleProperties=event.detail.styleProperties,fontProperties=['font-size','font-family','font-style','font-weight'];for(var s=0;s<fontProperties.length;s++){if(styleProperties[fontProperties[s]]){that.$.dropDownContainer.style[fontProperties[s]]=styleProperties[fontProperties[s]].value;}}}if(that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
    * Checks for HTMLTemplate support and returns it's content.
    */},{key:'_validateTemplate',value:function _validateTemplate(template){var that=this;if(!template){return;}if(typeof template==='function'){return;}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(!(template instanceof HTMLTemplateElement)){template=document.getElementById(template);}if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'tokenTemplate'}));return;}return template;}},{key:'items',get:function get(){var that=this;if(!that.$||!that.$.listBox){return;}return that.$.listBox.items;}/**
    * Returns the focused item;
    */},{key:'_focusedItem',get:function get(){var that=this;if(!that.$||!that.$.listBox){return;}return that.$.listBox._focusedItem;}}],[{key:'properties',/** 
    * DropDownList's properties 
    */get:function get(){return{'autoCloseDelay':{value:100,type:'number'},'dataSource':{value:null,type:'any',reflectToAttribute:false},'displayLoadingIndicator':{value:false,type:'boolean'},'displayMember':{value:'',type:'string'},'dropDownAppendTo':{value:null,type:'any'},'dropDownButtonPosition':{allowedValues:['none','left','right','top','bottom'],value:'right',type:'string'},'dropDownMinHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMaxHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownOpenMode':{allowedValues:['none','default','dropDownButton','auto'],value:'default',type:'string'},'dropDownOverlay':{value:false,type:'boolean'},'dropDownPlaceholder':{value:'No Items',type:'string'},'dropDownPosition':{allowedValues:['auto','top','bottom','overlay-top','overlay-center','overlay-bottom','center-bottom','center-top'],value:'auto',type:'string'},'dropDownMinWidth':{value:'',type:'any',validator:'_propertyValidator'},'dropDownWidth':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMaxWidth':{value:'',type:'any',validator:'_propertyValidator'},'filterable':{value:false,type:'boolean'},'filterInputPlaceholder':{value:'',type:'string'},'filterCallback':{value:null,type:'function?'},'filterMode':{value:'startsWithIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase','custom'],type:'string'},'grouped':{value:false,type:'boolean'},'groupMember':{value:'',type:'string'},'hint':{value:'',type:'string'},'horizontalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'incrementalSearchDelay':{value:700,type:'number?'},'incrementalSearchMode':{value:'startsWithIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase'],type:'string'},'inputMember':{value:'label',type:'string'},'itemTemplate':{value:null,type:'any'},'itemHeight':{value:null,type:'number?'},'label':{value:'',type:'string'},'loadingIndicatorPlaceholder':{value:'Loading...',type:'string'},'loadingIndicatorPosition':{value:'center',allowedValues:['bottom','center','top'],type:'string'},'messages':{extend:true,value:{'en':{'invalidNode':'{{elementType}}: Invalid parameter "{{node}}" when calling {{method}}.'}},type:'object'},'name':{value:'',type:'string'},'opened':{value:false,type:'boolean'},'placeholder':{value:'',type:'string'},'renderMode':{allowedValues:['outlined','filled','underlined'],value:'outlined',type:'string'},'resizeMode':{value:'none',allowedValues:['none','horizontal','vertical','both'],type:'string'},'resizeIndicator':{value:false,type:'boolean'},'selectionDisplayMode':{value:'plain',allowedValues:['plain','placeholder','tokens'],type:'string'},'selectionMode':{value:'one',allowedValues:['none','oneOrManyExtended','zeroOrMany','oneOrMany','zeroOrOne','one','checkBox','radioButton'],type:'string'},'selectedIndexes':{value:[],type:'array'},'selectedValues':{value:[],type:'array'},'sorted':{value:false,type:'boolean'},'tokenTemplate':{value:null,type:'any'},'type':{value:'list',type:'string',defaultReflectToAttribute:true,readonly:true},'valueMember':{value:'',type:'string'},'virtualized':{value:false,type:'boolean'},'verticalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']}};}/**
    * DropDownList's event listeners.
    */},{key:'listeners',get:function get(){return{'actionButton.down':'_buttonsDownHandler','actionButton.mouseenter':'_buttonsMouseEventsHandler','actionButton.mouseleave':'_buttonsMouseEventsHandler','actionButton.focus':'_buttonsFocusHandler','actionButton.blur':'_buttonsFocusHandler','document.selectstart':'_selectStartHandler','document.dragstart':'_dragStartHandler','document.down':'_documentDownHandler','document.up':'_documentUpHandler','document.move':'_documentMoveHandler','dropDownButton.down':'_buttonsDownHandler','dropDownButton.mouseenter':'_buttonsMouseEventsHandler','dropDownButton.mouseleave':'_buttonsMouseEventsHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','focus':'_focusEventHandler','blur':'_blurEventHandler','dropDownButton.focus':'_buttonsFocusHandler','dropDownButton.blur':'_buttonsFocusHandler','dropDownContainer.transitionend':'_dropDownTransitionendHandler','listBox.change':'_listBoxChangeHandler','listBox.itemClick':'_listBoxItemClickHandler','listBox.keydown':'_listBoxKeyDownHandler','listBox.bindingComplete':'_bindingCompleteHandler','mouseenter':'_mouseEnterHandler','mouseleave':'_mouseLeaveHandler','resize':'_resizeHandler','resizeBar.move':'_resizeBarMoveHandler','styleChanged':'_styleChangedHandler','wheel':'_mouseWheelHandler'};}},{key:'styleUrls',get:function get(){return['jqx.dropdownlist.css','jqx.dropdown.css'];}},{key:'requires',get:function get(){return{'JQX.ListBox':'jqxlistbox.js'};}}]);return DropDownList;}(JQX.ContentElement));/**
* ComboBox custom element.
*/JQX('jqx-combo-box',function(_JQX$DropDownList){babelHelpers.inherits(ComboBox,_JQX$DropDownList);function ComboBox(){babelHelpers.classCallCheck(this,ComboBox);return babelHelpers.possibleConstructorReturn(this,(ComboBox.__proto__||Object.getPrototypeOf(ComboBox)).apply(this,arguments));}babelHelpers.createClass(ComboBox,[{key:'template',/**
    * ComboBox's HTML template.
    */value:function template(){return'<div id="container">\n                    <span class="jqx-label" id="label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                         <div id="selectionField" class ="jqx-input jqx-selection-field">\n                             <input id="input" placeholder="[[placeholder]]" autocomplete="off"/>\n                             <div class="jqx-combo-box-auto-complete-string" id="autoCompleteString"></div>\n                         </div>\n                        <span id="dropDownButton" class ="jqx-drop-down-button jqx-unselectable">\n                            <span id="arrow"></span>\n                        </span>\n                         <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                            <jqx-list-box id="listBox"\n                                    animation="[[animation]]"\n                                    unfocusable="true"\n                                    data-source="[[dataSource]]"\n                                    disabled="[[disabled]]"\n                                    display-loading-indicator="[[displayLoadingIndicator]]"\n                                    display-member="[[displayMember]]"\n                                    filterable="[[filterable]]"\n                                    filter-callback="[[filterCallback]]"\n                                    filter-mode="[[filterMode]]"\n                                    filter-input-placeholder="[[filterInputPlaceholder]]"\n                                    grouped="[[grouped]]"\n                                    group-member="[[groupMember]]"\n                                    item-height="[[itemHeight]]"\n                                    item-template="[[itemTemplate]]"\n                                    incremental-search-delay="[[incrementalSearchDelay]]"\n                                    incremental-search-mode="[[incrementalSearchMode]]"\n                                    loading-indicator-placeholder="[[loadingIndicatorPlaceholder]]"\n                                    loading-indicator-position="[[loadingIndicatorPosition]]"\n                                    name="[[name]]"\n                                    placeholder="[[dropDownPlaceholder]]"\n                                    readonly="[[readonly]]"\n                                    selected-indexes="{{selectedIndexes}}"\n                                    selection-mode="[[selectionMode]]"\n                                    selected-values="{{selectedValues}}"\n                                    sorted="[[sorted]]"\n                                    theme="[[theme]]"\n                                    value-member="[[valueMember]]"\n                                    horizontal-scroll-bar-visibility="[[horizontalScrollBarVisibility]]"\n                                    vertical-scroll-bar-visibility="[[verticalScrollBarVisibility]]"\n                                    virtualized="[[virtualized]]">\n                                <content></content>\n                            </jqx-list-box>\n                            <div id="resizeBar" class="jqx-drop-down-resize-bar">\n                                <div></div>\n                            </div>\n                         </div>\n                    </div>\n                    <span class="jqx-hint" id="hint">[[hint]]</span>\n                </div>';}/**
    * Updates the ComboBox when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'autoComplete':if(newValue==='list'){that.$.listBox.$.filterInput.value='';//Context Fix
var _listBoxContext=that.$.listBox.context;that.$.listBox.context=that.$.listBox;that.$.listBox._filterItems(true);that.$.listBox.context=_listBoxContext;that._setDropDownSize();}that._autoComplete(true);break;case'dataSource':case'displayMember'://when selectedValues is 0 and displayMember is changed set actionButton text to default.
that._clearSelection(true);//Check the new listBox size
that._setDropDownSize();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');//Issue: When changing dataSource from property, the items are not added right away so size isnt calculated properly. Needs a new event or sth...
//that._setDropDownSize();
break;case'disabled'://Needed, because spans are inserted before the input in advanced selectionDisplayMode and atr syncronization doesn't affect the input.
that.$.input.disabled=newValue;that._setFocusable();that.close();if(that._positionDetection){that._positionDetection.handleAutoPositioning();}break;case'readonly'://Needed, because spans are inserted before the input in advanced selectionDisplayMode and atr syncronization doesn't affect the input.
that.$.input.readOnly=newValue;that.close();break;case'selectedValues':case'selectedIndexes':that._clearSelection(true);that._applySelection(that.selectionMode);break;case'selectionMode':case'selectionDisplayMode':that._clearSelection();that._applySelectionDisplayMode();if(that.selectionDisplayMode==='tokens'){that._currentSelection=undefined;}that._applySelection(that.selectionMode);break;case'tokenTemplate':if(that.$.selectionField){while(that.$.selectionField.firstElementChild.nodeName==='SPAN'){that.$.selectionField.removeChild(that.$.selectionField.firstElementChild);}}that._tokenTemplate=that._validateTemplate(that.tokenTemplate);that._applySelection();break;case'value':that._queryItems(true);break;default:babelHelpers.get(ComboBox.prototype.__proto__||Object.getPrototypeOf(ComboBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Removes all items from the ComboBox.
    */},{key:'clearItems',value:function clearItems(){var that=this;that.$.listBox.clearItems();that._clearSelection(true);}/**
    * Unselects all items.
    */},{key:'clearSelection',value:function clearSelection(){var that=this;that.$.listBox.clearSelection();that._clearSelection(arguments[0]?false:true);}/*
     ** Blur Method
    */},{key:'blur',value:function blur(){this.$.input.blur();}/**
     * Focus method
     */},{key:'focus',value:function focus(){this.$.input.focus();}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(!that.disabled&&!that.unfocusable){var index=that.tabIndex>0?that.tabIndex:0;that.$.input.tabIndex=index;that.dropDownOpenMode==='dropDownButton'?that.$.dropDownButton.setAttribute('tabindex',index):that.$.dropDownButton.removeAttribute('tabindex');//that.$.dropDownButton.setAttribute('tabindex', index);
return;}that.$.input.tabIndex=-1;that.$.dropDownButton.removeAttribute('tabindex');}/**
     * Handles the autoComplete functionaltiy 
     */},{key:'_autoComplete',value:function _autoComplete(noSelectionRefresh){var that=this;if(that.autoComplete==='list'){return;}if(that.$.listBox._items.length===0&&typeof that.dataSource!=='function'){that.close();return;}var value=that.$.input.value.length<that.minLength?'':that.displayMode==='escaped'?that._toDefaultDisplayMode(that.$.input.value):that.$.input.value,//displayMode is a jqxTextBox property
isItemFocused=function isItemFocused(items){for(var _i77=0;_i77<items.length;_i77++){if(items[_i77]._focused&&items[_i77].hasAttribute('focus')){return true;}}};var selectedItem=void 0;if(that.$.listBox.selectedValues.length===1){selectedItem=that.$.listBox.getItem(that.$.listBox.selectedValues[0]);}that.$.autoCompleteString.textContent='';that.$.listBox.$.filterInput.value=that.autoComplete==='none'||that.$.input.value.length<that.minLength?'':value;var queryCallback=function queryCallback(){if(!that.$.listBox.isAttached||!that.$.input){return;}var activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;that._setDropDownSize();if(that.opened){that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds();}if(that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length>0){that.$.listBox._scrollView.scrollTop=that.$.listBox._filteredItems[0].offsetTop;if(that.autoComplete!=='none'&&that.$.input.value.length>=that.minLength&&!isItemFocused(that.$.listBox._filteredItems)){that._focus(that.$.listBox._filteredItems[0]);}if(activeElement===that.$.input&&that.autoComplete==='inline'&&that.$.input.value.length>=that.minLength){that._updateAutoCompleteHelper();}if(selectedItem&&selectedItem[that.inputMember]===that.$.listBox._filteredItems[0][that.inputMember]&&selectedItem.value===that.$.listBox._filteredItems[0].value){that.$.listBox.context=that.$.listBox;that.$.listBox._select(that.$.listBox._filteredItems[0],true);that.$.listBox.context=listBoxContext;}if(value!==that.$.listBox._filteredItems[0][that.inputMember]||JQX.TextBox&&that instanceof JQX.TextBox&&that.dropDownOpenMode==='auto'){if(that._closedFromKeyCombination){that._closedFromKeyCombination=false;return;}if(value.length<that.minLength&&!(JQX.TextBox&&that instanceof JQX.TextBox&&that.dropDownOpenMode==='auto')){that.close();return;}if(that.isCompleted&&that.dropDownOpenMode!=='none'&&activeElement===that.$.input){that.open();}}return;}that.close();};//Context Fix
var listBoxContext=that.$.listBox.context;that.$.listBox.context=that.$.listBox;that.$.listBox._filterItems(noSelectionRefresh?true:false,queryCallback,JQX.TextBox&&that instanceof JQX.TextBox&&that.dropDownOpenMode==='auto');that.$.listBox.context=listBoxContext;}/**
     * Updates the autoComplete string highlighter
     */},{key:'_updateAutoCompleteHelper',value:function _updateAutoCompleteHelper(){var that=this;that.$.autoCompleteString.style.width=that.$.input.offsetWidth+'px';that.$.autoCompleteString.style.height=that.$.input.offsetHeight+'px';that.$.autoCompleteString.style.left=that.$.input.offsetLeft+'px';that.$.autoCompleteString.style.top=that.$.input.offsetTop+'px';if(!that._focusedItem){that.$.autoCompleteString.textContent='';return;}if(that._focusedItem[that.inputMember].length!==that.$.input.value.length){that.$.autoCompleteString.textContent=that.$.input.value+that._focusedItem[that.inputMember].slice(that.$.input.value.length);}}/**
    * Fills the selection field with the labels selected items.
    */},{key:'_applySelection',value:function _applySelection(mode,details){var that=this;function createSelectionTags(){while(that.$.selectionField.firstElementChild.nodeName==='SPAN'){that.$.selectionField.removeChild(that.$.selectionField.firstElementChild);}var fragment=document.createDocumentFragment(),element=void 0,icon=void 0;if(that.selectionDisplayMode==='tokens'){if(that.selectedIndexes.length===1&&(that.selectionMode==='oneOrManyExtended'||that.selectionMode==='oneOrMany')){icon='';}else{icon='&#10006';}}else{icon=',';}that.selectedIndexes.map(function(index){element=that._applyTokenTemplate(that.$.listBox._items[index][that.inputMember],icon);element._value=that.$.listBox._items[index].value;fragment.appendChild(element);});that.$.selectionField.insertBefore(fragment,that.$.input);that._currentSelection=that.selectedIndexes.map(function(i){return that.$.listBox._items[i][that.inputMember];});that.$.container.setAttribute('has-value','');that._oldValue=that.value=that._currentSelection.toString();that._positionDetection.positionDropDown();}that.$.autoCompleteString.textContent='';if(that.selectedIndexes.length===0){that._clearSelection(details&&that.$.input.value===that.$.listBox._items[details.index][that.inputMember]);return;}if(!that.$.listBox._items||that.$.listBox._items.length===0){return;}if(that.selectionMode==='one'||that.selectionMode==='zeroOrOne'||that.selectionMode==='radioButton'){if(that._currentSelection&&that._currentSelection.length>that.selectedIndexes.length){that._currentSelection=that.selectedIndexes.map(function(i){return that.$.listBox._items[i][that.inputMember];});that.$.input.value=that._currentSelection.toString();that._oldValue=that.value=that._currentSelection.toString();return;}that._clearSelection();that._currentSelection=that.selectedIndexes.map(function(i){return that.$.listBox._items[i][that.inputMember];});that.$.input.value=that._currentSelection.toString();that._oldValue=that.value=that._currentSelection.toString();that.$.container.setAttribute('has-value','');if(that.autoComplete!=='none'&&typeof that.dataSource!=='function'){that._autoComplete(true);that.close();}}else{that.$.input.value='';that.$.input.placeholder='';that.$.container.setAttribute('has-value','');if(!that._currentSelection||that.selectionMode==='oneOrManyExtended'||that.selectionMode==='radioButton'&&!that.grouped){createSelectionTags();return;}var selectionTags=that.$.selectionField.getElementsByClassName('jqx-token');if(that._currentSelection.length<that.selectedIndexes.length){var selectedLabels=that.selectedIndexes.map(function(index){return that.$.listBox._items[index][that.inputMember];});for(var _i78=0;_i78<selectedLabels.length;_i78++){if(that._currentSelection.indexOf(selectedLabels[_i78])<0){var _item12=that.$.listBox._items[that.selectedIndexes[_i78]];var element=void 0,icon=void 0;if(that.selectionDisplayMode==='tokens'){if(that.selectedIndexes.length===1&&(that.selectionMode==='oneOrManyExtended'||that.selectionMode==='oneOrMany')){icon='';}else{icon='&#10006';}}else{icon=',';}if(that.selectedIndexes.length===1&&(that.selectionMode==='oneOrManyExtended'||that.selectionMode==='oneOrMany')){icon='';}element=that._applyTokenTemplate(_item12[that.inputMember],icon);element._value=_item12.value;that.$.selectionField.insertBefore(element,that.$.input);}}if(that.autoComplete!=='none'&&that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length!==that.$.listBox._items.length){that._autoComplete(true);}that._positionDetection.positionDropDown();}else if(that._currentSelection.length>0&&selectionTags.length===0||that._currentSelection.length===that.selectedIndexes.length&&that._currentSelection.toString()!==that.selectedValues.toString()){createSelectionTags();return;}else{if(!details){return;}for(var t=0;t<selectionTags.length;t++){if(selectionTags[t]._value===details.value){that.$.selectionField.removeChild(selectionTags[t]);break;}}}that._currentSelection=that.selectedIndexes.map(function(i){return that.$.listBox._items[i][that.inputMember];});that._oldValue=that.value=that._currentSelection.toString();}}/**
    * Sets the selection mode for the ComboBox.
    */},{key:'_applySelectionDisplayMode',value:function _applySelectionDisplayMode(){var that=this;if(that.selectionMode==='one'||that.selectionMode==='zeroOrOne'||that.selectionMode==='radioButton'){that.$.removeClass('auto-height');}else{that.$.addClass('auto-height');}}/**
     * BindingComplete event Handler. When the dataSource or size of listBox is changed.
     */},{key:'_bindingCompleteHandler',value:function _bindingCompleteHandler(){var that=this;that._queryItems();that._setDropDownSize();}/**
    * ComboBox container mouse enter/leave events handler.
    */},{key:'_buttonsMouseEventsHandler',value:function _buttonsMouseEventsHandler(event){var that=this;if(that.disabled||that.readonly){return;}if(event.type==='mouseenter'){event.target.setAttribute('hover','');that.setAttribute('hover','');if(that.dropDownOpenMode==='auto'&&!(JQX.TextBox&&that instanceof JQX.TextBox)){if(event.target===that.$.dropDownButton){that.open();that.$.input.focus();}else{that.close();}}}else{event.target.removeAttribute('hover');that.removeAttribute('hover');}}/**
    * Initializes the element.
    */},{key:'_createElement',value:function _createElement(){var that=this;that._tokenTemplate=that._validateTemplate(that.tokenTemplate);//Set properties.
that._applySelectionDisplayMode();that._applySelection(that.selectionMode);if(that.autoComplete!=='none'){that._autoComplete(true);that.$.input.autocomplete='off';}that._setDropDownSize();that.$.input.disabled=that.disabled;that.$.input.readOnly=that.readonly;that._setFocusable();if(that.$.input.value.length>0&&that.selectedIndexes.length===0){that.$.container.setAttribute('has-value','');that._oldValue=that.value=that.$.input.value;}//Flag indicator for the ripple effect. Used to append the ripple to that specific element, not his firstElementChild like it's done usually.
//Used in class Ripple, method animate() in jqxelement.
that.$.arrow.noRipple=true;}/**
    * Reset the input and clears the selection field.
    */},{key:'_clearSelection',value:function _clearSelection(resetInput){var that=this;if(resetInput){that.$.input.value='';that.value='';}that.$.input.placeholder=that.placeholder;that.$.autoCompleteString.textContent='';that._currentSelection=[];if(that.$.selectionField){while(that.$.selectionField.firstElementChild.nodeName==='SPAN'){that.$.selectionField.removeChild(that.$.selectionField.firstElementChild);}}if(that.autoComplete!=='none'&&that.autoComplete!=='list'&&that.$.input.value.length>0){if(that._autoCompleteTimer){clearTimeout(that._autoCompleteTimer);}if(typeof that.dataSource!=='function'){that._autoCompleteTimer=setTimeout(function(){that._autoComplete(true);},that.autoCompleteDelay);}}if(!that.$.input.value.length){that.$.container.removeAttribute('has-value');}}},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;babelHelpers.get(ComboBox.prototype.__proto__||Object.getPrototypeOf(ComboBox.prototype),'_documentDownHandler',this).call(this,event);var target=event.originalEvent.target;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];}if(target===that.$.dropDownButton&&that.dropDownOpenMode!=='none'&&!JQX.Utilities.Core.isMobile){requestAnimationFrame(function(){return that.$.input.focus();});}}/**
    * Document Up handler.
    */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;var target=event.originalEvent.target,rootElement=target.closest?target.closest('jqx-combo-box'):undefined;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];rootElement=target.getRootNode().host;}var originalTarget=target;if(that._resizeDetails&&that._resizeDetails.started){that._resizeDetails.started=that._resizeDetails.resizeEventFired=false;that.removeAttribute('resizing');that._dropDownResized=true;that.$.fireEvent('resizeEnd',{'position':{left:event.pageX,top:event.pageY}});return;}if(that.disabled||that._isDropDownClicked||that.readonly){delete that._isDropDownClicked;return;}if(that._overlayDown){that.close();delete that._overlayDown;return;}if(target===that.$.input||typeof target==='undefined'||target===that.$.resizeBar){return;}if(target===that.$.selectionField){that.$.input.focus();return;}if(target===that.$.dropDownButton&&that.dropDownOpenMode!=='none'){that._preventDropDownClose=true;that.$dropDownContainer.hasClass('jqx-visibility-hidden')?that.open():that.close();if(!JQX.Utilities.Core.isMobile){requestAnimationFrame(function(){return that.$.input.focus();});}return;}if(target.classList.contains('jqx-drop-down-list-selection-label')&&rootElement===that&&that.dropDownOpenMode!=='none'){that.open();var _item13=that.$.listBox._items.filter(function(item){return item[that.inputMember].toString()===target.textContent;})[0];that.$.input.focus();//Scroll to that item and focus it.
that.$.listBox._scrollView.scrollTop=_item13.offsetTop;that._focus(_item13);return;}if(that.selectionDisplayMode==='tokens'&&target.classList.contains('jqx-drop-down-list-unselect-button')&&rootElement===that){if(that.selectedIndexes.length===1&&['zeroOrMany','zeroOrOne','checkBox'].indexOf(that.selectionMode)<0){return;}that.unselect(that.$.listBox._items.filter(function(item){return item[that.inputMember].toString()===target.previousElementSibling.textContent;})[0]);that.$.input.focus();return;}target=that._getUpEventTarget(target);if(target===undefined){that.$.input.focus();return;}if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&target!=='dropDownContainer'&&target!=='item'||target==='item'&&that.selectionMode.indexOf('Many')<0&&that.selectionMode!=='checkBox'){that.close();}if(target==='item'||target==='dropDownContainer'&&originalTarget!==that.$.listBox.$.filterInput){that.$.input.focus();}}/**
     * DropDownButton Focus Handler
     * @param {any} event
     */},{key:'_dropDownButtonFocusHandler',value:function _dropDownButtonFocusHandler(event){var that=this;if(event.type==='focus'){if(that.dropDownOpenMode!=='dropDownButton'){that.$.input.focus();}that.setAttribute('focus','');}else{that.removeAttribute('focus');}}/**
    * ComboBox input's focus/blur event handler.
    */},{key:'_inputFocusHandler',value:function _inputFocusHandler(event){var that=this;if(that.disabled){return;}if(event.type==='focus'){that.setAttribute('focus','');if(!that._buttonClicked){that._oldValue=that.$.input.value;}}else{that.removeAttribute('focus');event.target.value!==''||that.selectedIndexes.length!==0&&event.target.value===''?that.$.container.setAttribute('has-value',''):that.$.container.removeAttribute('has-value');if(!that._preventDropDownClose){if(that.opened&&(that.autoComplete==='auto'||that.autoComplete==='inline')&&that.$.input.value.length>0&&that._focusedItem&&!that._focusedItem.selected){that.select(that._focusedItem);}that.close();}if(that.autoComplete==='list'&&!that._buttonClicked){that.$.autoCompleteString.textContent='';if(that._lastSelectedItem){that.select(that._lastSelectedItem);}else{that.value=that.$.input.value=that._oldValue;}}if(that.escKeyMode==='previousValue'){that.value=that.$.input.value;}}}/**
     * Input change event handler
     * @param {any} event
     */},{key:'_inputChangeEventHandler',value:function _inputChangeEventHandler(event){var that=this;event.stopPropagation();that.$.fireEvent('change',{'oldValue':that._oldValue,'newValue':that.$.input.value,'selectedItems':that.selectedItems,'selectedValues':that.selectedValues});}/**
    * ComboBox keydown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,target=that.enableShadowDOM?event.composedPath()[0]:event.target;if(that.disabled||that.readonly||target===that.$.listBox.$.filterInput){return;}var focusedItem=typeof that._focusedItem==='function'?that._focusedItem():that._focusedItem;switch(event.key){case'Enter':if(target===that.$.input&&focusedItem&&that.opened){if(!focusedItem.disabled){that.select(focusedItem);}if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&that.selectionMode.indexOf('one')>-1){that.close();that._unfocus();}}else if(target===that.$.dropDownButton){that.$.dropDownButton.setAttribute('active','');that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&that.dropDownOpenMode!=='none'?that.open():that.close();that.$.input.focus();}else{that.close();}return;case'Escape':switch(that.escKeyMode){case'none'://Closes the drop down poppup
if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')){that.close();that._unfocus();}break;case'clearValue':that.value=that.$.input.value='';that.close();break;case'previousValue':that.$.input.value=that._oldValue;break;}break;case'End':case'Home':case'PageUp':case'PageDown':case'ArrowUp':case'ArrowDown':if(that._autoOpenOnKeyDown(event)===true){return;}if(event.altKey){that._closedFromKeyCombination=true;if(that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&that.dropDownOpenMode!=='none'){that.open();if(that.items.length===0){return;}if(that.selectedIndexes.length===0){that._focus(that.items[0]);}else if(that.selectedIndexes.length>0&&!that.$.listBox._items[that.selectedIndexes[that.selectedIndexes.length-1]].hidden){that._focus(that.items[that.selectedIndexes[that.selectedIndexes.length-1]]);}}else{that.close();}return;}if(target===that.$.input&&that.$dropDownContainer.hasClass('jqx-visibility-hidden')){if(event.ctrlKey){event.preventDefault();that.$.listBox._handleKeyStrokes(event.key);}return;}if((event.key==='PageUp'||event.key==='PageDown')&&!focusedItem||target===that.$.listBox.$.filterInput){return;}event.preventDefault();if(!focusedItem||focusedItem&&!focusedItem._focused){that._focus(that.items[0]);return;}that.$.listBox._handleKeyStrokes(event.key);//Update the autoComplete if it's manual
if(that.autoComplete==='inline'||that.autoComplete==='list'){that._updateAutoCompleteHelper();}break;case'Backspace':if(that.$.input.previousElementSibling){if(that.$.input.value.length===0){if(that.selectedIndexes.length===1&&['zeroOrMany','zeroOrOne','checkBox'].indexOf(that.selectionMode)<0){return;}var itemToBeRemoved=that.$.listBox.getItem(that.$.input.previousElementSibling._value);if(itemToBeRemoved){that.unselect(itemToBeRemoved);}else if(that.$.selectionField.firstElementChild&&that.$.selectionField.firstElementChild.nodeName==='SPAN'){that.$.selectionField.removeChild(that.$.selectionField.firstElementChild);}}return;}if(that.selectedIndexes.length>1){that.clearSelection(true);}break;default:if(target===that.$.input&&that.selectionMode==='oneOrManyExtended'){that.$.listBox._keysPressed[event.key]=true;}if(that._autoOpenOnKeyDown(event)===true){return;}}}/**
     * Handles auto opening on specific key down
     * @param {any} event
     */},{key:'_autoOpenOnKeyDown',value:function _autoOpenOnKeyDown(event){var that=this;if(that.opened||!that.opened&&that.autoOpenShortcutKey.indexOf(event.key)<0){return;}var focusedItem=typeof that._focusedItem==='function'?that._focusedItem():that._focusedItem;that.open();if(!focusedItem||focusedItem&&!focusedItem._focused){if(event.key==='ArrowDown'){that._focus(that.items[0]);}else if(event.key==='ArrowUp'){that._focus(that.items[that.items.length-1]);}that.ensureVisible(that._focusedItem);}return true;}/**
    * ComboBox key up event handler.
    */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this,target=that.enableShadowDOM?event.composedPath()[0]:event.target;if(that.disabled||that.escKeyMode==='none'&&event.key==='Escape'||target===that.$.listBox.$.filterInput){return;}if(target===that.$.input&&that.selectionMode==='oneOrManyExtended'){that.$.listBox._keysPressed[event.key]=false;}if(['one','radioButton','zeroOrOne'].indexOf(that.selectionMode)>-1&&that.selectedIndexes.length===1&&that.$.input.value!==(that._currentSelection?that._currentSelection[0]:undefined)){that.unselect(that.$.listBox._items[that.selectedIndexes[0]]);}if(event.key==='Enter'){that.$.dropDownButton.removeAttribute('active');return;}if(target===that.$.input&&event.key.indexOf('Arrow')<0&&['Control','Shift'].indexOf(event.key)<0){if(that.value===that.$.input.value){return;}if(that._currentSelection){that.value=that._currentSelection.toString()+(that._currentSelection.length>0?',':'')+that.$.input.value;}else{that.value=that.$.input.value;}that.$.autoCompleteString.textContent='';if(that._closedFromKeyCombination){that._closedFromKeyCombination=false;return;}//that._unfocus();
if(that.autoComplete!=='none'&&that.autoComplete!=='list'){if(that.$.input.value!==(that._currentSelection?that._currentSelection.toString():undefined)||that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length!==that.$.listBox._items.length){if(that._autoCompleteTimer){clearTimeout(that._autoCompleteTimer);}that._autoCompleteTimer=setTimeout(function(){that._autoComplete(true);},that.autoCompleteDelay);}}else{if(that.$.input.value.length>0){that._queryItems();}if(that._focusedItem){that.open();if(event.key!==' '){that.$.listBox._scrollView.scrollTop=that._focusedItem.offsetTop;}}}if(that.autoComplete!=='none'&&that.autoComplete!=='list'&&that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length===that.$.listBox._items.length){that.close();return;}}}/**
     * Checks if input's value matches an item from the listBox
     */},{key:'_queryItems',value:function _queryItems(selectItem){var that=this;if(!that.value||!that.$.input){that.close();return;}var foundItems=that.$.listBox._queryItems(that.$.input.previousElementSibling?that.$.input.value:that.value,that.incrementalSearchMode);if(foundItems.length===0){that._unfocus();}for(var _i79=0;_i79<foundItems.length;_i79++){if(!foundItems[_i79].hidden){if(selectItem&&!foundItems[_i79].selected){that.select(foundItems[_i79]);}that._focus(foundItems[_i79]);break;}}if(that.autoComplete==='list'&&(that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement)===that.$.input&&that.$.input.value.length>=that.minLength){that._updateAutoCompleteHelper();}}/**
    * Document select start event handler.
    */},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that._resizeDetails&&that._resizeDetails.started){event.preventDefault();}}/**
    * Unfocuses the focused list item from the ComboBox.
    */},{key:'_unfocus',value:function _unfocus(){var that=this;if(!that._focusedItem){return;}that._focusedItem._focused=false;that.$.listBox._focusedItem=undefined;}}],[{key:'properties',/** 
    * ComboBox's properties 
    */get:function get(){return{'autoComplete':{allowedValues:['none','manual','auto','inline','list'],type:'string',value:'none'},'autoCompleteDelay':{value:700,type:'number'},'autoOpenShortcutKey':{value:[],type:'array'},'escKeyMode':{allowedValues:['none','previousValue','clearValue'],type:'string',value:'none'},'minLength':{type:'number',value:2},'value':{value:'',type:'string'}};}/**
    * ComboBox's event listeners.
    */},{key:'listeners',get:function get(){return{'input.focus':'_inputFocusHandler','input.blur':'_inputFocusHandler','dropDownButton.focus':'_dropDownButtonFocusHandler','dropDownButton.blur':'_dropDownButtonFocusHandler','input.change':'_inputChangeEventHandler','input.mouseenter':'_buttonsMouseEventsHandler','input.mouseleave':'_buttonsMouseEventsHandler','document.down':'_documentDownHandler','document.up':'_documentUpHandler','document.selectstart':'_selectStartHandler','dropDownButton.down':'_buttonsDownHandler','dropDownButton.mouseenter':'_buttonsMouseEventsHandler','dropDownButton.mouseleave':'_buttonsMouseEventsHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','listBox.change':'_listBoxChangeHandler','listBox.itemClick':'_listBoxItemClickHandler','listBox.keydown':'_listBoxKeyDownHandler','wheel':'_mouseWheelHandler'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.combobox.css'];}}]);return ComboBox;}(JQX.DropDownList));/**
* DropDownButton custom element.
*/JQX('jqx-drop-down-button',function(_JQX$ContentElement3){babelHelpers.inherits(DropDownButton,_JQX$ContentElement3);function DropDownButton(){babelHelpers.classCallCheck(this,DropDownButton);return babelHelpers.possibleConstructorReturn(this,(DropDownButton.__proto__||Object.getPrototypeOf(DropDownButton)).apply(this,arguments));}babelHelpers.createClass(DropDownButton,[{key:'template',/**
    * DropDownButton's HTML template.
    */value:function template(){return'<div id="container">\n                    <span class="jqx-label" id="label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <span id="actionButton" class="jqx-input jqx-action-button">[[placeholder]]</span>\n                            <span id="dropDownButton" class="jqx-drop-down-button">\n                                <span id="arrow"></span>\n                            </span>\n                        </div>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                            <jqx-scroll-viewer id="scrollViewer"                            \n                                right-to-left="[[right-to-left]]"\n                                horizontal-scroll-bar-visibility="[[horizontalScrollBarVisibility]]"\n                                vertical-scroll-bar-visibility="[[verticalScrollBarVisibility]]">\n                                <content></content>\n                            </jqx-scroll-viewer>\n                            <div id="resizeBar" class="jqx-drop-down-resize-bar">\n                                <div></div>\n                            </div>\n                         </div>\n                    </div>\n                    <span class="jqx-hint" id="hint">[[hint]]</span>\n                </div>';}/**
    * Called when the element is attached from the DOM.
    */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(DropDownButton.prototype.__proto__||Object.getPrototypeOf(DropDownButton.prototype),'attached',this).call(this);if(!that.isCompleted||!that.$.dropDownContainer){return;}that._positionDetection.dropDownAttached('_setDropDownSize');that._positionDetection.checkBrowserBounds();}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(DropDownButton.prototype.__proto__||Object.getPrototypeOf(DropDownButton.prototype),'detached',this).call(this);if(!that.$.dropDownContainer){return;}that.close();that._positionDetection.dropDownDetached();}/**
    * Updates the DropDownButton when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'disabled':case'unfocusable':that._setFocusable();break;case'dropDownAppendTo':that._positionDetection.dropDownAppendToChangedHandler();break;case'dropDownHeight':case'dropDownMaxHeight':case'dropDownMaxWidth':case'dropDownMinHeight':case'dropDownMinWidth':case'dropDownWidth':that._setDropDownSize();break;case'dropDownOpenMode':that._setFocusable();that.close();break;case'dropDownOverlay':if(!newValue){that._positionDetection.removeOverlay();}break;case'dropDownPlaceholder':if(that.$.dropDownContainer.hasAttribute('empty')){that.$.scrollViewer.$.scrollViewerContentContainer.innerHTML=newValue;if(that.opened){that.$.scrollViewer.refresh();}}break;case'dropDownPosition':that._positionDetection.dropDownPositionChangedHandler();break;case'innerHTML':// It is necessary to apply the new HTML directly to scrollViewerContentContainer due to a conflict in innerHTML binding of scrollViewer (removed)
if(newValue.trim()===''){that.$.dropDownContainer.setAttribute('empty','');requestAnimationFrame(function(){return that.$.scrollViewer.$.scrollViewerContentContainer.innerHTML=that.dropDownPlaceholder;});}else{that.$.dropDownContainer.removeAttribute('empty');that.$.scrollViewer.$.scrollViewerContentContainer.innerHTML=newValue;}if(that.opened){that.$.scrollViewer.refresh();}break;case'opened':if(newValue){that.open();}else{that.close();}break;case'placeholder':if(oldValue===''||newValue===''){that._setFocusable();}break;case'resizeIndicator':if(newValue){that.$.dropDownContainer.setAttribute('resize-indicator','');}else{that.$.dropDownContainer.removeAttribute('resize-indicator');}break;case'resizeMode':that.$.dropDownContainer.setAttribute('resize-mode',that.resizeMode);if(that.opened){that.$.scrollViewer.refresh();}break;}}/**
     * Appends html nodes fo the element
     * @param {any} node - HTML element to be appended
     */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{method:'removeChild',node:'node'}));return;}that.$.scrollViewer.appendChild(node);}/**
     * Removes content from the element
     * @param {any} node - node to be removed
     */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{method:'removeChild',node:'node'}));return;}if(!that.$.dropDownContainer.contains(node)){return;}that.$.scrollViewer.removeChild(node);}/**
     * Removes the content completely
     */},{key:'removeAll',value:function removeAll(){var that=this;if(that.isCompleted){that.$.scrollViewer.removeAll();}}},{key:'_open',value:function _open(){var that=this;if(that.disabled||!that.offsetHeight){return;}if(!that.$dropDownContainer.hasClass('jqx-visibility-hidden')){return;}if(that.$dropDownContainer.hasClass('not-in-view')){that.$dropDownContainer.removeClass('not-in-view');}that.$.dropDownContainer.style.transition=null;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var rect=that.getBoundingClientRect();// handles the case, when the dropdown is opened, while it is still part of the DropDownButton's tree.
if(that.$.container.contains(that.$.dropDownContainer)){var iterations=0;var interval=setInterval(function(){var rect=that.getBoundingClientRect();iterations++;if(rect.top===that._positionTop&&iterations<10){return;}that.open();clearInterval(interval);that._positionTop=rect.top;},100);return;}else if(rect.top!==that._positionTop){that._positionTop=rect.top;}}var isOpeningEventPrevented=that.$.fireEvent('opening').defaultPrevented;if(isOpeningEventPrevented){return;}that.opened=true;that._positionDetection.placeOverlay();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');that.$dropDownContainer.removeClass('jqx-visibility-hidden');that.$.fireEvent('open');if(that.$.dropDownButton){if(that.dropDownOpenMode==='dropDownButton'){that.$.dropDownButton.setAttribute('selected','');}else{that.$.dropDownButton.removeAttribute('selected');}}if(that.$.input){that.$.input.focus();}}/**
    * Opens the drop down container
    */},{key:'open',value:function open(){var that=this,//NOTE: Will not close other DropDown's on page ! For example, DropDownList, DateTimePickers, etc ...
dropDownsInDOM=document.querySelectorAll('jqx-drop-down-button, jqx-color-picker');//Make sure all dropDownButton popups are closed before openning this one
for(var _i80=0;_i80<dropDownsInDOM.length;_i80++){if(dropDownsInDOM[_i80]!==that&&dropDownsInDOM[_i80].opened){dropDownsInDOM[_i80].close();}}that._open();that.$.scrollViewer.refresh();}/**
     * Scrolls to a position
     * @param {any} top - Y coordinate
     * @param {any} left - X coordinate
     */},{key:'scrollTo',value:function scrollTo(top,left){var that=this;if(!that.isCompleted){return;}that.$.scrollViewer.scrollTo(top,left);}},{key:'ready',value:function ready(){babelHelpers.get(DropDownButton.prototype.__proto__||Object.getPrototypeOf(DropDownButton.prototype),'ready',this).call(this);var that=this;that._edgeMacFF=JQX.Utilities.Core.Browser.Edge||JQX.Utilities.Core.Browser.Firefox&&navigator.platform.toLowerCase().indexOf('mac')!==-1;that._positionDetection=new JQX.Utilities.PositionDetection(that,that.$.dropDownContainer,that.$.container,'close');that._positionDetection.getDropDownParent(true);that._positionDetection.setDropDownPosition();that._calculateDropDownSize();that.$.dropDownContainer.setAttribute('resize-mode',that.resizeMode);if(that.resizeIndicator){that.$.dropDownContainer.setAttribute('resize-indicator','');}that._positionDetection.handleAutoPositioning();that._createElement();if(that.opened){that.open();}else if(that.hasAnimation&&that._edgeMacFF){that.$dropDownContainer.addClass('not-in-view');}//Used for the scroll handling
that._positionTop=that.getBoundingClientRect().top;}},{key:'_setDropDownSize',value:function _setDropDownSize(){var that=this;if(!that._dropDownSize){that._calculateDropDownSize();}['dropDownMinWidth','dropDownMinHeight','dropDownMaxWidth','dropDownMaxHeight'].forEach(function(name){that.$.dropDownContainer.style[name.replace('dropDown','').replace(/^./,'m')]=that[name]?that[name]+(that[name].toString().endsWith('%')?'%':'px'):null;});if(that.dropDownWidth){if(that.dropDownWidth!=='auto'){that.$.dropDownContainer.style.width=(that.dropDownWidth==='initial'?that.offsetWidth:parseFloat(that.dropDownWidth))+'px';}else{that.$.dropDownContainer.style.width='auto';}}else{that.$.dropDownContainer.style.width=that._dropDownSize.width==='auto'?'auto':(parseFloat(that._dropDownSize.width)||0)+'px';}if(that.dropDownHeight&&that.dropDownHeight!=='auto'){that.$.dropDownContainer.style.height=parseFloat(that.dropDownHeight)+((that.dropDownHeight+'').indexOf('%')>-1?'%':'px');}else{that.$.dropDownContainer.style.height=that._dropDownSize.height;}}/**
* Sets tab index 
*/},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');that.$.actionButton.removeAttribute('tabindex');that.$.dropDownButton.removeAttribute('tabindex');return;}var index=that.tabIndex>0?that.tabIndex:0;if(that.dropDownOpenMode==='dropDownButton'){that.removeAttribute('tabindex');if(that.placeholder===''){that.$.actionButton.removeAttribute('tabindex');}else{that.$.actionButton.setAttribute('tabindex',index);}that.$.dropDownButton.setAttribute('tabindex',index);}else{that.$.actionButton.removeAttribute('tabindex');that.$.dropDownButton.removeAttribute('tabindex');that.tabIndex=index;}}},{key:'_calculateDropDownSize',value:function _calculateDropDownSize(){var that=this;that._dropDownSize={};var computedStyle=window.getComputedStyle(that.$.dropDownContainer);var topBorder=parseFloat(computedStyle.getPropertyValue('border-top-width').trim()),bottomBorder=parseFloat(computedStyle.getPropertyValue('border-bottom-width').trim()),topMargin=parseFloat(computedStyle.getPropertyValue('margin-top').trim()),bottomMargin=parseFloat(computedStyle.getPropertyValue('margin-bottom').trim()),topPaddinng=parseFloat(computedStyle.getPropertyValue('padding-top').trim()),bottomPaddinng=parseFloat(computedStyle.getPropertyValue('padding-bottom').trim());if(JQX.Utilities.Core.CSSVariablesSupport()){that._dropDownSize.width=computedStyle.getPropertyValue('--jqx-drop-down-list-drop-down-width').trim();that._dropDownSize.height=computedStyle.getPropertyValue('--jqx-drop-down-list-drop-down-height').trim();}if(!that._dropDownSize.width||that._dropDownSize.width.indexOf('initial')>-1){that._dropDownSize.width=that.offsetWidth;}if(!that._dropDownSize.height){that._dropDownSize.height='auto';}that._dropDownSize.minHeight=parseFloat(computedStyle.getPropertyValue('min-height').trim());that._dropDownSize.maxHeight=parseFloat(computedStyle.getPropertyValue('max-height').trim());that._dropDownSize.borderWidth=(isNaN(topBorder)?0:topBorder)+(isNaN(bottomBorder)?0:bottomBorder);that._dropDownSize.paddingWidth=(isNaN(topPaddinng)?0:topPaddinng)+(isNaN(bottomPaddinng)?0:bottomPaddinng);that._dropDownSize.marginWidth=(isNaN(topMargin)?0:topMargin)+(isNaN(bottomMargin)?0:bottomMargin);}/**
     * Initialization method. Called inside ready method
     */},{key:'_createElement',value:function _createElement(){var that=this;if(that.innerHTML.trim()===''){that.$.dropDownContainer.setAttribute('empty','');that.$.scrollViewer.$.scrollViewerContentContainer.innerHTML=that.dropDownPlaceholder;}that._setDropDownSize();that._setFocusable();//Flag indicator for the ripple effect. Used to append the ripple to that specific element, not his firstElementChild like it's done usually.
//Used in class Ripple, method animate() in jqxelement.
that.$.arrow.noRipple=true;}/**
    * DragStarted Event Handler
    * @param {any} event
    */},{key:'_dragStartHandler',value:function _dragStartHandler(event){var that=this;if(that._resizeDetails&&that._resizeDetails.started){event.preventDefault();}}/**
    * Dropdown transitionend handler.
    */},{key:'_dropDownTransitionendHandler',value:function _dropDownTransitionendHandler(){var that=this;if(that._edgeMacFF&&!that.opened&&that.hasAnimation){that.$.dropDownContainer.style.top=that.$.dropDownContainer.style.left='';that.$dropDownContainer.addClass('not-in-view');}}/**
     * Element/DropDownButton blur event handler
     * @param {any} event
     */},{key:'_blurEventHandler',value:function _blurEventHandler(){var that=this;if(that.$.dropDownButton){that.removeAttribute('focus');that.$.dropDownButton.removeAttribute('focus');}if(that.$.actionButton){that.removeAttribute('focus');that.$.actionButton.removeAttribute('focus');}}/**
     * Element focus event handler
     */},{key:'_focusEventHandler',value:function _focusEventHandler(){var that=this;if(that.$.dropDownButton){that.setAttribute('focus','');that.$.dropDownButton.setAttribute('focus','');}if(that.$.actionButton){that.setAttribute('focus','');that.$.actionButton.setAttribute('focus','');}that.removeAttribute('drop-down-button-focus');that.removeAttribute('action-button-focus');}/**
     * DropDownButton drop-down-button and action-button focus/blur handlers
     * @param {any} event
     */},{key:'_buttonsFocusHandler',value:function _buttonsFocusHandler(event){var that=this;if(event.target===that.$.dropDownButton){if(event.type==='focus'){that.setAttribute('drop-down-button-focus','');}else{that.removeAttribute('drop-down-button-focus');}}else{event.type==='focus'?that.setAttribute('action-button-focus',''):that.removeAttribute('action-button-focus');}}/**
     * Gets the target of a document up event.
     */},{key:'_getUpEventTarget',value:function _getUpEventTarget(originalTarget){var that=this;var target=originalTarget;while(target){if(target===that.$.dropDownContainer){target='dropDownContainer';break;}target=target.parentElement;}if(that.enableShadowDOM&&target!==null){target=originalTarget.getRootNode().host;while(target){if(target===that.$.dropDownContainer){target='dropDownContainer';break;}target=target.parentElement;}}return target;}/**
 * Hides the drop down list.
 */},{key:'close',value:function close(){var that=this;if(that.$dropDownContainer.hasClass('jqx-visibility-hidden')){return;}var isClosingEventPrevented=that.$.fireEvent('closing').defaultPrevented;if(isClosingEventPrevented){return;}that.$dropDownContainer.addClass('jqx-visibility-hidden');that.$.fireEvent('close');if(that.$.dropDownButton){that.$.dropDownButton.removeAttribute('selected');}that.opened=false;that._preventDropDownClose=false;that._positionDetection.removeOverlay(true);if(that._edgeMacFF&&!that.hasAnimation){that.$.dropDownContainer.style.top=that.$.dropDownContainer.style.left='';that.$dropDownContainer.addClass('not-in-view');}}/**
     * DocumentUp event handler
     * @param {any} event
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,isResizing=that.hasAttribute('resizing');if(that._resizeDetails&&that._resizeDetails.started){that._resizeDetails.started=that._resizeDetails.resizeEventFired=false;that.removeAttribute('resizing');that._preventDropDownClose=false;that.focus();that.$.fireEvent('resizeEnd',{'position':{left:event.pageX,top:event.pageY}});return;}if(that.disabled||that._isDropDownClicked||that.readonly){delete that._isDropDownClicked;return;}if(that._overlayDown){that.close();delete that._overlayDown;return;}var target=event.originalEvent.target;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];}that._preventsSelectStart=false;if(typeof target==='undefined'||target===that.$.resizeBar){return;}var isActionButtonPressed=target.closest('.jqx-action-button');if(that._buttonClicked){if(that.dropDownOpenMode==='dropDownButton'&&isActionButtonPressed&&that._buttonClicked===that.$.actionButton){that.$.fireEvent('actionButtonClick');}else if(target.closest('.jqx-drop-down-button')===that._buttonClicked||isActionButtonPressed===that._buttonClicked){that.$.fireEvent('dropDownButtonClick');}}that._buttonClicked=undefined;if(!that.editable&&isActionButtonPressed===that.$.actionButton||target.closest('.jqx-drop-down-button')===that.$.dropDownButton){if(that.dropDownOpenMode==='dropDownButton'&&isActionButtonPressed===that.$.actionButton){that.close();return;}//Open/Close the DropDownButton
that.$dropDownContainer.hasClass('jqx-visibility-hidden')&&that.dropDownOpenMode!=='none'?that.open():that.close();return;}target=that._getUpEventTarget(target);if(target===undefined){return;}if(target!=='dropDownContainer'&&target!=='item'||target==='item'&&that.selectionMode!=='checkBox'&&that.selectionMode.indexOf('Many')<0){that.close();}if(isResizing&&that.$.scrollViewer){that.$.scrollViewer.refresh();}}/**
     * Key down handler 
     * @param {any} event
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,activeElement=document.activeElement;if(that.disabled||that.readonly||activeElement!==that&&activeElement!==that.$.dropDownButton&&activeElement!==that.$.actionButton){return;}switch(event.key){case'Enter':case' ':event.preventDefault();if(event.target!==that.$.actionButton){if(that.opened&&event.key==='Enter'){that.close();}else if(!that.opened&&!that.readonly&&that.dropDownOpenMode!=='none'){that.open();}}break;case'End':that.$.scrollViewer.scrollTop=that.$.scrollViewer.scrollHeight;break;case'Home':that.$.scrollViewer.scrollTop=0;break;case'PageUp':case'PageDown':that.$.scrollViewer.scrollTop+=(event.key.indexOf('Down')>-1?1:-1)*that.$.dropDownContainer.offsetHeight;break;case'ArrowUp':case'ArrowDown':if(event.altKey){if(!that.disabled&&!that.readonly&&that.dropDownOpenMode!=='none'){that.$dropDownContainer.hasClass('jqx-visibility-hidden')?that.open():that.close();}return;}event.preventDefault();that.$.scrollViewer.scrollTop+=(event.key.indexOf('Down')>-1?1:-1)*10;break;case'Escape':event.preventDefault();that.close();break;}}/**
     * Validates the value of the property
     * @param {any} oldValue - the old value
     * @param {any} value - the new value
     */},{key:'_propertyValidator',value:function _propertyValidator(oldValue,newValue){if(typeof newValue!=='number'&&typeof newValue!=='string'){return oldValue;}return newValue;}/**
     * Element container mouse enter event handler.
     */},{key:'_mouseEnterHandler',value:function _mouseEnterHandler(){var that=this;that._isElementHovered=true;if(that.dropDownOpenMode==='auto'&&!that.disabled&&!that.readonly){that.open();}}/**
     * Element container mouse leave event handler.
     */},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this;that.removeAttribute('hover');that._isElementHovered=false;if(that.dropDownOpenMode==='auto'&&!that.disabled&&!that.readonly){that._autoClose();}}/**
     * Automatically closes the dropdown.
     */},{key:'_autoClose',value:function _autoClose(){var that=this;that._autoCloseTimeout=setTimeout(function(){if(!that._isElementHovered){that.close();}clearTimeout(that._autoCloseTimeout);}.bind(that),that.autoCloseDelay);}/**
     * Document Move Event handler
     * @param {any} event
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(that.dropDownOpenMode==='auto'&&that.dropDownAppendTo!==null){if(that.contains(target)||that.$.dropDownContainer.contains(target)){that._isElementHovered=true;}else{that._isElementHovered=false;that._autoClose();}}if(!that._resizeDetails||that._resizeDetails&&!that._resizeDetails.started){return;}that.setAttribute('resizing','');if(!that._resizeDetails.resizeEventFired){that.$.fireEvent('resizeStart',{'position':{left:event.pageX,top:event.pageY}});that._resizeDetails.resizeEventFired=true;}var doc=document.documentElement,computedStyle=that.$.dropDownContainer.getBoundingClientRect(),dropDownStyle=that.getBoundingClientRect(),direction=that.$.dropDownContainer.hasAttribute('top')?'top':'bottom';var size=void 0;function verticalResize(){size=event.pageY-that._resizeDetails.y;if(direction==='bottom'){//6 is the margin of document.body, we don't want scrollbars to be shown
that._resizeDetails.height=Math.min(doc.clientHeight-computedStyle.top-6,Math.max(0,that._resizeDetails.height+size));that._resizeDetails.y=Math.max(computedStyle.top+doc.scrollTop-that._resizeDetails.offsetY,Math.min(doc.clientHeight+doc.scrollTop-that._resizeDetails.offsetY*1.5,event.pageY));}else{that._resizeDetails.height=Math.min(that._dropDownSize.maxHeight,Math.max(0,Math.min(dropDownStyle.top,that._resizeDetails.height-size)));size=Math.max(0,computedStyle.top+(computedStyle.height-Math.max(that._dropDownSize.minHeight,that._resizeDetails.height)));if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var margin=Math.abs(parseFloat(getComputedStyle(that.$.dropDownContainer).getPropertyValue('margin-bottom')))||0;that.$.dropDownContainer.style.top=that.dropDownAppendTo&&that.dropDownAppendTo.length>0?margin+size+'px':'';}var minYCondition=dropDownStyle.top+doc.scrollTop+that._resizeDetails.offsetYtop;that._resizeDetails.y=Math.max(that._resizeDetails.offsetYtop,Math.min(minYCondition,Math.max(minYCondition-that._dropDownSize.maxHeight,event.pageY)));}that.$.dropDownContainer.style.height=that._resizeDetails.height+'px';}function horizontalResize(){//Resize only from corner
//if (that._resizeDetails.offsetXR > 20) {
//    return;
//}
size=event.pageX-that._resizeDetails.x;//6 is the margin of document.body, we don't want scrollbars to be shown
that._resizeDetails.width=Math.min(doc.clientWidth-computedStyle.left-6,Math.max(0,that._resizeDetails.width+size));that.$.dropDownContainer.style.width=that._resizeDetails.width+'px';that._resizeDetails.x=Math.max(computedStyle.left+doc.scrollLeft-that._resizeDetails.offsetXR,Math.min(doc.clientWidth+doc.scrollLeft-that._resizeDetails.offsetXR*1.5,event.pageX));}switch(that.resizeMode){case'vertical':verticalResize();break;case'horizontal':horizontalResize();break;case'both':horizontalResize();verticalResize();break;}}/**
     * Document mouse down event handler.
     */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;if(that.disabled||that.readonly){return;}var target=event.originalEvent.target;if(target===that._overlay){that._overlayDown=true;}if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];var rootElement=target.getRootNode().host;while(rootElement){if(rootElement.closest('.jqx-drop-down-container')===that.$.dropDownContainer){that._isDropDownClicked=true;}rootElement=rootElement.getRootNode().host;}}else{that._isDropDownClicked=target.closest('.jqx-drop-down-container')===that.$.dropDownContainer;}that._buttonClicked=target.closest('.jqx-action-button')||target.closest('.jqx-drop-down-button');if(that._isDropDownClicked){that._preventDropDownClose=true;}if(target!==that.$.resizeBar||that.resizeMode==='none'){return;}if(!that._resizeDetails){that._resizeDetails={};}var computedStyle=that.$.dropDownContainer.getBoundingClientRect();that._resizeDetails.started=true;that._resizeDetails.x=event.pageX;that._resizeDetails.y=event.pageY;that._resizeDetails.width=that.$.dropDownContainer.offsetWidth;that._resizeDetails.height=that.$.dropDownContainer.offsetHeight;that._resizeDetails.offsetXL=event.clientX-computedStyle.left;that._resizeDetails.offsetXR=computedStyle.left+that.$.dropDownContainer.offsetWidth-event.clientX;that._resizeDetails.offsetY=computedStyle.top+that.$.dropDownContainer.offsetHeight-event.clientY;that._resizeDetails.offsetYtop=event.clientY-computedStyle.top;that._preventDropDownClose=true;}/**
     * Resize handler - recalculate the size of the popup if the element is initialized with a different size.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(that.resizeMode==='none'){that._calculateDropDownSize();that._setDropDownSize();}}/**
     * Resizebar mousemouve event handler. 
     * @param {any} event
     */},{key:'_resizeBarMoveHandler',value:function _resizeBarMoveHandler(event){//Used to prevent page scrolling on iOS devices
if(event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
     * Style changed event handler
     * @param {any} event
     */},{key:'_styleChangedHandler',value:function _styleChangedHandler(event){var that=this;if(that.dropDownAppendTo&&that.dropDownAppendTo.length>0){var styleProperties=event.detail.styleProperties,fontProperties=['font-size','font-family','font-style','font-weight'];for(var s=0;s<fontProperties.length;s++){if(styleProperties[fontProperties[s]]){that.$.dropDownContainer.style[fontProperties[s]]=styleProperties[fontProperties[s]].value;}}}if(that._dropDownSize.height==='auto'){that._setDropDownSize();}}/**
     * Action/DropDown button mouse down event handler.
     */},{key:'_buttonsDownHandler',value:function _buttonsDownHandler(event){var that=this;if(that.disabled){return;}if(that.hasRippleAnimation){if(that.dropDownOpenMode==='dropDownButton'){JQX.Utilities.Animation.Ripple.animate(event.target,event.pageX,event.pageY);}else if(event.target===that.$.dropDownButton||!that.editable){var target=that.$.buttonsContainer;target.firstElementChild.noRipple=true;JQX.Utilities.Animation.Ripple.animate(target,event.pageX,event.pageY);target.firstElementChild.noRipple=false;}}that._preventsSelectStart=true;if(that.dropDownOpenMode==='dropDownButton'&&event.target===that.$.actionButton){that.$.actionButton.setAttribute('active','');}//Used to handle closing after blur event is thrown
if(that.opened){that._preventDropDownClose=true;}}/**
     * DropDownList container mouse enter/leave events handler.
     */},{key:'_buttonsMouseEventsHandler',value:function _buttonsMouseEventsHandler(event){var that=this;if(that.disabled){return;}if(event.type==='mouseenter'){that.setAttribute('hover','');event.target.setAttribute('hover','');}else{that.removeAttribute('hover');event.target.removeAttribute('hover');}}/**
     * Document select start event handler.
     */},{key:'_selectStartHandler',value:function _selectStartHandler(event){if(this._preventsSelectStart){event.preventDefault();}}}],[{key:'properties',/** 
     * DropDownButton's properties
     */get:function get(){return{'autoCloseDelay':{value:100,type:'number'},'dropDownAppendTo':{value:null,type:'any'},'dropDownButtonPosition':{allowedValues:['none','left','right','top','bottom'],value:'right',type:'string'},'dropDownHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMaxHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMaxWidth':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMinHeight':{value:'',type:'any',validator:'_propertyValidator'},'dropDownMinWidth':{value:'',type:'any',validator:'_propertyValidator'},'dropDownOpenMode':{allowedValues:['none','default','dropDownButton','auto'],value:'default',type:'string'},'dropDownOverlay':{value:false,type:'boolean'},'dropDownPlaceholder':{value:'No Items',type:'string'},'dropDownPosition':{allowedValues:['auto','top','bottom','overlay-top','overlay-center','overlay-bottom','center-bottom','center-top'],value:'auto',type:'string'},'dropDownWidth':{value:'',type:'any',validator:'_propertyValidator'},'hint':{value:'',type:'string'},'horizontalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'label':{value:'',type:'string'},'messages':{extend:true,value:{'en':{'invalidNode':'jqx-drop-down-button: Invalid parameter "{{node}}" when calling {{method}}.'}},type:'object'},'opened':{value:false,type:'boolean'},'placeholder':{value:'',type:'string'},'resizeIndicator':{value:false,type:'boolean'},'resizeMode':{value:'none',allowedValues:['none','horizontal','vertical','both'],type:'string'},'verticalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']}};}/**
    * DropDownButton's event listeners.
    */},{key:'listeners',get:function get(){return{'actionButton.down':'_buttonsDownHandler','actionButton.mouseenter':'_buttonsMouseEventsHandler','actionButton.mouseleave':'_buttonsMouseEventsHandler','actionButton.focus':'_buttonsFocusHandler','actionButton.blur':'_buttonsFocusHandler','document.selectstart':'_selectStartHandler','document.dragstart':'_dragStartHandler','document.down':'_documentDownHandler','document.up':'_documentUpHandler','document.move':'_documentMoveHandler','dropDownButton.down':'_buttonsDownHandler','dropDownButton.mouseenter':'_buttonsMouseEventsHandler','dropDownButton.mouseleave':'_buttonsMouseEventsHandler','keydown':'_keyDownHandler',//'keyup': '_keyUpHandler',
'focus':'_focusEventHandler','blur':'_blurEventHandler','dropDownButton.focus':'_buttonsFocusHandler','dropDownButton.blur':'_buttonsFocusHandler','dropDownContainer.transitionend':'_dropDownTransitionendHandler','mouseenter':'_mouseEnterHandler','mouseleave':'_mouseLeaveHandler','resize':'_resizeHandler','resizeBar.move':'_resizeBarMoveHandler','styleChanged':'_styleChangedHandler'};}}]);return DropDownButton;}(JQX.ContentElement));/**
 * Multi Split Button custom element.
 */JQX('jqx-multi-split-button',function(_JQX$DropDownList2){babelHelpers.inherits(MultiSplitButton,_JQX$DropDownList2);function MultiSplitButton(){babelHelpers.classCallCheck(this,MultiSplitButton);return babelHelpers.possibleConstructorReturn(this,(MultiSplitButton.__proto__||Object.getPrototypeOf(MultiSplitButton)).apply(this,arguments));}babelHelpers.createClass(MultiSplitButton,[{key:'template',value:function template(){return'<div id="container">\n                    <span class="jqx-label" id="label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                        <div id="actionButton" class ="jqx-input jqx-action-button">\n                         <template>\n                                 <div class="jqx-multi-split-button-buttons" *items={{buttonsDataSource}}><span class="jqx-action-split-button" inner-H-T-M-L={{item}}></span></div>\n                          </template>\n                        </div>\n                        <span id="dropDownButton" class="jqx-drop-down-button">\n                            <span id="arrow"></span>\n                        </span>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                            <jqx-list-box id="listBox" unfocusable\n                                    animation="[[animation]]"\n                                    data-source="[[dataSource]]"\n                                    disabled="[[disabled]]"\n                                    display-loading-indicator="[[displayLoadingIndicator]]"\n                                    display-member="[[displayMember]]"\n                                    filterable="[[filterable]]"\n                                    filter-mode="[[filterMode]]"\n                                    filter-input-placeholder="[[filterInputPlaceholder]]"\n                                    grouped="[[grouped]]"\n                                    group-member="[[groupMember]]"\n                                    item-height="[[itemHeight]]"\n                                    item-template="[[itemTemplate]]"\n                                    incremental-search-delay="[[incrementalSearchDelay]]"\n                                    incremental-search-mode="[[incrementalSearchMode]]"\n                                    loading-indicator-placeholder="[[loadingIndicatorPlaceholder]]"\n                                    loading-indicator-position="[[loadingIndicatorPosition]]"\n                                    name="[[name]]"\n                                    placeholder="[[dropDownPlaceholder]]"\n                                    readonly="[[readonly]]"\n                                    selected-indexes="{{selectedIndexes}}"\n                                    selection-mode="[[selectionMode]]"\n                                    selected-values="{{selectedValues}}"\n                                    sorted="[[sorted]]"\n                                    theme="[[theme]]"\n                                    value-member="[[valueMember]]"\n                                    horizontal-scroll-bar-visibility="[[horizontalScrollBarVisibility]]"\n                                    vertical-scroll-bar-visibility="[[verticalScrollBarVisibility]]"\n                                    virtualized="[[virtualized]]">\n                                <content></content>\n                            </jqx-list-box>\n                            <div id="resizeBar" class="jqx-drop-down-resize-bar">\n                                <div></div>\n                            </div>\n                         </div>\n                    </div>\n                    <span class="jqx-hint" id="hint">[[hint]]</span>\n                </div>';}},{key:'_blurEventHandler',/**
     * ActionButton / DropDownButton Blur event handler
     */value:function _blurEventHandler(){var that=this;that.removeAttribute('focus');if(!that._preventDropDownClose){that.close();}}/**
     * ActionButton / DropDownButton Focus event handler
     */},{key:'_focusEventHandler',value:function _focusEventHandler(){this.setAttribute('focus','');}},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;babelHelpers.get(MultiSplitButton.prototype.__proto__||Object.getPrototypeOf(MultiSplitButton.prototype),'_documentUpHandler',this).call(this,event);var splitButtons=that.querySelectorAll('.jqx-action-split-button');for(var _i81=0;_i81<splitButtons.length;_i81++){var splitButton=splitButtons[_i81];splitButton.removeAttribute('active');}that.removeAttribute('active');}},{key:'_dropDownButtonMouseEventsHandler',value:function _dropDownButtonMouseEventsHandler(event){var that=this;if(event.type==='mouseleave'){that.$.dropDownButton.removeAttribute('hover');that.removeAttribute('hover');}else{that.$.dropDownButton.setAttribute('hover','');that.setAttribute('hover','');}}},{key:'_buttonsDownHandler',value:function _buttonsDownHandler(event){var that=this;var splitButtons=that.querySelectorAll('.jqx-action-split-button');for(var _i82=0;_i82<splitButtons.length;_i82++){var splitButton=splitButtons[_i82];var rect=splitButton.getBoundingClientRect();if(event.type!=='mouseleave'){that.setAttribute('active','');splitButtons[_i82].removeAttribute('active');if(rect.left<=event.pageX&&event.pageX<=rect.width+rect.left){splitButtons[_i82].setAttribute('active','');that.$.fireEvent('buttonClick',{'index':_i82,'label':that.buttonsDataSource[_i82]});}}else{splitButtons[_i82].removeAttribute('active');that.removeAttribute('active','');}}}},{key:'_buttonsMouseEventsHandler',value:function _buttonsMouseEventsHandler(event){var that=this;var splitButtons=that.querySelectorAll('.jqx-action-split-button');for(var _i83=0;_i83<splitButtons.length;_i83++){var splitButton=splitButtons[_i83];var rect=splitButton.getBoundingClientRect();if(event.type!=='mouseleave'){that.setAttribute('hover','');splitButtons[_i83].removeAttribute('hover');if(rect.left<=event.pageX&&event.pageX<=rect.width+rect.left){splitButtons[_i83].setAttribute('hover','');}}else{splitButtons[_i83].removeAttribute('hover');that.removeAttribute('hover','');}}}},{key:'_applySelection',value:function _applySelection(){var that=this;if(that.buttonsDataSource.length===0){if(that.selectionDisplayMode==='placeholder'||that.selectedIndexes.length===0){that.querySelector('.jqx-template-container').innerHTML=that.placeholder;return;}if(!that.$.listBox._items||that.$.listBox._items.length===0){return;}that.querySelector('.jqx-template-container').innerHTML='<div class="jqx-multi-split-button-buttons"><span class="jqx-action-split-button"></span></div>';that.$.actionButton.querySelector('.jqx-action-split-button').appendChild(that._createToken());}}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;if(propertyName==='dataSource'||propertyName==='displayMember'){//Check the new listBox size
that._setDropDownSize();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');}else{babelHelpers.get(MultiSplitButton.prototype.__proto__||Object.getPrototypeOf(MultiSplitButton.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);}}}],[{key:'properties',//Multi Split Button's properties.
get:function get(){return{'buttonsDataSource':{value:[],type:'array'},'dropDownOpenMode':{allowedValues:['none','dropDownButton','auto'],value:'dropDownButton',type:'string'}};}},{key:'listeners',get:function get(){return{'actionButton.down':'_buttonsDownHandler','actionButton.mouseenter':'_buttonsMouseEventsHandler','actionButton.move':'_buttonsMouseEventsHandler','actionButton.mouseleave':'_buttonsMouseEventsHandler','dropDownButton.mouseenter':'_dropDownButtonMouseEventsHandler','dropDownButton.mouseleave':'_dropDownButtonMouseEventsHandler','actionButton.focus':'_focusEventHandler','actionButton.blur':'_blurEventHandler','dropDownButton.focus':'_focusEventHandler','dropDownButton.blur':'_blurEventHandler'};}}]);return MultiSplitButton;}(JQX.DropDownList));/**
* TextBox custom element.
*/JQX('jqx-text-box',function(_JQX$ComboBox){babelHelpers.inherits(TextBox,_JQX$ComboBox);function TextBox(){babelHelpers.classCallCheck(this,TextBox);return babelHelpers.possibleConstructorReturn(this,(TextBox.__proto__||Object.getPrototypeOf(TextBox)).apply(this,arguments));}babelHelpers.createClass(TextBox,[{key:'template',/**
    * TextBox's HTML template.
    */value:function template(){return'<div id="container">\n                    <span id="label" inner-h-t-m-l="[[label]]" class="jqx-label"></span>\n                    <div id="content" class="jqx-content">\n                        <input class="jqx-input" type="text" id="input"\n                            disabled="[[disabled]]"\n                            maxlength="[[maxLength]]"\n                            name="[[name]]"\n                            placeholder="[[placeholder]]"\n                            readonly="[[readonly]]">\n                        <div id="autoCompleteString"></div>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                           <jqx-list-box id="listBox"\n                               data-source="[[dataSource]]"\n                               unfocusable="true"\n                               disabled="[[disabled]]"\n                               display-loading-indicator="[[displayLoadingIndicator]]"\n                               display-member="[[displayMember]]"\n                               item-height="[[itemHeight]]"\n                               item-template="[[itemTemplate]]"\n                               filter-callback="[[filterCallback]]"\n                               filter-mode="[[filterMode]]"\n                               loading-indicator-placeholder="[[loadingIndicatorPlaceholder]]"\n                               loading-indicator-position="[[loadingIndicatorPosition]]"\n                               placeholder="[[dropDownPlaceholder]]"\n                               readonly="[[readonly]]"\n                               selection-mode="[[selectionMode]]"\n                               value-member="[[valueMember]]">\n                                <content></content>\n                            </jqx-list-box>\n                         </div>\n                    </div>\n                    <span id="hint" class ="jqx-hint"></span>\n                </div>';}/**
    * Updates the TextBox when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'autoComplete':if(that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length!==that.$.listBox._items.length){babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).call(this,true);}//Handle HTMLInput's default autocomplete
that.$.input.autocomplete=newValue!=='none'?'off':'on';break;case'dataSource':case'valueMember'://when selectedValues is 0 and displayMember is changed set actionButton text to default.
that._clearSelection();//Check the new listBox size
that._setDropDownSize();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');//Issue: When changing dataSource from property, the items are not added right away so size isnt calculated properly. Needs a new event or sth...
//that._setDropDownSize();
break;case'displayMember':case'inputMember':{var listBox=that.$.listBox;if(listBox.selectedIndexes.length){var label=listBox._items[listBox.selectedIndexes[0]][that.inputMember];that.$.listBox.$.filterInput.value=label;that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(label):that._toDefaultDisplayMode(label);that.set('value',that._toDefaultDisplayMode(that.$.input.value));}break;}case'displayMode':that.$.input.value=newValue==='escaped'?that._toEscapedDisplayMode(that.value):that.value=that._toDefaultDisplayMode(that.$.input.value);break;case'dropDownOpenMode':that._setFocusable();that.$dropDownContainer.addClass('jqx-visibility-hidden');that.opened=false;break;case'value':if(that.$.input!==document.activeElement||that.$.input===document.activeElement&&that.$.input.value===that._oldValue){that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(that.value):that.value;that._oldValue=oldValue;}if(!that.value){that.clearSelection();}newValue.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');break;case'hint':if(newValue===null){that.$.hint.innerHTML='';that.$.removeClass('invalid');return;}that._handleHintContainer();break;default:babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Checks for missing modules.
    */},{key:'open',/**
     * Opens the popup
     */value:function open(){var that=this;if(that.$.listBox.items.length===0||that.autoComplete==='none'){return;}if(that.$.input.value.length===0&&that.$.listBox._filteredItems&&that.$.listBox._filteredItems.length!==that.$.listBox._items.length){babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).call(this,true);return;}babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'open',this).call(this);}/**
     * Closes the popup
     */},{key:'close',value:function close(){var that=this;babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'close',this).call(this);that.$.autoCompleteString.textContent='';if(that.$.listBox._focusedItem){that.$.listBox._focusedItem._focused=false;}if(that.autoComplete==='none'){return;}if(that.$.input._filteredItems&&that.$.input._filteredItems[0]&&that.$.input._filteredItems[0]!==that.$.input.value){babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).call(this,true);}}/**
     * Focus method
     */},{key:'focus',value:function focus(){this.$.input.focus();}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.$.input.tabIndex=-1;return;}that.$.input.removeAttribute('tabindex');}/**
    * Reset Method. Reset to the initialization value
    */},{key:'reset',value:function reset(){var that=this;if(that.displayMode==='escaped'){that.value=that._initializationValue;that.$.input.value=that._toEscapedDisplayMode(that._initializationValue);}else{that.$.input.value=that.value=that._initializationValue;}if(!that.value&&that.$.listBox){that.clearSelection();}}/**
   * BindingComplete event Handler. When the dataSource or size of listBox is changed.
   */},{key:'_bindingCompleteHandler',value:function _bindingCompleteHandler(){var that=this;if(!that.$.listBox){return;}that._setDropDownSize();that._positionDetection.checkBrowserBounds();}/**
 * TextBox create method.
 */},{key:'_createElement',value:function _createElement(){var that=this;that._browserIsIEorEdge=JQX.Utilities.Core.Browser.IE||JQX.Utilities.Core.Browser.Edge;if(that.autoFocus){that.$.input.focus();}if(that.value){that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(that.value):that.value;}if(that.autoComplete!=='none'){that.$.input.autocomplete='off';}that._setDropDownSize();that._handleSelectedText();that._setFocusable();that._initializationValue=that._oldValue=that.value;that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');that._handleHintContainer();}/**
    * Focus handler. Selects whole text in element's text area on selectAllOnFocus: true
    */},{key:'_focusHandler',value:function _focusHandler(event){var that=this;if(event.type==='blur'){if(that._isDropDownClicked){return;}that.removeAttribute('focus');that.$.autoCompleteString.textContent='';that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');if((that.autoComplete==='auto'||that.autoComplete==='inline')&&that.$.input.value.length>0&&that.$.listBox._focusedItem&&that.$.listBox._focusedItem._focused){that.$.input.value=that.$.listBox._focusedItem[that.inputMember];}if(!that._preventDropDownClose){that.close();}if(that._oldValue!==that.value){that.$.fireEvent('change',{oldValue:that._oldValue,newValue:that.value});}return;}if(that.disabled){return;}that.setAttribute('focus','');that._oldValue=that.value;if(that.selectAllOnFocus){that.$.input.select();}}/**
    * TextBox container mouse enter/leave events handler.
    */},{key:'_handlePointerInEscapedSymbol',value:function _handlePointerInEscapedSymbol(direction){var that=this;if(that.displayMode!=='escaped'){return;}var selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd,value=that.$.input.value;if(value[selectionStart-1]!=='\\'){return;}if(!value[selectionStart].match(/n|r|s|t|f/g)){return;}if(selectionStart===selectionEnd){var pointerPositionModifier=direction==='next'?1:-1;that.$.input.selectionStart=selectionStart+pointerPositionModifier;that.$.input.selectionEnd=selectionStart+pointerPositionModifier;return;}else{that.$.input.selectionStart=selectionStart-1;}if(value[selectionEnd-1]!=='\\'){return;}if(!value[selectionEnd].match(/n|r|s|t|f/g)){return;}that.$.input.selectionEnd=selectionEnd+1;}/**
     * Handles Text selection
     */},{key:'_handleSelectedText',value:function _handleSelectedText(){var that=this;if(that.selectionStart===null||that.selectionEnd===null||that.selectionStart===that.selectionEnd||that.selectAllOnFocus){return;}that.selectionStart=that.selectionStart<0?0:that.selectionStart;that.selectionEnd=that.selectionEnd>that.value.length?that.value.length:that.selectionEnd;that.$.input.setSelectionRange(that.selectionStart,that.selectionEnd);}/**
     * Handles the Hint
     */},{key:'_handleHintContainer',value:function _handleHintContainer(){var that=this;if(!that.hint){return;}var container=that.$.hint;if(typeof that.hint==='function'){var _value17=that.value,invalid=that.hint(_value17,container);invalid?that.$.addClass('invalid'):that.$.removeClass('invalid');}else if(typeof that.hint==='string'){container.innerHTML=that.hint;that.$.removeClass('invalid');}}/**
    * keyDown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;function replaceEscapedKeyWith(newValue){var selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd,value=that.$.input.value;event.preventDefault();value=value.substring(0,selectionStart)+newValue+value.substring(selectionEnd,value.length);that.value=that._toDefaultDisplayMode(value);that.$.input.value=value;that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart+2;}that._showAutoCompleteHighlighter=false;switch(event.key){case'ArrowUp':case'ArrowDown':if(event.altKey){event.preventDefault();if(event.key==='ArrowDown'){that.open();}else{that.close();}return;}if(that.opened){event.preventDefault();that.$.listBox._handleKeyStrokes(event.key);if(that.autoComplete!=='inline'){break;}that._showAutoCompleteHighlighter=true;babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_updateAutoCompleteHelper',this).call(this);}break;case'PageUp':case'PageDown':event.preventDefault();that.$.input.selectionStart=that.$.input.selectionEnd=event.key==='PageUp'?0:that.$.input.value.length;break;case'Enter':if(that.opened&&that.$.listBox._focusedItem&&that.$.listBox._focusedItem._focused){that.$.listBox.$.filterInput.value=that.$.listBox._focusedItem[that.inputMember];that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(that.$.listBox._focusedItem[that.inputMember]):that._toDefaultDisplayMode(that.$.listBox._focusedItem[that.inputMember]);that.select(that.$.listBox._focusedItem);that.close();}if(that.enterKeyBehavior!=='default'){var _value18=that.$.input.value;if(that._oldValue!==_value18){event.preventDefault();that.$.fireEvent('change',{'oldValue':that._oldValue,'newValue':_value18,'type':'submit'});if(that.enterKeyBehavior==='clearOnSubmit'){if(JQX.MaskedTextBox&&that instanceof JQX.MaskedTextBox){that._cleanMask();that._setMaskToInput();that.$.input.selectionStart=that.$.input.selectionEnd=0;}else{that.$.input.value='';}}that._oldValue=that.value=that._toDefaultDisplayMode(that.$.input.value);}that._submitted=true;}break;case'Escape':that.close();that._closedFromKeyCombination=true;if(that.escKeyMode==='none'){return;}switch(that.escKeyMode){case'none':break;case'clearValue':that.value=that.$.input.value='';break;case'previousValue':that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(that._oldValue):that._oldValue;break;}break;case' ':if(that.displayMode==='escaped'){replaceEscapedKeyWith('\\s');}break;case'Backspace':if(that.displayMode==='escaped'&&that.$.input.selectionStart===that.$.input.selectionEnd){var carretPosition=that.$.input.selectionStart;if(that.$.input.value[carretPosition-2]==='\\'&&(that.$.input.value[carretPosition-1]==='s'||that.$.input.value[carretPosition-1]==='n')){that.$.input.value=that.$.input.value.substring(0,carretPosition-2)+that.$.input.value.substring(carretPosition-2,that.$.input.value.length);that.$.input.selectionStart=carretPosition-2;}}break;}}/**
     * Pre-defined ComboBox keyUpHandler
     */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this;if(that.disabled||event.key==='Escape'||event.target===that.$.listBox.$.filterInput){return;}if(event.target===that.$.input&&that.selectionMode==='oneOrManyExtended'){that.$.listBox._keysPressed[event.key]=false;}}/**
     * ListItem click event handler
     * @param {any} event
     */},{key:'_listBoxItemClickHandler',value:function _listBoxItemClickHandler(event){var that=this,eventDetails=event.detail;babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_listBoxItemClickHandler',this).call(this,event);if(eventDetails.selected){if(that.displayMode==='escaped'){var originalValue=that.$.input.value;that.value=that._toDefaultDisplayMode(originalValue);that.$.input.value=originalValue;}else{that.value=that.$.input.value;}if(that._oldValue!==that.value){that.$.fireEvent('change',{oldValue:that._oldValue,newValue:that.value});that.$.input.focus();}}}},{key:'_submitKeyUpHandler',value:function _submitKeyUpHandler(){var that=this;if(that._submitted){if(that.enterKeyBehavior==='clearOnSubmit'){that.$.input.selectionStart=that.$.input.selectionEnd=0;}that._submitted=false;}}/**
    * TextBox keyUp event handler.
    */},{key:'_textBoxKeyUpHandler',value:function _textBoxKeyUpHandler(event){var that=this;if(that.disabled||event.altKey||event.ctrlKey){return;}if(that.displayMode==='escaped'){var originalValue=that.$.input.value;that.value=that._toDefaultDisplayMode(that.$.input.value);that.$.input.value=originalValue;}else{that.value=that.$.input.value;}var selectedItem=void 0;if(that.$.listBox.selectedIndexes.length===1){selectedItem=that.$.listBox.getItem(that.$.listBox.selectedValues[0]);if(that.value!==selectedItem[that.inputMember]){that.unselect(selectedItem);}}if(!that._showAutoCompleteHighlighter){that.$.autoCompleteString.textContent='';}if(event.key==='Alt'||event.key==='Control'||!that.opened&&event.key==='Escape'||event.key==='Enter'){that._closedFromKeyCombination=false;return;}if(event.key&&event.key.indexOf('Arrow')>-1){that._handlePointerInEscapedSymbol(event.key==='ArrowRight'?'next':undefined);return;}if(that.autoComplete!=='none'&&(that.$.input.value.length>0||that.dropDownOpenMode==='auto')){var autoComplete=babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).bind(that);if(that._autoCompleteTimer){clearTimeout(that._autoCompleteTimer);}if(that.$.listBox._items.length===0&&typeof that.dataSource!=='function'){that.close();return;}that._autoCompleteTimer=setTimeout(function(){autoComplete(true);},that.autoCompleteDelay);}else{that.close();}if(event.key==='Enter'&&that.value!==that.value&&that._browserIsIEorEdge){that.value=that.$.input.value;that.$.fireEvent('change',{value:that.value});}}/**
   * ListBox drop down change event handler.
   */},{key:'_listBoxChangeHandler',value:function _listBoxChangeHandler(event){var that=this;//Stop listBox's change event. TextBox will throw it's own 'change' event
event.stopPropagation();if(event.detail.selected){var label=that.$.listBox._items[event.detail.index][that.inputMember];that.$.listBox.$.filterInput.value=label;that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(label):that._toDefaultDisplayMode(label);that.set('value',that._toDefaultDisplayMode(that.$.input.value));}if(that.autoComplete!=='none'&&typeof that.dataSource!=='function'){that._autoComplete(true);}}/**
    * TextBox container mouse enter/leave events handler.
    */},{key:'_mouseEventsHandler',value:function _mouseEventsHandler(event){var that=this;event.type==='mouseenter'?that.setAttribute('hover',''):that.removeAttribute('hover');}/**
    * TextBox change handler.
    */},{key:'_textBoxChangeHandler',value:function _textBoxChangeHandler(event){var that=this;event.stopPropagation();if(that.displayMode==='escaped'){var originalValue=that.$.input.value,selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd,clipboardData=event.clipboardData||event.originalEvent&&event.originalEvent.clipboardData||window.clipboardData;if(clipboardData){var clipboardValue=clipboardData.getData('text'),_value19=that.$.input.value;event.preventDefault();clipboardValue=that._toEscapedDisplayMode(clipboardValue);that.$.input.value=_value19.substring(0,selectionStart)+clipboardValue+_value19.substring(selectionEnd,_value19.length);}that.value=that._toDefaultDisplayMode(that.$.input.value);that.$.input.value=originalValue;}else{that.value=that.$.input.value;}that._handleHintContainer();}/**
    * TextBox test select handler.
    */},{key:'_textBoxSelectHandler',value:function _textBoxSelectHandler(){var that=this;if(that.disabled){return;}that.selectionStart=that.$.input.selectionStart;that.selectionEnd=that.$.input.selectionEnd;}/**
    * Escapes special characters in the string.
    */},{key:'_toEscapedDisplayMode',value:function _toEscapedDisplayMode(str){var keyValuePairs=[{key:/\r\n|\n\r|\n|\r/g,value:'\\n'},{key:/\s/g,value:'\\s'},{key:/\n/g,value:'\\n'},{key:/\t/g,value:'\\t'},{key:/\f/g,value:'\\f'},{key:/\r/g,value:'\\r'/*{ key: /\\/g, value: '\\\\' }*/}];for(var _i84=0;_i84<keyValuePairs.length;_i84++){str=str.replace(keyValuePairs[_i84].key,keyValuePairs[_i84].value);}return str;}/**
    * Reverts escaped characters.
    */},{key:'_toDefaultDisplayMode',value:function _toDefaultDisplayMode(str){if(!str){str='';}var keyValuePairs=[{key:/\\s/g,value:' '},{key:/\\n/g,value:'\n'},{key:/\\t/g,value:'\t'},{key:/\\f/g,value:'\f'},{key:/\\r/g,value:'\r'/*{ key: /\\\\[^n{1}|^s{1}|^t{1}|^f{1}|^r{1}]/g, value: '\\' }*/}];for(var _i85=0;_i85<keyValuePairs.length;_i85++){str=str.replace(keyValuePairs[_i85].key,keyValuePairs[_i85].value);}return str;}/**
    * Document mouse down event handler.
    */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;if(that.disabled||that.readonly){return;}var target=event.originalEvent.target;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];var rootElement=target.getRootNode().host;while(rootElement){if(rootElement.closest('.jqx-drop-down-container')===that.$.dropDownContainer){that._isDropDownClicked=true;}rootElement=rootElement.getRootNode().host;}}else{that._isDropDownClicked=target.closest('.jqx-drop-down-container')===that.$.dropDownContainer;}var listItem=event.originalEvent.target.closest('jqx-list-item');if(that.hasRippleAnimation&&listItem){JQX.Utilities.Animation.Ripple.animate(listItem,event.pageX,event.pageY);}if(listItem||that._isDropDownClicked){that._preventDropDownClose=true;}}/**
    * Document Up event handler.
    */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;if(that.disabled){return;}var target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(!target){return;}if(that.displayMode==='escaped'&&target===that.$.input){that._handlePointerInEscapedSymbol();}if(that._isDropDownClicked||that.readonly){delete that._isDropDownClicked;return;}if(target===that.$.input&&that.dropDownOpenMode==='auto'){babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).call(this,true);return;}while(target){if(target instanceof JQX.ListItem&&target.ownerListBox===that.$.listBox){if(target.unselectable||target.disabled){return;}if(that.displayMode==='escaped'){that.value=target[that.inputMember];that.$.input.value=that._toEscapedDisplayMode(target[that.inputMember]);}else{that.$.input.value=that.value=target[that.inputMember];}that.$.fireEvent('change',{'oldValue':that._oldValue,'newValue':that.value,'type':'submit'});that._oldValue=that.value;that.enterKeyBehavior==='clearOnSubmit'&&(that.$.input.value=that.value='');babelHelpers.get(TextBox.prototype.__proto__||Object.getPrototypeOf(TextBox.prototype),'_autoComplete',this).call(this,true);that.close();target='item';that.$.input.focus();return;}else if(target===that.$.listBox){target='listBox';return;}target=target.parentElement;}if(target!=='listBox'&&target!=='item'){that.close();return;}}}],[{key:'properties',/** 
    * TextBox's properties 
    */get:function get(){return{'autoFocus':{value:false,type:'boolean'},'autoComplete':{allowedValues:['none','manual','auto','inline'],type:'string',value:'manual'},'displayMode':{value:'default',allowedValues:['default','escaped'],type:'string'},'dropDownOpenMode':{allowedValues:['none','default','auto'],value:'default',type:'string'},'enterKeyBehavior':{value:'submit',allowedValues:['submit','clearOnSubmit'],type:'string'},'form':{value:'',type:'string'},'hint':{value:null,reflectToAttribute:false,type:'any'},'maxLength':{value:null,type:'number?'},'minLength':{value:2,type:'number'},'messages':{extend:true,value:{'en':{'missingReference':'{{elementType}}: Missing reference to {{files}}.'}},type:'object'},'required':{value:false,type:'boolean'},'requiredMessage':{value:'',type:'string'},'selectAllOnFocus':{value:false,type:'boolean'},'selectionMode':{value:'zeroOrOne',allowedValues:['none','oneOrManyExtended','zeroOrMany','oneOrMany','zeroOrOne','one','checkBox','radioButton'],type:'string'},'type':{value:'input',type:'string',defaultReflectToAttribute:true,readonly:true},'value':{value:'',type:'string'}};}/**
    * TextBox's event listeners.
    */},{key:'listeners',get:function get(){return{'document.up':'_documentUpHandler','focus':'_focusHandler','keydown':'_keyDownHandler','mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','input.blur':'_focusHandler','input.change':'_textBoxChangeHandler','input.focus':'_focusHandler','input.keyup':'_textBoxKeyUpHandler','input.paste':'_textBoxChangeHandler','input.select':'_textBoxSelectHandler','listBox.bindingComplete':'_bindingCompleteHandler'};}},{key:'requires',get:function get(){return{'JQX.ComboBox':'jqxcombobox.js'};}/*
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.textbox.css'];}}]);return TextBox;}(JQX.ComboBox));/**
* MaskedTextBox custom element.
*/JQX('jqx-masked-text-box',function(_JQX$TextBox){babelHelpers.inherits(MaskedTextBox,_JQX$TextBox);function MaskedTextBox(){babelHelpers.classCallCheck(this,MaskedTextBox);return babelHelpers.possibleConstructorReturn(this,(MaskedTextBox.__proto__||Object.getPrototypeOf(MaskedTextBox)).apply(this,arguments));}babelHelpers.createClass(MaskedTextBox,[{key:'template',/**
    * MaskedTextBox's HTML template.
    */value:function template(){return'<div id="container">\n                    <span id="label" inner-h-t-m-l="[[label]]" class ="jqx-label"></span>\n                    <input type="text" id="input"\n                        autocomplete="off"\n                        autocorrect="off"\n                        autocapitalize="off"\n                        disabled="[[disabled]]"\n                        maxlength="[[maxLength]]"\n                        minlength="[[minLength]]"\n                        name="[[name]]"\n                        placeholder="[[placeholder]]"\n                        readonly="[[readonly]]">\n                    <span id="hint" inner-h-t-m-l="[[hint]]" class ="jqx-hint"></span>\n                </div>';}/**
    * Updates the MaskedTextBox when a property is  changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){// super.propertyChangedHandler(propertyName, oldValue, newValue);
var that=this;var maskValue=void 0;switch(propertyName){case'hidePromptOnLeave':if(newValue&&!that._focused){that._hidePrompt();}else if(that._promptHidden){that._showPrompt();}break;case'maxLength':if(that.mask.length>0){that.maxLength=oldValue;}break;case'maskCompleted':case'maskFull':that[propertyName]=oldValue;break;case'promptChar':that._updatePromptChar();break;case'placeholder':if(that._isPlaceholderRequired()){that.$.input.value='';that.$.removeClass('has-value');}else{that._updatePromptChar();}that._updatePromptChar();break;case'mask':maskValue=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},'excludePromptAndLiterals');if(that._isPlaceholderRequired()){that.$.input.value='';that.$.removeClass('has-value');}else{that._initializeMask();that._setValueToMask(maskValue);that._setMaskToInput();that.maxLength=that._mask.length;if(that._promptHidden){that._hidePrompt();}}break;case'value':that._overwrite=true;that._setValueToMask(newValue);that._overwrite=false;that._setMaskToInput();if(that._promptHidden){that._hidePrompt();}break;case'disabled':that._setFocusable();break;case'readonly':break;default:babelHelpers.get(MaskedTextBox.prototype.__proto__||Object.getPrototypeOf(MaskedTextBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);}/**
    * MaskedTextBox create element method.
    */},{key:'_createElement',value:function _createElement(){var that=this;if(that.autoFocus){that.$.input.focus();}that._setFocusable();that._initializeMask();that._updateMaxLength();if(that._isPlaceholderRequired()){that.$.input.value='';that.$.removeClass('has-value');}else{that._setValueToMask(that.value);that._setMaskToInput();that._updateMaskFullAndCompleted();that.$.addClass('has-value');}that.$.input.selectionStart=that.$.input.selectionEnd=0;that._initializationValue=that._value=that.value;that._rejectInput=false;}/**
    * MaskedTextBox blur handler.
    */},{key:'_blurHandler',value:function _blurHandler(){var that=this,requiresPlaceholder=that._isPlaceholderRequired();if(that.disabled){return;}if(that._valueBeforeChange!==that.value){that.$.fireEvent('change',{'newValue':that.value,'oldValue':that._valueBeforeChange});that._valueBeforeChange='';}that._hidePrompt();that._focused=false;that._validateMaskValue();that.removeAttribute('focus');that.$.input.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');if(requiresPlaceholder){that.$.input.value='';that.$.removeClass('has-value');}}/*
    * Controlls maskFull and maskCompleted readonly properties
    */},{key:'_updateMaskFullAndCompleted',value:function _updateMaskFullAndCompleted(){var that=this;var maskFull=true,maskCompleted=true,hasRequiredChar=false;for(var _i86=0;_i86<that._mask.length;_i86++){var maskElement=that._mask[_i86];if(maskElement.type==='mask'){if(maskElement.required){hasRequiredChar=true;}if(maskElement.character===''){if(maskElement.required){maskCompleted=false;}maskFull=false;}}}if(!maskFull&&maskCompleted&&!hasRequiredChar){maskCompleted=false;}that.maskFull=maskFull;that.maskCompleted=maskCompleted;}},{key:'_isPlaceholderRequired',value:function _isPlaceholderRequired(){var that=this,hasValue=that.value&&that.value.length>0,hasPlaceholder=that.placeholder.length>0,isRequired=!hasValue&&(hasPlaceholder||that.autoShowMask);return isRequired;}/*
    * Updates mask items with new value, based on the mask settings
    */},{key:'_cleanMask',value:function _cleanMask(startsAt,endsAt){var that=this;startsAt=startsAt?startsAt:0;endsAt=endsAt?endsAt:that._mask.length;for(var _i87=startsAt;_i87<endsAt;_i87++){var maskElement=that._mask[_i87];if(maskElement.type==='mask'){that._mask[_i87].character='';}}}/**
    *  Updates the clipboard data on cut/copy. The format of the value depends on cutCopyMaskFormat - ['excludePromptAndLiterals', 'includePrompt', 'includeLiterals', 'includePromptAndLiterals']
    */},{key:'_cutCopyHandler',value:function _cutCopyHandler(event,type){var that=this,selectionStart=parseInt(that.$.input.selectionStart,10),selectionEnd=parseInt(that.$.input.selectionEnd,10),selection=that._getValueWithTextMaskFormat({start:selectionStart,end:selectionEnd});if(window.clipboardData){window.clipboardData.setData('text/plain',selection);window.clipboardData.setData('text/html',selection);}if(event){that._preventDefault(event);}if(type==='Copy'){return selection;}that._cleanMask(selectionStart,selectionEnd);that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);that._setMaskToInput();that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart;that.maskFull=that.maskCompleted=false;return selection;}},{key:'_documentUpHandler',value:function _documentUpHandler(){}/**
    *  Delete handler. Removes single character if selectionStart=selectionEnd or all selected chars aind replaces them with a mask fragment
    */},{key:'_deleteHandler',value:function _deleteHandler(event){var that=this,selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd,key=event.key;var newSelectionStart=selectionStart;that._preventDefault(event);if(selectionStart===selectionEnd){if(key==='Backspace'){for(var _i88=selectionStart;_i88>0;_i88--){var maskItem=that._mask[_i88-1];if(maskItem.type==='mask'){newSelectionStart=_i88-1;maskItem.character='';break;}else{newSelectionStart=selectionStart-1;break;}}}else{for(var _i89=selectionStart;_i89<that._mask.length;_i89++){var _maskItem=that._mask[_i89];if(_maskItem.type==='mask'){newSelectionStart=_i89+1;_maskItem.character='';break;}else{newSelectionStart=selectionStart+1;break;}}}}else{that._cleanMask(selectionStart,selectionEnd);if(key==='Delete'){newSelectionStart=selectionEnd;}}that._setMaskToInput();that._updateMaskFullAndCompleted();that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);that.$.input.selectionStart=that.$.input.selectionEnd=newSelectionStart;}},{key:'_findNextOccupiedPosition',value:function _findNextOccupiedPosition(start){var that=this,maskLength=that._mask.length;var nextOccupiedPosition=start;for(var _i90=start;_i90<maskLength;_i90++){var maskElement=that._mask[_i90];if(maskElement.type==='mask'&&maskElement.character===''){nextOccupiedPosition++;}else{break;}}return nextOccupiedPosition;}/**
    * MaskedTextBox focus handler
    */},{key:'_focusHandler',value:function _focusHandler(event){var that=this;if(event.context.nodeName.toUpperCase()!=='INPUT'){that.$.input.focus();return;}if(that.disabled){return;}that.setAttribute('focus','');if(that.selectAllOnFocus){that.$.input.select();}that._showPrompt();that._focused=true;if(that._isPlaceholderRequired()){that._initializeMask();that._setValueToMask(that.value);that._setMaskToInput();var selectionStart=that._getEditableSelectionStart(0);that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart;}}/*
    * Combines mask elements into string and updates input's value
    */},{key:'_setMaskToInput',value:function _setMaskToInput(){var that=this;var mask='';for(var _i91=0;_i91<that._mask.length;_i91++){var maskElement=that._mask[_i91];var newCharacter=void 0;if(maskElement.type==='literal'||maskElement.type==='separator'||maskElement.type==='placeholder'||maskElement.type==='currency'){newCharacter=maskElement.character;}else if(maskElement.type==='mask'&&maskElement.character!==''){switch(maskElement.escapeSymbol){case'>':newCharacter=maskElement.character.toUpperCase();break;case'<':newCharacter=maskElement.character.toLowerCase();break;case'|':newCharacter=maskElement.character;break;case'\\':newCharacter=maskElement.character;break;default:newCharacter=maskElement.character;break;}}else{newCharacter=maskElement.defaultCharacter;}mask=mask+newCharacter;}that.$.input.value=mask;}/**
    *  Check if the entered character is format symbol
    */},{key:'_getEditableSelectionStart',value:function _getEditableSelectionStart(selectionStart,key){var that=this;for(var _i92=selectionStart;_i92<that._mask.length;_i92++){var maskItem=that._mask[_i92];if(maskItem.type!=='mask'){continue;}if(maskItem.character!==''&&!that.isOverwriteMode&&!(key===' '&&that.resetOnSpace)&&!(key===that.promptChar&&that.resetOnPrompt)){continue;}return _i92;}return-1;}},{key:'_getNonEditableSelectionStart',value:function _getNonEditableSelectionStart(selectionStart,key){var that=this;for(var _i93=selectionStart;_i93<that._mask.length;_i93++){var maskItem=that._mask[_i93];if(maskItem.type==='mask'){continue;}if(maskItem.character===key){return _i93;}}return-1;}/**
    *  Updates value in relation to the textMaskFormat
    */},{key:'_getValueWithTextMaskFormat',value:function _getValueWithTextMaskFormat(range,maskFormat){var that=this,rangeStart=range?range.start:0,rangeEnd=range?range.end:that._mask.length||that.$.input.value.length;var value='';maskFormat=maskFormat?maskFormat:that.cutCopyMaskFormat;if(maskFormat==='includePromptAndLiterals'){return that.$.input.value.substring(rangeStart,rangeEnd);}for(var _i94=rangeStart;_i94<rangeEnd;_i94++){var maskElement=that._mask[_i94];switch(maskFormat){case'excludePromptAndLiterals':if(maskElement.type!=='mask'){continue;}value=maskElement.character===''?value+' ':value+maskElement.character;break;case'includePrompt':if(maskElement.type!=='mask'){continue;}value=maskElement.character===''?value+maskElement.defaultCharacter:value+maskElement.character;break;case'includeLiterals':if(maskElement.type==='mask'&&maskElement.character===''){continue;}value=value+maskElement.character;break;}}return value.trim();}/**
    *  Hides prompt characters on blur when promt is hidden on hidePromptOnLeave=true
    */},{key:'_hidePrompt',value:function _hidePrompt(){var that=this,regex=new RegExp(that.promptChar,'g');if(that.disabled||!that.hidePromptOnLeave||that.mask.length===0){return;}that.$.input.value=that.$.input.value.replace(regex,' ');that._promptHidden=true;}/**
     *  Mask string is transformed to array of mask items
     */},{key:'_initializeMask',value:function _initializeMask(){var that=this;var maskLength=that.mask.length,escapeSymbol=void 0;that._mask=[];if(that.mask===undefined||that.mask===null||that.mask.length===0){return;}for(var _i95=0;_i95<maskLength;_i95++){var maskChar=that.mask.charAt(_i95);var maskElement={};maskElement.defaultCharacter=that.promptChar;switch(maskChar){case'0':maskElement.editable=true;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';// types : mask, literal, placeholder, separator, currency
maskElement.maskCharacter='0';maskElement.regex='\\d';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'9':maskElement.editable=true;maskElement.required=false;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='9';maskElement.regex='(\\d|\\s)';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'#':maskElement.editable=true;maskElement.required=false;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='#';maskElement.regex='(\\d|\\s|[+]|[-])';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'L':maskElement.editable=true;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='L';maskElement.regex='([a-zA-Zа-яА-Я])';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'?':maskElement.editable=true;maskElement.required=false;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='?';maskElement.regex='[a-zA-Zа-яА-Я]?';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'&':maskElement.editable=true;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='&';maskElement.regex='[^\\s]';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'C':maskElement.editable=true;maskElement.required=false;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='C';maskElement.regex='.';maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'A':maskElement.editable=true;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='A';maskElement.regex='[a-zA-Zа-яА-Я]';//'[a-zA-Zа-яА-Я]'
maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'a':maskElement.editable=true;maskElement.required=false;maskElement.escapeSymbol=escapeSymbol;maskElement.type=maskElement.escapeSymbol==='\\'?'literal':'mask';maskElement.maskCharacter='a';maskElement.regex='[a-zA-Zа-яА-Я]?';//'[a-zA-Zа-яА-Я]'
maskElement.character=maskElement.escapeSymbol==='\\'?maskElement.maskCharacter:'';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'.':maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='placeholder';maskElement.maskCharacter='.';maskElement.regex=null;maskElement.character='.';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case',':maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='placeholder';maskElement.maskCharacter=',';maskElement.regex=null;maskElement.character=',';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case':':maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='separator';maskElement.maskCharacter=':';maskElement.regex=null;maskElement.character=':';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'/':maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='separator';maskElement.maskCharacter='/';maskElement.regex=null;maskElement.character='/';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'$':maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='currency';maskElement.maskCharacter='$';maskElement.regex=null;maskElement.character='$';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;break;case'<'://  escapeSymbol = escapeSymbol === '|' ? null : '<';
if(escapeSymbol){if(escapeSymbol==='|'){escapeSymbol=null;}else if(escapeSymbol==='\\'){maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='literal';maskElement.maskCharacter='<';maskElement.regex='<';maskElement.character='<';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;}else{escapeSymbol='<';}}else{escapeSymbol='<';}break;case'>'://escapeSymbol = escapeSymbol === '|' ? null : '>';
if(escapeSymbol){if(escapeSymbol==='|'){escapeSymbol=null;}else if(escapeSymbol==='\\'){maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='literal';maskElement.maskCharacter='>';maskElement.regex='>';maskElement.character='>';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;}else{escapeSymbol='>';}}else{escapeSymbol='>';}break;case'|'://escapeSymbol = '|';
if(escapeSymbol){if(escapeSymbol==='\\'){maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='literal';maskElement.maskCharacter='|';maskElement.regex='|';maskElement.character='|';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;}else{escapeSymbol='|';}}else{escapeSymbol='|';}break;case'\\'://escapeSymbol = '\\';
if(escapeSymbol){if(escapeSymbol==='\\'){maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='literal';maskElement.maskCharacter='\\';maskElement.regex='\\';// Invalid regular expression: /\/: \ at end of pattern
maskElement.character='\\';maskElement.defaultCharacter=that.promptChar;escapeSymbol=null;}else{escapeSymbol='\\';}}else{escapeSymbol='\\';}break;default:// literals
maskElement.editable=false;maskElement.required=true;maskElement.escapeSymbol=escapeSymbol;maskElement.type='literal';maskElement.maskCharacter=maskChar;maskElement.regex=null;maskElement.character=maskChar;maskElement.defaultCharacter=maskChar;escapeSymbol=null;break;}if(escapeSymbol){continue;}if(maskElement.type){that._mask.push(maskElement);}}}/**
     * Base keyDownHandler
     */},{key:'_keyDownHandler',value:function _keyDownHandler(){}/**
    *  Check if the entered character is allowed symbol
    */},{key:'_validateInput',value:function _validateInput(character,position){var that=this,maskElement=that._mask[position],regEx=new RegExp(maskElement.regex);return regEx.test(character);}/*
    * Updates mask items with new value, based on the mask settings
    */},{key:'_setValueToMask',value:function _setValueToMask(value,selection){var that=this,newValue=value||'',valueLength=newValue.length;var selectionStart=selection&&selection.start?selection.start:0;var selectionEnd=selection&&selection.end?selection.end:that._mask.length;var latestUpdatedPosition=selectionStart,latestValueChar=0;while(latestUpdatedPosition<selectionEnd&&latestValueChar<valueLength){if(that._mask[latestUpdatedPosition].type==='mask'){latestValueChar++;}if(that._setCharAtPosition(newValue.charAt(latestValueChar-1),latestUpdatedPosition)||that._mask[latestUpdatedPosition].type!=='mask'){latestUpdatedPosition++;}}if(latestUpdatedPosition<selectionEnd){for(var _i96=latestUpdatedPosition;_i96<selectionEnd;_i96++){if(that._mask[_i96].type==='mask'){that._mask[_i96].character='';}}}if(selection){selection.start=latestUpdatedPosition;}}/**
     *  Combination of preventDefault and stopPropagation. Used in several places
     */},{key:'_preventDefault',value:function _preventDefault(event){if(event.preventDefault){event.preventDefault();}if(event.stopPropagation){event.stopPropagation();}}/**
    *  Shows prompt characters on focus when promt is hidden on hidePromptOnLeave=true
    */},{key:'_showPrompt',value:function _showPrompt(){var that=this;if(that.disabled||!that._promptHidden){return;}that._setMaskToInput();}/**
    *  MaskedTextBox change handler
    */},{key:'_textBoxChangeHandler',value:function _textBoxChangeHandler(){var that=this;if(that.disabled||that.readonly){return;}that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);if(that._valueBeforeChange!==that.value){that.$.fireEvent('change',{'newValue':that.value,'oldValue':that._valueBeforeChange});that._valueBeforeChange='';that._validateMaskValue();}}/**
    *  MaskedTextBox key down handler
    */},{key:'_textBoxKeyDownHandler',value:function _textBoxKeyDownHandler(event){var that=this,key=event.key,ctrlPressed=event.ctrlKey,//shiftPressed = event.shiftKey,
ctrlHandledKeys=['a','c','v','x'],selectionEnd=that.$.input.selectionEnd,asciiRegExpString='xxx[\x00-\x7F]+xxx',asciiRegExp=new RegExp(asciiRegExpString),allSupportedKeyboardCharacters=/^[a-zA-ZÀ-ÿа-яА-Я0-9.!@?#"$%&:';()*\+,\/;\-=[\\\]\^_{|}<>~` ]+$/;var selectionStart=that.$.input.selectionStart;if(ctrlPressed&&ctrlHandledKeys.indexOf(key)>-1){var performClipboard=function performClipboard(command,callback){var textArea=document.createElement('textarea');textArea.style.position='absolute';textArea.style.left='-1000px';textArea.style.top='-1000px';document.body.appendChild(textArea);textArea.focus();if(command==='Paste'){setTimeout(function(){var value=textArea.value;if(value.length===0&&window.clipboardData){// pasteFrom.value = window.clipboardData.getData('Text');
textArea.value=window.clipboardData.getData('Text');value=textArea.value;}textArea.parentNode.removeChild(textArea);that.$.input.focus();callback(value);},25);}else{textArea.value=that._cutCopyHandler(null,command);textArea.focus();textArea.setSelectionRange(0,textArea.value.length);setTimeout(function(){document.designMode='off';textArea.focus();textArea.parentNode.removeChild(textArea);that.$.input.focus();},25);if(window.clipboardData){window.clipboardData.setData('Text',textArea.value);}}};switch(key){case'a':that.$.input.setSelectionRange(0,that.$.input.value.length);break;case'c':performClipboard('Copy');break;case'v':performClipboard('Paste',function(text){var context=that.context;that.context=that;that._textBoxPasteHandler(null,text);that.context=context;});break;case'x':performClipboard('Cut');break;}return;}if(key==='Backspace'){that._deleteHandler(event);that._updateMaskFullAndCompleted();return;}if(key==='Delete'){that._deleteHandler(event);that._updateMaskFullAndCompleted();return;}if(!that.allowPromptAsInput&&key===that.promptChar){that._preventDefault(event);return;}if(that.disabled||that.readonly||that.asciiOnly&&!asciiRegExp.test(key)||!allSupportedKeyboardCharacters.test(key)||key.length>1){return;}that._preventDefault(event);if(selectionStart===selectionEnd&&selectionStart===that.$.input.value.length){return;}if(key===' '&&!that.resetOnSpace){return;}selectionStart=that._getEditableSelectionStart(selectionStart,key);var nonEditableKeyHandler=function nonEditableKeyHandler(){selectionStart=that._getNonEditableSelectionStart(that.$.input.selectionStart,key);if(selectionStart!==-1){that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart+1;}};if(selectionStart===-1){nonEditableKeyHandler();return;}var isChanged=that._setCharAtPosition(key,selectionStart);if(isChanged){that._setMaskToInput();that._updateMaskFullAndCompleted();that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart+1;}else{nonEditableKeyHandler();}}/**
    *  MaskedTextBox key up handler
    */},{key:'_textBoxKeyUpHandler',value:function _textBoxKeyUpHandler(){var that=this;that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);}/**
    *  MaskedTextBox paste handler
    */},{key:'_textBoxPasteHandler',value:function _textBoxPasteHandler(event,value){var that=this,textBoxValue=that.$.input.value,selectionStart=that.$.input.selectionStart;var newValue=void 0,selectionEnd=that.$.input.selectionEnd;if(event){that._preventDefault(event);}if(window.clipboardData&&window.clipboardData.getData){newValue=window.clipboardData.getData('Text');}else if(event&&event.clipboardData&&event.clipboardData.getData){newValue=event.clipboardData.getData('text/plain');}else if(value){newValue=value;}if(selectionEnd-selectionStart!==textBoxValue.length){if(selectionStart===selectionEnd){that.$.input.selectionEnd=selectionEnd=that._mask.length;}if(that.rejectInputOnFirstFailure){var latestTestedValueChar=0;for(var _i97=selectionStart;_i97<selectionEnd;_i97++){if(that._mask[_i97].type==='mask'){if(!that._validateInput(newValue.charAt(latestTestedValueChar),_i97)){that.$.input.selectionStart=that.$.input.selectionEnd=selectionStart;return;}else{latestTestedValueChar++;}if(latestTestedValueChar>newValue.length){break;}}}}var selection={start:selectionStart,end:selectionEnd};that._overwrite=true;that._setValueToMask(newValue,selection);that._setMaskToInput();that._updateMaskFullAndCompleted();that.$.input.selectionStart=that.$.input.selectionEnd=selection.start;that.value=that._getValueWithTextMaskFormat({start:0,end:that._mask.length},that.textMaskFormat);}}/*
    * Updates custom mask item
    */},{key:'_setCharAtPosition',value:function _setCharAtPosition(newChar,position){var that=this,maskItem=that._mask[position];if(newChar===' '&&that.resetOnSpace){newChar='';}if(maskItem.type!=='mask'||that.readonly||that.disabled||!maskItem.editable){return false;}if(newChar===''&&!that.resetOnSpace){return false;}if(newChar===that.promptChar&&!that.resetOnPrompt&&that.allowPromptAsInput){return false;}if(!that.isOverwriteMode&&newChar!==''&&newChar!==that.promptChar&&maskItem.character!==''&&!that._overwrite){return false;}var regex=maskItem.regex;if(regex){var regExpr=new RegExp(regex,'i');if(regExpr.test(newChar)){switch(maskItem.escapeSymbol){case'>':newChar=newChar.toUpperCase();break;case'<':newChar=newChar.toLowerCase();break;}that._mask[position].character=newChar;return true;}else if(that.resetOnSpace&&newChar===''){that._mask[position].character=newChar;return true;}else if(that.resetOnPrompt&&newChar===that.promptChar&&that.allowPromptAsInput){that._mask[position].character='';return true;}return false;}return false;}/**
     *  Updates maxLength property and input's max length
     */},{key:'_updateMaxLength',value:function _updateMaxLength(){var that=this;if(that._mask.length>0){that.maxLength=that._mask.length;}}/*
    * Updates prompt char
    */},{key:'_updatePromptChar',value:function _updatePromptChar(){var that=this;for(var _i98=0;_i98<that._mask.length;_i98++){var maskElement=that._mask[_i98];maskElement.defaultCharacter=that.promptChar;}that._setMaskToInput();}/*
    * Validates the value according to the 'validation' property
    */},{key:'_validateMaskValue',value:function _validateMaskValue(){var that=this;if(that.readonly||that.disabled||!that.validation||typeof that.validation!=='function'){return;}var value=that.value;var success=that.validation(value);if(!success){that.setAttribute('error','');}else{that.removeAttribute('error');}that.$.fireEvent('validation',{'success':success});}},{key:'_keyUpHandler',value:function _keyUpHandler(){return;}},{key:'_resizeHandler',value:function _resizeHandler(){}},{key:'_selectStartHandler',value:function _selectStartHandler(){}},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(){}},{key:'_applySelection',value:function _applySelection(){}},{key:'_setDropDownSize',value:function _setDropDownSize(){}},{key:'_styleChangedHandler',value:function _styleChangedHandler(){}}],[{key:'properties',/** 
    * MaskedTextBox's properties 
    */get:function get(){return{'allowPromptAsInput':{value:false,type:'boolean'},'asciiOnly':{value:false,type:'boolean'},'autoShowMask':{value:false,type:'boolean'},'cutCopyMaskFormat':{value:'excludePromptAndLiterals',allowedValues:['excludePromptAndLiterals','includePrompt','includeLiterals','includePromptAndLiterals'],type:'string'},'hidePromptOnLeave':{value:false,type:'boolean'},'hint':{value:'',reflectToAttribute:true,type:'string'},'isOverwriteMode':{value:false,type:'boolean'},'mask':{value:'#####',type:'string'},'maskCompleted':{value:false,type:'boolean'},'maskFull':{value:false,type:'boolean'},'promptChar':{value:'_',type:'string'},'rejectInputOnFirstFailure':{value:false,type:'boolean'},'resetOnPrompt':{value:false,type:'boolean'},'resetOnSpace':{value:false,type:'boolean'},'textMaskFormat':{value:'excludePromptAndLiterals',allowedValues:['excludePromptAndLiterals','includePrompt','includeLiterals','includePromptAndLiterals'],type:'string'},'validation':{value:null,type:'function?',reflectToAttribute:false},'value':{value:null,reflectToAttribute:true,type:'string?'}};}/**
    * MaskedTextBox's event listeners.
    */},{key:'listeners',get:function get(){return{'mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','input.copy':'_cutCopyHandler','input.change':'_textBoxChangeHandler','input.cut':'_cutCopyHandler','input.paste':'_textBoxPasteHandler','input.keydown':'_textBoxKeyDownHandler','input.keyup':'_textBoxKeyUpHandler','input.blur':'_blurHandler','input.focus':'_focusHandler'};}}]);return MaskedTextBox;}(JQX.TextBox));/**
* MultilineTextBox custom element.
*/JQX('jqx-multiline-text-box',function(_JQX$TextBox2){babelHelpers.inherits(MultilineTextBox,_JQX$TextBox2);function MultilineTextBox(){babelHelpers.classCallCheck(this,MultilineTextBox);return babelHelpers.possibleConstructorReturn(this,(MultilineTextBox.__proto__||Object.getPrototypeOf(MultilineTextBox)).apply(this,arguments));}babelHelpers.createClass(MultilineTextBox,[{key:'attached',/**
     * Called when the element is attached to the DOM.
     */value:function attached(){var that=this;babelHelpers.get(MultilineTextBox.prototype.__proto__||Object.getPrototypeOf(MultilineTextBox.prototype),'attached',this).call(this);if(!that._scrollView){that._scrollView=new JQX.Utilities.Scroll(that.$.input,that.$.horizontalScrollBar,that.$.verticalScrollBar);}}},{key:'detached',value:function detached(){var that=this;babelHelpers.get(MultilineTextBox.prototype.__proto__||Object.getPrototypeOf(MultilineTextBox.prototype),'detached',this).call(this);if(that._scrollView){that._scrollView.unlisten();delete that._scrollView;}}},{key:'template',/**
    * MultilineTextBox's HTML template.
    */value:function template(){return'<div id="container">\n                    <span id="label" inner-h-t-m-l="[[label]]" class="jqx-label"></span>\n                    <div id="innerContainer" class="jqx-inner-container">\n                            <textarea class="jqx-input" id="input"\n                                autocapitalize="[[autoCapitalize]]"\n                                autocomplete="off"\n                                cols="[[cols]]"\n                                disabled="[[disabled]]"\n                                maxlength="[[maxLength]]"\n                                minlength="[[minLength]]"\n                                name="[[name]]"\n                                placeholder="[[placeholder]]"\n                                readonly="[[readonly]]"\n                                required="[[required]]"\n                                rows="[[rows]]"\n                                spellcheck="[[spellCheck]]"\n                                wrap="[[wrap]]"></textarea>\n                            <jqx-scroll-bar id="verticalScrollBar" animation="[[animation]]" disabled="[[disabled]]" orientation="vertical"></jqx-scroll-bar>\n                            <jqx-scroll-bar id="horizontalScrollBar" animation="[[animation]]" disabled="[[disabled]]"></jqx-scroll-bar>\n                            <div id="resizeElement" class="jqx-resize-element"></div>\n                    </div>\n                            <textarea id="textBoxHidden"\n                                class="jqx-text-box-hidden"\n                                autocapitalize="[[autoCapitalize]]"\n                                autocomplete="off"\n                                cols="[[cols]]"\n                                disabled="[[disabled]]"\n                                inner-h-t-m-l="[[value]]"\n                                maxlength="[[maxLength]]"\n                                minlength="[[minLength]]"\n                                name="[[name]]"\n                                placeholder="[[placeholder]]"\n                                readonly="[[readonly]]"\n                                required="[[required]]"\n                                rows="[[rows]]"\n                                spellcheck="[[spellCheck]]"\n                                wrap="[[wrap]]"></textarea>\n                    <span id="hint" class="jqx-hint"></span>\n                </div>';}/**
    * Updates the TextBox when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'displayMode':switch(newValue){case'escaped':that.$.input.value=that._toEscapedDisplayMode(that.value);break;default:that.$.input.value=that.value=that._toDefaultDisplayMode(that.$.input.value);break;}that._autoExpandUpdate();that._handleScrollbarsDisplay();break;case'value':if(that._preventProgramaticValueChange){that._userValue=that.displayMode==='escaped'?that._toDefaultDisplayMode(that.$.input.value):that.$.input.value;that._programmaticValue=newValue;}else{that._userValue=that._programmaticValue=newValue;}switch(that.displayMode){case'escaped':that.$.input.value=that._toEscapedDisplayMode(that._userValue);break;default:that.$.input.value=that._userValue;break;}that._oldValue=oldValue;that._autoExpandUpdate();that._handleScrollbarsDisplay();break;case'horizontalScrollBarVisibility':case'verticalScrollBarVisibility':case'singleLine':case'wrap':case'resizable':case'placeholder':that._autoExpandUpdate();that._handleScrollbarsDisplay();break;case'selectionEnd':case'selectionStart':that._handleSelectedText();break;case'rows':case'cols':that._updateSizeRowsCols();break;case'disabled':that._setFocusable();break;case'animation':case'readonly':break;default:babelHelpers.get(MultilineTextBox.prototype.__proto__||Object.getPrototypeOf(MultilineTextBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Gets selected text in relation to a display mode
    */},{key:'selection',value:function selection(displayMode){var that=this;var start=that.$.input.selectionStart,end=that.$.input.selectionEnd,value=that.value;if(that.displayMode==='escaped'){value=that.$.input.value.substring(start,end);if(displayMode==='escaped'){return value;}else{return that._toDefaultDisplayMode(value);}}if(displayMode==='escaped'){value=value.substring(start,end);return that._toEscapedDisplayMode(value);}value=value.substring(start,end);return value;}/**
    * Select Method 
    */},{key:'select',value:function select(start,end){var that=this,args=Array.from(arguments).slice(0,2);var selectionStart=void 0,selectionEnd=void 0;for(var _i99 in args){args[_i99]=parseInt(args[_i99])||0;}if(args.length===2){selectionStart=Math.min([start,end]);selectionEnd=Math.max([start,end]);}else{selectionStart=args[0];}if(args.length===2){selectionStart=parseInt(selectionStart);if(selectionStart>0){selectionStart=selectionStart<that.$.input.length?that.$.input.length:selectionStart;}else{selectionStart=0;}if(selectionEnd<selectionStart){selectionEnd=selectionStart;}else if(selectionEnd>that.$.input.length){selectionStart=0;}that.$.input.focus();that.$.input.setSelectionRange(selectionStart,selectionEnd);return;}else if(args.length===1){that.$.input.focus();that.$.input.setSelectionRange(selectionStart,selectionStart+1);return;}that.$.input.select();}/**
    * Updates the height of the multiline text box according to the number of text rows
    */},{key:'_autoExpandUpdate',value:function _autoExpandUpdate(){var that=this;if(!that.autoExpand){return;}that.$.textBoxHidden.value=that.$.input.value;that.$.textBoxHidden.style.cssText='height:0px';that.$.input.style.cssText='height:'+that.$.textBoxHidden.scrollHeight+'px';}},{key:'_blurHandler',value:function _blurHandler(){var that=this;if(that._outsideAutoScroll){clearInterval(that._outsideAutoScroll);// new
}that.removeAttribute('focus');that._preventProgramaticValueChange=false;that._oldValue=that.value;that.value=that._userValue||that.value;}/**
    * MultilineTextBox create element method.
    */},{key:'_createElement',value:function _createElement(){var that=this;if(that.autoFocus){//that.$.input.focus();
if(navigator.userAgent.match(/Edge/)){setTimeout(function(){that.$.input.focus();that.setAttribute('focus','');},10);}else{that.$.input.focus();that.setAttribute('focus','');}}//  that.autoExpand = (that.theme.indexOf('material') > -1 || that.autoExpand) ? true : false;//
var wrappedText=that.$.input.innerHTML;if(that.value){that.$.input.innerHTML=that.displayMode==='escaped'?that._toEscapedDisplayMode(that.value):that.value;}else if(wrappedText.length>0&&that.displayMode==='escaped'){that.value=wrappedText;that.$.input.innerHTML=that._toEscapedDisplayMode(wrappedText);}else if(wrappedText.length>0){that.value=wrappedText;}that._setFocusable();that._syncTextBoxContentOnInitialization();that._scrollView=new JQX.Utilities.Scroll(that.$.input,that.$.horizontalScrollBar,that.$.verticalScrollBar);that._autoExpandUpdate();that._handleScrollbarsDisplay();that._initializationValue=that._oldValue=that.value;that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');that._handleHintContainer();}/**
    * Handles the display of the scrollbars, based on set properties and text length.
    */},{key:'_handleScrollbarsDisplay',value:function _handleScrollbarsDisplay(event){var that=this,textBox=that.$.input;setTimeout(function(){switch(that.horizontalScrollBarVisibility){case'disabled':that.$container.addClass('hscroll');that.$.horizontalScrollBar.disabled=true;break;case'hidden':that.$container.removeClass('hscroll');break;case'visible':that.$container.addClass('hscroll');that._scrollView.scrollWidth=textBox.scrollWidth-textBox.clientWidth;that._scrollView.scrollTo(that.$.input.scrollLeft,true);that.$.horizontalScrollBar.disabled=false;break;default:if(textBox.scrollWidth>textBox.clientWidth){that.$container.addClass('hscroll');that._scrollView.scrollWidth=textBox.scrollWidth-textBox.clientWidth;if(event&&event.type==='resize'){that.$.input.scrollLeft=that._scrollView.scrollLeft;}else{that._scrollView.scrollTo(that.$.input.scrollLeft,true);}}else{that.$container.removeClass('hscroll');}that.$.horizontalScrollBar.disabled=false;}switch(that.verticalScrollBarVisibility){case'disabled':that.$container.addClass('vscroll');that.$.verticalScrollBar.disabled=true;break;case'hidden':that.$container.removeClass('vscroll');break;case'visible':that.$container.addClass('vscroll');that._scrollView.scrollHeight=textBox.scrollHeight-textBox.clientHeight;that._scrollView.scrollTo(that.$.input.scrollTop);that.$.verticalScrollBar.disabled=false;break;default:if(textBox.scrollHeight>textBox.clientHeight){that.$container.addClass('vscroll');that._scrollView.scrollHeight=textBox.scrollHeight-textBox.clientHeight;if(event&&event.type==='resize'){that.$.input.scrollTop=that._scrollView.scrollTop;}else{that._scrollView.scrollTo(that.$.input.scrollTop);}}else{that.$container.removeClass('vscroll');}that.$.verticalScrollBar.disabled=false;}},0);}/**
   * Focus handler. Selects whole text in element's text area on selectAllOnFocus: true
   */},{key:'_focusHandler',value:function _focusHandler(event){var that=this;if(that.disabled){return;}if(event.target===that){that.$.input.focus();that._edgeSelect=false;return;}that.setAttribute('focus','');if(that.selectAllOnFocus){if(navigator.userAgent.match(/Edge/)){var scrollTop=that.$.input.scrollTop;if(that._edgeSelect){that._edgeSelect=false;return;}setTimeout(function(){that._edgeSelect=true;that.$.input.select();that.$.input.scrollTop=scrollTop;},5);}else{that.$.input.select();}}}/**
    * Horizontal scrollbar handler.
    */},{key:'_horizontalScrollbarHandler',value:function _horizontalScrollbarHandler(event){var that=this;if(that.disabled||that.horizontalScrollBarVisibility==='hidden'||that.horizontalScrollBarVisibility==='disabled'){return;}event.stopPropagation();that.$.input.scrollLeft=event.detail.value;}/**
    * keyDown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,key=event.key,shiftKey=event.shiftKey,ctrlKey=event.ctrlKey,value=that.$.input.value;function replaceEscapedKeyWith(newValue){var selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd,value=that.$.input.value;event.preventDefault();that.$.input.value=value.substring(0,selectionStart)+newValue+value.substring(selectionEnd,value.length);that.value=that._toDefaultDisplayMode(that.$.input.value);that.$.input.selectionStart=selectionStart+2;that.$.input.selectionEnd=selectionStart+2;}if(that.allowVerticalScrollbar&&that.$.input.selectionEnd>that.$.input.value.length-5){that._scrollView.scrollTo(that._scrollView.scrollTop+(event.deltaY<0?-that.offsetHeight:that.offsetHeight));}if(key.indexOf('Arrow')>-1){event.stopPropagation();return;}switch(key){case'Enter':{if(that.enterKeyBehavior==='newLine'&&!ctrlKey&&!shiftKey){if(that.displayMode==='escaped'){replaceEscapedKeyWith('\\n');}break;}event.preventDefault();that._userValue=that.displayMode==='escaped'?that._toDefaultDisplayMode(that.$.input.value):that.$.input.value;that.value=that._userValue;if(value!==''&&that._userValue!==that._oldValue){that.$.fireEvent('change',{'oldValue':that._oldValue,'value':value,'type':'submit'});}if(that.enterKeyBehavior==='clearOnSubmit'){that.$.input.value='';}that._oldValue=that.value=that._toDefaultDisplayMode(that.$.input.value);that._submitted=true;if(that.displayMode==='escaped'&&that.enterKeyBehavior.toLowerCase().indexOf('submit')<0&&!ctrlKey&&!shiftKey){replaceEscapedKeyWith('\\n');}if(that.enterKeyBehavior==='submit'||that.enterKeyBehavior==='newLine'&&ctrlKey){that.$.input.blur();}break;}case'Escape':if(that.escKeyMode==='none'){return;}switch(that.escKeyMode){case'none':break;case'clearValue':that.value=that.$.input.value='';break;case'previousValue':that.$.input.value=that.displayMode==='escaped'?that._toEscapedDisplayMode(that._oldValue):that._oldValue;break;}break;case' ':if(that.displayMode==='escaped'){replaceEscapedKeyWith('\\s');}break;case'Backspace':if(that.displayMode==='escaped'&&that.$.input.selectionStart===that.$.input.selectionEnd){var carretPosition=that.$.input.selectionStart;if(value[carretPosition-2]==='\\'&&(value[carretPosition-1]==='s'||value[carretPosition-1]==='n')){that.$.input.value=that.$.input.value.substring(0,carretPosition-2)+that.$.input.value.substring(carretPosition-2,that.$.input.value.length);that.$.input.selectionStart=carretPosition-2;}}if(that._scrollView){that._handleScrollbarsDisplay();}break;}}/**
    * TextBox keyUp event handler.
    */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this,key=event.key;switch(key){case'ArrowLeft':case'ArrowUp':case'ArrowDown':that._handlePointerInEscapedSymbol();break;case'ArrowRight':that._handlePointerInEscapedSymbol('next');break;}that._autoExpandUpdate();that._userValue=that.displayMode==='escaped'?that._toDefaultDisplayMode(that.$.input.value):that.$.input.value;that._submitKeyUpHandler();}/**
   * MultilineTextBox keyDown event handler.
   */},{key:'_textBoxKeyDownHandler',value:function _textBoxKeyDownHandler(event){var that=this,key=event.key;if(that._scrollView){that._handleScrollbarsDisplay();}that._autoExpandUpdate();that.value&&that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');if(['Enter','Escape'].indexOf(key)===-1){that._preventProgramaticValueChange=true;}if(['ArrowLeft','ArrowUp','ArrowDown','ArrowRight'].indexOf(key)>-1){that._scrollView.scrollTo(that.$.input.scrollTop);}if(['PageUp','PageDown'].indexOf(key)>-1&&JQX.Utilities.Core.Browser.Chrome){if(event.key==='PageUp'){that.$.input.setSelectionRange(0,0);that.$.input.scrollTop=0;}if(event.key==='PageDown'){that.$.input.setSelectionRange(that.$.input.value.length,that.$.input.value.length);that.$.input.scrollTop=that._scrollView.verticalScrollBar.max;}event.preventDefault();}}/**
    * Mouse wheel handler.
    */},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(event){var that=this;if(that.disabled||that.$.verticalScrollBar.disabled){return;}that._scrollView.scrollTo(that._scrollView.scrollTop+(event.deltaY<0?-that.offsetHeight:that.offsetHeight));that.$.input.scrollTop+=event.deltaY<0?-that.offsetHeight:that.offsetHeight;if(that.$.input.scrollTop>0){event.preventDefault();}}/**
    * Gets the text in the TextBox before widget's initialization
    */},{key:'_syncTextBoxContentOnInitialization',value:function _syncTextBoxContentOnInitialization(){var that=this;var value=void 0;if(that.value===''){value=that.innerHTML;}else{value=that.value;}if(that.displayMode==='escaped'){if(value.match(/\r\n|\n\r|\n|\r|\s|\t|\f|\r/g)){that.value=that._initializationValue=value;that.$.input.value=that._toEscapedDisplayMode(value);}else{that.value=that._initializationValue=that._toDefaultDisplayMode(value);that.$.input.value=value;}return;}that.$.input.value=that.value=that._initializationValue=value;}/**
    * TextBox change handler.
    */},{key:'_textBoxChangeHandler',value:function _textBoxChangeHandler(event){var that=this,clipboardData=event.clipboardData||event.originalEvent&&event.originalEvent.clipboardData||window.clipboardData,oldValue=that.value;if(that.displayMode==='escaped'){var selectionStart=that.$.input.selectionStart,selectionEnd=that.$.input.selectionEnd;if(clipboardData){var clipboardValue=clipboardData.getData('text'),_value20=that.$.input.value;event.preventDefault();clipboardValue=that._toEscapedDisplayMode(clipboardValue);that.$.input.value=_value20.substring(0,selectionStart)+clipboardValue+_value20.substring(selectionEnd,_value20.length);}that.value=that._toDefaultDisplayMode(that.$.input.value);}else{that.value=that.$.input.value;}that._handleScrollbarsDisplay();that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');if(!clipboardData){that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue,'type':'blur'});}that._handleHintContainer();}/**
    * Resize Element down handler.
    */},{key:'_resizeDownHandler',value:function _resizeDownHandler(){var that=this;if(that.disabled||!that.resizable){return;}that._resizeStarted=true;that.$container.addClass('jqx-resize');if(!that.readonly){that.$.input.setAttribute('readonly','');}}/**
    * Resize Element move handler.
    */},{key:'_resizeMoveHandler',value:function _resizeMoveHandler(event){var that=this;if(that.disabled||!that.resizable||!that._resizeStarted){return;}var rectObject=that.getBoundingClientRect(),min={width:50,height:50},newWidth=event.clientX-rectObject.left,newHeight=event.clientY-rectObject.top;if(newWidth>min.width){that.style.width=newWidth+'px';}if(newHeight>min.height){that.style.height=newHeight+'px';}}/**
    * Update size on cols and rows change.
    */},{key:'_updateSizeRowsCols',value:function _updateSizeRowsCols(){var that=this;that.$.container.removeAttribute('style');setTimeout(function(){if((that.horizontalScrollBarVisibility==='disabled'||that.horizontalScrollBarVisibility==='hidden')&&(that.verticalScrollBarVisibility==='disabled'||that.verticalScrollBarVisibility==='hidden')){return;}var rectObject=that.getBoundingClientRect();that.$.container.style.width=rectObject.width+'px';that.$.container.style.height=rectObject.height+'px';},0);}/**
    * Up handler.
    */},{key:'_upHandler',value:function _upHandler(event){var that=this;that._selectionStarted=false;if(that.disabled){return;}if(event.originalEvent.target===that.$.input){that._handlePointerInEscapedSymbol();return;}that.$container.removeClass('jqx-resize');if(!that.readonly){that.$.input.removeAttribute('readonly');}if(that._resizeStarted){that.$.input.focus();}that._resizeStarted=false;}/**
    * Vertical scrollbar handler.
    */},{key:'_verticalScrollbarHandler',value:function _verticalScrollbarHandler(event){var that=this;if(that.disabled||that.verticalScrollBarVisibility==='disabled'||that.verticalScrollBarVisibility==='hidden'){return;}event.stopPropagation();that.$.input.scrollTop=event.detail.value;}/**
    * Used in drag outside support.
    */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;that._selectionStarted=false;if(!event.originalEvent||!that.contains(event.originalEvent.target)){return;}that._selectionStarted=true;that._selectionStartTime=new Date();that._pointerDown={pageX:event.pageX,pageY:event.pageY};that._edgeSelect=false;}},{key:'_documentSelectionOutsideHandler',value:function _documentSelectionOutsideHandler(event){var that=this,coordOffset=10;clearInterval(that._outsideAutoScroll);if(!that._selectionStarted){return;}var inputCoord=that.$.input.getBoundingClientRect(),topBound=inputCoord.y+coordOffset,bottomBound=inputCoord.y+inputCoord.height-coordOffset;if(event.pageY>topBound&&event.pageY<bottomBound){return;}var standardClickDelay=300;var isClick=new Date()-that._selectionStartTime<standardClickDelay;var isDrag=!isClick&&(Math.abs(that._pointerDown.pageX-event.pageX)>=3||Math.abs(that._pointerDown.pageY-event.pageY)>=3);if(!isDrag){return;}that._outsideAutoScroll=setInterval(function(){scrollElement();scrollElement(true);},10);function scrollElement(horizontally){var elementCoordinates=that.getBoundingClientRect(),documentElement=document.documentElement,pointerOffset=horizontally?elementCoordinates.left+documentElement.scrollLeft-event.pageX:elementCoordinates.top+documentElement.scrollTop-event.pageY,suffix=horizontally?'Left':'Top';if(pointerOffset>0){that.$.input['scroll'+suffix]-=10;that._scrollView['scroll'+suffix]-=10;}else{that.$.input['scroll'+suffix]+=10;that._scrollView['scroll'+suffix]+=10;}}}},{key:'_selectStartHandler',value:function _selectStartHandler(){}},{key:'_styleChangedHandler',value:function _styleChangedHandler(){}}],[{key:'properties',/** 
    * MultilineTextBox's properties 
    */get:function get(){return{'autoCapitalize':{value:'none',allowedValues:['none','words','characters'],type:'string'},'autoComplete':{value:'off',allowedValues:['on','off'],type:'string'},'autoExpand':{value:false,type:'boolean'},'cols':{value:20,type:'number?'},'enterKeyBehavior':{value:'newLine',allowedValues:['submit','clearOnSubmit','newLine'],type:'string'},'horizontalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'minLength':{value:0,type:'number'},'resizable':{value:false,type:'boolean'},'rows':{value:5,type:'number?'},'selectionDirection':{value:'none',allowedValues:['forward','backward','none'],type:'string'},'selectionEnd':{value:0,reflectToAttribute:false,type:'number'},'selectionStart':{value:0,reflectToAttribute:false,type:'number'},'spellCheck':{value:false,type:'boolean'},'type':{value:'textarea',type:'string',defaultReflectToAttribute:true,readonly:true},'verticalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'wrap':{value:'soft',allowedValues:['hard','soft','off'],type:'string'}};}/**
    * MultilineTextBox's event listeners.
    */},{key:'listeners',get:function get(){return{'down':'_documentDownHandler','document.mousemove':'_documentSelectionOutsideHandler','container.resize':'_handleScrollbarsDisplay','document.move':'_resizeMoveHandler','document.up':'_upHandler','focus':'_focusHandler','horizontalScrollBar.change':'_horizontalScrollbarHandler','keydown':'_keyDownHandler','mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','resize':'_handleScrollbarsDisplay','resizeElement.down':'_resizeDownHandler','styleChanged':'_handleScrollbarsDisplay','input.change':'_textBoxChangeHandler','input.focus':'_focusHandler','input.blur':'_blurHandler','input.keydown':'_textBoxKeyDownHandler','input.keyup':'_keyUpHandler','input.paste':'_textBoxChangeHandler','input.select':'_textBoxSelectHandler','wheel':'_mouseWheelHandler','verticalScrollBar.change':'_verticalScrollbarHandler'};}},{key:'requires',get:function get(){return{'JQX.ScrollBar':'jqxscrollbar.js'};}}]);return MultilineTextBox;}(JQX.TextBox));/**
* PasswordTextBox custom element.
*/JQX('jqx-password-text-box',function(_JQX$TextBox3){babelHelpers.inherits(PasswordTextBox,_JQX$TextBox3);function PasswordTextBox(){babelHelpers.classCallCheck(this,PasswordTextBox);return babelHelpers.possibleConstructorReturn(this,(PasswordTextBox.__proto__||Object.getPrototypeOf(PasswordTextBox)).apply(this,arguments));}babelHelpers.createClass(PasswordTextBox,[{key:'template',/**
    * PasswordTextBox's HTML template.
    */value:function template(){return'<div id="container">\n                    <span id="label" inner-h-t-m-l="[[label]]" class ="jqx-label"></span>\n                    <div id="innerContainer" class="jqx-inner-container">\n                            <input class ="jqx-input" type="password" id="input"\n                                disabled="[[disabled]]"\n                                maxlength="[[maxLength]]"\n                                minlength="[[minLength]]"\n                                name="[[name]]"\n                                placeholder="[[placeholder]]"\n                                value="[[value]]">\n                            <span id="passwordIcon" title="Show Password" class ="jqx-password-icon jqx-hidden">&#xe80a; </span>\n                    </div>\n                    <span id="hint" class ="jqx-hint"></span>\n                    <jqx-tooltip id="tooltip"\n                        open-mode="manual"\n                        arrow="[[tooltipArrow]]"\n                        tooltip-template="[[tooltipTemplate]]"\n                        position="[[tooltipPosition]]"\n                        delay="[[tooltipDelay]]">\n                     </jqx-tooltip>\n                </div>';}/**
    * Updates the PasswordTextBox when a property is  changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;var strength=void 0;switch(propertyName){case'locale':case'messages':case'passwordStrength':strength=that._evaluatePasswordStrength();that._updateTooltipString(strength);that.$.passwordIcon.setAttribute('title',that.localize('showPassword'));that._updatePasswordStrengthStyles(strength);break;case'tooltipPosition':that.$.tooltip.position=that.tooltipPosition;break;case'tooltipTemplate':that.$.tooltip.tooltipTemplate=that.tooltipTemplate;break;case'value':strength=that._evaluatePasswordStrength();that._updateTooltipString(strength);that._updatePasswordStrengthStyles(strength);break;case'disabled':that._setFocusable();break;case'readonly':break;default:babelHelpers.get(PasswordTextBox.prototype.__proto__||Object.getPrototypeOf(PasswordTextBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
     * Element's create method
     */},{key:'_createElement',value:function _createElement(){var that=this;if(that.autoFocus){that.$.input.focus();}that._setFocusable();that.$.tooltip.selector=that.$.innerContainer;that.$.passwordIcon.setAttribute('title',that.localize('showPassword'));that._updateTooltipString('short');that._updatePasswordStrengthStyles();that._initializationValue=that.value;that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');that._handleHintContainer();}/**
    * PasswordTextBox focus handler.
    */},{key:'_focusHandler',value:function _focusHandler(){var that=this;if(that.disabled){return;}if(that.selectAllOnFocus){that.$.input.select();}if(that.showPasswordIcon){that.$passwordIcon.removeClass('jqx-hidden');}that.setAttribute('focus','');that._valueBeforeChange=that.value;if(!that.showPasswordStrength){return;}if(!that._tooltipOpened){that.$.tooltip.open();that._tooltipOpened=true;}}/**
    * PasswordTextBox blur handler.
    */},{key:'_blurHandler',value:function _blurHandler(){var that=this;if(that.disabled||that._passwordIconPressed){return;}if(that._valueBeforeChange!==that.value){that.$.fireEvent('change',{'newValue':that.value,'oldValue':that._valueBeforeChange});that._valueBeforeChange='';}if(that.showPasswordIcon){that.$passwordIcon.addClass('jqx-hidden');}that.removeAttribute('focus');that.value.length>0?that.$.addClass('has-value'):that.$.removeClass('has-value');if(!that._tooltipOpened){return;}that.$.tooltip.close();that._tooltipOpened=false;}/**
    * Shows password if show passwor icon is pressed.
    */},{key:'_showPassword',value:function _showPassword(){var that=this;if(that.disabled||!that.showPasswordIcon){return;}that.$.input.type='text';that._passwordIconPressed=true;}/**
    * Hides password.
    */},{key:'_documentUpHandler',value:function _documentUpHandler(){var that=this;if(that.disabled||!that.showPasswordIcon||!that._passwordIconPressed){return;}that.$.input.type='password';that._passwordIconPressed=false;that.$.input.focus();}/**
    *  PasswordTextBox change handler.
    */},{key:'_textBoxChangeHandler',value:function _textBoxChangeHandler(){var that=this;if(that.disabled||that.readonly){return;}that.value=that.$.input.value;var strength=that._evaluatePasswordStrength();that._updateTooltipString(strength);that._updatePasswordStrengthStyles(strength);}/**
    *  Updates container's styles related to the password strength.
    */},{key:'_updatePasswordStrengthStyles',value:function _updatePasswordStrengthStyles(strength){var that=this,passwordStrengthOptions=['short','weak','far','good','strong'];strength=strength||'short';for(var _i100=0;_i100<passwordStrengthOptions.length;_i100++){that.$container.removeClass('jqx-password-'+passwordStrengthOptions[_i100]);}if(that.disabled){return;}that.$container.addClass('jqx-password-'+strength);}/**
    *  Evaluates the strength of the password string.
    */},{key:'_evaluatePasswordStrength',value:function _evaluatePasswordStrength(){var that=this,password=that.$.input.value,passwordLength=password.length,allowedSymbols='<>@!#$%^&*()_+[]{}?:;|\'"\\,./~`-=';if(that.disabled){return;}if(that.passwordStrength){return that.passwordStrength(password,allowedSymbols);}var letters=0,numbers=0,specials=0,passwordStrength=0;for(var i=0;i<passwordLength;i++){var charAt=password.charAt(i),charCodeAt=password.charCodeAt(i);if(charCodeAt>64&&charCodeAt<91||charCodeAt>96&&charCodeAt<123||charCodeAt>127&&charCodeAt<155||charCodeAt>159&&charCodeAt<166){letters+=1;continue;}if(isNaN(charAt)===false){numbers+=1;continue;}if(allowedSymbols.indexOf(charAt)!==-1){specials+=1;continue;}}passwordStrength=letters+numbers+2*specials+letters*numbers/2+passwordLength;if(passwordLength<8){return'short';}else{if(passwordStrength<20){return'weak';}else if(passwordStrength<30){return'far';}else if(passwordStrength<40){return'good';}else{return'strong';}}}},{key:'_keyUpHandler',value:function _keyUpHandler(){}},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(){}},{key:'_resizeHandler',value:function _resizeHandler(){}},{key:'_selectStartHandler',value:function _selectStartHandler(){}},{key:'_setDropDownSize',value:function _setDropDownSize(){}},{key:'_styleChangedHandler',value:function _styleChangedHandler(){}},{key:'_updateTooltipString',value:function _updateTooltipString(strength){var that=this;that.$.tooltip.value='<span class="password-strength-label">'+that.localize('passwordStrength')+':</span><span class="password-strength-value">'+that.localize(strength)+'</span>';}}],[{key:'properties',/** 
    * PasswordTextBox's properties 
    */get:function get(){return{'messages':{value:{'en':{'passwordStrength':'Password strength','short':'Short','weak':'Weak','far':'Far','good':'Good','strong':'Strong','showPassword':'Show password'}},type:'object',extend:true},'passwordStrength':{value:null,type:'function?',reflectToAttribute:false},'showPasswordIcon':{value:false,type:'boolean'},'showPasswordStrength':{value:false,type:'boolean'},'tooltipArrow':{value:false,type:'boolean'},'tooltipDelay':{value:0,type:'number'},'tooltipPosition':{allowedValues:['bottom','top','left','right','absolute'],value:'top',type:'string'},'tooltipTemplate':{value:null,type:'string?'},'type':{value:'password',type:'string',defaultReflectToAttribute:true,readonly:true},'value':{value:'',reflectToAttribute:false,type:'string'}};}},{key:'requires',get:function get(){return{'JQX.Tooltip':'jqxtooltip.js'};}/**
    * PasswordTextBox's event listeners.
    */},{key:'listeners',get:function get(){return{'document.up':'_documentUpHandler','blur':'_blurHandler','focus':'_focusHandler','mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','passwordIcon.down':'_showPassword','input.change':'_textBoxChangeHandler','input.paste':'_textBoxChangeHandler','input.keyup':'_textBoxChangeHandler','input.blur':'_blurHandler','input.focus':'_focusHandler'};}}]);return PasswordTextBox;}(JQX.TextBox));JQX.Utilities.Assign('Grid.Column',function(){function Column(column){babelHelpers.classCallCheck(this,Column);var that=this;if(typeof column!=='string'){Object.assign(that,column);}else{that.label=column;that.dataField=column;}if(!that.dataType){that.dataType='string';}if(!that.columnGroup){that.columnGroup='';}that.canNotify=true;var align='left';switch(that.dataType){case'string':case'date':align='left';break;case'number':align='right';break;case'boolean':align='center';break;}if(that.index===undefined){that.index=-1;}if(that.visibleIndex===undefined){that.visibleIndex=-1;}if(that.selected===undefined){that.selected=false;}if(!that.label){that.label='';}if(!that.menuItems){that.menuItems=null;}if(!that.icon){that.icon='jqx-icon-user';}if(!that.displayField){that.displayField=that.dataField;}if(!that.template){that.template='';}if(!that.editor){that.editor='input';}if(typeof that.editor==='string'){that.editor={template:that.editor,autoFocus:true};}else{if(undefined===that.editor.autoFocus){that.editor.autoFocus=true;}}that.menu=null;if(that.allowActionButtonAnimation===undefined){if(that.grid){that.allowActionButtonAnimation=that.grid.appearance.allowColumnActionButtonAnimation;}else{that.allowActionButtonAnimation=false;}}if(that.allowSortButtonAnimation===undefined){if(that.grid){that.allowSortButtonAnimation=that.grid.appearance.allowColumnSortButtonAnimation;}else{that.allowSortButtonAnimation=false;}}if(that.autoShowActionButton===undefined){if(that.grid){that.autoShowActionButton=that.grid.appearance.autoShowColumnActionButton;}else{that.autoShowActionButton=false;}}if(that.autoShowSortButton===undefined){if(that.grid){that.autoShowSortButton=that.grid.appearance.autoShowColumnSortButton;}else{that.autoShowSortButton=true;}}if(that.showSortButton===undefined){if(that.grid){that.showSortButton=that.grid.appearance.showColumnSortButton;}else{that.showSortButton=false;}}if(that.showIcon===undefined){if(that.grid){that.showIcon=that.grid.appearance.showColumnIcon;}else{that.showIcon=false;}}if(that.showDescriptionButton===undefined){if(that.grid){that.showDescriptionButton=that.grid.appearance.showColumnDescriptionButton;}else{that.showDescriptionButton=false;}}if(that.showCustomButton===undefined){if(that.grid){that.showCustomButton=that.grid.appearance.showColumnCustomButton;}else{that.showCustomButton=false;}}if(that.showActionButton===undefined){if(that.grid){that.showActionButton=that.grid.appearance.showColumnActionButton;}else{that.showActionButton=false;}}if(that.allowLabelAnimation===undefined){if(that.grid){that.allowLabelAnimation=that.grid.appearance.allowColumnLabelAnimation;}else{that.allowLabelAnimation=false;}}if(that.autoShowFilterButton===undefined){if(that.grid){that.autoShowFilterButton=that.grid.appearance.autoShowColumnFilterButton;}else{that.autoShowFilterButton=false;}}if(that.showFilterButton===undefined){if(that.grid){that.showFilterButton=that.grid.appearance.showColumnFilterButton;}else{that.showFilterButton=false;}}if(that.autoCloseMenu===undefined){if(that.grid){that.autoCloseMenu=that.grid.columnMenu.autoClose;}else{that.autoCloseMenu=true;}}if(!that.formatFunction){that.formatFunction=null;}if(!that.sortOrder){that.sortOrder=null;}if(!that.sortIndex){that.sortIndex=null;}if(!that.filter){that.filter=null;}if(!that.filterMenuMode){that.filterMenuMode='default';}if(!that.align){that.align=align;}if(!that.cellsAlign){that.cellsAlign=align;}if(!that.minWidth){that.minWidth=30;}if(!that.width){that.width='auto';}if(that.grid&&that.grid.columnWidth){that.width=that.grid.columnWidth;}if(that.visible===undefined){that.visible=true;}if(that.allowResize===undefined){that.allowResize=true;}if(that.allowReorder===undefined){that.allowReorder=true;}if(that.allowHide===undefined){that.allowHide=true;}if(that.allowSort===undefined){that.allowSort=true;}if(that.allowSelect===undefined){that.allowSelect=true;}if(that.allowSortToggleOnClick===undefined){that.allowSortToggleOnClick=true;}if(that.allowGroup===undefined){that.allowGroup=true;}if(that.allowFilter===undefined){that.allowFilter=true;}if(that.allowEdit===undefined){that.allowEdit=true;}if(that.allowExport===undefined){that.allowExport=true;}if(that.description===undefined){that.description='';}if(undefined===that.group){that.group=false;}if(!that.summary){that.summary=[];}that.selected=false;that.sorted=false;that.filtered=false;that.parent=null;that.children=[];}babelHelpers.createClass(Column,[{key:'refresh',value:function refresh(){var that=this;if(that.element){that.element._refresh();}}},{key:'render',value:function render(){var that=this;that.element.column=that;if(that.element){that.element._render();}}},{key:'setProperty',value:function setProperty(propertyName,value){var that=this;var oldValue=that.getProperty(propertyName);if(oldValue!==value){that.canNotify=false;that[propertyName]=value;that.propertyChanged(propertyName,oldValue,value);that.canNotify=true;}}},{key:'getProperty',value:function getProperty(propertyName){var that=this;if(propertyName==='selected'){var selected=false;if(that.grid._selection.cells['column'+that.dataField]){selected=null;}if(that.grid&&that.grid._selection.columns[that.dataField]){selected=true;}that.grid.columns.canNotify=false;that[propertyName]=selected;that.grid.columns.canNotify=true;return selected;}if(propertyName==='group'){if(that.dataSource&&that.dataSource.groupBy){return that.dataSource.groupBy.indexOf(that.dataField)>=0;}return false;}return that[propertyName];}},{key:'propertyChanged',value:function propertyChanged(propertyName,oldValue,newValue){var that=this;if(propertyName==='allowSort'||propertyName==='allowFilter'){that.refresh();return;}if(propertyName==='showIcon'){that.refresh();return;}if(propertyName==='visible'){that.grid.refresh(that.grid.grouping.enabled);return;}if(propertyName==='showCustomButton'){if(newValue){that.element._showCustomButton();}else{that.element._hideCustomButton();}}if(propertyName==='showDescriptionButton'){if(newValue){that.element._showDescriptionButton();}else{that.element._hideDescriptionButton();}}if(propertyName==='filter'){if(that.filter){that.grid.addFilter(that.dataField,that.filter);that.filtered=true;}else{that.grid.removeFilter(that.dataField);that.filtered=false;}if(that.autoShowFilterButton||that.showFilterButton){if(newValue){that.element._showFilterButton();}else{that.element._hideFilterButton();}}}if(propertyName==='sortIndex'){if(that.grid.sorting.mode==='many'){if(that.grid.context===document){that.grid.sortBy(that.dataField,that.sortOrder);}}return;}if(propertyName==='selected'){if(that.selectionColumn){that.refresh();}if(newValue){if(!that.grid._selection.columns[that.dataField]){that.grid._selection.columns[that.dataField]=true;}}else if(newValue===false){if(that.grid._selection.columns[that.dataField]){delete that.grid._selection.columns[that.dataField];}}that.grid._recycle(false);}if(propertyName==='sortOrder'){that.sorted=false;if(newValue===null){that.element._hideSortButton();}else{that.element._showSortButton();that.sorted=true;}if(that.grid.context===document){that.grid.sortBy(that.dataField,that.sortOrder);}return;}if(propertyName==='group'){if(that.grid.context===document){if(newValue){that.grid.addGroup(that.dataField);}else{that.grid.removeGroup(that.dataField);}}return;}if(propertyName==='showActionButton'){that.element.allowAnimations=false;if(newValue){that.element._showActionButton();}else{that.element._hideActionButton();}that.element.allowAnimations=true;}if(propertyName==='autoShowActionButton'){that.element.allowAnimations=false;if(!newValue){that.element._showActionButton();}else{that.element._hideActionButton();}that.element.allowAnimations=true;}if(propertyName==='showFilterButton'){that.element.allowAnimations=false;if(undefined===that._autoShowFilterButton){that._autoShowFilterButton=that.autoShowFilterButton;}if(newValue){that.autoShowFilterButton=false;that.element._showFilterButton();}else{that.element._hideFilterButton();that.autoShowFilterButton=that._autoShowFilterButton;}that.element.allowAnimations=true;}if(propertyName==='showSortButton'){that.element.allowAnimations=false;if(undefined===that._autoShowSortButton){that._autoShowSortButton=that.autoShowSortButton;}if(newValue){that.autoShowSortButton=false;that.element._showSortButton();}else{that.element._hideSortButton();that.autoShowSortButton=that._autoShowSortButton;}that.element.allowAnimations=true;}if(propertyName==='autoShowSortButton'){that.element.allowAnimations=false;that._autoShowSortButton=that.autoShowSortButton;if(!newValue){that.element._showSortButton();}else{that.element._hideSortButton();}that.element.allowAnimations=true;}if(propertyName==='menu'){if(newValue){that.element.setAttribute('aria-controls',that.menu.id);}else{that.element.removeAttribute('aria-controls');if(that.autoShowActionButton){that.element._hideActionButton();}}}if(propertyName==='label'||propertyName==='width'||propertyName==='minWidth'){that.grid.refresh();}if(propertyName==='freeze'){if(!newValue){if(that.freeze===true||that.freeze==='near'){that.element.removeAttribute('freeze');var index=that.grid._frozenNearColumns.indexOf(that);if(index>=0){that.grid._frozenNearColumns.splice(index,0,0);}}else if(that.freeze==='far'){var _index=that.grid._frozenFarColumns.indexOf(that);if(_index>=0){that.grid._frozenFarColumns.splice(_index,0,0);}}}else{that.element.setAttribute('freeze','');if(that.freeze){if(that.freeze===true||that.freeze==='near'){that.grid._frozenNearColumns.push(that);}else{that.grid._frozenFarColumns.push(that);}}}that.grid._createColumnHeaderCellElements();that.grid.refresh();}}},{key:'createElement',value:function createElement(){var that=this;var element=document.createElement('jqx-grid-column');element._initialize(that);that.element=element;that.grid.notify(function(propertyName,oldValue,newValue){switch(propertyName){case'appearance_allowColumnLabelAnimation':that.setProperty('allowLabelAnimation',newValue);break;case'appearance_allowColumnSortAnimation':that.setProperty('allowSortAnimation',newValue);break;case'appearance_allowColumnSortButtonAnimation':that.setProperty('allowSortButtonAnimation',newValue);break;case'appearance_allowColumnActionButtonAnimation':that.setProperty('allowActionButtonAnimation',newValue);break;case'appearance_allowColumnFilterButtonAnimation':that.setProperty('allowFilterButtonAnimation',newValue);break;case'appearance_autoShowColumnActionButton':that.setProperty('autoShowActionButton',newValue);break;case'appearance_autoShowColumnSortButton':that.setProperty('autoShowSortButton',newValue);break;case'appearance_autoShowColumnFilterButton':that.setProperty('autoShowFilterButton',newValue);break;case'appearance_showColumnActionButton':that.setProperty('showActionButton',newValue);break;case'appearance_showColumnFilterButton':that.setProperty('showFilterButton',newValue);break;case'appearance_showColumnCustomButton':that.setProperty('showCustomButton',newValue);break;case'appearance_showColumnDescriptionButton':that.setProperty('showDescriptionButton',newValue);break;case'appearance_showColumnSortButton':that.setProperty('showSortButton',newValue);break;case'appearance_showFrozenColumnBackground':case'appearance_showSortColumnBackground':case'appearance_showFilterColumnBackground':that.grid._recycle(false);break;}});return element;}},{key:'properties',get:function get(){return['allowExport','allowGroup','allowSelect','verticalAlign','columnGroup','cellsVerticalAlign','autoCloseMenu','autoShowActionButton','autoShowSortButton','autoShowFilterButton','allowLabelAnimation','allowActionButtonAnimation','allowSortButtonAnimation','allowHide','allowEdit','allowFilter','allowSort','allowSortToggleOnClick','allowResize','allowReorder','canNotify','description','grid','icon','menuItems','menu','summary','cellsFormat','formatFunction','index','sortIndex','sortOrder','sorted','groups','element','level','group','filtered','filter','filterMenuMode','dataField','displayField','label','dataType','align','cellsAlign','minWidth','width','visible','freeze','showActionButton','selected','showIcon','showDescriptionButton','adaptiveVisible','treeColumn','computedWidth','computedHeight','overflowWidth','parent','children','onAction','left','top','showCustomButton','showFilterButton','showSortButton','editor','template','visibleIndex'];}}]);return Column;}());JQX('jqx-grid-column',function(_JQX$BaseElement){babelHelpers.inherits(Column,_JQX$BaseElement);function Column(){babelHelpers.classCallCheck(this,Column);return babelHelpers.possibleConstructorReturn(this,(Column.__proto__||Object.getPrototypeOf(Column)).apply(this,arguments));}babelHelpers.createClass(Column,[{key:'_showSortButton',value:function _showSortButton(refresh){var that=this;if(!that.column){return;}if(that.column.autoGenerated){return;}that.sortButton.classList.remove('asc');that.sortButton.classList.remove('desc');if(!that.column.autoShowSortButton){if(that.column.allowSort){that.sortButton.classList.add('jqx-icon-sort','jqx-grid-icon');}}if(that.column.sortOrder==='asc'){that.sortButton.classList.add('asc');}else if(that.column.sortOrder==='desc'){that.sortButton.classList.add('desc');}if(that.column.showSortButton){that.sortButton.classList.add('show');if(refresh!==false){that._refresh();}}}},{key:'_hideSortButton',value:function _hideSortButton(refresh){var that=this;if(!that.column){return;}that.sortButton.classList.remove('asc');that.sortButton.classList.remove('desc');if(!that.column.showSortButton||that.column.autoShowSortButton){that.sortButton.classList.remove('show');that.sortButton.classList.remove('jqx-icon-sort');if(refresh!==false){that._refresh();}}}},{key:'_showFilterButton',value:function _showFilterButton(){var that=this;if(!that.column||that.column.autoGenerated){return;}that.filterButton.classList.add('show');that._refresh();}},{key:'_hideFilterButton',value:function _hideFilterButton(){var that=this;if(!that.column){return;}that.filterButton.classList.remove('show');that._refresh();}},{key:'_showDescriptionButton',value:function _showDescriptionButton(){var that=this;if(!that.column||that.column.autoGenerated){return;}that.descriptionButton.setAttribute('title',that.column.description);that.descriptionButton.classList.add('show');that._refresh();}},{key:'_hideDescriptionButton',value:function _hideDescriptionButton(){var that=this;if(!that.column){return;}that.descriptionButton.classList.remove('show');that._refresh();}},{key:'_showIcon',value:function _showIcon(){var that=this;if(!that.column||that.column.autoGenerated){return;}that.icon.classList.add('show');that._refresh();}},{key:'_hideIcon',value:function _hideIcon(){var that=this;that.icon.classList.remove('show');that._refresh();}},{key:'_showCustomButton',value:function _showCustomButton(){var that=this;if(!that.column||that.column.autoGenerated){return;}that.customButton.classList.add('show');that._refresh();}},{key:'_hideCustomButton',value:function _hideCustomButton(){var that=this;if(!that.column){return;}that.customButton.classList.remove('show');that._refresh();}},{key:'_showActionButton',value:function _showActionButton(){var that=this;if(!that.column){return;}if(that.column.showActionButton&&that.column.grid.hasColumnMenu(that.column)){if(that.actionButton){that.actionButton.classList.add('show');that._refresh();}}}},{key:'_hideActionButton',value:function _hideActionButton(){var that=this;if(!that.column){return;}if(that.column.showActionButton){if(that.actionButton&&!that.hasAttribute('aria-controls')){that.actionButton.classList.remove('show');that._refresh();}}}},{key:'_rotate',value:function _rotate(){var that=this;var span=document.createElement('span');that.label.innerHTML='';span.innerHTML=that.column.label;that.label.appendChild(span);span.className='rotate';span.style.transform='rotate('+that.column.rotationAngle+'deg)';return that.column.grid._recycleRotate(that.label,span,that.column.align,that.column.verticalAlign,that.column.label);}},{key:'_align',value:function _align(){var that=this;switch(that.column.align){case'left':that.label.classList.add('align-left');break;case'center':that.label.classList.add('align-center');break;case'right':that.label.classList.add('align-right');break;}switch(that.column.verticalAlign){case'top':that.label.classList.add('align-top');break;case'middle':that.label.classList.add('align-middle');break;case'bottom':that.label.classList.add('align-bottom');break;}}},{key:'_refresh',value:function _refresh(){var that=this;that.sortButton.classList.remove('filter');that.sortButton.classList.remove('action');that.label.className='jqx-label';if(that.column.dataField==='_checkBoxColumn'){var grid=that.column.grid;var visibleRows=grid.getVisibleRows();if(grid.paging.enabled&&grid.selection.checkBoxes.selectAllMode==='page'){visibleRows=visibleRows.slice(grid.paging.pageIndex*grid.paging.pageSize,(grid.paging.pageIndex+1)*grid.paging.pageSize);}var selectedRows=grid.paging.enabled&&grid.selection.checkBoxes.selectAllMode==='page'?grid._getSelectedRows(true,true):grid._getSelectedRows(true,false);if(grid.selection.checkBoxes.autoShow){that.setAttribute('auto-show','');}else{that.removeAttribute('auto-show');}if(selectedRows.length===visibleRows.length){that.setAttribute('selected','');}else if(selectedRows.length>0&&selectedRows.length<visibleRows.length){that.setAttribute('selected','indeterminate');}else if(selectedRows.length===0||visibleRows.length===0){that.removeAttribute('selected');}that.removeAttribute('checkbox');that.label.classList.remove('jqx-input');if(grid.selection.checkBoxes.selectAllMode!=='none'){that.setAttribute('checkbox','');that.label.classList.add('jqx-input');}return;}if(that.column.dataField==='_commandColumn'){var _grid=that.column.grid;var showLabel=_grid.editing.commandColumn.displayMode!=='icon';var showIcon=_grid.editing.commandColumn.displayMode!=='label';var properties=_grid.editing.commandColumn.dataSource.commandColumnMenu;var commandColumnItem='<div class="jqx-grid-command-item">';var label=properties.label==='{{messages}}'?_grid.localize('commandColumnMenu'):properties.label;var icon=properties.icon;if(showIcon&&showLabel){commandColumnItem+='<span class="jqx-grid-icon '+icon+'"></span>';commandColumnItem+='<span class="jqx-grid-label">'+label+'</span>';}else if(showIcon&&!showLabel){commandColumnItem+='<span class="jqx-grid-icon '+icon+'"></span>';}else if(showLabel&&!showIcon){commandColumnItem+='<span class="jqx-grid-label">'+label+'</span>';}commandColumnItem+='</div>';if(properties.visible){that.label.innerHTML=commandColumnItem;}}var selected=that.column.getProperty('selected');if(selected===false&&that.hasAttribute('selected')){that.removeAttribute('selected');}else if(selected===true){that.setAttribute('selected','');}else if(selected===null){that.setAttribute('selected','indeterminate');}if(that.column.allowSortButtonAnimation){that.sortButton.classList.add('jqx-animate');}else{that.sortButton.classList.remove('jqx-animate');}if(!that.column.sorted){that._hideSortButton(false);}else{that._showSortButton(false);}if(that.column.allowFilterButtonAnimation){that.filterButton.classList.add('jqx-animate');}else{that.filterButton.classList.remove('jqx-animate');}if(that.column.allowActionButtonAnimation&&that.allowAnimations!==false){that.buttonsGroup.classList.add('jqx-animate');}else{that.buttonsGroup.classList.remove('jqx-animate');}if(that.column.allowLabelAnimation&&that.allowAnimations!==false){that.label.classList.add('jqx-animate');}else{that.label.classList.remove('jqx-animate');}that.buttonsGroup.classList.remove('action');if(that.actionButton.classList.contains('show')){that.buttonsGroup.classList.add('action');}if(that.column.showIcon){that.icon.classList.add('show');}else{that.icon.classList.remove('show');}if(that.icon.classList.contains('show')){that.icon.classList.add(that.column.icon);}var buttonsCount=that.column.showIcon?1:0;for(var _i101=0;_i101<that.buttonsGroup.children.length;_i101++){if(that.buttonsGroup.children[_i101].classList.contains('show')){buttonsCount++;}}switch(buttonsCount){case 1:that.label.classList.add('one');break;case 2:that.label.classList.add('two');break;case 3:that.label.classList.add('three');break;case 4:that.label.classList.add('four');break;case 5:that.label.classList.add('five');break;case 6:that.label.classList.add('six');break;}that.classList.remove('jqx-visibility-hidden');if(that.column.adaptiveVisible||!that.column.visible){that.classList.add('jqx-visibility-hidden');}if(that.column.grid._columnGap>0){that.classList.add('jqx-grid-column-border');}else{that.classList.remove('jqx-grid-column-border');}if(!that.column.grid.appearance.showColumnHeaderLines){that.classList.add('jqx-grid-vertical-border-collapse');}else{that.classList.remove('jqx-grid-vertical-border-collapse');}if(that.column.rotationAngle){var rotateResult=that._rotate();if(!rotateResult){return;}}that._align();}},{key:'_render',value:function _render(){var that=this;var columnDataField=that.column.dataField?that.column.dataField:'';var isLastColumn=that.column===that.column.grid._lastVisibleColumn;if(that.label.firstChild){if(that.label.firstChild.textContent!==that.column.label){that.label.firstChild.textContent=that.column.label;}}else{that.label.innerHTML='<span>'+that.column.label+'</span>';}that._refresh();if(that.column.autoGenerated||isLastColumn){that.style.width=that.column.computedWidth+'px';}else{that.style.width=that.column.computedWidth-that.column.grid._columnGap+'px';}if(that.style.height!==that.column.computedHeight+'px'){that.style.height=that.column.computedHeight+'px';}if(that.style.lineHeight!==that.column.computedHeight+'px'){that.style.lineHeight=that.column.computedHeight+'px';}if(that.style.left!==that.column.left+'px'){that.style.left=that.column.left+'px';}if(that.style.top!==that.column.top+'px'){that.style.top=that.column.top+'px';}if(that.getAttribute('data-field')!==columnDataField){that.setAttribute('data-field',columnDataField);}that.setAttribute('header','');if(that.column.freeze){that.setAttribute('freeze','');}if(that.column.level>0){that.style.top=that.column.top+'px';}}},{key:'addThemeClass',value:function addThemeClass(){}},{key:'addDefaultClass',value:function addDefaultClass(){}},{key:'_initialize',value:function _initialize(column){var that=this;var label=document.createElement('div');var sortButton=document.createElement('div');var filterButton=document.createElement('div');var actionButton=document.createElement('div');var descriptionButton=document.createElement('div');var customButton=document.createElement('div');var icon=document.createElement('div');var buttonsGroup=document.createElement('div');that.column=column;that.classList.add('jqx-visibility-hidden');icon.classList.add('jqx-icon','jqx-grid-icon');label.classList.add('jqx-label');sortButton.classList.add('jqx-sort-button','jqx-grid-icon');filterButton.classList.add('jqx-filter-button','jqx-icon-filter','jqx-grid-icon');actionButton.classList.add('jqx-action-button','jqx-grid-icon');actionButton.setAttribute('aria-haspopup','');descriptionButton.classList.add('jqx-description-button','jqx-icon-info-circled','jqx-grid-icon');customButton.classList.add('jqx-custom-button',column.customButtonIcon?column.customButtonIcon:'jqx-icon-tools','jqx-grid-icon');buttonsGroup.classList.add('jqx-buttons-group');actionButton.innerHTML='<div></div>';that.style.width=that.column.computedWidth+'px';that.appendChild(icon);that.appendChild(label);that.appendChild(buttonsGroup);buttonsGroup.appendChild(sortButton);buttonsGroup.appendChild(filterButton);buttonsGroup.appendChild(descriptionButton);buttonsGroup.appendChild(customButton);buttonsGroup.appendChild(actionButton);that.icon=icon;that.label=label;that.sortButton=sortButton;that.filterButton=filterButton;that.actionButton=actionButton;that.descriptionButton=descriptionButton;that.customButton=customButton;that.buttonsGroup=buttonsGroup;var downEvent=window.PointerEvent?'pointerdown':'mousedown';var upEvent=window.PointerEvent?'pointerup':'mouseup';that.filterButton.addEventListener(downEvent,function(event){event.preventDefault();event.stopPropagation();if(that.column.onAction){that.column.onAction(event);}}.bind(that));that.filterButton.addEventListener(upEvent,function(event){event.preventDefault();event.stopPropagation();});that.actionButton.addEventListener(upEvent,function(event){event.preventDefault();event.stopPropagation();});that.actionButton.addEventListener(downEvent,function(event){event.preventDefault();event.stopPropagation();if(that.column.onAction){that.column.onAction(event);}}.bind(that));if(!that.column.autoShowActionButton&&that.column.showActionButton){that._showActionButton();}if(!that.column.autoShowSortButton&&that.column.showSortButton){that._showSortButton();}if(!that.column.autoShowFilterButton&&that.column.showFilterButton){that._showFilterButton();}if(that.column.showDescriptionButton){that._showDescriptionButton();}if(that.column.showCustomButton){that._showCustomButton();}if(that.column.showIcon){that._showIcon();}if(that.column.dataField==='_rowHeaderColumn'){that.classList.add('top-near-corner');}that.customButton.onclick=function(event){if(that.column.onCustomButtonClick){that.column.onCustomButtonClick(event);}}.bind(that);}},{key:'template',value:function template(){return'';}},{key:'hasStyleObserver',get:function get(){return false;}},{key:'enableShadowDOM',get:function get(){return false;}},{key:'isUtilityElement',get:function get(){return true;}}]);return Column;}(JQX.BaseElement));JQX.Utilities.Assign('Grid.Row',function(){function Row(row){babelHelpers.classCallCheck(this,Row);var that=this;if(!row){row={};}Object.assign(that,row);if(!row){return;}if(that.data===undefined){var itemObject={$:{}};if(row.grid&&row.grid.dataSource){var dataSource=row.grid.dataSource;for(var j=0;j<dataSource.dataFields.length;j++){var dataField=dataSource.dataFields?dataSource.dataFields[j]:{};itemObject[dataField.name]='';}}if(row.id){itemObject.$.id=row.id;}that.data=itemObject;}if(undefined===row.$||row.$&&undefined===row.$.id){if(row.data){if(row.data.$&&row.data.$.id){that.id=row.data.$.id;}if(!that.id){that.id=row.index;}}else if(that.id===undefined){that.id=row.index;}if(that.id===undefined){that.id=JQX.Utilities.Core.createGUID();}}if(undefined===that.detailHeight){if(that.grid){that.detailHeight=that.grid.rowDetail.height;}else{that.detailHeight=200;}}if(undefined===that.height&&that.grid){that.height=that.grid.rowMinHeight;if(that.grid.__autoRowHeight){that.height=that.grid.__autoRowHeight;}if(that.grid.rowHeight){that.height=that.grid.rowHeight;}}if(undefined===that.cellHeight){that.cellHeight=that.height;}if(undefined===that.showDetail){that.showDetail=false;}if(undefined===that.index){that.index=-1;}if(undefined===that.visibleIndex){that.visibleIndex=-1;}if(undefined===that.freeze){that.freeze=false;}if(undefined===that.height){that.height=null;}if(undefined===that.minHeight){that.minHeight=25;}if(undefined===that.selected){that.selected=false;if(that.grid&&that.grid._selection.rows[that.id]){that.selected=true;}}else if(that.selected&&that.grid){that.grid._selection.rows[that.id]=true;}if(undefined===that.enabled){that.enabled=true;}if(undefined===that.visible){that.visible=true;}if(undefined===that.filtered){that.filtered=true;}if(undefined===that.allowResize){that.allowResize=true;}if(undefined===that.allowToggle){that.allowToggle=true;}if(undefined===that.allowSelect){that.allowSelect=true;}if(undefined===that.expanded){if(row.data&&row.data.expanded!==undefined){that.expanded=row.data.expanded;}else{that.expanded=false;}}that.headerCell=null;that._cells=[];}babelHelpers.createClass(Row,[{key:'createElement',value:function createElement(){var that=this;var element=document.createElement('jqx-grid-row');that.element=element;element._initialize(that);return element;}},{key:'getCell',value:function getCell(column){var that=this;var grid=that.grid;if(typeof column==='string'||typeof column==='number'){column=grid.columnByDataField[column];}if(!column){return null;}if(!that['column_'+column.dataField]){var cell=new JQX.Grid.Cell(that,column,grid);that['column_'+column.dataField]=cell;return cell;}else{var _cell=that['column_'+column.dataField];_cell.column=column;return _cell;}}},{key:'createCells',value:function createCells(){var that=this;var grid=that.grid;that._cells=[];for(var _i102=0;_i102<grid.viewColumns.length;_i102++){var column=grid.viewColumns[_i102];if(column.autoGenerated){continue;}if(!that['column_'+column.dataField]){var cell=new JQX.Grid.Cell(that,column,grid);that['column_'+column.dataField]=cell;that._cells.push(cell);}else{var _cell2=that['column_'+column.dataField];that._cells.push(_cell2);}}}},{key:'toggle',value:function toggle(){var that=this;that.element._handleExpandCollapse(!that.expanded);}},{key:'expand',value:function expand(){var that=this;that.element._handleExpandCollapse(true);}},{key:'collapse',value:function collapse(){var that=this;that.element._handleExpandCollapse(false);}},{key:'render',value:function render(){var that=this;that.element.row=that;that.element._render();}},{key:'setProperty',value:function setProperty(propertyName,value){var that=this;var oldValue=that.getProperty(propertyName);that[propertyName]=value;if(oldValue!==value){that.canNotify=false;that.propertyChanged(propertyName,oldValue,value);that.canNotify=true;}}},{key:'getProperty',value:function getProperty(propertyName){var that=this;if(propertyName==='selected'){var selected=false;if(that.grid._selection.cells['row'+that.id]){selected=null;}if(that.grid&&that.grid._selection.rows[that.id]){selected=true;}that.grid.rows.canNotify=false;that[propertyName]=selected;that.grid.rows.canNotify=true;return selected;}return that[propertyName];}},{key:'propertyChanged',value:function propertyChanged(propertyName,oldValue,newValue){var that=this;if(propertyName==='showDetail'){that.height=0;var detail=that.element.rowDetail;if(that.grid.appearance.allowRowDetailToggleAnimation){var toggleAnimation=function toggleAnimation(event){var row=that.grid._toggledRow;if(row&&(event.propertyName==='transform'||event.propertyName==='height')){_endAnimation(row);}};var _endAnimation=function _endAnimation(row){row.grid.$.content.style.transition='';row.element.rowDetail.removeEventListener('transitionend',toggleAnimation);row.element.rowDetail.removeEventListener('transitioncancel',toggleAnimation);row.grid._toggledRow=null;row.element.removeAttribute('has-detail');that.grid._refresh();};that.grid._toggledRow=that;detail.addEventListener('transitionend',toggleAnimation);detail.addEventListener('transitioncancel',toggleAnimation);if(newValue){that.element.setAttribute('has-detail','');that.element.toggleDetailButton.removeAttribute('toggled');that.element.toggleDetailButton.classList.remove('jqx-animate');setTimeout(function(){that.element.toggleDetailButton.classList.add('jqx-animate');that.element.toggleDetailButton.setAttribute('toggled','');that.element.setAttribute('show-detail','');});that.element.style.height=that.cellHeight+that.detailHeight+'px';if(that.grid._autoHeight){that.grid.$.content.style.transition='0.25s height ease-in-out';that.grid.$.content.style.height=parseInt(that.grid.$.content.style.height)+that.detailHeight+'px';that.grid.$.scrollView.style.height='auto';}detail.classList.remove('jqx-hidden');if(detail.style.height!==that.detailHeight+'px'){detail.style.height=that.detailHeight+'px';}if(detail.style.lineHeight!==that.detailHeight+'px'){detail.style.lineHeight=that.detailHeight+'px';}if(detail.style.top!==that.cellHeight+'px'){detail.style.top=that.cellHeight+'px';}}else{that.element.setAttribute('has-detail','');that.element.toggleDetailButton.removeAttribute('toggled');if(that.grid._autoHeight){that.grid.$.content.style.transition='0.25s height ease-in-out';that.grid.$.content.style.height=parseInt(that.grid.$.content.style.height)-that.detailHeight+'px';that.grid.$.scrollView.style.height='auto';}setTimeout(function(){that.element.style.height=that.cellHeight+'px';that.element.removeAttribute('show-detail');});}}else{that.grid._refresh();}}if(propertyName==='selected'){if(newValue){that.grid._selection.rows[that.id]=true;}else if(newValue===false){if(that.grid._selection.rows[that.id]){delete that.grid._selection.rows[that.id];}}if(!that.element){return;}that.grid._recycle();}if(propertyName==='visible'){that.grid.refresh();}if(propertyName==='expanded'){if(!that.expandHeight){that.grid.refresh();}}if(propertyName==='height'){if(!that.expandHeight){if(that.cellHeight!==newValue){that.cellHeight=newValue;that.grid.refresh();}}}if(propertyName==='freeze'){if(newValue===true||newValue==='near'){that.grid._frozenNearRows.push(that);}else if(newValue==='far'){that.grid._frozenFarRows.push(that);}else{that.grid._frozenNearRows.splice(that.grid._frozenNearRows.indexOf(that),1);that.grid._frozenFarRows.splice(that.grid._frozenFarRows.indexOf(that),1);}that.grid._recycle();}}},{key:'properties',get:function get(){return['allowToggle','allowResize','allowSelect','canNotify','cells','detailHeight','detailTemplate','cellHeight','expandHeight','data','enabled','expanded','filtered','freeze','grid','headerCell','height','index','id','minHeight','unbound','selected','showDetail','visible','visibleIndex'];}},{key:'cells',get:function get(){var that=this;if(that._cells&&that.grid&&that._cells.length===that.grid.columns.length){return that._cells;}that.createCells();return that._cells;}},{key:'viewCells',get:function get(){var that=this;var cells=[];for(var _i103=0;_i103<that.grid.viewColumns.length;_i103++){var column=that.grid.viewColumns[_i103];if(!that['column_'+column.dataField]){var cell=new JQX.Grid.Cell(that,column,that.grid);that['column_'+column.dataField]=cell;cells.push(cell);}else{var _cell3=that['column_'+column.dataField];cells.push(_cell3);}}that._viewCells=cells;return cells;}}]);return Row;}());JQX('jqx-grid-row',function(_JQX$BaseElement2){babelHelpers.inherits(Row,_JQX$BaseElement2);function Row(){babelHelpers.classCallCheck(this,Row);return babelHelpers.possibleConstructorReturn(this,(Row.__proto__||Object.getPrototypeOf(Row)).apply(this,arguments));}babelHelpers.createClass(Row,[{key:'addThemeClass',value:function addThemeClass(){}},{key:'addDefaultClass',value:function addDefaultClass(){}},{key:'_initialize',value:function _initialize(row){var that=this;var grid=row.grid;var columnElements=grid._columnElements;var frozenNearColumns=grid._frozenNearColumns;var frozenFarColumns=grid._frozenFarColumns;var cellsContainerElement=document.createElement('div');var cellsNearContainerElement=document.createElement('div');var cellsFarContainerElement=document.createElement('div');var fragment=document.createDocumentFragment();var nearFragment=document.createDocumentFragment();var farFragment=document.createDocumentFragment();cellsNearContainerElement.classList.add('near','jqx-grid-cell-container');cellsContainerElement.classList.add('center','jqx-grid-cell-container');cellsFarContainerElement.classList.add('far','jqx-grid-cell-container');that.row=row;row.createCells();that.addEventListener('mouseenter',function(){if(grid.isScrolling||grid.editing.isEditing){return;}if(that.commandBar){that.commandBar.parentNode.removeChild(that.commandBar);that.commandBar=null;}if(grid.editing.enabled&&grid.editing.commandColumn.visible&&grid.editing.commandColumn.inline&&!that.commandBar){var commandBar=document.createElement('div');var template=grid._getCommandColumnCommandsTemplate();commandBar.classList.add('jqx-grid-command-bar');commandBar.innerHTML=template;cellsContainerElement.appendChild(commandBar);requestAnimationFrame(function(){commandBar.classList.add('show');});grid._updateCommandColumnCommandsVisibility(commandBar,that.row);commandBar.onmousedown=function(event){var elements=event.path;var commandItem=null;for(var _i104=0;_i104<elements.length;_i104++){if(elements[_i104].classList.contains('jqx-grid-command-item')){commandItem=elements[_i104];break;}}if(!commandItem){//    commandItem = that.querySelector('.jqx-grid-command-item');
}if(commandItem){var command=commandItem.getAttribute('command');grid._applyCommand(command,[that.row]);if(that.commandBar){that.commandBar.parentNode.removeChild(that.commandBar);that.commandBar=null;}that.removeAttribute('hover');event.stopPropagation();event.preventDefault();}};that.commandBar=commandBar;}});that.addEventListener('mouseleave',function(){if(grid.isScrolling||grid.editing.isEditing){return;}if(that.commandBar){that.commandBar.classList.remove('show');that.commandBar.addEventListener('transitionend',function(){if(that.commandBar){that.commandBar.parentNode.removeChild(that.commandBar);that.commandBar=null;}});that.commandBar.addEventListener('transitioncancel',function(){if(that.commandBar){that.commandBar.parentNode.removeChild(that.commandBar);that.commandBar=null;}});}});for(var _i105=0;_i105<frozenNearColumns.length;_i105++){var column=frozenNearColumns[_i105];var cell=row.getCell(column);var cellElement=cell.createElement();nearFragment.appendChild(cellElement);}for(var _i106=0;_i106<frozenFarColumns.length;_i106++){var _column=frozenFarColumns[_i106];var _cell4=row.getCell(_column);var _cellElement=_cell4.createElement();farFragment.appendChild(_cellElement);}for(var _i107=0;_i107<columnElements.length;_i107++){var columnElement=columnElements[_i107];var _column2=columnElement.column;if(!columnElement.parentNode||!_column2){break;}var _cell5=row.getCell(_column2);var _cellElement2=_cell5.createElement();if(_column2&&_column2._treeColumn){that.toggleButton=_cellElement2.toggleButton;}fragment.appendChild(_cellElement2);}cellsNearContainerElement.appendChild(nearFragment);cellsContainerElement.appendChild(fragment);cellsFarContainerElement.appendChild(farFragment);var rowDetailElement=document.createElement('div');rowDetailElement.classList.add('jqx-grid-row-detail','jqx-hidden','jqx-animate');var rowContainerElement=document.createElement('div');rowContainerElement.classList.add('jqx-grid-row-sub-container','jqx-hidden');if(grid._adaptiveLayout>0){cellsNearContainerElement.classList.add('jqx-visibility-hidden');cellsContainerElement.classList.add('jqx-visibility-hidden');cellsFarContainerElement.classList.add('jqx-visibility-hidden');}that._rowFragment=document.createDocumentFragment();that._rowFragment.appendChild(cellsNearContainerElement);that._rowFragment.appendChild(cellsContainerElement);that._rowFragment.appendChild(cellsFarContainerElement);that._rowFragment.appendChild(rowDetailElement);that._rowFragment.appendChild(rowContainerElement);that.appendChild(that._rowFragment);that.cellsNearContainerElement=that.children[0];that.cellsContainerElement=that.children[1];that.cellsFarContainerElement=that.children[2];that.rowDetail=that.children[3];that.rowContainer=that.children[4];if(grid.rowHeight&&grid.rowHeight!=='auto'){that.style.height=grid.rowHeight+'px';}}},{key:'_handleExpandCollapse',value:function _handleExpandCollapse(expanded){var that=this;var row=that.row;var grid=row.grid;if(!row.allowToggle){return null;}grid._toggledRow=row;var setRowHeight=function setRowHeight(){var row=grid._toggledRow;grid._refresh();grid._refreshRowHierarchy();var expandHeight=0;for(var _i108=0;_i108<grid.rowHierarchy.length;_i108++){var _row=grid.rowHierarchy[_i108];var parent=_row.parent;while(parent){if(parent.id===grid._toggledRow.id){expandHeight+=_row.height;}parent=parent.parent;}}var value=grid._scrollView.scrollTop;var remainingHeight=grid._contentHeight-(row.cellHeight+row.top-value);row.expandHeight=Math.min(remainingHeight,expandHeight);row.height=row.cellHeight+row.expandHeight;};var requestNewData=grid.dataSource.virtualDataSourceOnExpand&&expanded&&row.data._loaded!==true;if(!grid.appearance.allowRowToggleAnimation||requestNewData){grid.rows.canNotify=false;row.expanded=expanded;grid.rows.canNotify=true;if(requestNewData){row.data._loaded=true;row.data.expanded=expanded;grid._virtualDataRequest('expand');}grid._toggledRow=null;grid._refresh();if(requestNewData&&grid.appearance.allowRowToggleAnimation){that.toggleButton.removeAttribute('toggled');that.toggleButton.classList.remove('jqx-animate');setTimeout(function(){that.toggleButton.classList.add('jqx-animate');that.toggleButton.setAttribute('toggled','');},50);}}else{var _endAnimation2=function _endAnimation2(row){row.height=row.cellHeight;grid.$.content.style.transition='';row.element.rowContainer.innerHTML='';row.element.rowContainer.classList.add('jqx-hidden');row.element.rowContainer.removeEventListener('transitionend',_toggleAnimation);row.element.rowContainer.removeEventListener('transitioncancel',_toggleAnimation);row.element.rowContainer.style.height='';row.element.rowContainer.style.transform='';row.element.rowContainer.style.transition='';row.element.rowContainer.classList.remove('jqx-animate');row.element.toggleButton.classList.remove('jqx-animate');grid._refresh();};var _toggleAnimation=function _toggleAnimation(event){var row=grid._toggledRow;that._toggleTimer=null;grid._toggledRow=null;if(row&&(event.propertyName==='transform'||event.propertyName==='height')){setTimeout(function(){_endAnimation2(row);},50);}};if(that._toggleTimer){clearTimeout(that._toggleTimer);var _row2=grid._toggledRow;grid._toggledRow=null;_endAnimation2(_row2);}that._toggleTimer=setTimeout(function(){var updateHeightAndRefresh=function updateHeightAndRefresh(){setRowHeight();grid._recycle(false);that.style.overflow='hidden';that.style.height='auto';that.style.lineHeight=row.cellHeight+'px';};if(expanded){row.expanded=true;updateHeightAndRefresh();that.rowContainer.style.transform='scaleY(0)';that.rowContainer.style.height='0px';that.toggleButton.removeAttribute('toggled');if(grid._autoHeight){grid.$.content.style.height=parseInt(grid.$.content.style.height)-row.expandHeight+'px';}setTimeout(function(){that.toggleButton.classList.add('jqx-animate');that.toggleButton.setAttribute('toggled','');that.rowContainer.addEventListener('transitionend',_toggleAnimation);that.rowContainer.addEventListener('transitioncancel',_toggleAnimation);if(grid._autoHeight){grid.$.content.style.transition='0.25s height ease-in-out';grid.$.content.style.height=parseInt(grid.$.content.style.height)+row.expandHeight+'px';}that.rowContainer.classList.add('jqx-animate');that.rowContainer.style.height=row.expandHeight+'px';that.rowContainer.style.transform='scaleY(1)';});}else{updateHeightAndRefresh();row.expanded=false;that.rowContainer.style.transform='scaleY(0)';that.rowContainer.style.height='0px';if(grid._autoHeight){grid.$.content.style.height=parseInt(grid.$.content.style.height)-row.expandHeight+'px';grid.$.content.style.transition='';grid.$.content.style.height=parseInt(grid.$.content.style.height)+row.expandHeight+'px';}that.rowContainer.style.height=row.expandHeight+'px';that.rowContainer.style.transform='scaleY(1)';that.toggleButton.setAttribute('toggled','');that.toggleButton.classList.add('jqx-animate');setTimeout(function(){that.toggleButton.removeAttribute('toggled','');if(grid._autoHeight){grid.$.content.style.transition='0.25s height ease-in-out';grid.$.content.style.height=parseInt(grid.$.content.style.height)-row.expandHeight+'px';}that.rowContainer.addEventListener('transitionend',_toggleAnimation);that.rowContainer.addEventListener('transitioncancel',_toggleAnimation);that.rowContainer.classList.add('jqx-animate');//     that.rowContainer.style.transition = 'transform .25s ease-in-out, height .25s ease-in-out';
that.rowContainer.style.transform='scaleY(0)';that.rowContainer.style.height='0px';},0);}},50);}}},{key:'_renderAddNewRow',value:function _renderAddNewRow(){var that=this;var row=that.row;var grid=row.grid;var element=row.element;var cell=new JQX.Grid.Cell(row,grid.columns[0],grid);if(row.visible){element.classList.remove('jqx-hidden');}else{element.classList.add('jqx-hidden');}element.innerHTML='<jqx-grid-cell><div>'+grid.localize('addNewRow')+'</div></jqx-grid-cell>';element.firstChild.firstChild.classList.add('align-center');element.firstChild.classList.add('jqx-grid-column-border-collapse');element.firstChild.setAttribute('freeze','');element.firstChild.setAttribute('addNewRow','');element.firstChild.style.width='100%';if(grid._scrollView.vScrollBar.offsetWidth>0){element.firstChild.style.width='calc(100% - '+(-1+grid._scrollView.vScrollBar.offsetWidth)+'px)';}element.firstChild.cell=cell;if(grid._rowGap>0&&row!==grid.rows[grid.rows.length-1]){that.style.marginBottom=grid._rowGap+'px';if(parseInt(that.style.height)-grid._rowGap!==row.height){that.style.height=row.height-grid._rowGap+'px';}if(parseInt(that.style.lineHeight)-grid._rowGap!==row.height){that.style.lineHeight=row.height-grid._rowGap+'px';}}else{that.style.marginBottom='';if(parseInt(that.style.height)!==row.height){that.style.height=row.height+'px';}if(parseInt(that.style.lineHeight)!==row.height){that.style.lineHeight=row.height+'px';}}}},{key:'_renderEmpty',value:function _renderEmpty(){var that=this;that.classList.add('jqx-hidden');}},{key:'_renderAdaptive',value:function _renderAdaptive(){var that=this;var row=that.row;var grid=row.grid;var isChildRow=false;if(grid._toggledRow&&grid.appearance.allowRowToggleAnimation&&grid._toggledRow.expanded){var parentRow=row.parent;while(parentRow){if(parentRow.id===grid._toggledRow.id){var adaptiveDetail=parentRow.element.adaptiveDetail;that.classList.add('jqx-hidden');//   that = row.createElement();
that.toggleButton.classList.add('jqx-hidden');isChildRow=true;adaptiveDetail.appendChild(that);break;}parentRow=parentRow.parent;}}var detail=that.adaptiveDetail;that.row=row;that.visible=row.visible;if(that.style.height!==row.height+'px'){that.style.height=row.height+'px';}if(that.style.lineHeight!==row.height+'px'){that.style.lineHeight=row.height+'px';}detail.classList.remove('jqx-hidden');if(detail.style.height!==row.adaptiveHeight+'px'){detail.style.height=row.adaptiveHeight+'px';}if(detail.style.lineHeight!==row.adaptiveHeight+'px'){detail.style.lineHeight=row.adaptiveHeight+'px';}if(row.expandHeight){if(row.expanded){var _maxRowHeight=Math.min(grid._clientSize.height,row.height+row.expandHeight)+'px';that.style.height=_maxRowHeight;that.style.lineHeight=_maxRowHeight;}var maxRowHeight=Math.min(grid._clientSize.height,row.height+row.expandHeight)+'px';detail.style.height=maxRowHeight;detail.style.lineHeight=maxRowHeight;}else{detail.innerHTML='';}if(!isChildRow){detail.style.top='0px';}else{detail.style.top=row.cellHeight+'px';}var fragment=document.createDocumentFragment();var top=0;var left=0;for(var _i109=0;_i109<grid.viewColumns.length;_i109++){var column=grid.viewColumns[_i109];if(column.autoGenerated){continue;}var header=column.createElement();var cell=row.getCell(column);var cellElement=cell.createElement();if(row.label!==undefined){fragment.appendChild(cellElement);cellElement.classList.add('jqx-grid-adaptive-cell');cellElement.style.height=row.cellHeight+'px';cellElement.style.lineHeight=row.cellHeight+'px';cellElement.style.left='0px';cellElement.style.top='0px';cell.render();cellElement.style.width='100%';break;}cellElement.classList.add('jqx-grid-adaptive-cell');header.classList.add('jqx-grid-adaptive-column');column.render();that._renderCell(row,column,cellElement);var columnWidth=grid._adaptiveLayout===1?'100%':'50%';header.style.width=columnWidth;header.style.height=row.cellHeight+'px';header.style.lineHeight=row.cellHeight+'px';header.style.top=top+'px';header.classList.remove('jqx-visibility-hidden');cellElement.style.width=columnWidth;cellElement.style.height=row.cellHeight+'px';cellElement.style.lineHeight=row.cellHeight+'px';cellElement.style.top=top+row.cellHeight+'px';if(columnWidth==='100%'){//          header.style.borderRightColor = 'transparent';
//            cellElement.style.borderRightColor = 'transparent';
header.style.left='0px';cellElement.style.left='0px';}else{if(left===0){header.style.left='0px';cellElement.style.left='0px';left='50%';}else{header.style.left='50%';cellElement.style.left='50%';}}if((_i109+1)%grid._adaptiveLayout===0){left=0;top+=2*row.cellHeight;}fragment.appendChild(header);fragment.appendChild(cellElement);}detail.appendChild(fragment);if(!that.visible){that.classList.add('jqx-hidden');}else{that.classList.remove('jqx-hidden');}}},{key:'_renderCell',value:function _renderCell(row,column,element){if(!column){element.classList.add('jqx-hidden');return;}var cell=row.getCell(column);if(cell.element!==element){cell._styleChanged=true;}if(element.cell!==cell){if(element.cell.background!==cell.background||element.cell.borderColor!==cell.borderColor||element.cell.color!==cell.color||element.cell.fontSize!==cell.fontSize||element.cell.fontFamily!==cell.fontFamily||element.cell.fontWeight!==cell.fontWeight||element.cell.fontStyle!==cell.fontStyle){cell._styleChanged=true;}}cell.element=element;element.cell=cell;cell.render();if(column&&column.rowNumbersColumn){row.header=element;element.setAttribute('data-id',row.id);}}},{key:'_alternate',value:function _alternate(){var that=this;var row=that.row;var grid=row.grid;var start=grid.appearance.alternationStart;var end=grid.appearance.alternationEnd>0?grid.appearance.alternationEnd:Infinity;if(grid.appearance.alternationCount<=0){return;}that.removeAttribute('alternation-index');if(row.visibleIndex>=start&&row.visibleIndex<=end){var alternationIndex=(row.visibleIndex-start)%grid.appearance.alternationCount;that.setAttribute('alternation-index',alternationIndex);}}},{key:'_renderDetail',value:function _renderDetail(detail){var that=this;var grid=that.row.grid;var row=that.row;var value=row.id;var template=row.detailTemplate||grid.rowDetail.template;if(template.startsWith('#')){template=document.querySelector(template);}if(row._detail){if(detail.firstChild===row._detail){if(grid.onRowDetailUpdated){grid.onRowDetailUpdated(row.index,row,detail.firstChild);}return;}if(detail.firstChild){detail.removeChild(detail.firstChild);}detail.appendChild(row._detail);if(grid.onRowDetailUpdated){grid.onRowDetailUpdated(row.index,row,detail.firstChild);}return;}if(template instanceof HTMLTemplateElement){var templateContent=template.content.cloneNode(true).firstElementChild;value=value.toString();value=value.replace(/'/ig,'\\\'');value=value.replace(/"/ig,'\\"');var html=templateContent.outerHTML.replace(/{{value}}/ig,value).replace(/{{id}}/ig,row.id);if(html.indexOf('{{value=')>=0){if(!value){html=html.replace(/{{value=/ig,'');html=html.replace(/}}/ig,'');}else{html=html.substring(0,html.indexOf('{{value='))+value+html.substring(html.indexOf('}'));html=html.replace(/}/ig,'');html=html.replace(/{/ig,'');}}html='<div>'+html+'</div>';for(var _name6 in row.data){html=html.replace('{{'+_name6+'}}',row.data[_name6]);}if(detail.innerHTML!==html){detail.innerHTML=html;}}else{var _html='<div>'+template.replace(/{{value}}/ig,value).replace(/{{id}}/ig,row.id)+'</div>';for(var _name7 in row.data){_html=_html.replace('{{'+_name7+'}}',row.data[_name7]);}if(detail.innerHTML!==_html){detail.innerHTML=_html;}}if(grid.onRowDetailInit){grid.onRowDetailInit(row.index,row,detail.firstChild);}row._detail=detail.firstChild;}},{key:'_render',value:function _render(){var that=this;var row=that.row;var grid=row.grid;var selected=row.getProperty('selected');if(selected===false&&that.hasAttribute('selected')){that.removeAttribute('selected');}else if(selected===true){that.setAttribute('selected','');}else if(selected===null){that.setAttribute('selected','indeterminate');}if(that.hasAttribute('unbound')){that.removeAttribute('unbound');}if(row.unbound){that.setAttribute('unbound','');}if(!grid._toggledRow&&that.classList.contains('jqx-animate')){that.classList.remove('jqx-animate');that.rowContainer.innerHTML='';that.rowContainer.classList.add('jqx-hidden');grid._refreshLayout();grid._recycle();return;}if(row.adaptiveHeight&&!grid._responsiveLayout){that._renderAdaptive();return;}if(grid.columns.length===0){that._renderEmpty();return;}if(row.addNewRow){that._renderAddNewRow();return;}if(grid._toggledRow){if(row.id===grid._toggledRow.id){that.setAttribute('toggle','');}else if(that.hasAttribute('toggle')){that.removeAttribute('toggle');}}if(grid._toggledRow&&grid.appearance.allowRowToggleAnimation){var parentRow=row.parent;if(!grid._toggledRow.expanded&&grid._toggledRow.id===row.id){var rowContainer=that.rowContainer;for(var _i110=0;_i110<rowContainer.children.length;_i110++){var animatingRowElement=rowContainer.children[_i110];var uid=animatingRowElement.getAttribute('data-id');var animatingRow=grid.rowById[uid];if(animatingRowElement.getAttribute('data-rendered')){continue;}animatingRowElement.setAttribute('data-rendered',true);animatingRow.element=animatingRowElement;animatingRow.render();}}while(parentRow){if(parentRow.id===grid._toggledRow.id){var _rowContainer=parentRow.element.rowContainer;if(grid._toggledRow.expanded){that.classList.add('jqx-hidden');var rowElement=row.createElement(grid);for(var _i111=0;_i111<_rowContainer.children.length;_i111++){var _animatingRowElement=_rowContainer.children[_i111];if(_animatingRowElement.getAttribute('data-id')===row.id.toString()){rowElement=_animatingRowElement;return;}}row.element=rowElement;_rowContainer.appendChild(rowElement);_rowContainer.classList.remove('jqx-hidden');rowElement.row=row;that=rowElement;}break;}parentRow=parentRow.parent;}}that._alternate();var nearWidth=parseFloat(grid.$.columnNearContainer.style.width);var centerWidth=parseFloat(grid.$.columnContainer.style.width);var farWidth=parseFloat(grid.$.columnFarContainer.style.width);var cellsCenterContainerElement=that.children[1];var cellsNearContainerElement=that.children[0];var cellsFarContainerElement=that.children[2];cellsFarContainerElement.classList.remove('vscroll');if(grid.computedVerticalScrollBarVisibility){cellsFarContainerElement.classList.add('vscroll');}if(that.hasAttribute('group')){that.removeAttribute('group');}if(that.hasAttribute('tree')){that.removeAttribute('tree');}if(that.hasAttribute('level')){that.removeAttribute('level');}if(that.hasAttribute('leaf')){that.removeAttribute('leaf');}if(that.hasAttribute('expanded')){that.removeAttribute('expanded');}if(that.hasAttribute('summary')){that.removeAttribute('summary');}if(that.hasAttribute('filter')){that.removeAttribute('filter');}if(row.filtered===null){that.setAttribute('filter','indeterminate');}if(grid.dataSource.groupBy&&grid.dataSource.groupBy.length>0){that.setAttribute('level',row.level);if(row.expanded){that.setAttribute('expanded','');}if(row.label!==undefined&&row.level===grid.dataSource.groupBy.length-1){that.setAttribute('leaf','');}if(row.label!==undefined){that.setAttribute('group','');}else{that.setAttribute('leaf','');}if(row.summaryRow){that.setAttribute('summary','');}if(that.toggleButton){that.toggleButton.classList.remove('jqx-hidden');}}else if(grid.dataSource.boundHierarchy){that.setAttribute('level',row.level);if(row.expanded){that.setAttribute('expanded','');}if(row.leaf){that.setAttribute('leaf','');}if(row.summaryRow){that.setAttribute('summary','');}if(that.toggleButton){that.toggleButton.classList.remove('jqx-hidden');}}else{row.canNotify=false;row.leaf=true;row.expanded=false;row.summaryRow=false;row.level=0;if(that.toggleButton){that.toggleButton.classList.add('jqx-hidden');}row.canNotify=true;}that.setAttribute('data-id',row.id);that.visible=row.visible;that.cellsNearContainerElement.classList.remove('jqx-visibility-hidden');that.cellsContainerElement.classList.remove('jqx-visibility-hidden');that.cellsFarContainerElement.classList.remove('jqx-visibility-hidden');that.removeAttribute('rowspan');if(grid._rowGap>0&&row!==grid.rows[grid.rows.length-1]){that.style.marginBottom=grid._rowGap+'px';if(parseInt(that.style.height)-grid._rowGap!==row.height){that.style.height=row.height-grid._rowGap+'px';}if(parseInt(that.style.lineHeight)-grid._rowGap!==row.height){that.style.lineHeight=row.height-grid._rowGap+'px';}}else{that.style.marginBottom='';if(parseInt(that.style.height)!==row.height){that.style.height=row.height+'px';}if(parseInt(that.style.lineHeight)!==row.height){that.style.lineHeight=row.height+'px';}}if(cellsCenterContainerElement.style.left!==-grid._scrollView.scrollLeft+'px'){cellsCenterContainerElement.style.left=-grid._scrollView.scrollLeft+'px';}if(grid.rowDetail.enabled){var detail=that.rowDetail;that.removeAttribute('show-detail');if(row.showDetail){detail.classList.remove('jqx-hidden');that.setAttribute('show-detail','');if(detail.style.height!==row.detailHeight+'px'){detail.style.height=row.detailHeight+'px';}if(detail.style.lineHeight!==row.detailHeight+'px'){detail.style.lineHeight=row.detailHeight+'px';}if(detail.style.top!==row.cellHeight+'px'){detail.style.top=row.cellHeight+'px';}that._renderDetail(detail);}else{detail.classList.add('jqx-hidden');}}cellsNearContainerElement.classList.remove('jqx-hidden');cellsFarContainerElement.classList.remove('jqx-hidden');if(cellsNearContainerElement.style.width!==nearWidth+'px'){cellsNearContainerElement.style.width=nearWidth+'px';}if(cellsCenterContainerElement.style.width!==centerWidth+'px'){cellsCenterContainerElement.style.width=centerWidth+'px';}if(cellsFarContainerElement.style.width!==farWidth+'px'){cellsFarContainerElement.style.width=farWidth+'px';}cellsNearContainerElement.style.height=row.cellHeight+'px';cellsCenterContainerElement.style.height=row.cellHeight+'px';cellsFarContainerElement.style.height=row.cellHeight+'px';if(farWidth===0){cellsFarContainerElement.classList.add('jqx-hidden');}if(nearWidth===0){cellsNearContainerElement.classList.add('jqx-hidden');}if(nearWidth>0&&parseInt(nearWidth)===parseInt(grid._autoGeneratedColumnsNearWidth)){//     cellsNearContainerElement.classList.add('border-collapse');
}if(farWidth>0&&parseInt(farWidth)===parseInt(grid._autoGeneratedColumnsFarWidth)){cellsFarContainerElement.classList.add('border-collapse');}for(var j=0;j<grid._frozenNearColumns.length;j++){var column=grid._frozenNearColumns[j];var cellElement=that.children[0].children[j];if(!cellElement){var cell=row.getCell(column);cellElement=cell.createElement();that.children[0].appendChild(cellElement);}that._renderCell(row,column,cellElement);}for(var _j4=0;_j4<grid._frozenFarColumns.length;_j4++){var _column3=grid._frozenFarColumns[_j4];var _cellElement3=that.children[2].children[_j4];if(!_cellElement3){var _cell6=row.getCell(_column3);_cellElement3=_cell6.createElement();that.children[2].appendChild(_cellElement3);}if(_column3.adaptiveColumn){if(!_column3.adaptiveVisible){_cellElement3.classList.add('jqx-hidden');}else{_cellElement3.classList.remove('jqx-hidden');}continue;}that._renderCell(row,_column3,_cellElement3);}for(var _j5=0;_j5<cellsCenterContainerElement.children.length;_j5++){var columnElement=grid._columnElements[_j5+grid._frozenNearColumns.length];if(!columnElement){var _cellElement4=that.children[1].children[_j5];that._renderCell(row,null,_cellElement4);}}for(var _j6=0;_j6<grid._columnElements.length;_j6++){var _columnElement=grid._columnElements[_j6];var _column4=_columnElement.column;if(!_columnElement.parentNode||!_column4){if(_columnElement&&!_column4){var _cellElement6=that.children[1].children[_j6];if(_cellElement6){_cellElement6.classList.add('jqx-visibility-hidden');}}continue;}var _cellElement5=that.children[1].children[_j6];if(!_cellElement5){if(!_columnElement.column){_columnElement.column=_column4;}var _cell7=row.getCell(_column4);_cellElement5=_cell7.createElement();that.children[1].appendChild(_cellElement5);}if(_columnElement.classList.contains('jqx-visibility-hidden')){_cellElement5.classList.add('jqx-visibility-hidden');continue;}else{_cellElement5.classList.remove('jqx-visibility-hidden');}that._renderCell(row,_column4,_cellElement5);}if(!that.visible){that.classList.add('jqx-hidden');}else{that.classList.remove('jqx-hidden');}}},{key:'template',value:function template(){return'';}},{key:'isUtilityElement',get:function get(){return true;}},{key:'hasStyleObserver',get:function get(){return false;}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',get:function get(){return{};}}]);return Row;}(JQX.BaseElement));JQX.Utilities.Assign('Grid.Cell',function(){function Cell(row,column){babelHelpers.classCallCheck(this,Cell);var that=this;that.row=row;that.column=column;that.grid=row.grid;that.rowSpan=1;that.colSpan=1;that.value=undefined;that.fontSize=null;that.fontWeight=null;that.fontFamily=null;that.color=null;that.background=null;that.borderColor=null;that.tooltip=null;that.align=null;that.verticalAlign=null;that.readonly=false;that.oldValue=undefined;that._updating=false;that.styleChanged=true;that.editor=null;that.template=null;that.isEditing=false;that.canNotify=true;that.selected=false;that.focused=false;var proxy=new Proxy(that,{deleteProperty:function deleteProperty(target,property){delete target[property];return true;},get:function get(target,property){if(property==='value'){var cellValue=!that.column.displayField?that.row.data[that.column.dataField]:that.row.data[that.column.displayField];return cellValue;}else if(property==='editor'||property==='template'){return target[property]||that.column[property];}else if(property==='focused'){if(that.grid.selection.allowCellSelection&&that.grid._selection.focusedCell&&that.grid._selection.focusedCell.row.id===that.row.id&&that.grid._selection.focusedCell.column.dataField===that.column.dataField){return true;}var parent=that.parent();if(parent&&that.grid.selection.allowCellSelection&&that.grid._selection.focusedCell&&that.grid._selection.focusedCell.row.id===parent.row.id&&that.grid._selection.focusedCell.column.dataField===parent.column.dataField){return true;}return false;}if(property==='selected'){if(that.row.getProperty('selected')===true){return true;}if(that.column.getProperty('selected')===true){return true;}return that.grid._selection.cells['row'+that.row.id]?that.grid._selection.cells['row'+that.row.id][that.column.dataField]:false;}else if(property==='modifiedValue'){var tempValue=that.grid._cellsUpdatedValues[that.row.id+'_'+that.column.dataField];if(tempValue!==undefined){return tempValue;}return target['value'];}return target[property];},set:function set(target,propertyName,value){var oldValue=this.get(target,propertyName);if(oldValue===value){return true;}target[propertyName]=value;if(propertyName==='element'||propertyName==='isEditing'||propertyName==='oldValue'||propertyName==='_updating'||propertyName==='notifyFn'||propertyName.startsWith('_')||propertyName==='canNotify'){return true;}if(propertyName==='focused'){that.grid._selection.focusedCell=that;}if(propertyName==='colSpan'||propertyName==='rowSpan'){if(value>=0&&that.grid._cellsMerge.indexOf(that)===-1){that.grid._cellsMerge.push(that);}}if(propertyName==='row'||propertyName==='column'||propertyName==='grid'||propertyName==='styleChanged'){return true;}if(propertyName==='background'||propertyName==='fontSize'||propertyName==='fontWeight'||propertyName==='fontFamily'||propertyName==='color'||propertyName==='borderColor'||propertyName==='fontStyle'){that._styleChanged=true;}if(propertyName==='value'){if(that.oldValue===undefined){that.oldValue=oldValue;}that.grid.dataSource.boundSource.canNotify=false;if(value!==null&&value.label&&value.value){that.row.data[that.column.displayField]=value.label;that.row.data[that.column.dataField]=value.value;}else{if(that.column.valueField){that.row.data[that.column.valueField]=value;}that.row.data[that.column.dataField]=value;}var _dataItem2=that.grid.dataSource.dataItemById[that.row.id];if(_dataItem2){var index=_dataItem2.$.index;if(value!==that.grid.dataSource[index][that.column.dataField]){that.grid.dataSource[index][that.column.dataField]=value;}}that.grid.dataSource.boundSource.canNotify=true;}if(propertyName==='selected'){if(that.grid._selection.cells['row'+that.row.id]){delete that.grid._selection.cells['row'+that.row.id][that.column.dataField];if(Object.getOwnPropertyNames(that.grid._selection.cells['row'+that.row.id]).length===1){delete that.grid._selection.cells['row'+that.row.id];}}if(that.grid._selection.cells['column'+that.column.dataField]){delete that.grid._selection.cells['column'+that.column.dataField][that.row.id];if(Object.getOwnPropertyNames(that.grid._selection.cells['column'+that.column.dataField]).length===1){delete that.grid._selection.cells['column'+that.column.dataField];}}if(value){if(!that.grid._selection.cells['row'+that.row.id]){that.grid._selection.cells['row'+that.row.id]=[];}if(!that.grid._selection.cells['column'+that.column.dataField]){that.grid._selection.cells['column'+that.column.dataField]=[];}that.grid._selection.cells['row'+that.row.id][that.column.dataField]=true;that.grid._selection.cells['column'+that.column.dataField][that.row.id]=true;}}if(that._updating||!that.canNotify){return true;}if(!that.row.canNotify){return true;}that.grid._recycle();if(that.propertyChanged){that.propertyChanged(name.substring(1),oldValue/*, newValue*/);}return true;}});return proxy;}babelHelpers.createClass(Cell,[{key:'setStyle',value:function setStyle(element){var that=this;if(that._styleChanged){element.style.background=that.background;element.style.borderColor=that.borderColor;element.style.color=that.color;element.style.fontSize=that.fontSize;element.style.fontFamily=that.fontFamily;element.style.fontWeight=that.fontWeight;element.style.fontStyle=that.fontStyle;element.style.paddingBottom='';that._styleChanged=false;}}},{key:'getFormattedValue',value:function getFormattedValue(value,format){var that=this;if(value===undefined||value===null||value===''){return value;}if(that.column.dataType==='date'||that.column.dataType==='datetime'||that.column.dataType==='time'){return that.formatDate(value,format);}if(that.column.dataType==='int'||that.column.dataType==='int64'||that.column.dataType==='float'||that.column.dataType==='number'){return that.formatNumber(value,format);}return value;}/**
   * Formats a date.
   */},{key:'formatDate',value:function formatDate(value,format){if(!JQX.Utilities.DateTime){return value;}try{return new JQX.Utilities.DateTime(value).toString(format);}catch(e){return value;}}/**
     * Formats a number.
     */},{key:'formatNumber',value:function formatNumber(value,format){if(!JQX.Utilities.NumberRenderer){return value;}var renderer=new JQX.Utilities.NumberRenderer(),result=renderer.formatNumber(value,format);if(result===undefined){return value;}return result;}},{key:'refresh',value:function refresh(){var that=this;if(that.element){var htmlCellContent=that.element.firstChild;that.setStyle(htmlCellContent);}}},{key:'setProperties',value:function setProperties(properties){var that=this;that._updating=true;for(var propertyName in properties){that[propertyName]=properties[propertyName];}that._updating=false;that.grid._recycle();}},{key:'createElement',value:function createElement(){var that=this;var element=document.createElement('jqx-grid-cell');that.element=element;element._initialize(that);return element;}},{key:'render',value:function render(){var that=this;if(!that.element){return;}that.element._render();}},{key:'parent',value:function parent(getSiblingsData){var that=this;var row=that.row;var dataField=that.column.dataField;var grid=that.grid;if(!grid._cellsMerge.length){return null;}if(that.__parentCells){if(that.__parentCells['row'+row.id+'_column_'+dataField]!==undefined){return that.__parentCells['row'+row.id+'_column_'+dataField];}}var visibleRows=grid.getVisibleRows();if(grid.paging.enabled&&grid.selection.selectAllMode==='page'){visibleRows=visibleRows.slice(grid.paging.pageIndex*grid.paging.pageSize,(grid.paging.pageIndex+1)*grid.paging.pageSize);}if(!that.__parentCells){that.__parentCells=[];}for(var _i112=0;_i112<grid._cellsMerge.length;_i112++){var cell=grid._cellsMerge[_i112];var rows=[];var columns=[];rows.push(cell.row);if(cell.rowSpan>1){var startRowIndex=visibleRows.indexOf(cell.row);if(startRowIndex>=0){for(var r=startRowIndex;r<startRowIndex+cell.rowSpan;r++){if(visibleRows[r]&&rows.indexOf(visibleRows[r])===-1){rows.push(visibleRows[r]);}}}}columns.push(cell.column.dataField);if(cell.colSpan>1){var startColumnIndex=grid.columns.indexOf(grid.columnByDataField[cell.column.dataField]);for(var _r=startColumnIndex;_r<startColumnIndex+cell.colSpan;_r++){if(grid.columns[_r]&&columns.indexOf(grid.columns[_r].dataField)===-1){columns.push(grid.columns[_r].dataField);}}}if(rows.indexOf(row)>=0&&columns.indexOf(dataField)>=0){if(getSiblingsData){var _parentCell={cell:cell.row.getCell(cell.column.dataField),rows:rows,columns:columns,row:cell.row,column:cell.column,endRow:rows[rows.length-1],endColumn:grid.columnByDataField[columns[columns.length-1]]};that.__parentCells['row'+row.id+'_column_'+dataField]=_parentCell;return _parentCell;}var parentCell=cell.row.getCell(cell.column.dataField);that.__parentCells['row'+row.id+'_column_'+dataField]=parentCell;return parentCell;}}that.__parentCells['row'+row.id+'_column_'+dataField]=null;return null;}}]);return Cell;}());JQX('jqx-grid-cell',function(_JQX$BaseElement3){babelHelpers.inherits(Cell,_JQX$BaseElement3);function Cell(){babelHelpers.classCallCheck(this,Cell);return babelHelpers.possibleConstructorReturn(this,(Cell.__proto__||Object.getPrototypeOf(Cell)).apply(this,arguments));}babelHelpers.createClass(Cell,[{key:'addThemeClass',value:function addThemeClass(){}},{key:'addDefaultClass',value:function addDefaultClass(){}},{key:'_initialize',value:function _initialize(cell){var that=this;var content=document.createElement('div');var column=cell.column;var row=cell.row;var grid=cell.grid;that.cell=cell;that.appendChild(content);var shouldAddToggleButton=false;if(column&&column._treeColumn&&grid.dataSource.boundHierarchy){shouldAddToggleButton=true;if(!grid.grouping.enabled&&grid.dataSource.groupBy&&grid.dataSource.groupBy.length>0){shouldAddToggleButton=false;}}if(shouldAddToggleButton){var indent=document.createElement('div');var button=document.createElement('button');var label=document.createElement('div');var container=document.createElement('div');if(row.expanded){button.setAttribute('toggled','');}else{button.removeAttribute('toggled','');}that.toggleButton=button;content.appendChild(indent);content.appendChild(container);container.setAttribute('content','');indent.setAttribute('indent','');label.setAttribute('label','');button.setAttribute('toggle-button','');that.setAttribute('has-toggle-button','');container.appendChild(button);container.appendChild(label);that.content=label;return;}else{var _label=document.createElement('div');content.appendChild(_label);}that.content=content;}},{key:'_renderCommands',value:function _renderCommands(){var that=this;var grid=that.cell.grid;if(grid.__cellsCommandTemplate){that.firstChild.innerHTML=grid.__cellsCommandTemplate;grid._updateCommandColumnCommandsVisibility(that.firstChild,that.cell.row);return;}var commandHTML=grid._getCommandColumnCommandsTemplate();that.firstChild.innerHTML=commandHTML;grid._updateCommandColumnCommandsVisibility(that.firstChild,that.cell.row);grid.__cellsCommandTemplate=commandHTML;}},{key:'_renderGroupCell',value:function _renderGroupCell(){var that=this;var grid=that.cell.grid;var column=that.cell.column;var row=that.cell.row;//const data = row.data;
[].concat(babelHelpers.toConsumableArray(that.attributes)).forEach(function(attr){return that.removeAttribute(attr.name);});if(that.style.width!==column.computedWidth+'px'){that.style.width=column.computedWidth+'px';}if(that.style.left!==column.left+'px'){that.style.left=column.left+'px';}if(that.classList.contains('jqx-hidden')){that.classList.remove('jqx-hidden');}var cellValue=row.label;if(row.label!==undefined){var summary='';if(grid.grouping.summaryRow.visible){var getAllSubRows=function getAllSubRows(dataField,rows,subRows){for(var _i113=0;_i113<rows.length;_i113++){var _row3=rows[_i113];if(_row3[dataField]!==undefined){subRows.push(_row3);}if(_row3.summaryRow){continue;}if(_row3['children']){getAllSubRows(dataField,_row3['children'],subRows);}else if(_row3.data&&_row3.data['children']){getAllSubRows(dataField,_row3['children'],subRows);}}return subRows;};var subRows=getAllSubRows(column.dataField,row.summaryRow?row.parent.data['children']:row.data['children'],[]);var summaryObject={};var summaryFunctions=column._treeColumn?column.summary.length>0?column.summary:['count']:column.summary;summaryObject[column.dataField]=summaryFunctions;var summaryResult=summaryFunctions.length>0?grid.dataSource.summarize([summaryObject],subRows):null;if(summaryResult){for(var _i114=0;_i114<summaryFunctions.length;_i114++){var summaryFunction=summaryFunctions[_i114];summary+='<span summary>'+grid.localize(summaryFunction,{value:summaryResult[column.dataField][summaryFunction]});+'</span>';}}}if(column._treeColumn){if(!row.summaryRow){cellValue='<div header><span group>'+grid.columnByDataField[row.groupDataField].label+'</span><span value>'+row.label+'</span></div>';}else{cellValue='<div header><span group></span><span value></span></div>';}if(summary){cellValue+='<div summary>';cellValue+=summary;cellValue+='</div>';}that.setAttribute('has-toggle-button','');}else{//let columnLabel = '';
//let groupLabel = '';
cellValue='<div content><div label><div header><span group></span><span value></span></div>';if(summary){cellValue+='<div summary>';cellValue+=summary;cellValue+='</div>';}cellValue+='</div></div>';}}var htmlCellContent=that.firstChild;if(grid.dataSource.boundHierarchy&&that.toggleButton){var indent=htmlCellContent.children[0];var toggleButton=htmlCellContent.children[1].children[0];var content=htmlCellContent.children[1].children[1];indent.setAttribute('indent','');if(!row.leaf){toggleButton.classList.remove('jqx-visibility-hidden');if(row.expanded){toggleButton.setAttribute('toggled','');}else{toggleButton.removeAttribute('toggled','');}}else{toggleButton.classList.add('jqx-visibility-hidden');}var indentDiv='';if(!column._treeColumn){that.toggleButton.classList.add('jqx-hidden');}else{that.toggleButton.classList.remove('jqx-hidden');}if(column._treeColumn){if(grid.grouping.enabled&&grid.dataSource.groupBy.length>0){var level=row.level;if(undefined===row.label){level--;}indentDiv+='<div style="width: '+(1+level)*grid.grouping.groupIndent+'px;"></div>';}else{for(var _i115=0;_i115<row.level;_i115++){indentDiv+='<div class=\'jqx-indent\'></div>';}}}if(grid._adaptiveLayout>0){toggleButton.classList.add('jqx-hidden');indentDiv='';}if(undefined===row.label){toggleButton.classList.add('jqx-hidden');}else{toggleButton.classList.remove('jqx-hidden');toggleButton.style.marginLeft='';if(column._treeColumn&&grid.grouping.enabled&&grid.grouping.toggleButtonIndent>0){toggleButton.style.marginLeft=row.level*(grid.grouping.toggleButtonIndent-grid.grouping.groupIndent)+'px';}}indent.innerHTML=indentDiv;content.innerHTML=cellValue;if(grid.appearance.showTooltips){content.setAttribute('title',row.label?row.label:cellValue);}else if(content.hasAttribute('title')){content.removeAttribute('title');}}else if(row.label!==undefined&&grid.grouping.enabled&&!that.toggleButton){htmlCellContent.innerHTML=cellValue;}if(grid.grouping.enabled&&grid.dataSource.groupBy&&grid.dataSource.groupBy.length>0){var _indent=grid.grouping.groupIndent*(1+row.level);if(column.dataField===grid.columns[grid.columns.length-1].dataField){that.style.width=column.computedWidth-_indent+'px';if(grid.appearance.showColumnLines){htmlCellContent.firstChild.classList.add('jqx-grid-column-border');}}}var cellContentClassName='jqx-label';if(htmlCellContent.className!==cellContentClassName){htmlCellContent.className=cellContentClassName;}if(column.formatFunction){var formatObject={row:row,column:column,cell:that.cell,value:null,template:null,group:{value:cellValue,template:null}};column.formatFunction(formatObject);if(formatObject.group.value!==cellValue){htmlCellContent.innerHTML=formatObject.group.value;}if(formatObject.group.template!==null){htmlCellContent.innerHTML=formatObject.group.template;}}}},{key:'_render',value:function _render(){var that=this;var grid=that.cell.grid;var column=that.cell.column;var row=that.cell.row;var data=row.data;if(grid.grouping.enabled&&grid.dataSource.groupBy.length>0&&row.label!==undefined){that._renderGroupCell();return;}if(grid.grouping.enabled&&grid.dataSource.groupBy.length>0&&that.toggleButton){that.toggleButton.classList.remove('jqx-hidden');that.toggleButton.classList.remove('jqx-visibility-hidden');that.toggleButton.style.marginLeft='';if(column._treeColumn&&grid.grouping.enabled&&grid.grouping.toggleButtonIndent>0){that.toggleButton.style.marginLeft=row.level*(grid.grouping.toggleButtonIndent-grid.grouping.groupIndent)+'px';}}if(!column.visible){that.style.width='0px';return;}if(grid.appearance.showSortColumnBackground){column.sorted?that.setAttribute('sort',''):that.removeAttribute('sort');}else if(column.sorted&&that.hasAttribute('sort')){that.removeAttribute('sort');}if(grid.appearance.showFilterColumnBackground){column.filtered?that.setAttribute('filter',''):that.removeAttribute('filter');}else if(column.filtered&&that.hasAttribute('filter')){that.removeAttribute('filter');}var cellValue=!column.displayField?data[column.dataField]:data[column.displayField];if(grid.editing.batch){if(grid._cellsUpdatedValues){that.removeAttribute('update');var tempValue=grid._cellsUpdatedValues[row.id+'_'+column.dataField];if(tempValue!==undefined){that.setAttribute('update','');cellValue=tempValue;}}if(grid._rowsDeleted){if(grid._rowsDeleted.indexOf(row)>=0){that.setAttribute('delete','');}else{that.removeAttribute('delete');}}if(grid._rowsAdded){if(grid._rowsAdded.indexOf(row.id)>=0){that.setAttribute('add','');}else{that.removeAttribute('add');}}}if(grid.onCellValue&&!(column.rowNumbersColumn||column.selectionColumn)){that.cell._updating=true;grid.onCellValue(that.cell);that.cell._updating=false;cellValue=that.cell.value;}if(cellValue===undefined){cellValue='';}var formattedValue=cellValue;if(column.cellsFormat){formattedValue=that.cell.getFormattedValue(cellValue,column.cellsFormat);}var htmlCellContent=that.firstChild;if(grid.onCellRender||column.onCellRender){requestAnimationFrame(function(){if(!column._cellsCachedValues){column._cellsCachedValues=[];}if(column._cellsCachedValues[row.index]){var cellContent=column._cellsCachedValues[row.index];if(htmlCellContent.firstChild){htmlCellContent.removeChild(htmlCellContent.firstChild);}htmlCellContent.appendChild(cellContent);}else{grid.onCellRender?grid.onCellRender(that.cell):column.onCellRender(that.cell);if(that.cell.template!==column.template){var _cellContent=document.createElement('div');if(htmlCellContent.firstChild){htmlCellContent.removeChild(htmlCellContent.firstChild);}if(that.cell.template instanceof HTMLTemplateElement){_cellContent.appendChild(that.cell.template.cloneNode(true));}else{_cellContent.appendChild(that.cell.template);}htmlCellContent.appendChild(_cellContent);column._cellsCachedValues[row.index]=_cellContent;return;}}});}if(!column.autoGenerated){that.setAttribute('data-field',column.dataField);}if(that.cell.focused){that.setAttribute('focus','');}else{that.removeAttribute('focus');}if(that.cell.selected){that.setAttribute('selected','');}else{that.removeAttribute('selected');}if(grid.rowDetail.enabled&&row.showDetail){that.style.height=row.cellHeight+'px';that.style.lineHeight=row.cellHeight+'px';}if(row.adaptiveDetailExpanded||grid.adaptivityMode.responsiveLayout.autoShowHiddenCells&&row.adaptiveHeight){that.style.height=row.cellHeight+'px';that.style.lineHeight=row.cellHeight+'px';}if(row.expanded&&row.expandHeight>0){that.style.height=row.cellHeight+'px';that.style.lineHeight=row.cellHeight+'px';}var alignment=that._getCellAlignment(row,column);var hasTemplate=that.cell.template!==''&&grid.isInitialized;var cellContentClassName='';if(alignment.align){cellContentClassName+=alignment.align+' ';}if(alignment.verticalAlign){cellContentClassName+=alignment.verticalAlign+' ';}cellContentClassName+='jqx-label';if(that.style.width!==column.computedWidth+'px'){var isLastColumn=grid._isLastVisibleColumn(column);if(column.autoGenerated||isLastColumn){that.style.width=column.computedWidth+'px';}else{that.style.width=column.computedWidth-grid._columnGap+'px';}}if(grid.grouping.enabled&&grid.dataSource.groupBy&&grid.dataSource.groupBy.length>0){var indent=grid.grouping.groupIndent*(1+row.level);if(column.dataField===grid.columns[grid.columns.length-1].dataField){that.style.width=column.computedWidth-indent+grid.grouping.groupIndent+'px';if(grid.appearance.showColumnLines){that.classList.add('jqx-grid-column-border');}}}if(column===grid._firstVisibleColumn){that.classList.add('jqx-grid-column-border-collapse');}else{that.classList.remove('jqx-grid-column-border-collapse');}if(grid._columnGap>0&&grid.appearance.showColumnLines){that.classList.add('jqx-grid-column-border');}if(grid._rowGap>0){that.classList.add('jqx-grid-row-border');}if(!grid.appearance.showColumnLines){that.classList.add('jqx-grid-vertical-border-collapse');}else{that.classList.remove('jqx-grid-vertical-border-collapse');}if(!grid.appearance.showRowLines){that.classList.add('jqx-grid-horizontal-border-collapse');}else{that.classList.remove('jqx-grid-horizontal-border-collapse');}var left=column.left;if(that.style.left!==left+'px'){that.style.left=left+'px';}if(that.classList.contains('jqx-hidden')){that.classList.remove('jqx-hidden');}if(that.hasAttribute('template')){that.removeAttribute('template');}if(that.hasAttribute('freeze')){that.removeAttribute('freeze');}if(that.hasAttribute('adaptive')){that.removeAttribute('adaptive');}if(that.hasAttribute('detail')){that.removeAttribute('detail');}if(row.filterRow){that.classList.add('jqx-grid-filter-row-cell');}else if(row.summaryRow){that.classList.add('jqx-grid-summary-row-cell');}else if(column.freeze||row.freeze){if(column.selectionColumn){that.setAttribute('checkbox','');cellContentClassName+=' jqx-input';if(column.grid.selection.checkBoxes.enabled&&column.grid.selection.checkBoxes.autoShow){that.setAttribute('auto-show','');}else{that.removeAttribute('auto-show');}}if(column.rowNumbersColumn||column.selectionColumn){that.setAttribute('header','');}if(column.rowDetailColumn){that.setAttribute('header','');that.setAttribute('detail','');that.setAttribute('has-toggle-button','');}if(column.commandColumn){that.setAttribute('command','');}if(grid.appearance.showFrozenColumnBackground&&column.freeze){that.setAttribute('freeze','');}if(grid.appearance.showFrozenRowBackground&&row.freeze){that.setAttribute('freeze','');}}if(column.cellsRotationAngle){var rotateResult=that._rotateCellContent(htmlCellContent,column,cellValue);if(!rotateResult){return;}}else{if(row.filterRow){if(column.adaptiveColumn||column.toggleColumn||column.rowNumbersColumn){htmlCellContent.innerHTML='';}else{if(!column.filterEditorInitialized){column.filterEditorInitialized=true;}}}else if(row.summaryRow){if(column.adaptiveColumn||column.toggleColumn||column.rowNumbersColumn){htmlCellContent.innerHTML='';}else{if(column.summary.length>0&&grid._summaryItems){var summaryItem=grid._summaryItems[column.dataField];var index=0;for(var summaryItemFunction in summaryItem){if(index===row.summaryRowIndex){htmlCellContent.innerHTML=grid.localize(summaryItemFunction,{value:summaryItem[summaryItemFunction]});}index++;}}}}else{if(grid.rowDetail.enabled&&column.rowDetailColumn){if(htmlCellContent.innerHTML!==''){if(row.showDetail){htmlCellContent.innerHTML='<button class="jqx-animate" toggled toggle-button></button>';}else{htmlCellContent.innerHTML='<button class="jqx-animate" toggle-button></button>';}row.element.toggleDetailButton=that.querySelector('button');}}else if(column.adaptiveColumn){that.removeAttribute('expanded');if(row.adaptiveDetailExpanded){that.setAttribute('expanded','');}if(new Date()-grid._lastPointerDownTime<300){cellContentClassName+=' jqx-animate';}}else if(column.commandColumn){that._renderCommands();}else if(grid.appearance.showRowNumber&&column.rowNumbersColumn){if(row.addNewRow){htmlCellContent.textContent='';}else{if(grid._rowsAdded){if(grid._rowsAdded.indexOf(row.id)>=0){htmlCellContent.textContent='';}else{htmlCellContent.textContent=row.visibleIndex+1;}}else{htmlCellContent.textContent=row.visibleIndex+1;}}}else if(hasTemplate){that.removeAttribute('readonly');switch(that.cell.template){case'checkBox':case'switchButton':case'radioButton':if(htmlCellContent.textContent!==''){htmlCellContent.textContent='';}if(!grid.editing.enabled||!column.allowEdit||that.cell.readonly||grid.editing.enabled&&grid.editing.commandColumn.visible&&grid.editing.editRow!==that.cell.row){that.setAttribute('readonly','');}if(htmlCellContent.innerHTML!=='<span class="jqx-input"></span>'){htmlCellContent.innerHTML='<span class="jqx-input"></span>';}if(cellValue){htmlCellContent.firstChild.setAttribute('checked','');}else if(cellValue===null){htmlCellContent.firstChild.setAttribute('checked','indeterminate');}else{htmlCellContent.firstChild.removeAttribute('checked');}that.setAttribute('template',that.cell.template);break;default:{var template=null;that.setAttribute('template','');if(typeof that.cell.template==='function'){var formatObject={row:row,column:column,cell:that.cell,oldValue:that.cell.oldValue,value:cellValue,template:null};var cellTemplate=htmlCellContent.querySelector('.jqx-grid-cell-template');if(cellTemplate){formatObject.template=cellTemplate.firstElementChild;}that.cell.template(formatObject);if(!cellTemplate&&formatObject.template){if(formatObject.template instanceof HTMLElement){var templateContainer=document.createElement('div');templateContainer.classList.add('jqx-grid-cell-template');htmlCellContent.appendChild(templateContainer);templateContainer.appendChild(formatObject.template);}else{htmlCellContent.innerHTML='<div class="jqx-grid-cell-template">'+formatObject.template+'</div>';}}else if(!cellTemplate&&formatObject.template===null){htmlCellContent.innerHTML=cellValue;}if(that.cell._styleChanged){that.cell.setStyle(htmlCellContent);}}else{if(htmlCellContent.textContent!==''){htmlCellContent.textContent='';}if(that.cell.template.startsWith('#')){template=document.querySelector(that.cell.template);}if(template){var templateContent=template.content.cloneNode(true).firstElementChild;cellValue=cellValue.toString();cellValue=cellValue.replace(/'/ig,'\\\'');cellValue=cellValue.replace(/"/ig,'\\"');var html=templateContent.outerHTML.replace(/{{value}}/ig,cellValue).replace(/{{id}}/ig,row.id);if(html.indexOf('{{value=')>=0){if(!cellValue){html=html.replace(/{{value=/ig,'');html=html.replace(/}}/ig,'');}else{html=html.substring(0,html.indexOf('{{value='))+cellValue+html.substring(html.indexOf('}'));html=html.replace(/}/ig,'');html=html.replace(/{/ig,'');}}if(htmlCellContent.innerHTML!==html){htmlCellContent.innerHTML=html;}}else{var _html2=that.cell.template.replace(/{{value}}/ig,cellValue).replace(/{{id}}/ig,row.id);if(htmlCellContent.innerHTML!==_html2){htmlCellContent.innerHTML=_html2;}}}}}}else if(column.selectionColumn){if(grid.selectionMode==='checkBox'){if(row.getProperty('selected')){that.setAttribute('selected','');}else{if(that.getAttribute('selected')){that.removeAttribute('selected');}}}}else{var firstChild=htmlCellContent.firstChild;if(firstChild&&firstChild.classList&&that.toggleButton){var _indent2=htmlCellContent.children[0];var toggleButton=htmlCellContent.children[1].children[0];var content=htmlCellContent.children[1].children[1];var indentDiv='';if(column._treeColumn){if(grid.grouping.enabled){var level=row.level-1;indentDiv+='<div style="width: '+(1+level)*grid.grouping.groupIndent+'px;"></div>';}else{for(var _i116=0;_i116<row.level;_i116++){indentDiv+='<div class=\'jqx-indent\'></div>';}}}_indent2.innerHTML=indentDiv;toggleButton.classList.add('jqx-visibility-hidden');if(!row.leaf){toggleButton.classList.remove('jqx-visibility-hidden');if(row.expanded){toggleButton.setAttribute('toggled','');}else{toggleButton.removeAttribute('toggled','');}}else{toggleButton.classList.add('jqx-visibility-hidden');}if(row.data.isEmpty){toggleButton.classList.add('jqx-visibility-hidden');}content.innerHTML=formattedValue;if(grid.appearance.showTooltips){content.setAttribute('title',formattedValue);}else if(content.hasAttribute('title')){content.removeAttribute('title');}}else{var cell=row['column_'+column.dataField];if(that.getAttribute('rowspan')){that.removeAttribute('rowspan');that.style.height='';}if(that.getAttribute('colspan')){that.removeAttribute('colspan');}if(cell){if(cell.colSpan>1){var startColumnIndex=grid.columns.indexOf(column);var width=0;for(var m=startColumnIndex;m<startColumnIndex+cell.colSpan;m++){var viewColumn=grid.columns[m];if(viewColumn&&viewColumn.visible){width+=viewColumn.computedWidth;}}that.style.width=width+'px';that.setAttribute('colspan','');cell._styleChanged=true;}if(cell.rowSpan>1){var startRowIndex=grid.rows.indexOf(row);var height=0;row.element.setAttribute('rowspan','');for(var _m2=startRowIndex;_m2<=startRowIndex+cell.rowSpan-1;_m2++){var viewRow=grid.rows[_m2];if(viewRow&&viewRow.visible&&viewRow.filtered){height+=viewRow.cellHeight;}}that.style.height=height+'px';that.setAttribute('rowspan','');cell._styleChanged=true;}if(cell.colSpan===1&&that.hasAttribute('colspan')||that.hasAttribute('rowspan')&&cell.rowSpan===1){that.style.height='';that.style.width='';that.removeAttribute('colspan');that.removeAttribute('rowspan');cell._styleChanged=true;}if(htmlCellContent.textContent!==formattedValue&&!column.formatFunction){htmlCellContent.textContent=formattedValue;}cell.setStyle(htmlCellContent);if(grid.appearance.showTooltips){htmlCellContent.setAttribute('title',cell.tooltip||formattedValue);}else if(htmlCellContent.hasAttribute('title')){htmlCellContent.removeAttribute('title');}}else{htmlCellContent.textContent=formattedValue;}}}}}if(htmlCellContent.className!==cellContentClassName){htmlCellContent.className=cellContentClassName;}if(column.formatFunction&&!row.data.isEmpty&&grid.isInitialized){var _formatObject={row:row,column:column,cell:that.cell,oldValue:that.cell.oldValue,value:cellValue,formattedValue:formattedValue,template:null};that.cell.canNotify=false;row.canNotify=false;var cellStyle=Object.assign({},{background:that.cell.background,borderColor:that.cell.borderColor,color:that.cell.color,fontSize:that.cell.fontSize,fontFamily:that.cell.fontFamily,fontWeight:that.cell.fontWeight,fontStyle:that.cell.fontStyle});column.formatFunction(_formatObject);if(htmlCellContent.style.background!==cellStyle.background||htmlCellContent.style.borderColor!==cellStyle.borderColor||htmlCellContent.style.color!==cellStyle.color||htmlCellContent.style.fontSize!==cellStyle.fontSize||htmlCellContent.style.fontWeight!==cellStyle.fontWeight||htmlCellContent.style.fontStyle!==cellStyle.fontStyle){that.cell._styleChanged=true;that.cell.setStyle(htmlCellContent);}var requiresUpdate=true;if(_formatObject.value!==cellValue){if(that.toggleButton){var _content=htmlCellContent.children[1].children[1];_content.innerHTML=_formatObject.value;}else{htmlCellContent.innerHTML=_formatObject.value;}requiresUpdate=false;}if(_formatObject.template!==null){if(that.toggleButton){var _content2=htmlCellContent.children[1].children[1];if(_content2.innerHTML!==_formatObject.template){_content2.innerHTML=_formatObject.template;}}else if(htmlCellContent.innerHTML!==_formatObject.template){var checkTemplateElement=document.createElement('div');checkTemplateElement.innerHTML=_formatObject.template;if(checkTemplateElement.innerHTML!==htmlCellContent.innerHTML){htmlCellContent.innerHTML=_formatObject.template;}}requiresUpdate=false;}if(requiresUpdate){htmlCellContent.textContent=cellValue;}that.cell.canNotify=true;row.canNotify=true;}}},{key:'_rotateCellContent',value:function _rotateCellContent(columnHeaderCellContentElement,column,cellValue){var that=this;var textElement=document.createElement('span');columnHeaderCellContentElement.innerHTML='';textElement.innerHTML=cellValue;columnHeaderCellContentElement.appendChild(textElement);textElement.className='rotate';textElement.style.transform='rotate('+column.cellsRotationAngle+'deg)';return that.grid._recycleRotate(columnHeaderCellContentElement,textElement,column.cellsAlign,column.cellsVerticalAlign,cellValue);}},{key:'_getCellAlignment',value:function _getCellAlignment(row,column){var cell=row['column_'+column.dataField];var align=cell?cell.align||column.cellsAlign:column.cellsAlign;var verticalAlign=cell?cell.verticalAlign||column.cellsVerticalAlign:column.cellsVerticalAlign;var alignment={align:'',verticalAlign:''};switch(align){case'left':alignment.align='align-left';break;case'center':case'middle':alignment.align='align-center';break;case'right':alignment.align='align-right';break;}switch(verticalAlign){case'top':alignment.verticalAlign='align-top';break;case'center':case'middle':alignment.verticalAlign='align-middle';break;case'bottom':alignment.verticalAlign='align-bottom';break;}return alignment;}},{key:'template',value:function template(){return'';}},{key:'hasStyleObserver',get:function get(){return false;}},{key:'enableShadowDOM',get:function get(){return false;}},{key:'isUtilityElement',get:function get(){return true;}}],[{key:'properties',get:function get(){return{};}}]);return Cell;}(JQX.BaseElement));JQX.Utilities.Assign('Grid.Menu',function(){function Menu(){babelHelpers.classCallCheck(this,Menu);}babelHelpers.createClass(Menu,[{key:'openMenu',value:function openMenu(dataField){var that=this;var column=that.columnByDataField[dataField];if(!column){return;}that._openMenu(column);}},{key:'_openColumnChooserMenu',value:function _openColumnChooserMenu(column){var that=this;if(!column){column=that._commandColumn;}if(!column||that.menu&&that.menu.column===column&&column.element.hasAttribute('aria-controls')){that.closeMenu();return;}if(!that.menu){that.menu=document.createElement('div');that.menu.classList.add('jqx-grid-column-menu');that.menu.id=that.id+'_'+that.tagName.toLowerCase()+'_menu_'+Math.floor((1+Math.random())*0x10000).toString(16).substring(1);}if(that.appearance.allowColumnMenuAnimation){that.menu.classList.add('jqx-animate');}else{that.menu.classList.remove('jqx-animate');}that._createColumnChooserMenuItems(column);that.menu.style.height=that.columnMenu.height?that.columnMenu.height+'px':'auto';if(that.menu.column&&that.menu.column!==column){that.menu.column.setProperty('menu',null);that.menu.column=null;}document.body.appendChild(that.menu);column.setProperty('menu',that.menu);var columnRect=column.element.getBoundingClientRect();that.menu.column=column;var left=columnRect.right-column.element.actionButton.getBoundingClientRect().width+window.pageXOffset;var top=columnRect.bottom+window.pageYOffset;if(left+that.menu.offsetWidth>window.innerWidth){left=columnRect.right+window.pageXOffset-that.menu.offsetWidth;if(left+that.menu.offsetWidth>window.innerWidth){left=window.innerWidth-that.menu.offsetWidth;}}that.menu.style.left=left+'px';that.menu.style.top=top+'px';that.menu.classList.remove('jqx-hidden');that.menu.classList.add('open');}},{key:'_openMenu',value:function _openMenu(column){var that=this;if(!column||that.menu&&that.menu.column===column&&column.element.hasAttribute('aria-controls')){that.closeMenu();return;}if(!that.menu){that.menu=document.createElement('div');that.menu.classList.add('jqx-grid-column-menu');that.menu.id=that.id+'_'+that.tagName.toLowerCase()+'_menu_'+Math.floor((1+Math.random())*0x10000).toString(16).substring(1);}if(that.appearance.allowColumnMenuAnimation){that.menu.classList.add('jqx-animate');}else{that.menu.classList.remove('jqx-animate');}that._createMenuItems(column);that._createFilterPanel(column);that._filterMenuItemsVisibility(column);that.menu.style.height=that.columnMenu.height?that.columnMenu.height+'px':'auto';if(that.menu.column&&that.menu.column!==column){that.menu.column.setProperty('menu',null);that.menu.column=null;}document.body.appendChild(that.menu);column.setProperty('menu',that.menu);var columnRect=column.element.getBoundingClientRect();that.menu.column=column;var left=columnRect.right-column.element.actionButton.getBoundingClientRect().width+window.pageXOffset;var top=columnRect.bottom+window.pageYOffset;if(left+that.menu.offsetWidth>window.innerWidth){left=columnRect.right+window.pageXOffset-that.menu.offsetWidth;if(left+that.menu.offsetWidth>window.innerWidth){left=window.innerWidth-that.menu.offsetWidth;}}that.menu.style.left=left+'px';that.menu.style.top=top+'px';if(!that.hasColumnMenu(column)){that.closeMenu();}else{that.menu.classList.remove('jqx-hidden');}that.menu.classList.add('open');}},{key:'_menuItemClick',value:function _menuItemClick(event){var that=this;var details=event.detail;var menuItem=details.value;if(menuItem&&menuItem.properties){var command=menuItem.properties.command;if(typeof command==='function'){command.apply(that,[menuItem.column]);}else if(that[command]){that[command].apply(that,[menuItem.column]);}if(menuItem.column.autoCloseMenu){that.closeMenu();}}}},{key:'removeGroupByCommand',value:function removeGroupByCommand(column){var that=this;that.removeGroup(column.dataField);}},{key:'groupByCommand',value:function groupByCommand(column){var that=this;if(!that.dataSource){return;}that.addGroup(column.dataField);}},{key:'sortAscCommand',value:function sortAscCommand(column){var that=this;that.sortBy(column.dataField,'asc');}},{key:'sortDescCommand',value:function sortDescCommand(column){var that=this;that.sortBy(column.dataField,'desc');}},{key:'removeSortCommand',value:function removeSortCommand(column){var that=this;that.sortBy(column.dataField,null);}/*
    { 'columnMenuCustomizeType': {command: 'customizeTypeCommand', enabled: true, visible: false, icon: 'jqx-icon-customize', label: '{{messages}}'}},
{ 'columnMenuItemRename': { command: 'renameCommand', enabled: true, visible: false, icon: 'jqx-icon-rename', label: '{{messages}}' } },
{ 'columnMenuItemEditDescription': { command: 'editDescriptionCommand', enabled: true, visible: false, icon: 'jqx-icon-description', label: '{{messages}}' } },
{ 'columnMenuItemDuplicate': { command: 'duplicateCommand', visible: false, enabled: true, icon: 'jqx-icon-duplicate', label: '{{messages}}' } },
{ 'columnMenuItemInsertLeft': { command: 'insertLeftCommand', visible: false, enabled: true, icon: 'jqx-icon-insert-left', label: '{{messages}}' } },
{ 'columnMenuItemInsertRight': { command: 'insertRightCommand', visible: false, enabled: true, icon: 'jqx-icon-insert-right', label: '{{messages}}' } },
{ 'columnMenuItemSortAsc': { command: 'sortAscCommand', visible: 'auto', enabled: true, icon: 'jqx-icon-sort-a-z', label: '{{messages}}' } },
{ 'columnMenuItemSortDesc': { command: 'sortDescCommand', visible: 'auto', enabled: true, icon: 'jqx-icon-sort-z-a', label: '{{messages}}' } },
{ 'columnMenuItemRemoveSort': { command: 'removeSortCommand', visible: 'auto', enabled: true, icon: 'jqx-icon-cancel-circled', label: '{{messages}}' } },
{ 'columnMenuItemFilter': { command: 'addFilterCommand', visible: 'auto', enabled: true, icon: 'jqx-icon-add-filter', label: '{{messages}}' } },
{ 'columnMenuItemRemoveFilter': { command: 'removeFilterCommand', enabled: true, visible: 'auto', icon: 'jqx-icon-cancel-circled-outline', label: '{{messages}}' } },
{ 'columnMenuItemGroupBy': { command: 'groupByCommand', enabled: true, visible: 'auto', icon: 'jqx-icon-group-by', label: '{{messages}}' } },
{ 'columnMenuItemHide': { command: 'hideColumnCommand', enabled: true, visible: false, icon: 'jqx-icon-hide', label: '{{messages}}' } },
{ 'columnMenuItemDelete': { command: 'deleteColumnCommand', enabled: true, visible: false, icon: 'jqx-icon-delete', label: '{{messages}}' } }
*/},{key:'_removeMenu',value:function _removeMenu(){var that=this;var verticalMenu=that.menu.querySelector('jqx-menu');if(verticalMenu){that.menu.removeChild(verticalMenu);}}},{key:'_createColumnChooserMenuItems',value:function _createColumnChooserMenuItems()/*column*/{var that=this;that._removeMenu();var verticalMenu=document.createElement('jqx-menu');var menuContent=document.createDocumentFragment();verticalMenu.mode='vertical';verticalMenu.dropDownAppendTo='body';verticalMenu.checkboxes=true;verticalMenu.checkable=true;verticalMenu.classList.add('jqx-grid-column-chooser-menu');for(var _i117=0;_i117<that.columns.length;_i117++){var column=that.columns[_i117];var menuItem=document.createElement('jqx-menu-item');var icon=column.showIcon?column.icon:column.visible?'jqx-icon-eye':'jqx-icon-eye-off';menuItem.checked=column.visible;if(!column.allowHide){continue;}column.command=function(column){column.visible=!column.visible;};menuItem.label=that.localize(column.label)||column.label||column.dataField;menuItem.value={column:column,properties:column};if(icon){menuItem.label='<span class="jqx-grid-icon '+icon+'"></span>'+menuItem.label;}menuContent.appendChild(menuItem);}verticalMenu.appendChild(menuContent);that.menu.appendChild(verticalMenu);that.menu.itemCheckChange=that._menuItemClick.bind(that);that.menu.addEventListener('itemCheckChange',that.menu.itemCheckChange);that.menu.addEventListener('keydown',that._keyDownHandler.bind(that));}},{key:'_createMenuItems',value:function _createMenuItems(column){var that=this;that._removeMenu();var verticalMenu=document.createElement('jqx-menu');var menuContent=document.createDocumentFragment();var dataSource=column.menuItems||that.columnMenu.dataSource;verticalMenu.mode='vertical';verticalMenu.dropDownAppendTo='body';for(var _item14 in dataSource){var properties=dataSource[_item14];var menuItem=document.createElement('jqx-menu-item');var icon=properties.icon;menuItem.label=that.localize(_item14);menuItem.value={column:column,properties:properties};var sortString=function sortString(asc){if(asc){if(column.dataType==='string'){return'A → Z';}else if(column.dataType==='number'||column.dataType==='date'||column.dataType==='time'){return'1 → 9';}else if(column.dataType==='bool'||column.dataType==='boolean'){return'0 → 1';}}else{if(column.dataType==='string'){return'Z → A';}else if(column.dataType==='number'||column.dataType==='date'||column.dataType==='time'){return'9 → 1';}else if(column.dataType==='bool'||column.dataType==='boolean'){return'1 → 0';}}};if(_item14==='columnMenuItemSortAsc'){menuItem.label=that.localize(_item14,{mode:sortString(true)});if(column.dataType!=='string'){if(properties.iconAlt){icon=properties.iconAlt;}}}else if(_item14==='columnMenuItemSortDesc'){menuItem.label=that.localize(_item14,{mode:sortString(false)});if(column.dataType!=='string'){if(properties.iconAlt){icon=properties.iconAlt;}}}if(icon){menuItem.label='<span class="jqx-grid-icon '+icon+'"></span>'+menuItem.label;}menuContent.appendChild(menuItem);}verticalMenu.appendChild(menuContent);if(that._filterContainer){that.menu.insertBefore(verticalMenu,that._filterContainer);}else{that.menu.appendChild(verticalMenu);}that.menu.itemClick=that._menuItemClick.bind(that);that.menu.addEventListener('itemClick',that.menu.itemClick);that.menu.addEventListener('keydown',that._keyDownHandler.bind(that));}},{key:'_getFilterType',value:function _getFilterType(column){var dataType=column.dataType.endsWith('?')?column.dataType.substring(0,column.dataType.length-1):column.dataType;var filterType='string';switch(dataType){case'number':case'int':case'float':case'int64':filterType='numeric';break;case'bool':case'boolean':filterType='bool';break;case'date':case'time':case'datetime':filterType='date';break;case'any':filterType='any';break;}return filterType;}},{key:'_createFilterPanel',value:function _createFilterPanel(column){var that=this;if(!JQX.FilterPanel){return;}if(that.filtering.enabled&&that.filtering.filterMenu.visible&&column.allowFilter){var filterType=that._getFilterType(column);if(that._filterPanel){that._filterPanel.parentNode.removeChild(that._filterPanel);}that._filterPanel=that._filterPanels[filterType];that._filterPanel.dataField=column.dataField;if(!that._filterContainer){var filterContainer=document.createElement('div');filterContainer.classList.add('jqx-filter-container');that._filterContainer=filterContainer;requestAnimationFrame(function(){that.menu.appendChild(filterContainer);});that._applyFilterHandler=function(){that.addFilter(that._filterPanel.dataField,that._filterPanel.getFilter());var column=that.columnByDataField[that._filterPanel.dataField];column._filterState=that._filterPanel.getState();};that._clearFilterHandler=function(){requestAnimationFrame(function(){that.removeFilter(that._filterPanel.dataField);var column=that.columnByDataField[that._filterPanel.dataField];column._filterState=null;});};}that._filterContainer.appendChild(that._filterPanel);that._filterPanel.classList.remove('jqx-hidden');that._filterPanel.removeEventListener('filter',that._applyFilterHandler);that._filterPanel.removeEventListener('clear',that._clearFilterHandler);that._filterPanel.addEventListener('filter',that._applyFilterHandler);that._filterPanel.addEventListener('clear',that._clearFilterHandler);if(column.filterMenuMode==='none'||!that.filtering.filterMenu.visible||!JQX.FilterPanel){that._filterContainer.classList.add('jqx-hidden');}else{that._filterContainer.classList.remove('jqx-hidden');}that._filterPanel.reset();if(column._filterState){that._filterPanel.loadState(column._filterState);}else if(column.filter){var columnFilterGroup=column.filter;var _filterType=that._getFilterType(column);var filters=columnFilterGroup.getFilters();while(filters.length>0&&filters[0].type==='FilterGroup'){filters=filters[0].value;}var conditions=columnFilterGroup.getConditions(_filterType);var firstFilterComparison=filters.length>0?conditions.indexOf(filters[0].condition):-1;var secondFilterComparison=filters.length>1?conditions.indexOf(filters[1].condition):-1;var firstFilterValue=filters.length>0?filters[0].value:'';var secondFilterValue=filters.length>1?filters[1].value:'';var logicalOperator=filters.length>1?['and','or'].indexOf(filters[1].logicalOperator):0;column._filterState={firstFilterComparison:firstFilterComparison,firstFilterValue:firstFilterValue,logicalOperator:logicalOperator,secondFilterComparison:secondFilterComparison,secondFilterValue:secondFilterValue};that._filterPanel.loadState(column._filterState);}}else if(that._filterPanel){that._filterPanel.parentNode.removeChild(that._filterPanel);column._filterState=null;}}},{key:'hasColumnMenu',value:function hasColumnMenu(column){var that=this;var dataSource=column.menuItems||that.columnMenu.dataSource;var hiddenMenuItemsCount=0;var length=0;for(var _item15 in dataSource){var properties=dataSource[_item15];length++;if(properties.visible===false){hiddenMenuItemsCount++;}else if(properties.visible==='auto'){if(_item15==='columnMenuItemFilter'||_item15==='columnMenuItemRemoveFilter'){if(that.filtering.filterMenu.visible||that.filtering.filterBuilder.visible){hiddenMenuItemsCount++;}}if(_item15==='columnMenuItemGroupBy'||_item15==='columnMenuItemRemoveGroupBy'){if(!column.allowGroup||!that.grouping.enabled){hiddenMenuItemsCount++;}}if(_item15==='columnMenuItemFilter'&&!column.allowFilter){hiddenMenuItemsCount++;}if(_item15==='columnMenuItemRemoveFilter'&&!column.allowFilter){hiddenMenuItemsCount++;}if(_item15==='columnMenuItemGroupBy'&&!column.allowGroup){hiddenMenuItemsCount++;}if(_item15==='columnMenuItemSortAsc'||_item15==='columnMenuItemSortDesc'||_item15==='columnMenuItemRemoveSort'){if(!column.allowSort||!that.sorting.enabled){hiddenMenuItemsCount++;}}}}var hasFilter=that.filtering.enabled&&that.filtering.filterMenu.visible&&column.filterMenuMode!=='none';if((!hasFilter||!JQX.FilterPanel)&&(!JQX.Menu||hiddenMenuItemsCount>=length)){return false;}return true;}},{key:'_filterMenuItemsVisibility',value:function _filterMenuItemsVisibility(column){var that=this;var menuItems=that.menu.querySelectorAll('jqx-menu-item');var dataSource=column.menuItems||that.columnMenu.dataSource;var index=0;for(var _item16 in dataSource){var menuItem=menuItems[index++];var properties=dataSource[_item16];menuItem.disabled=!properties.enabled;menuItem.classList.remove('jqx-hidden');if(_item16==='columnMenuItemRemoveSort'){if(column.sortOrder){menuItem.disabled=false;}else{menuItem.disabled=true;}}if(_item16==='columnMenuItemSortAsc'&&column.sortOrder==='asc'){menuItem.disabled=true;}else if(_item16==='columnMenuItemSortDesc'&&column.sortOrder==='desc'){menuItem.disabled=true;}if(properties.visible===true){menuItem.classList.remove('jqx-hidden');}else if(properties.visible===false){menuItem.classList.add('jqx-hidden');}else if(properties.visible==='auto'){if(_item16==='columnMenuItemFilter'||_item16==='columnMenuItemRemoveFilter'){if(that.filtering.enabled===false){menuItem.classList.add('jqx-hidden');}else{if(that.filtering.filterMenu.visible||that.filtering.filterBuilder.visible){menuItem.classList.add('jqx-hidden');}else if(that.filtering.filterBuilder.visible){menuItem.classList.remove('jqx-hidden');}}}if(_item16==='columnMenuItemGroupBy'){if(that.grouping.enabled&&column.allowGroup){menuItem.classList.remove('jqx-hidden');}else{menuItem.classList.add('jqx-hidden');}var groupIndex=that.dataSource.groupBy.indexOf(column.dataField);if(groupIndex>=0){menuItem.disabled=true;}else{menuItem.disabled=false;}}if(_item16==='columnMenuItemRemoveGroupBy'){if(that.grouping.enabled&&column.allowGroup){menuItem.classList.remove('jqx-hidden');}else{menuItem.classList.add('jqx-hidden');}var _groupIndex=that.dataSource.groupBy.indexOf(column.dataField);if(_groupIndex<0){menuItem.disabled=true;}else{menuItem.disabled=false;}}if(_item16==='columnMenuItemFilter'&&!column.allowFilter){menuItem.classList.add('jqx-hidden');}if(_item16==='columnMenuItemRemoveFilter'&&!column.allowFilter){menuItem.classList.add('jqx-hidden');}if(_item16==='columnMenuItemSortAsc'||_item16==='columnMenuItemSortDesc'||_item16==='columnMenuItemRemoveSort'){if(column.allowSort&&that.sorting.enabled){menuItem.classList.remove('jqx-hidden');}else{menuItem.classList.add('jqx-hidden');}}}}}},{key:'hasMenu',value:function hasMenu(){var that=this;if(that.menu&&that.menu.column){if(that.menu.parentNode){return true;}}return false;}},{key:'closeMenu',value:function closeMenu(){var that=this;if(that.menu&&that.menu.column){if(that.menu.column){that.menu.column.setProperty('menu',null);that.menu.column=null;}if(that.menu.parentNode){that.menu.classList.remove('open');if(!that.appearance.allowColumnMenuAnimation){that.menu.parentNode.removeChild(that.menu);}}that.menu.removeEventListener('keydown',that._keyDownHandler.bind(that));that.menu.removeEventListener('itemClick',that.menu.itemClick);that.menu.removeEventListener('itemCheckChange',that.menu.itemCheckChange);that.focus();}}}]);return Menu;}());JQX.Utilities.Assign('Grid.Filter',function(){function Filter(){babelHelpers.classCallCheck(this,Filter);}babelHelpers.createClass(Filter,[{key:'addFilter',value:function addFilter(dataField,filter,refreshFilters){var that=this;var column=that.columnByDataField[dataField];if(column&&column.canNotify){column.setProperty('filter',filter);if(refreshFilters!==false){that.refreshFilters();}}}},{key:'removeFilter',value:function removeFilter(dataField,refreshFilters){var that=this;var column=that.columnByDataField[dataField];if(column&&column.canNotify){column.setProperty('filter',null);if(refreshFilters!==false){that.refreshFilters();}}}},{key:'clearFilter',value:function clearFilter(){var that=this;for(var _i118=0;_i118<that.columns.length;_i118++){var column=that.columns[_i118];column.setProperty('filter',null);}that.refreshFilters();}},{key:'getFilteredColumns',value:function getFilteredColumns(){var that=this;if(that._filters){var columns=[];for(var _i119=0;_i119<that._filters.length;_i119++){var filter=that._filters[_i119];columns[filter[0]]=filter[1];columns.length++;}return columns;}return[];}},{key:'getVisibleRows',value:function getVisibleRows(){var that=this;if(that._visibleRows){return that._visibleRows;}var visibleRows=[];var viewRows=that._viewRows;var offset=that.editing.addNewRow.visible&&that.editing.addNewRow.position!=='far'?1:0;for(var _i120=0;_i120<viewRows.length;_i120++){var row=viewRows[_i120];row.canNotify=false;row.visibleIndex=-1;if(row.visible&&(row.filtered!==false||row.filtered===undefined)){row.visibleIndex=visibleRows.length-offset;visibleRows.push(row);}row.canNotify=true;}that._visibleRows=visibleRows;return visibleRows;}},{key:'refreshFilters',value:function refreshFilters(){var that=this;var filters=[];//const viewRows = that._viewRows;
for(var _i121=0;_i121<that.columns.length;_i121++){var column=that.columns[_i121];if(column.filter){filters.push([column.dataField,column.filter]);}}that.scrollTop=0;that.closeMenu();if(that.dataSource&&!that.dataSource.onFilter){that.dataSource.onFilter=function(){var viewRows=that._viewRows;for(var _i122=0;_i122<viewRows.length;_i122++){var row=viewRows[_i122];if(row.data&&!row.addNewRow){row.filtered=row.data.$.filtered!==undefined?row.data.$.filtered:true;}}that.refresh();};}that._filters=filters;that._visibleRows=null;if(that.dataSource&&that.dataSource.virtualDataSource){that.closeMenu();that._virtualDataRequest('filter');}else{that.dataSource._filter(filters);}if(that.paging.enabled&&that.dataSource&&!that.dataSource.virtualDataSource){that._refreshPagesCount();}that.$.fireEvent('filter',{'data':that.getFilteredColumns()});}}]);return Filter;}());JQX.Utilities.Assign('Grid.Sort',function(){function Sort(){babelHelpers.classCallCheck(this,Sort);}babelHelpers.createClass(Sort,[{key:'clearSort',value:function clearSort(){var that=this;if(that._isSorting){return;}that._isSorting=true;that.dataSource.clearSort();for(var _i123=0;_i123<that._sortedColumns.length;_i123++){var sortColumn=that._sortedColumns[_i123];var column=that.columnByDataField[sortColumn.dataField];column.setProperty('sortOrder',null);column.setProperty('sortIndex',null);}that._sortedColumns=[];for(var _i124=0;_i124<that.dataSource.length;_i124++){var row=that.rows[_i124];var data=that.dataSource[_i124];row.data=data;row.boundIndex=data.boundIndex;}that._recycle();that._isSorting=false;}},{key:'getSortedColumns',value:function getSortedColumns(){var that=this;var sortedColumns=[];if(that._sortedColumns){for(var _i125=0;_i125<that._sortedColumns.length;_i125++){var sortColumn=that._sortedColumns[_i125];sortedColumns[sortColumn.dataField]={sortOrder:sortColumn.sortOrder,sortIndex:sortColumn.sortIndex};sortedColumns.length++;}}return sortedColumns;}},{key:'addSort',value:function addSort(dataField,sortOrder){var that=this;that.sortBy(dataField,sortOrder);}},{key:'removeSort',value:function removeSort(dataField){var that=this;that.sortBy(dataField,null);}},{key:'sortBy',value:function sortBy(columnDataField,sortOrder){var that=this;var column=that.columnByDataField[columnDataField];var sortDataFields=[];var sortOrders=[];var sortDataTypes=[];var toggleSort=sortOrder===undefined?true:false;if(that._isSorting||!column){return;}that._isSorting=true;if(undefined===sortOrder){sortOrder='asc';}var clearSortColumn=function clearSortColumn(column){column.setProperty('sortOrder',null);};var clearSortColumns=function clearSortColumns(){if(that._sortedColumns.length>0){for(var _i126=0;_i126<that._sortedColumns.length;_i126++){var sortColumn=that._sortedColumns[_i126];var _column5=that.columnByDataField[sortColumn.dataField];clearSortColumn(_column5);}}that._sortedColumns=[];};if(column===null){clearSortColumns();that._isSorting=false;return;}if(!that.sorting.enabled||!that.dataSource||!column.allowSort||that._sortAnimation){that._isSorting=false;return;}clearSortColumn(column);if(!that._sortedColumns){that._sortedColumns=[];}var dataType='string';for(var _i127=0;_i127<that.dataSource.dataFields.length;_i127++){var field=that.dataSource.dataFields[_i127];if(field.name===columnDataField){dataType=field.dataType;break;}}var addNewSortColumn=true;for(var _i128=0;_i128<that._sortedColumns.length;_i128++){var sortColumn=that._sortedColumns[_i128];if(sortColumn.dataField===columnDataField){addNewSortColumn=false;sortColumn.sortIndex=column.sortIndex;if(toggleSort){if(sortColumn.sortOrder==='asc'){sortColumn.sortOrder='desc';sortOrder='desc';}else if(sortColumn.sortOrder==='desc'){if(that.sorting.sortToggleThreeStates){that._sortedColumns.splice(_i128,1);clearSortColumn(column);sortOrder=null;}else{sortColumn.sortOrder='asc';sortOrder='asc';}break;}}else{sortColumn.sortOrder=sortOrder;if(sortOrder===null){that._sortedColumns.splice(_i128,1);clearSortColumn(column);}}}}if(addNewSortColumn){if(that.sorting.mode==='one'){clearSortColumns();}if(sortOrder!==null){that._sortedColumns.push({dataField:columnDataField,sortOrder:sortOrder,sortIndex:column.sortIndex,dataType:dataType});}}column.setProperty('sortOrder',sortOrder);that._sortedColumns.sort(function(a,b){if(typeof a.sortIndex==='string'&&typeof b.sortIndex==='string'){return 0;}if(typeof a.sortIndex==='number'&&typeof b.sortIndex==='string'){return-1;}if(typeof a.sortIndex==='string'&&typeof b.sortIndex==='number'){return 1;}if(typeof a.sortIndex==='number'&&typeof b.sortIndex==='number'){return a.sortIndex-b.sortIndex;}});for(var _i129=0;_i129<that._sortedColumns.length;_i129++){var _sortColumn=that._sortedColumns[_i129];sortDataFields.push(_sortColumn.dataField);sortOrders.push(_sortColumn.sortOrder);sortDataTypes.push(_sortColumn.dataType);}var sort=function sort(){if(that.dataSource&&that.dataSource.virtualDataSource){that._virtualDataRequest('sort');}else{that.dataSource.sortBy(sortDataFields,sortDataTypes,sortOrders);if(that.dataSource.boundHierarchy){that._refreshRowHierarchy();}else{for(var _i130=0;_i130<that.dataSource.length;_i130++){var row=that.rows[_i130];var data=that.dataSource[_i130];row.data=data;row.boundIndex=data.boundIndex;}}that._recycle();}that.$.fireEvent('sort',{'data':that.getSortedColumns()});};if(that.appearance.allowSortAnimation){var positions=[];var takenPositions=[];that.rows.canNotify=false;that._sortAnimation=true;var refreshRows=function refreshRows(){for(var _i131=0;_i131<that._rowElements.length;_i131++){var rowElement=that._rowElements[_i131];rowElement.classList.remove('jqx-grid-sort-animation');that.removeTransformMoveStyle(rowElement);if(rowElement.offsetHeight>0){positions.push(rowElement.offsetTop);}}};refreshRows();that._sortTimer=setTimeout(function(){refreshRows();that._sortAnimation=false;that.rows.canNotify=true;},that.appearance.sortAnimationDuration);that._sortTimer2=setTimeout(function(){sort();},that.appearance.sortAnimationDuration/2);var _loop5=function _loop5(_i132){var rowElement=that._rowElements[_i132];rowElement.classList.remove('jqx-grid-sort-animation');that.removeTransformMoveStyle(rowElement);var randomIndex=Math.floor(Math.random()*positions.length-1+1);while(takenPositions[randomIndex]){randomIndex=Math.floor(Math.random()*positions.length-1+1);}takenPositions[randomIndex]=true;that.addTransformMoveStyle(rowElement,'0ms',0,-rowElement.offsetTop+positions[randomIndex],0,0.5);rowElement.classList.add('jqx-grid-sort-animation');setTimeout(function(){that.addTransformMoveStyle(rowElement,that.appearance.sortAnimationDuration+'ms',0,0,0,1);});setTimeout(function(){rowElement.classList.remove('jqx-grid-sort-animation');},that.appearance.sortAnimationDuration);};for(var _i132=0;_i132<positions.length;_i132++){_loop5(_i132);}}else{sort();}that._isSorting=false;}}]);return Sort;}());JQX('jqx-grid',function(_JQX$ScrollViewer){babelHelpers.inherits(Grid,_JQX$ScrollViewer);function Grid(){babelHelpers.classCallCheck(this,Grid);return babelHelpers.possibleConstructorReturn(this,(Grid.__proto__||Object.getPrototypeOf(Grid)).apply(this,arguments));}babelHelpers.createClass(Grid,[{key:'template',/** Button's template. */value:function template(){return'<div class=\'jqx-container\'id=\'container\' disabled=\'[[disabled]]\' role=\'grid\'>\n                <div id=\'header\' class=\'jqx-grid-header jqx-hidden\' ></div>\n                <div id=\'groupHeader\' class=\'jqx-grid-group-header jqx-hidden\'></div>\n                <div id=\'headerPager\' top class=\'jqx-grid-pager jqx-hidden\'></div>\n                <div id=\'headerCommandBar\' header top class=\'jqx-grid-header jqx-grid-command-bar jqx-hidden\'></div>\n                 <div id=\'content\' class=\'jqx-grid-content\'>\n                    <div id=\'placeholder\' class =\'jqx-hidden jqx-placeholder jqx-grid-placeholder\'>[[placeholder]]</div>\n                    <div id=\'columnHeader\' class=\'jqx-grid-column-header\'>\n                        <div id=\'columnNearContainer\' class=\'near jqx-hidden jqx-grid-column-header-cell-container\'>\n                       </div>\n                       <div id=\'columnContainer\' class=\'center jqx-grid-column-header-cell-container\'>\n                       </div>\n                        <div id=\'columnFarContainer\' class=\'far jqx-hidden jqx-grid-column-header-cell-container\'>\n                       </div>\n                    </div>\n                    <div id=\'scrollView\' class =\'jqx-grid-scroll-view\'>\n                        <div id=\'rowNearContainer\' class=\'near jqx-hidden jqx-grid-row-container\'>\n                        </div>\n                         <div id=\'rowContainer\' class=\'center jqx-grid-row-container\'>\n                        </div>\n                        <div id=\'rowFarContainer\' class=\'far jqx-hidden jqx-grid-row-container\'>\n                        </div>\n                        <jqx-scroll-bar id=\'verticalScrollBar\' class=\'jqx-grid-scroll-bar\' wait disabled=\'[[disabled]]\' orientation=\'vertical\'></jqx-scroll-bar>\n                        <jqx-scroll-bar id=\'horizontalScrollBar\' class=\'jqx-grid-scroll-bar\' wait disabled=\'[[disabled]]\'></jqx-scroll-bar>\n                    </div>\n                  <div id=\'filterFooter\' class=\'jqx-grid-filter-footer jqx-hidden\'></div>\n                </div>\n                <div id=\'loadingIndicatorContainer\' class=\'jqx-loader-container\'>\n                    <span id=\'loadingIndicator\' class=\'jqx-grid-loader jqx-loader\'></span>\n                    <span id=\'loadingIndicatorPlaceHolder\' class =\'jqx-loader-label jqx-hidden\'>[[loadingIndicatorPlaceholder]]</span>\n                </div>\n                <div id=\'footerCommandBar\' footer class=\'jqx-grid-footer jqx-grid-command-bar jqx-hidden\'></div>\n                <div id=\'footerPager\' class=\'jqx-grid-pager jqx-hidden\'></div>\n                <div id=\'footer\' class=\'jqx-grid-footer jqx-hidden\'></div>\n            </div>';}/**
        * Grid's event listeners.
        */},{key:'pageSizeValidator',value:function pageSizeValidator(oldValue,newValue){var that=this;if(newValue<0){return 0;}if(that.dataSource&&newValue>that.dataSource.length){return that.dataSource.length;}}},{key:'pageIndexValidator',value:function pageIndexValidator(oldValue,newValue){var that=this;if(newValue<0){return 0;}if(that.dataSource){var maxPageIndex=Math.ceil(that.dataSource.length/that.paging.pageSize);if(newValue>maxPageIndex-1){return maxPageIndex-1;}}}},{key:'_offsetTop',value:function _offsetTop(element){var that=this;if(!element){return 0;}return element.offsetTop+that._offsetTop(element.offsetParent);}},{key:'_offsetLeft',value:function _offsetLeft(element){var that=this;if(!element){return 0;}return element.offsetLeft+that._offsetLeft(element.offsetParent);}},{key:'offset',value:function offset(element){return{left:this._offsetLeft(element),top:this._offsetTop(element)};}},{key:'getBoundingRect',value:function getBoundingRect(element){var offsetX=window.pageXOffset,offsetY=window.pageYOffset,rect=element.getBoundingClientRect();if(element!==document.body){var parent=element.parentNode;while(parent!==document.body){offsetX+=parent.scrollLeft;offsetY+=parent.scrollTop;parent=parent.parentNode;}}return{bottom:rect.bottom+offsetY,height:rect.height,left:rect.left+offsetX,right:rect.right+offsetX,top:rect.top+offsetY,width:rect.width};}},{key:'_downHandler',value:function _downHandler(){}},{key:'_upHandler',value:function _upHandler(event){var that=this;var boundingRect=that.getBoundingRect(that);if(that._tapTimer){clearTimeout(that._tapTimer);}if(event.pageX<boundingRect.left||event.pageX>boundingRect.right||event.pageY<boundingRect.top||event.pageY>boundingRect.bottom){if(that._inputOverlay){that._inputOverlay.classList.remove('jqx-input-overlay-on');setTimeout(function(){if(that._inputOverlay){if(that._inputOverlay.parentNode){that._inputOverlay.parentNode.removeChild(that._inputOverlay);}that._inputOverlay=null;}},300);}if(that.editing.isEditing&&!that.editing.dialog.enabled){setTimeout(function(){if(event.defaultPrevented){return;}if(that.editing.editCell&&that.editing.editCell.editor.instance){that.editing.editCell.editor.instance.blur(event);if(event.defaultPrevented){return;}}that.endEdit();},50);}if(that.menu){var target=event.originalEvent.target;if(!that.contains(target)&&!that.menu.contains(target)){var dropDownLists=that.menu.querySelectorAll('jqx-drop-down-list');var dateTimePickers=that.menu.querySelectorAll('jqx-date-time-picker');for(var _i133=0;_i133<dropDownLists.length;_i133++){var dropDownList=dropDownLists[_i133];var dropDown=dropDownList.$.dropDownContainer;if(dropDown.contains(target)){return;}}for(var _i134=0;_i134<dateTimePickers.length;_i134++){var dateTimePicker=dateTimePickers[_i134];var _dropDown=dateTimePicker.$.dropDownContainer;if(_dropDown.contains(target)){return;}}that.closeMenu();return;}}}that._dragSelectionEnd();that.classList.remove('jqx-grid-resize-mode');that.$.root.classList.remove('jqx-grid-resize-mode');if(that._rowToResize&&that._rowResizeStartLine&&that._rowResizeLine){var _row4=that.rowById[that._rowToResizeId];var newRowHeight=_row4.cellHeight+parseFloat(that._rowResizeLine.style.top)-parseFloat(that._rowResizeStartLine.style.top);that.rows.canNotify=false;_row4.height=null;if(that.rowResizeMode==='split'){var nextRow=that._nextRow(_row4);var offset=parseInt(_row4.height-newRowHeight+_row4.cellHeight);_row4.computedHeight=newRowHeight;nextRow.computedHeight=parseInt(nextRow.height)+offset;nextRow.height=null;}else{_row4.computedHeight=newRowHeight;}that.rows.canNotify=true;that._rowResizeStartLine.parentNode.removeChild(that._rowResizeStartLine);that._rowResizeLine.parentNode.removeChild(that._rowResizeLine);if(that.appearance.showResizeTooltips){that._rowResizeTooltip.parentNode.removeChild(that._rowResizeTooltip);}that._rowResizeLine=null;that._rowToResize=null;that._rowToResizeId=null;that.refresh();return;}if(!that._columnToResizeElement||!that._columnResizeLine){return;}var column=that.columnByDataField[that._columnToResizeDataField];var columnRect=that._columnToResizeRect;var newColumnWidth=boundingRect.left+parseInt(that._columnResizeLine.style.left)-columnRect.left+that.scrollLeft;that.columns.canNotify=false;if(that.columnResizeMode==='split'){var nextColumn=that._nextColumn(column);var _offset=parseInt(column.computedWidth-newColumnWidth);column.width=newColumnWidth;nextColumn.width=parseInt(nextColumn.computedWidth)+_offset;}else{column.width=newColumnWidth;}that.columns.canNotify=true;that._columnResizeLine.parentNode.removeChild(that._columnResizeLine);that._columnResizeLine=null;that._columnResizeStartLine.parentNode.removeChild(that._columnResizeStartLine);if(that._columnResizeTooltip.parentNode){that._columnResizeTooltip.parentNode.removeChild(that._columnResizeTooltip);}that._columnResizeStartLine=null;that._columnToResizeElement=null;that._columnToResizeRect=null;that._columnToResizeDataField=null;that._columnResizeTooltip=null;that.refresh();}},{key:'_nextColumn',value:function _nextColumn(column){var that=this;for(var _i135=0;_i135<that.viewColumns.length;_i135++){var currentColumn=that.viewColumns[_i135];if(currentColumn.visibleIndex===column.visibleIndex+1){return currentColumn;}}return null;}},{key:'_nextRow',value:function _nextRow(row){var that=this;var rows=that._recyclingRows;var rowIndex=rows.indexOf(row);if(rowIndex>=0){return rows[rowIndex+1];}return null;}},{key:'_columnMoveResizeHandler',value:function _columnMoveResizeHandler(event){var that=this;var columnResizeBreakpoint=5;var updateTooltip=function updateTooltip(boundingRect){var columnRect=that._columnToResizeRect;var newColumnWidth=boundingRect.left+parseFloat(that._columnResizeLine.style.left)-columnRect.left+that.scrollLeft;if(that.appearance.showResizeTooltips){that._columnResizeTooltip.innerHTML='w: '+parseInt(newColumnWidth)+'px';}};if(that._columnResizeLine){var column=that.columnByDataField[that._columnToResizeDataField];var columnRect=that._columnToResizeRect;var minWidth=column.minWidth;var maxWidth=column.maxWidth;var nextColumn=that._nextColumn(column);var boundingRect=that.getBoundingRect(that);if(event.pageX<boundingRect.left){return;}if(that.columnResizeMode==='split'&&nextColumn){if(event.pageX>=boundingRect.left+nextColumn.left+nextColumn.width-nextColumn.minWidth-that.scrollLeft){that._columnResizeLine.style.left=-boundingRect.left+boundingRect.left+nextColumn.width+nextColumn.left-nextColumn.minWidth-that.scrollLeft+'px';updateTooltip(boundingRect);return;}}if(columnRect.left+minWidth-that.scrollLeft>=event.pageX){that._columnResizeLine.style.left=-boundingRect.left+columnRect.left+minWidth-that.scrollLeft+'px';updateTooltip(boundingRect);return;}if(columnRect.left+maxWidth-that.scrollLeft<=event.pageX){that._columnResizeLine.style.left=-boundingRect.left+columnRect.left+maxWidth-that.scrollLeft+'px';updateTooltip(boundingRect);return;}that._columnResizeLine.style.left=-boundingRect.left+event.pageX+'px';updateTooltip(boundingRect);}else{var _that=this;var elements=document.elementsFromPoint(event.clientX,event.clientY);var columnDataField=null;var columnElement=null;if(_that._columnResizeLine){return;}for(var _i136=0;_i136<elements.length;_i136++){var element=elements[_i136];if(element.hasAttribute('data-field')&&element.hasAttribute('header')){columnDataField=element.getAttribute('data-field');columnElement=element;break;}}if(_that._columnToResizeElement){_that._columnToResizeElement.style.cursor='';_that._columnToResizeElement=null;}if(columnDataField){var columnRight=columnElement.getBoundingClientRect().right;columnElement.style.cursor='';if(columnRight-columnResizeBreakpoint<=event.clientX&&event.clientX<=columnRight+columnResizeBreakpoint){var _column6=_that.columnByDataField[columnDataField];if(!_column6||_column6&&!_column6.allowResize){return;}var isLastColumn=_that._isLastVisibleColumn(_column6);if(_that.columnResizeMode==='split'&&isLastColumn){return;}columnElement.style.cursor='col-resize';_that._columnToResizeRect=_that.getBoundingRect(columnElement);_that._columnToResizeElement=columnElement;_that._columnToResizeDataField=columnDataField;}}}}},{key:'_moveHandler',value:function _moveHandler(event){var that=this;if(that.selection.enabled&&that.selection.allowDragSelection&&!that.editing.isEditing){if(!that._selection.selectionRect||that._selection.selectionRect&&!that._selection.selectionRect.captured){that._dragSelection(event);if(JQX.Utilities.Core.isMobile){event.originalEvent.preventDefault();}}}if(that.columnResizeMode!=='none'){that._columnMoveResizeHandler(event);}if(that.rowResizeMode!=='none'){that._rowMoveResizeHandler(event);}}},{key:'_rowMoveResizeHandler',value:function _rowMoveResizeHandler(event){var that=this;var elements=document.elementsFromPoint(event.clientX,event.clientY);var rowResizeBreakpoint=5;var resizeLineHeight=1;var rowId=null;var rowElement=null;if(that._rowResizeLine){var scrollViewTop=that._offsetTop(that.$.scrollView);var scrollViewBounds={top:scrollViewTop,bottom:that.$.scrollView.offsetHeight+scrollViewTop};if(event.pageY<=scrollViewBounds.top){return;}if(event.pageY>=scrollViewBounds.bottom){return;}var updateTooltip=function updateTooltip(){var newRowHeight=_row5.cellHeight+parseFloat(that._rowResizeLine.style.top)-parseFloat(that._rowResizeStartLine.style.top);if(that.appearance.showResizeTooltips){that._rowResizeTooltip.innerHTML='h: '+parseInt(newRowHeight)+'px';}};var _row5=that.rowById[that._rowToResizeId];var nextRow=that._nextRow(_row5);var rowBounds=that._rowToResizeBounds;var minHeight=_row5.minHeight;var maxHeight=_row5.maxHeight;if(that.rowResizeMode==='split'&&nextRow){if(rowBounds.bottom+nextRow.height-nextRow.minHeight<=event.pageY){that._rowResizeLine.style.top=rowBounds.bottom+nextRow.height-nextRow.minHeight-scrollViewTop+'px';updateTooltip();return;}}if(rowBounds.top+minHeight+rowResizeBreakpoint>=event.pageY){that._rowResizeLine.style.top=rowBounds.top+minHeight+rowResizeBreakpoint-scrollViewTop+'px';updateTooltip();return;}if(rowBounds.top+maxHeight>=event.pageY-scrollViewTop){that._rowResizeLine.style.top=rowBounds.top+maxHeight+rowResizeBreakpoint-scrollViewTop+'px';updateTooltip();return;}that._rowResizeLine.style.top=-scrollViewTop+event.pageY-resizeLineHeight+'px';updateTooltip();return;}else{for(var _i137=0;_i137<elements.length;_i137++){var element=elements[_i137];if(element.hasAttribute('data-id')&&element.hasAttribute('header')){rowElement=element;rowId=element.getAttribute('data-id');break;}}if(that._rowToResize){that._rowToResize.style.cursor='';that._rowToResize=null;}if(rowId!==null){var rowBottom=that._offsetTop(rowElement)+rowElement.offsetHeight;rowElement.style.cursor='';if(rowBottom-rowResizeBreakpoint<=event.clientY&&event.clientY<=rowBottom+rowResizeBreakpoint){var _row6=that.rowById[rowId];if(!_row6||_row6&&!_row6.allowResize){return;}if(_row6.header){_row6.header.style.cursor='row-resize';}var top=that._offsetTop(rowElement);that._rowToResizeBounds={top:top,bottom:rowElement.offsetHeight+top,height:rowElement.offsetHeight};that._rowToResize=rowElement;that._rowToResizeId=rowId;}}}}},{key:'_rowDownResizeHandler',value:function _rowDownResizeHandler(){var that=this;var rowBounds=that._rowToResizeBounds;var createLine=function createLine(){var resizeLine=document.createElement('div');resizeLine.classList.add('jqx-grid-resize-line','row');resizeLine.style.width=that.$.scrollView.offsetWidth-that._rowToResize.offsetLeft+'px';resizeLine.style.left='0px';resizeLine.style.top=-that._offsetTop(that.$.scrollView)+rowBounds.bottom+'px';return resizeLine;};var resizeTooltip=document.createElement('div');resizeTooltip.classList.add('jqx-grid-resize-tooltip');that._rowResizeTooltip=resizeTooltip;that._rowResizeTooltip.style.top=-that._offsetTop(that.$.scrollView)+rowBounds.bottom+'px';that._rowResizeTooltip.innerHTML='h: '+parseInt(rowBounds.height)+'px';that._rowResizeTooltip.style.right='20px';that._rowResizeTooltip.style.bottom='initial';if(that.rowResizeMode==='growAndShrink'){that.classList.add('jqx-grid-resize-mode');that.$.root.classList.add('jqx-grid-resize-mode');}that._rowResizeLine=createLine();that._rowResizeStartLine=createLine();that.$.scrollView.appendChild(that._rowResizeLine);that.$.scrollView.appendChild(that._rowResizeStartLine);if(that.appearance.showResizeTooltips){that.$.scrollView.appendChild(that._rowResizeTooltip);}}},{key:'_rowResizeHandler',value:function _rowResizeHandler(event){var that=this;var clientX=event.clientX;var clientY=event.clientY;if(clientX===undefined||clientY===undefined){clientX=event.touches[0].clientX;clientY=event.touches[0].clientY;}var elements=document.elementsFromPoint(clientX,clientY);var rowId=null;for(var _i138=0;_i138<elements.length;_i138++){var element=elements[_i138];if(element.getAttribute('data-id')){rowId=element.getAttribute('data-id');}}if(rowId!==null){if(that._rowToResize&&!that._rowResizeLine){that._rowDownResizeHandler(event);return;}}}},{key:'_columnMouseLeaveHandler',value:function _columnMouseLeaveHandler(){var that=this;for(var _i139=0;_i139<that._columnElements.length;_i139++){var element=that._columnElements[_i139];var column=element.column;if(column&&column.autoShowActionButton){element._hideActionButton();}}}},{key:'_columnMoveHandler',value:function _columnMoveHandler(event){var that=this;if(that._columnResizeStartLine||that._rowResizeStartLine){return;}for(var _i140=0;_i140<that._columnElements.length;_i140++){var element=that._columnElements[_i140];var column=element.column;if(column&&column.autoShowActionButton){var rect=element.getBoundingClientRect();var offset=that.offset(element);if(offset.left<=event.pageX&&offset.left+rect.width-6>=event.pageX){if(offset.top<=event.pageY&&offset.top+rect.height>=event.pageY){if(!that.hasColumnMenu(column)){continue;}element._showActionButton();}else{element._hideActionButton();}}else{element._hideActionButton();}}}}},{key:'_columnDownResizeHandler',value:function _columnDownResizeHandler(){var that=this;var columnRect=that._columnToResizeRect;var columnHeaderRect=that.getBoundingRect(that.$.columnHeader);var createLine=function createLine(){var resizeLine=document.createElement('div');resizeLine.classList.add('jqx-grid-resize-line');resizeLine.style.left=-columnHeaderRect.left+columnRect.right+'px';resizeLine.style.top=-columnHeaderRect.top+columnRect.top+'px';resizeLine.style.height='calc(100% - '+resizeLine.style.top+')';return resizeLine;};var resizeTooltip=document.createElement('div');resizeTooltip.classList.add('jqx-grid-resize-tooltip');that._columnResizeTooltip=resizeTooltip;that._columnResizeTooltip.style.left=-columnHeaderRect.left+columnRect.right+'px';that._columnResizeTooltip.innerHTML='w: '+parseInt(columnRect.width)+'px';that._columnResizeLine=createLine();that._columnResizeStartLine=createLine();if(that.columnResizeMode==='growAndShrink'){that.classList.add('jqx-grid-resize-mode');that.$.root.classList.add('jqx-grid-resize-mode');}if(that.appearance.showResizeTooltips){that.$.root.appendChild(that._columnResizeTooltip);}that.$.root.appendChild(that._columnResizeLine);that.$.root.appendChild(that._columnResizeStartLine);}},{key:'_columnDownHandler',value:function _columnDownHandler(event){var that=this;var elements=document.elementsFromPoint(event.clientX,event.clientY);var columnDataField=null;var columnElement=null;for(var _i141=0;_i141<elements.length;_i141++){var element=elements[_i141];if(element.classList.contains('jqx-action-button')){return;}if(element.getAttribute('data-field')){columnDataField=element.getAttribute('data-field');columnElement=element;break;}}if(columnDataField){var column=columnElement.column;if(!column){return;}if(columnDataField==='_commandColumn'){that._applyCommand(that.editing.commandColumn.dataSource.commandColumnMenu.command);return;}var selectColumn=function selectColumn(action){var canSelect=column.selectionColumn?that.selection.checkBoxes.action===action&&that.selection.enabled:that.selection.action===action&&that.selection.enabled;if(canSelect){if(!event.shiftKey&&!event.ctrlKey){that._dragSelectionStartDataField=columnDataField;}else{that._dragSelectionStartDataField=null;}if(columnDataField==='_checkBoxColumn'){that._toggleColumnSelection(column);return;}that._setSelection(null,column.dataField,event);that.$.fireEvent('change');}};that.$.fireEvent('columnClick',{'column':column});if(new Date()-that._clickTime<300){that.$.fireEvent('columnDoubleClick',{'column':column});selectColumn('doubleClick');}selectColumn('click');if(that._columnToResizeElement&&!that._columnResizeLine){that._columnDownResizeHandler(event);return;}if(JQX.Utilities.Core.isMobile){if(new Date()-that._clickTime<300){if(column.allowSortToggleOnClick&&that.sorting.enabled){that.sortBy(columnDataField);}}that._columnMoveHandler(event);event.originalEvent.preventDefault();}else{if(column.allowSortToggleOnClick&&that.sorting.enabled){that.sortBy(columnDataField);}}that._clickTime=new Date();}that.closeMenu();}},{key:'addTransformMoveStyle',value:function addTransformMoveStyle(element,duration,x,y,z,opacity){element.style['opacity']=opacity;element.style['transition-duration']=duration;element.style['transform']='translate3d('+x+'px,'+y+'px,'+z+'px)';}},{key:'removeTransformMoveStyle',value:function removeTransformMoveStyle(element){element.style['opacity']='';element.style['transition-duration']='';element.style['transform']='';}},{key:'_rowDownHandler',value:function _rowDownHandler(event){var that=this;if(that._inputOverlay){that._inputOverlay.classList.remove('jqx-input-overlay-on');}that.closeMenu();that._rowResizeHandler(event);if(that._toggledRow&&that.appearance.allowRowToggleAnimation){return;}var clientX=event.clientX;var clientY=event.clientY;if(event.touches){clientX=event.touches[0].clientX;clientY=event.touches[0].clientY;}var elements=document.elementsFromPoint(clientX,clientY);var rowElement=null;var toggleButton=null;var cellElement=null;//const refresh = function () {
//    const scrollLeft = that._scrollView.scrollLeft;
//    that._refreshLayout();
//    that._recycle();
//    that._scrollView.scrollLeft = scrollLeft;
//}
that._lastPointerDownTime=new Date();for(var _i142=0;_i142<elements.length;_i142++){var element=elements[_i142];if(element.hasAttribute('toggle-button')){toggleButton=element;}if(!cellElement&&element.nodeName.toLowerCase()==='jqx-grid-cell'){cellElement=element;}if(!rowElement&&element.nodeName.toLowerCase()==='jqx-grid-row'){rowElement=element;break;}}if(rowElement&&cellElement){var cell=cellElement?cellElement.cell:null;if(toggleButton&&cell&&!cell.column.rowDetailColumn||that._adaptiveLayout>0&&false===rowElement.row.leaf){var _row7=rowElement.row;_row7.toggle();}else if(that.rowDetail.enabled&&that.rowDetail.visible&&toggleButton&&cell&&cell.column.rowDetailColumn){var _row8=rowElement.row;if(_row8.showDetail){that.hideDetail(_row8.id);}else{that.showDetail(_row8.id);}}else{var _row9=rowElement.row;var _cell8=cellElement?cellElement.cell:null;that.$.fireEvent('rowClick',{'row':_row9,originalEvent:event.originalEvent});that.$.fireEvent('cellClick',{'cell':_cell8,originalEvent:event.originalEvent});if(that._tapTimer){clearTimeout(that._tapTimer);}that._tapTimer=setTimeout(function(){if(that._clickedRow===rowElement){that.$.fireEvent('rowTap',{'row':_row9,originalEvent:event.originalEvent});}if(that._clickedCell===cellElement){that.$.fireEvent('cellTap',{'cell':_cell8,originalEvent:event.originalEvent});}},300);//const isEditing = that.editing.isEditing;
var selectRow=function selectRow(action){if(!that.selection.enabled||_row9.autoGenerated){return;}var isEditing=that.editing.isEditing;if(isEditing&&that.editing.editCell.row.id===_row9.id&&that.editing.editCell.column.dataField===_cell8.column.dataField){return;}if(that.selection.action===action){if(!event.shiftKey&&!event.ctrlKey){if(!that.selection.allowRowHeaderSelection&&_cell8.column.autoGenerated){that._dragSelectionStartRow=null;}else{that._dragSelectionStartRow=rowElement.row;}}else{that._dragSelectionStartRow=null;}if(!event.shiftKey&&!event.ctrlKey){that._dragSelectionStartDataField=_cell8.column.dataField;}else{that._dragSelectionStartDataField=null;}that._setSelection(_row9.id,_cell8.column.dataField,event);that.$.fireEvent('change');}else if(_cell8.column.selectionColumn&&that.selection.checkBoxes.enabled&&that.selection.checkBoxes.action===action){that._setSelection(_row9.id,_cell8.column.dataField,event);that.$.fireEvent('change');}};var isSelected=_cell8.selected;//const focusedCell = that._selection.focusedCell;
selectRow('click');if(_row9.autoGenerated||_cell8.column.autoGenerated||_cell8.template){that._onRowClick(_row9.index,_row9,event);that._onCellClick(_cell8,event);}else{if(that.selection.enabled){if(that.selection.allowCellSelection){if(isSelected===true&&isSelected===_cell8.selected&&!that.selection.isDragging&&that._clickedCell===cellElement&&new Date()-that._clickTime<300){that._onRowClick(_row9.index,_row9,event);that._onCellClick(_cell8,event);}}else if(that.selection.allowRowSelection){if(isSelected===true&&isSelected===_cell8.selected&&!that.selection.isDragging&&that._clickedCell===cellElement&&new Date()-that._clickTime<300){that._onRowClick(_row9.index,_row9,event);that._onCellClick(_cell8,event);}}else{that._onRowClick(_row9.index,_row9,event);that._onCellClick(_cell8,event);}}else{that._onRowClick(_row9.index,_row9,event);that._onCellClick(_cell8,event);}}if(new Date()-that._clickTime<300){if(that._clickedRow===rowElement){that._onRowDoubleClick(_row9.index,_row9,event,event);that.$.fireEvent('rowDoubleClick',{'row':_row9,originalEvent:event.originalEvent});selectRow('doubleClick');}if(that._clickedCell===cellElement){that._onCellDoubleClick(_cell8,event);that.$.fireEvent('cellDoubleClick',{'cell':_cell8,originalEvent:event.originalEvent});}}that._clickedRow=rowElement;that._clickedCell=cellElement;that._clickTime=new Date();}}}},{key:'showDetail',value:function showDetail(id){var that=this;var row=that.rowById[id];if(!row){return;}row.showDetail=true;}},{key:'hideDetail',value:function hideDetail(id){var that=this;var row=that.rowById[id];if(!row){return;}row.showDetail=false;}},{key:'_focusHandler',value:function _focusHandler(){var that=this;that._focused=true;}},{key:'_blurHandler',value:function _blurHandler(){var that=this;that._focused=false;}},{key:'_notify',value:function _notify(propertyName,oldValue,newValue){var that=this;if(that.notifyFn){for(var _i143=0;_i143<that.notifyFn.length;_i143++){that.notifyFn[_i143](propertyName,oldValue,newValue);}}}},{key:'notify',value:function notify(notifyFn){var that=this;if(notifyFn){if(!that.notifyFn){that.notifyFn=[];}that.notifyFn.push(notifyFn);}}},{key:'_applyTemplate',value:function _applyTemplate(selector,element){//const that = this;
var template=null;if(selector===null||selector===''){element.innerHTML='';return;}if(selector.startsWith('#')||selector.startsWith('.')){template=document.querySelector(selector);}if(template){element.innerHTML='';element.appendChild(template.content.cloneNode(true).firstElementChild);}else{var htmlToElement=function htmlToElement(html){var template=document.createElement('template');html=html.trim();// Never return a text node of whitespace as the result
template.innerHTML=html;return template.content.firstChild;};var templateElement=htmlToElement(selector);if(templateElement){element.innerHTML='';element.appendChild(templateElement);}}}/**
    * Updates the listbox when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;if(!that.isInitialized){return;}that._notify(propertyName,oldValue,newValue);switch(propertyName){case'appearance_showColumnHeaderLines':case'appearance_showColumnLines':case'appearance_showRowLines':{that._recycle();return;}case'appearance_allowColumnStickyPosition':{if(newValue){that._stickHeader();}else{that._unstickHeader();}break;}case'appearance_showColumnIcon':{for(var _i144=0;_i144<that.columns.length;_i144++){var column=that.columns[_i144];column.setProperty('showIcon',that.appearance.showColumnIcon);}that._recycle();break;}/*
            case 'appearance_showColumnSortButton': {
                for (let i = 0; i < that.columns.length; i++) {
                    const column = that.columns[i];

                    column.setProperty('showSortButton', that.appearance.showColumnSortButton);
                }

                that._recycle();

                break;
            }
            case 'appearance_showColumnFilterButton': {
                for (let i = 0; i < that.columns.length; i++) {
                    const column = that.columns[i];

                    column.setProperty('showFilterButton', that.appearance.showColumnFilterButton);
                }

                that._recycle();

                break;
            }
            case 'appearance_showColumnDescriptionButton': {
                for (let i = 0; i < that.columns.length; i++) {
                    const column = that.columns[i];

                    column.setProperty('showDescriptionButton', that.appearance.showColumnDescriptionButton);
                }

                that._recycle();
                break;
            }*/case'appearance_showRowNumber':case'appearance_showRowHeader':{that._initializeRowNumberColumn();var _column7=that._frozenNearColumns[0];if(_column7.rowNumbersColumn&&_column7.element&&!_column7.element.parentNode){that.$.columnNearContainer.appendChild(_column7.element);}that.refresh();break;}case'header_template':{that._applyTemplate(newValue,that.$.header);break;}case'footer_template':{that._applyTemplate(newValue,that.$.footer);break;}case'columnWidth':{that.columns.canNotify=false;var width=parseInt(newValue);if(isNaN(width)){width='auto';}if(width>=30||width==='auto'){for(var _i145=0;_i145<that.columns.length;_i145++){var _column8=that.columns[_i145];_column8.width=width;}}that.columns.canNotify=true;that.refresh();break;}case'columnHeader_visible':{that.__columnHeaderHeight=null;that.refresh();break;}case'selection_checkBoxes_enabled':{that._selectionColumn.visible=newValue;break;}case'selection_checkBoxes_autoShow':{if(that._selectionColumn.element){if(newValue){that._selectionColumn.element.setAttribute('auto-show','');}else{that._selectionColumn.element.removeAttribute('auto-show');}}break;}case'selection_checkBoxes_position':{var index=that.viewColumns.indexOf(that._selectionColumn);that.viewColumns.canNotify=false;that.viewColumns.splice(index,1);var nearIndex=that._frozenNearColumns.indexOf(that._selectionColumn);var farIndex=that._frozenFarColumns.indexOf(that._selectionColumn);if(nearIndex>=0){that._frozenNearColumns.splice(nearIndex,1);}if(farIndex>=0){that._frozenFarColumns.splice(farIndex,1);}if(newValue==='far'){that._selectionColumn.canNotify=false;that._selectionColumn.freeze='far';that._selectionColumn.canNotify=true;that._frozenFarColumns.splice(0,0,that._selectionColumn);that.viewColumns.push(that._selectionColumn);that.$.columnFarContainer.appendChild(that._selectionColumn.element);}else{var autoGeneratedNearColumns=0;var _index2=0;for(var _i146=0;_i146<that.viewColumns.length;_i146++){if(!that.viewColumns[_i146].autoGenerated&&that.viewColumns[_i146].dataField===that.columns[_index2++].dataField){break;}if(that.viewColumns[_i146].autoGenerated){autoGeneratedNearColumns++;}}that._selectionColumn.canNotify=false;that._selectionColumn.freeze='near';that._selectionColumn.canNotify=true;that._frozenNearColumns.splice(autoGeneratedNearColumns,0,that._selectionColumn);that.viewColumns.splice(autoGeneratedNearColumns,0,that._selectionColumn);that.$.columnNearContainer.appendChild(that._selectionColumn.element);}that.viewColumns.canNotify=true;break;}case'filtering_enabled':if(newValue){that._createFilterPanels();}return;case'filtering_filter':for(var _i147=0;_i147<that.columns.length;_i147++){var _column9=that.columns[_i147];_column9.canNotify=false;_column9.setProperty('filter',null);_column9.canNotify=true;}for(var j=0;j<that.filtering.filter.length;j++){var filter=that.filtering.filter[j];if(filter){var dataField=filter[0];var filterExpression=filter.splice(1);var filterGroup=null;if(filterExpression instanceof JQX.FilterGroup){filterGroup=filterExpression;}else{var _column10=that.columnByDataField[dataField];if(_column10){filterGroup=that.dataSource._createFilter(_column10.dataType,filterExpression);}}if(filterGroup){that.addFilter(dataField,filterGroup,false);}}}that.refreshFilters();return;case'paging_spinner_enabled':{that._refresh();break;}case'pager_visible':that._renderPagers();that._refreshPaging(false);return;case'paging_pageIndex':case'pager_position':case'paging_enabled':that._refreshPaging(true);return;case'paging_pageSize':that._refreshPaging(false);return;case'columns':{that._renderColumns();return;}case'dataSource':{that.dataBind();return;}case'displayLoadingIndicator':{that._setLoadingIndicatorVisibility();return;}case'filterable':{that._refreshLayout();return;}case'selectionMode':{return;}case'editing_addNewRow_position':{that._renderAddNewRow();that.refresh();return;}case'editing_dialog_visible':{return;}}that.refresh();}/**
      * Unselects all rows.
      */},{key:'clearSelection',value:function clearSelection(){var that=this;if(!that.dataSource||that.dataSource.length===0){return;}that._recycle();}/**
    * ListBox ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(Grid.prototype.__proto__||Object.getPrototypeOf(Grid.prototype),'ready',this).call(this);var that=this;var vScrollBar=that._scrollView.vScrollBar;var hScrollBar=that._scrollView.hScrollBar;vScrollBar.hasStyleObserver=false;hScrollBar.hasStyleObserver=false;vScrollBar.hasResizeObserver=false;hScrollBar.hasResizeObserver=false;vScrollBar.wait=false;hScrollBar.wait=false;vScrollBar.onChange=that._verticalScrollbarHandler.bind(that);hScrollBar.onChange=that._horizontalScrollbarHandler.bind(that);that.setFocusable(true);that._setLoadingIndicatorVisibility();that._cellsMerge=[];that.checkLicense();that._render();}},{key:'checkLicense',value:function checkLicense(log){var that=this;if(that.grouping.enabled||that.selection.enabled&&that.selection.allowCellSelection||that.rowDetail.enabled||that.editing.enabled&&that.editing.batch||that.editing.enabled&&that.editing.mode==='row'||that.editing.enabled&&that.editing.addNewRow.visible||that.editing.enabled&&that.editing.commandColumn.visible||that.scrollMode==='virtual'||that.sorting.enabled&&that.sorting.mode==='many'||log===true){babelHelpers.get(Grid.prototype.__proto__||Object.getPrototypeOf(Grid.prototype),'checkLicense',this).call(this);}}},{key:'_createFilterPanels',value:function _createFilterPanels(){var that=this;if(!that._filterPanels){that._filterPanels=[];}else if(that._filterPanels.length>0){return;}if(that.filtering.enabled&&that._filterPanels.length===0){requestAnimationFrame(function(){var stringPanel=document.createElement('jqx-filter-panel');var boolPanel=document.createElement('jqx-filter-panel');var numericPanel=document.createElement('jqx-filter-panel');var datePanel=document.createElement('jqx-filter-panel');boolPanel.filterType='boolean';numericPanel.filterType='numeric';datePanel.filterType='date';that._filterPanels['bool']=boolPanel;that._filterPanels['date']=datePanel;that._filterPanels['numeric']=numericPanel;that._filterPanels['string']=stringPanel;for(var filterType in that._filterPanels){var filterPanel=that._filterPanels[filterType];filterPanel.classList.add('jqx-hidden');that.$.content.appendChild(filterPanel);filterPanel.parentNode.removeChild(filterPanel);}});}}},{key:'_applyScrollMode',value:function _applyScrollMode(){var that=this;var vScrollBar=that._scrollView.vScrollBar;requestAnimationFrame(function(){vScrollBar.largeStep=that.$.scrollView.offsetHeight;switch(that.scrollMode){case'physical':case'infinite':case'virtual':vScrollBar.step=10;vScrollBar.mechanicalAction='switchWhileDragging';break;case'deferred':vScrollBar.step=10;vScrollBar.mechanicalAction='switchWhenReleased';break;case'logical':vScrollBar.step=that.rowMinHeight;vScrollBar.mechanicalAction='switchWhileDragging';break;}});}},{key:'beginUpdate',value:function beginUpdate(){var that=this;if(!that._isUpdating){that._isUpdating=0;}that._isUpdating++;}},{key:'endUpdate',value:function endUpdate(refresh){var that=this;that._isUpdating--;if(that._isUpdating<0){that._isUpdating=0;}if(refresh!==false){that.refresh();}}},{key:'suspendLayout',value:function suspendLayout(){var that=this;that._layoutSuspended=true;}},{key:'resumeLayout',value:function resumeLayout(reRender){var that=this;that._layoutSuspended=false;if(reRender){that.refresh();}else{that._recycle(false);}}},{key:'_measureColumnHeight',value:function _measureColumnHeight(){var that=this;if(that.__measuredColumnHeight){return that.__measuredColumnHeight;}var header=document.createElement('jqx-grid-column');header.style.height='auto';header.style.position='static';var columnHeaderCellContentElement=document.createElement('div');columnHeaderCellContentElement.classList.add('jqx-label');columnHeaderCellContentElement.innerHTML='aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRwWxXyYzZ1234567890';header.appendChild(columnHeaderCellContentElement);that.$.columnHeader.appendChild(header);var height=that.$.columnHeader.offsetHeight;that.$.columnHeader.removeChild(header);if(that._columnHeights&&that._columnHeights.length>1){height=that._columnHeights[0];}if(height<that.columnMinHeight){height=that.columnMinHeight;}that.__measuredColumnHeight=height;return height;}},{key:'_initializeColumnGroupsHierarchy',value:function _initializeColumnGroupsHierarchy(){var that=this;var totalMaxLevel=0;that.$.columnContainer.innerHTML='';if(that.columnGroups.length>0){for(var _i148=0;_i148<that.columnGroups.length;_i148++){that.columnGroups[_i148].parent=null;that.columnGroups[_i148].groups=null;}for(var _i149=0;_i149<that.viewColumns.length;_i149++){that.viewColumns[_i149].parent=null;that.viewColumns[_i149].groups=null;}var getParentGroup=function getParentGroup(name){for(var _i150=0;_i150<that.columnGroups.length;_i150++){var group=that.columnGroups[_i150];if(group.name===name)return group;}return null;};var getColumns=function getColumns(group){var columns=new Array();if(group.columnGroup){columns.push(group);}if(group.groups){for(var _i151=0;_i151<group.groups.length;_i151++){if(group.groups[_i151].columnGroup){columns.push(group.groups[_i151]);}else{if(group.groups[_i151].groups){var tmpcolumns=getColumns(group.groups[_i151]);for(var j=0;j<tmpcolumns.length;j++){columns.push(tmpcolumns[j]);}}}}}return columns;};for(var _i152=0;_i152<that.columnGroups.length;_i152++){var group=that.columnGroups[_i152];if(!group.groups){group.groups=null;}if(group.parentGroup){var parentGroup=getParentGroup(group.parentGroup);if(parentGroup){group.parent=parentGroup;if(!parentGroup.groups){parentGroup.groups=new Array();}if(parentGroup.groups.indexOf(group)===-1){parentGroup.groups.push(group);}}}}for(var _i153=0;_i153<that.viewColumns.length;_i153++){var _group=that.viewColumns[_i153];if(_group.columnGroup){var _parentGroup=getParentGroup(_group.columnGroup);if(_parentGroup){if(!_parentGroup.groups){_parentGroup.groups=new Array();}_group.parent=_parentGroup;if(_parentGroup.groups.indexOf(_group)===-1){_parentGroup.groups.push(_group);}}}}for(var _i154=0;_i154<that.viewColumns.length;_i154++){var _group2=that.viewColumns[_i154];var initialgroup=_group2;_group2.level=0;while(initialgroup.parent){initialgroup=initialgroup.parent;_group2.level++;}initialgroup=_group2;var maxlevel=_group2.level;totalMaxLevel=Math.max(totalMaxLevel,_group2.level);while(initialgroup.parent){initialgroup=initialgroup.parent;if(initialgroup){initialgroup.level=--maxlevel;}}}for(var _i155=0;_i155<that.columnGroups.length;_i155++){var _group3=that.columnGroups[_i155];var columns=getColumns(_group3);_group3.columns=columns;var indexes=new Array();var frozen=0;var freezePosition='near';if(columns.length===0){frozen=-1;_group3.visible=false;}for(var j=0;j<columns.length;j++){indexes.push(that.viewColumns.indexOf(columns[j]));if(columns[j].freeze){if(columns[j].freeze==='far'){freezePosition='far';}frozen++;}}if(frozen===columns.length){_group3.freeze=freezePosition;}else if(frozen>0&&frozen<columns.length){that.error(that.localize('frozenColumns',{elementType:'Grid'}));}indexes.sort(function(value1,value2){value1=parseInt(value1);value2=parseInt(value2);if(value1<value2){return-1;}if(value1>value2){return 1;}return 0;});for(var index=1;index<indexes.length;index++){if(indexes[index]!==indexes[index-1]+1){that.error(that.localize('columnGroups',{elementType:'Grid'}));}}}}that._columnGroupsLevel=1+totalMaxLevel;}},{key:'_refreshColumnHeights',value:function _refreshColumnHeights(){var that=this;that._viewColumnsHeight=that._measureColumnHeight();that._columnHeights=[];var height=0;for(var _i156=0;_i156<that._columnGroupsLevel;_i156++){var currentHeight=that._viewColumnsHeight;if(that.columnHeight){if(typeof that.columnHeight==='number'){currentHeight=that.columnHeight?that.columnHeight:that._viewColumnsHeight;}else{currentHeight=that.columnHeight?that.columnHeight(_i156):that._viewColumnsHeight;}}if(currentHeight<that.columnMinHeight){currentHeight=that.columnMinHeight;}if(!currentHeight){height+=that._viewColumnsHeight;that._columnHeights.push(that._viewColumnsHeight);}else{that._columnHeights.push(currentHeight);height+=currentHeight;}}that._columnHeaderHeight=that._columnGroupsLevel*that._viewColumnsHeight;that._columnHeaderHeight=height;that.$.columnHeader.style.height=that._columnHeaderHeight+'px';var getColumnTop=function getColumnTop(column){var top=0;for(var _i157=0;_i157<column.level;_i157++){top+=that._columnHeights[_i157];}return top;};var getColumnHeight=function getColumnHeight(column){var top=getColumnTop(column);var totalHeight=that._columnHeaderHeight-top;for(var _i158=column.level+1;_i158<that._columnHeights.length;_i158++){var level=_i158;for(var j=0;j<that.viewColumns.length;j++){var currentColumn=that.viewColumns[j];var breakLoop=false;if(currentColumn.level===level){var col=currentColumn;while(col.parent){if(col.parent===column){totalHeight-=that._columnHeights[level];breakLoop=true;break;}col=col.parent;}if(breakLoop){break;}}}}return totalHeight;};for(var _i159=0;_i159<that.viewColumns.length;_i159++){var column=that.viewColumns[_i159];var _height=getColumnHeight(column);column.computedHeight=_height;column.top=getColumnTop(column);}for(var j=0;j<that._columnGroupsLevel-1;j++){for(var _i160=0;_i160<that.columnGroups.length;_i160++){var group=that.columnGroups[_i160];var level=group.level;if(level!==j){continue;}if(group.groups){var _height2=getColumnHeight(group);var top=getColumnTop(group);group.top=top;group.computedHeight=_height2;}var header=group.element;if(!header){continue;}header.style.width=group.computedWidth+'px';header.style.left=group.left+'px';header.style.top=group.top+'px';header.style.height=group.computedHeight+'px';header.style.lineHeight=group.computedHeight+'px';}}}},{key:'_refreshColumnWidths',value:function _refreshColumnWidths(){var that=this;that.__clientSize=null;var vScrollWidth=that.$.verticalScrollBar.offsetWidth>0?that.$.verticalScrollBar.offsetWidth:0;var groupByDataSource=that.dataSource.groupBy||[];var indent=that.grouping.enabled?that.grouping.groupIndent*(1+groupByDataSource.length):0;var checkBoxesIndent=0;if(that.selection.checkBoxes.enabled){checkBoxesIndent=that._selectionColumn.computedWidth?that._selectionColumn.computedWidth:that._selectionColumn.minWidth;}var gridWidth=that._clientSize.width-vScrollWidth-indent;var adaptiveWidth=that.adaptivityMode.adaptiveLayout.width;var responsiveWidth=that.adaptivityMode.responsiveLayout.width;// 375 is default for iPhone 6, 7, & 8, X. Switches to 1 column layout instead of 2 columns layout when this point is reached.
var phoneMinWidth=375;var columnAdaptiveWidth=that.adaptivityMode.adaptiveLayout.enabled&&gridWidth<=adaptiveWidth?gridWidth>=phoneMinWidth?'50%':'100%':null;var columnsComputedWidth=0;var columnsWithAutoWidth=[];var nearWidth=0;var farWidth=0;var columnsWidth=0;that._adaptiveLayout=0;if(columnAdaptiveWidth){if(columnAdaptiveWidth==='50%'){that._adaptiveLayout=2;}else{that._adaptiveLayout=1;}}that._responsiveLayout=false;for(var _i161=that.viewColumns.length-1;_i161>=0;_i161--){var column=that.viewColumns[_i161];if(column.adaptiveVisible){that._responsiveLayout=that.adaptivityMode.responsiveLayout.enabled&&gridWidth<=responsiveWidth&&that._adaptiveLayout===0;break;}}if(that.editing.enabled&&that.editing.commandColumn.visible&&!that.editing.commandColumn.inline){var measureColumnWidth=function measureColumnWidth(){var header=document.createElement('div');var columnHeaderCellContentElement=document.createElement('div');var dataSource=that.editing.commandColumn.dataSource;var width=0;var commandsHTML='';var visibleColumnsLength=0;columnHeaderCellContentElement.classList.add('jqx-label');for(var _item17 in dataSource){var properties=dataSource[_item17];var checkedVisibility=false;if(_item17==='commandColumnMenu'){continue;}var visible=false;if(!checkedVisibility){if(properties.visible===true){visibleColumnsLength++;visible=true;}else if(properties.visible==='auto'){if((!that.editing.editRow&&!that.editing.editCell||that.editing.dialog.enabled)&&_item17==='commandColumnEdit'){visibleColumnsLength++;visible=true;}else if((that.editing.editRow||that.editing.editCell)&&!that.editing.dialog.enabled){if(_item17==='commandColumnUpdate'){visibleColumnsLength++;visible=true;}else if(_item17==='commandColumnCancel'){visibleColumnsLength++;visible=true;}}}checkedVisibility=true;}if(visible&&that.editing.commandColumn.displayMode!=='icon'){var label=properties.label==='{{messages}}'?that.localize(_item17):properties.label;commandsHTML+='<span>'+label+'</span>';}}columnHeaderCellContentElement.innerHTML='<span>'+commandsHTML+'</span>';header.appendChild(columnHeaderCellContentElement);header.style.width='auto';header.style.position='static';that.$.columnHeader.appendChild(header);width=10+columnHeaderCellContentElement.firstChild.offsetWidth;that.$.columnHeader.removeChild(header);if(that.editing.commandColumn.displayMode==='icon'){width=20+visibleColumnsLength*20;}else if(that.editing.commandColumn.displayMode==='labelAndIcon'){width+=visibleColumnsLength*25;}else{width+=visibleColumnsLength*10;}return width;};var width=that.editing.commandColumn.width?that.editing.commandColumn.width:measureColumnWidth();that.columns.canNotify=false;that._commandColumn.width=width;that.columns.canNotify=true;}for(var _i162=0;_i162<that.viewColumns.length;_i162++){var viewColumn=that.viewColumns[_i162];var _column11=viewColumn;//     const columnByDataField = that.columnByDataField[viewColumn.dataField];
//     const column = columnByDataField ? columnByDataField : viewColumn;
var _width=void 0;if(columnAdaptiveWidth){_width=parseFloat(columnAdaptiveWidth)/100;_width*=gridWidth;_column11.computedWidth=_width;continue;}if(typeof _column11.width==='number'){_width=_column11.width;}else if(_column11.width&&_column11.width.toString().indexOf('%')>=0){_width=parseFloat(_column11.width)/100;_width*=gridWidth-checkBoxesIndent;}else if(_column11.visible){columnsWithAutoWidth.push(_column11);_width=0;}if(_column11.overflowWidth){_width-=_column11.overflowWidth;}if(_column11.visible&&!_column11.adaptiveVisible){columnsComputedWidth+=_width;}if(_width<_column11.minWidth){_width=_column11.minWidth;}_column11.computedWidth=_width;}if(columnsWithAutoWidth){var autoWidth=gridWidth-columnsComputedWidth;var computedAutoWidth=0;if(autoWidth<0){autoWidth=columnsWithAutoWidth.length*60;}for(var _i163=0;_i163<columnsWithAutoWidth.length;_i163++){var _column12=columnsWithAutoWidth[_i163];var _width2=void 0;_width2=autoWidth/columnsWithAutoWidth.length;if(_i163===columnsWithAutoWidth.length-1){_width2=autoWidth-computedAutoWidth;}if(_column12.overflowWidth){_width2-=_column12.overflowWidth;}if(_width2<_column12.minWidth){_width2=_column12.minWidth;}_column12.computedWidth=_width2;computedAutoWidth+=_width2;}}for(var _i164=0;_i164<that.viewColumns.length;_i164++){var _viewColumn=that.viewColumns[_i164];var _column13=_viewColumn;//viewColumn.autoGenerated ? viewColumn : that.columnByDataField[viewColumn.dataField];
if(!_column13.visible||_column13.adaptiveVisible){continue;}if(indent>0&&!_column13.autoGenerated){_column13.computedWidth+=indent;indent=0;}if(_column13.freeze){if(_column13.freeze===true||_column13.freeze==='near'){_column13.left=nearWidth;columnsWidth+=_column13.computedWidth;nearWidth+=_column13.computedWidth;}else if(_column13.freeze==='far'){_column13.left=farWidth;farWidth+=_column13.computedWidth;}}else{_column13.left=columnsWidth;columnsWidth+=_column13.computedWidth;}}for(var j=0;j<that._columnGroupsLevel-1;j++){var _loop6=function _loop6(_i165){var group=that.columnGroups[_i165];var level=group.level;if(level!==j){return'continue';}var left=99999;if(group.groups){var getWidth=function getWidth(group){var width=0;for(var _j7=0;_j7<group.groups.length;_j7++){var currentGroup=group.groups[_j7];if(!currentGroup.groups){if(!currentGroup.hidden){left=Math.min(currentGroup.left,left);width+=currentGroup.computedWidth;}}else{width+=getWidth(currentGroup);}}return width;};group.computedWidth=getWidth(group);group.left=left;}};for(var _i165=0;_i165<that.columnGroups.length;_i165++){var _ret9=_loop6(_i165);if(_ret9==='continue')continue;}}}},{key:'_createColumnHeaderCellElements',value:function _createColumnHeaderCellElements(){var that=this;var columnContainer=that.$.columnContainer;var fragment=document.createDocumentFragment();var columnsWidth=0;that._columnElements=[];that.$.columnContainer.innerHTML='';that.$.columnNearContainer.innerHTML='';that.$.columnFarContainer.innerHTML='';for(var _i166=0;_i166<that._frozenNearColumns.length;_i166++){var column=that._frozenNearColumns[_i166];column.createElement();}for(var _i167=0;_i167<that._frozenFarColumns.length;_i167++){var _column14=that._frozenFarColumns[_i167];_column14.createElement();}for(var _i168=0;_i168<that.viewColumns.length;_i168++){var _column15=that.viewColumns[_i168];if(_column15.freeze){continue;}var header=_column15.createElement();if(_column15.computedWidth===undefined){that._columnElements.push(header);fragment.appendChild(header);continue;}columnsWidth+=_column15.computedWidth;that._columnElements.push(header);if(columnsWidth<2*that._clientSize.width){fragment.appendChild(header);}}for(var _i169=0;_i169<that.columnGroups.length;_i169++){var _group4=that.columnGroups[_i169];var groupColumn=new JQX.Grid.Column({visible:_group4.visible!==undefined?_group4.visible:true,allowSelect:false,grid:that,dataField:_group4.name,label:_group4.label,align:_group4.align,verticalAlign:_group4.verticalAlign});_group4.column=groupColumn;var _header=groupColumn.createElement();_header.style.width=_group4.computedWidth+'px';_header.style.left=_group4.left+'px';_header.style.top=_group4.top+'px';_header.style.height=_group4.computedHeight+'px';_header.style.lineHeight=_group4.computedHeight+'px';fragment.appendChild(_header);_group4.element=_header;_group4.grid=this;}if(!that.htmlColumnLastChild){that.htmlColumnLastChild=document.createElement('jqx-grid-column');that.htmlColumnLastChild.classList.add('top-far-corner');that.$.columnHeader.appendChild(that.htmlColumnLastChild);}columnContainer.appendChild(fragment);columnContainer.style.width=that._computedColumnsWidth+'px';that._refreshFrozenColumns();}},{key:'_refreshFrozenColumns',value:function _refreshFrozenColumns(){var that=this;that.$.columnNearContainer.style.width=that._frozenColumnsNearWidth+'px';that.$.columnFarContainer.style.width=that._frozenColumnsFarWidth+'px';for(var _i170=0;_i170<that.columnGroups.length;_i170++){var columnGroup=that.columnGroups[_i170];if(columnGroup.freeze&&columnGroup.element){if(columnGroup.freeze===true||columnGroup.freeze==='near'){that.$.columnNearContainer.appendChild(columnGroup.element);}else if(columnGroup.freeze==='far'){that.$.columnFarContainer.appendChild(columnGroup.element);}}}for(var _i171=0;_i171<that.viewColumns.length;_i171++){var column=that.viewColumns[_i171];if(column.freeze&&column.element){if(column.freeze===true||column.freeze==='near'){that.$.columnNearContainer.appendChild(column.element);}else if(column.freeze==='far'){that.$.columnFarContainer.appendChild(column.element);}}}}},{key:'_initializeRowElements',value:function _initializeRowElements(){var that=this;if(!that.rows){return;}that.rows.canNotify=false;var rowsHeight=0;var height=that._clientSize.height;that.$.rowNearContainer.innerHTML='';that.$.rowFarContainer.innerHTML='';that.$.rowContainer.innerHTML='';that._rowElements=[];that._overflowOffset=Math.max(height,300);var offsetHeight=that.offsetHeight;that.$.container.classList.add('jqx-hidden');var newOffsetHeight=that.offsetHeight;that.$.container.classList.remove('jqx-hidden');if(that.verticalScrollBarVisibility==='hidden'||offsetHeight!==newOffsetHeight){height=that._scrollHeight;}var createRecyclingRows=function createRecyclingRows(){var documentFragment=document.createDocumentFragment();if(that.rows&&that.rows.length===0){return;}for(var _i172=0;_i172<that.rows.length;_i172++){var _row10=that.rows[_i172];if(_row10.freeze){continue;}var _rowElement=_row10.createElement();documentFragment.appendChild(_rowElement);rowsHeight+=that.rowMinHeight;if(rowsHeight>that._overflowOffset+height){break;}}that.$.rowContainer.appendChild(documentFragment);var rowElements=that.$.rowContainer.children;for(var _i173=0;_i173<rowElements.length;_i173++){var _rowElement2=rowElements[_i173];if(that.rows[_i173]){that.rows[_i173].element=_rowElement2;}that._rowElements[_i173]=_rowElement2;}};for(var _i174=0;_i174<that._frozenNearRows.length;_i174++){var _row11=that._frozenNearRows[_i174];var element=_row11.createElement();_row11.element=element;that.$.rowNearContainer.appendChild(element);}for(var _i175=0;_i175<that._frozenFarRows.length;_i175++){var _row12=that._frozenFarRows[_i175];var _element=_row12.createElement();_row12.element=_element;that.$.rowFarContainer.appendChild(_element);}createRecyclingRows();var maxIterations=0;while(rowsHeight<1.5*height&&++maxIterations<50){createRecyclingRows();}that.rows.canNotify=true;}},{key:'_initializeRows',value:function _initializeRows(){var that=this;var frozenIndex=0;that._frozenNearDefaultRows=[];that._frozenFarDefaultRows=[];that.rows=[];that.rowById=[];that._frozenFarRows=[];that._frozenNearRows=[];var calculateSummary=function calculateSummary(){var summaryObject=[];var hasSummary=false;for(var _i176=0;_i176<that.columns.length;_i176++){var column=that.columns[_i176];var columnSummary={};if(column.summary&&column.summary.length>0){hasSummary=true;}columnSummary[column.dataField]=column.summary;summaryObject.push(columnSummary);}if(!hasSummary){that._summaryItems=[];return;}that._summaryItems=that.dataSource.summarize(summaryObject);};var addNewRow=function addNewRow(data,index){var row=data.grid?data:new JQX.Grid.Row({data:data,index:index,grid:that});if(that.onRowInit){that.onRowInit(index,row);for(var propertyName in row){if(row.properties.indexOf(propertyName)===-1&&!propertyName.startsWith('_')){that.error(that.localize('invalidRowProperty',{elementType:'Grid',propertyName:propertyName}));}}}if(row.selected){that._selection.rows[row.id]=true;}if(row.freeze){if(row.freeze===true||row.freeze==='near'){that.rows.splice(frozenIndex++,0,row);that._frozenNearRows.push(row);}else if(row.freeze==='far'){that._frozenFarRows.push(row);that.rows.push(row);}}else{if(that.rows[index]){that.rows.splice(index,0,row);}else{that.rows.push(row);}}if(that.scrollMode==='virtual'||that.paging.enabled&&that.dataSource&&that.dataSource.virtualDataSource){return;}if(that.onRowInserted){that.onRowInserted(index,row);}};var removeLastRow=function removeLastRow(){var lastRow=that.rows[that.rows.length-1];that.rows.pop();if(that.onRowRemoved){that.onRowRemoved(that.rows.length,lastRow);}};var removeAt=function removeAt(index){var row=that.rows[index];that.rows.splice(index,1);if(that.onRowRemoved){that.onRowRemoved(index,row);}};that._add=addNewRow;that._removeLastRow=removeLastRow;that._removeAt=removeAt;that._rowHeight=that._autoRowHeight;var dataSourceLength=that.dataSource.length;for(var _i177=0;_i177<that.dataSource.length;_i177++){var data=that.dataSource[_i177];addNewRow(data,_i177);}for(var _i178=0;_i178<that._frozenFarRows.length;_i178++){var _row13=that._frozenFarRows[_i178];that.rows.splice(that.rows.indexOf(_row13),1);that.rows.push(_row13);}calculateSummary();that.dataSource.notify(function(changes){if(that.dataSource._updating){return;}var data=changes.data;that.rows.canNotify=false;switch(changes.action){case'add':if(data.length){for(var _i179=0;_i179<data.length;_i179++){addNewRow(data[_i179],that.dataSource.length-data.length+_i179);}}else{addNewRow(data,that.dataSource.length-1);}break;case'update':if(data.length){for(var _i180=0;_i180<data.length;_i180++){var index=changes.index[_i180];if(!that.rows[index]){addNewRow(data[_i180],that.dataSource.length-1);continue;}that.rows[index].data=data[_i180];if(that.onRowUpdated){that.onRowUpdated(index,that.rows[index]);}}}else{var _index3=changes.index;if(!that.rows[_index3]){addNewRow(data,that.dataSource.length-1);}else{that.rows[_index3].data=data;}if(that.onRowUpdated){that.onRowUpdated(_index3,that.rows[_index3]);}}break;case'insert':addNewRow(data,changes.index);for(var _i181=0;_i181<that.rows.length;_i181++){var _row14=that.rows[_i181];_row14.index=_i181;}break;case'remove':removeAt(changes.index);break;case'removeLast':removeLastRow();break;case'bindingComplete':if(that.dataSource&&that.dataSource.url){that.displayLoadingIndicator=false;that._setLoadingIndicatorVisibility();that._toggledRow=null;if(that.dataSource.length!==dataSourceLength){if(that.paging.enabled){that.$.headerPager.querySelector('jqx-pager').pagesCount=Math.ceil(that.dataSource.length/that.paging.pageSize);that.$.footerPager.querySelector('jqx-pager').pagesCount=Math.ceil(that.dataSource.length/that.paging.pageSize);}that._initializeRows();that._initializeRowElements();that.refresh();}that._recycle();}break;}calculateSummary();if(changes.action!=='update'){that._refreshLayout();}that._recycle();that.rows.canNotify=true;});that._observeRows();if(that.summaryRow.visible){for(var _i182=0;_i182<that._summaryRowCount;_i182++){var summaryNearRow=new JQX.Grid.Row({freeze:'near',visible:that.summaryRow.position==='near',summaryRowIndex:_i182,summaryRow:true});var summaryFarRow=new JQX.Grid.Row({freeze:'far',visible:that.summaryRow.position==='far',summaryRowIndex:_i182,summaryRow:true});that._frozenNearRows.splice(0,0,summaryNearRow);that._frozenFarRows.push(summaryFarRow);}}if(that.filtering.enabled&&that.filtering.filterRow.visible){var _row15=new JQX.Grid.Row({freeze:'near',filterRow:true});that._frozenNearRows.splice(0,0,_row15);}that._renderAddNewRow();}},{key:'_observeRows',value:function _observeRows(){var that=this;var observables={'allowToggle':true,'allowResize':true,'expanded':true,'selected':true,'visible':true,'enabled':true,'minHeight':true,'height':true,'freeze':true,'showDetail':true,'data':true,'visibleIndex':true,'index':true};that._frozenNearRows=[];that._frozenFarRows=[];that.rows=new JQX.ObservableArray(that.rows,null,observables);for(var _i183=0;_i183<that.rows.length;_i183++){var _row16=that.rows[_i183];if(_row16.freeze===true||_row16.freeze==='near'){that._frozenNearRows.push(_row16);}else if(_row16.freeze==='far'){that._frozenFarRows.push(_row16);}that.rowById[that.rows[_i183].id]=_row16;}var rowPropertyChanged=function rowPropertyChanged(row,propertyName,oldValue,newValue){row.propertyChanged(propertyName,oldValue,newValue);};that.rows.notify(function(changes){if(!that.rows.canNotify){return;}var changeType=changes.action;if(changeType==='length'){return;}if(changes.path){that.rows.canNotify=false;rowPropertyChanged(changes.target,changes.propertyName,changes.oldValue,changes.newValue);that.rows.canNotify=true;return;}that.rows.canNotify=false;if(!that.dataSource){return;}that.dataSource.canNotify=false;switch(changeType){case'add':{var addRow=function addRow(index){var row=that.rows[index];if(row instanceof JQX.Grid.Row===false){row=new JQX.Grid.Row(row);var notify=that.rows.canNotify;that.rows.canNotify=false;changes.object[index]=row;row=changes.object[index];that.rows.canNotify=notify;}if(index<that.dataSource.length){that.dataSource.insert(index,that.rows[index].data);}else{that.dataSource.add(that.rows[index].data);}row.grid=that;row.data=that.dataSource[index];that.rowById[row.id]=row;if(row.selected){that._selection.rows[row.id]=true;}if(row.freeze){if(row.freeze===true||row.freeze==='near'){that._frozenNearRows.push(row);}else if(row.freeze==='far'){that._frozenFarRows.push(row);}}};for(var _i184=0;_i184<changes.addedCount;_i184++){addRow(changes.index+_i184);}break;}case'update':{that.dataSource.update(changes.index,that.rows[changes.index]);break;}case'remove':{var _row17=changes.removed;delete that.rowById[_row17.id];that.dataSource.remove(changes.index);break;}}that.dataSource.canNotify=true;that.rows.canNotify=true;if(!changeType){return;}var fullRefresh=that.isInitialized&&that._rowElements&&that._rowElements.length<that.rows.length;if(fullRefresh){that._initializeRowElements();}that.refresh();that._refreshPagesCount();});}},{key:'render',value:function render(){var that=this;that._render();}},{key:'_renderColumns',value:function _renderColumns(refresh){var that=this;that._initializeColumns();that._initializeColumnGroupsHierarchy();that._refreshColumnsResponsiveVisibility();that._createColumnHeaderCellElements();that._renderColumnGroupHeaders();if(refresh!==false){that._refresh();}}},{key:'_renderRows',value:function _renderRows(refresh){var that=this;that._initializeRows();that._initializeRowElements();if(refresh!==false){that._refresh();}}},{key:'_render',value:function _render(){var that=this;if(!that.isInitialized){if(that.onBeforeInit){that.onBeforeInit();}that.$.fireEvent('beforeInit',{'grid':that});}if(that.dataSource===null){that.dataSource=new JQX.DataAdapter();}that._selection={rows:[],columns:[],cells:[]};if(that.dataSource&&that.dataSource.url){that.displayLoadingIndicator=true;that._setLoadingIndicatorVisibility();that.dataSource.data={sorting:that.getSortedColumns(),filtering:that.getFilteredColumns(),grouping:[]};}that._renderColumns(false);that._renderRows(false);that._renderPagers();that._renderCommandBar();if(that.appearance.allowColumnStickyPosition){that._stickHeader();}if(!that.isInitialized){for(var _i185=0;_i185<that.viewColumns.length;_i185++){var column=that.viewColumns[_i185];if(!column.allowSort||!column.sortOrder){continue;}var sortAnimation=that.appearance.allowSortAnimation;that.appearance.allowSortAnimation=false;that.sortBy(column.dataField,column.sortOrder);that.appearance.allowSortAnimation=sortAnimation;}if(that.filtering.filter.length>0){for(var j=0;j<that.filtering.filter.length;j++){var filter=that.filtering.filter[j];if(filter){var dataField=filter[0];var filterExpression=filter.splice(1);var filterGroup=null;if(filterExpression instanceof JQX.FilterGroup){filterGroup=filterExpression;}else{var _column16=that.columnByDataField[dataField];if(_column16){filterGroup=that.dataSource._createFilter(_column16.dataType,filterExpression);}}if(filterGroup){that.addFilter(dataField,filterGroup,false);}}}that.refreshFilters();}}else{that.refreshFilters();}that.viewColumns.canNotify=true;if(!that.isInitialized){if(that.onInit){that.onInit();}that.$.fireEvent('init',{'grid':that});}that.isInitialized=true;if(that.scrollMode==='virtual'||that.paging.enabled&&that.dataSource&&that.dataSource.virtualDataSource){that._virtualDataRequest('dataBind');}else if(that.dataSource&&that.dataSource.virtualDataSource){that._virtualDataRequest('dataBind');}if(that.header.template!==''){that._applyTemplate(that.header.template,that.$.header);}if(that.footer.template!==''){that._applyTemplate(that.footer.template,that.$.footer);}that._createFilterPanels();that._refresh();that._applyScrollMode();if(that.onRender){that.onRender();}}},{key:'_refreshPagesCount',value:function _refreshPagesCount(){var that=this;var getPagesCount=function getPagesCount(){var visibleRows=that.getVisibleRows();var rowsCount=visibleRows.length;if(that.rowHierarchy){rowsCount=0;for(var _i186=0;_i186<visibleRows.length;_i186++){var _row18=visibleRows[_i186];if(_row18.level===0&&!_row18.parent){rowsCount++;}}if(that.dataSource.virtualDataSourceLength){rowsCount=that.dataSource.virtualDataSourceLength;}}return Math.ceil(rowsCount/that.paging.pageSize);};var headerPager=that.$.headerPager.querySelector('jqx-pager');var pagesCount=getPagesCount();if(headerPager){headerPager.pagesCount=pagesCount;}var footerPager=that.$.footerPager.querySelector('jqx-pager');if(headerPager){footerPager.pagesCount=pagesCount;}if(that.paging.pageIndex>pagesCount){that.paging.pageIndex=pagesCount-1;that._refreshPaging(that.paging.pageIndex);}}},{key:'_stickHeader',value:function _stickHeader(){var that=this;var handler=function handler(){that._handleStickyHeader();};that.$.columnHeader.style.top='';that.$.columnHeader.classList.remove('jqx-columns-sticky');var parent=that.parentNode;while(parent!==document){parent.addEventListener('scroll',handler);parent=parent.parentNode;}try{if(window.top!==null&&window.top!==window.self){window.top.document.addEventListener('scroll',handler);}}catch(error){//
}that._handleStickyHeader();}},{key:'_unstickHeader',value:function _unstickHeader(){var that=this;that.$.columnHeader.style.top='';that.$.columnHeader.classList.remove('jqx-columns-sticky');var handler=function handler(){that._scrollHandler();};var parent=that.parentNode;while(parent!==document.body){parent.removeEventListener('scroll',handler);parent=parent.parentNode;}try{if(document.referrer!==''||window.frameElement){if(window.top!==null&&window.top!==window.self){window.top.document.removeEventListener('scroll',handler);}}}catch(error){//
}}},{key:'_handleStickyHeader',value:function _handleStickyHeader(){var that=this;if(!that.appearance.allowColumnStickyPosition){return;}that.$.columnHeader.classList.add('jqx-columns-sticky');if(document.scrollTop===0&&that.parentElement.scrollTop===0){that.$.columnHeader.style.top='';}else{var parent=that.parentNode;var top=0;while(parent!==document.body){top+=parseInt(parent.scrollTop);parent=parent.parentNode;}var headerTop=parseInt(that.clientTop+top);that.$.columnHeader.style.top=headerTop+'px';var frameTop=0;if(window.top!==window.self){if(parseInt(window.top.scrollY)>parseInt(that._offsetTop(window.frameElement))){frameTop=parseInt(window.top.scrollY)-parseInt(that._offsetTop(window.frameElement));}}if(window.scrollY+frameTop>that.offsetTop){that.$.columnHeader.style.top=parseInt(window.scrollY)-parseInt(that.offsetTop)+headerTop+frameTop+'px';}}}},{key:'_scrollHandler',value:function _scrollHandler(){var that=this;that._handleStickyHeader();}},{key:'_initializeRowNumberColumn',value:function _initializeRowNumberColumn(){var that=this;if(that._frozenNearColumns&&that._frozenNearColumns.length>0&&that._frozenNearColumns[0].rowNumbersColumn){that._frozenNearColumns[0].visible=that.appearance.showRowNumber||that.appearance.showRowHeader;return;}var measureColumnWidth=function measureColumnWidth(){var header=document.createElement('div');var columnHeaderCellContentElement=document.createElement('div');var rowsLength=that.rows?that.rows.length:that.dataSource?that.dataSource.length:0;var width=0;columnHeaderCellContentElement.classList.add('jqx-label');columnHeaderCellContentElement.innerHTML='<span>'+rowsLength+'</span>';header.appendChild(columnHeaderCellContentElement);header.style.width='auto';header.style.position='static';that.$.columnHeader.appendChild(header);width=20+columnHeaderCellContentElement.firstChild.offsetWidth;that.$.columnHeader.removeChild(header);return Math.max(30,width);};var width=that.appearance.showRowNumber?measureColumnWidth():30;var column=new JQX.Grid.Column({dataField:'_rowHeaderColumn',label:'',allowSelect:false,freeze:true,visible:true,grid:that,autoGenerated:true,rowNumbersColumn:true,cellsAlign:'center',width:width});column.createElement();var observableColumn=new JQX.Observable(column,column.observables);that.viewColumns.splice(0,0,observableColumn);that._frozenNearColumns.splice(0,0,observableColumn);}},{key:'_initializeColumns',value:function _initializeColumns(){var that=this;if(typeof that.columns==='number'){var boundColumns=[];var charCode='A'.charCodeAt(0);var prefix='';var index=0;for(var _i187=0;_i187<that.columns;_i187++){var letter=String.fromCharCode(charCode+index);index++;var label=prefix+letter;boundColumns.push({align:'center',label:label,dataField:label,width:100});if(index>=26){index=0;prefix+='A';}}that._boundColumns=boundColumns;}else{that._boundColumns=Array.isArray(that.columns)?that.columns.splice(0):that.columns.toArray().splice(0);}that.columnByDataField=[];that.viewColumns=[];that.columns=new JQX.ObservableArray();that._frozenFarColumns=[];that._frozenNearColumns=[];that._summaryRowCount=0;var frozenIndex=0;var _applyBoundColumnDataType=function _applyBoundColumnDataType(column){if(that.dataSource.dataFields){var field=that.dataSource.dataFields.find(function(field){if(field.name===column.dataField){return field;}});var dataType=field?field.dataType||'string':'string';column.dataType=dataType;}};if(that._boundColumns.length===0&&that.dataSource&&that.dataSource[0]){var _row19=that.dataSource[0];for(var dataField in _row19){if(dataField.startsWith('_')||dataField==='$'){continue;}var _index4=that._boundColumns.length;var _column17={index:_index4,visibleIndex:_index4,label:dataField,dataField:dataField};_applyBoundColumnDataType(_column17);that._boundColumns.push(_column17);}}var _loop7=function _loop7(_i188){var boundColumn=that._boundColumns[_i188];if(typeof boundColumn==='string'){if(that.dataSource.dataFields){var field=that.dataSource.dataFields.find(function(field){if(field.name===boundColumn){return field;}});boundColumn={label:boundColumn,dataField:boundColumn,dataType:field?field.dataType||'string':'string'};}}else{_applyBoundColumnDataType(boundColumn);}boundColumn.visibleIndex=_i188;boundColumn.index=_i188;boundColumn.grid=that;var column=new JQX.Grid.Column(boundColumn);if(that.onColumnInit){that.onColumnInit(_i188,column);}for(var propertyName in column){if(column.properties.indexOf(propertyName)===-1&&!propertyName.startsWith('_')){that.error(that.localize('invalidColumnProperty',{elementType:'Grid',propertyName:propertyName,type:column.dataField||'Column'}));}}column.grid=that;that.columns.push(column);var observableColumn=that.columns[that.columns.length-1];that._summaryRowCount=Math.max(that._summaryRowCount,column.summary.length);if(column.freeze){if(column.freeze===true||column.freeze==='near'){that.viewColumns.splice(frozenIndex++,0,observableColumn);that._frozenNearColumns.push(observableColumn);}else if(column.freeze==='far'){that._frozenFarColumns.push(observableColumn);}}else{that.viewColumns.push(observableColumn);}if(!that.columnByDataField[column.dataField]){that.columnByDataField[column.dataField]=observableColumn;}else{observableColumn.parent=that.columnByDataField[column.dataField];if(!that.columnByDataField[column.dataField].children){that.columnByDataField[column.dataField].children=[];}that.columnByDataField[column.dataField].children.push(observableColumn);}if(that.onColumnInserted){that.onColumnInserted(_i188,column);}};for(var _i188=0;_i188<that._boundColumns.length;_i188++){_loop7(_i188);}that.viewColumns=that.viewColumns.concat(that._frozenFarColumns);var autoGeneratedNearColumns=0;if(that.appearance.showRowNumber||that.appearance.showRowHeader){that._initializeRowNumberColumn();autoGeneratedNearColumns++;}if(that.rowDetail.enabled){var _column18=new JQX.Grid.Column({dataField:'_rowDetailColumn',allowSelect:false,visible:that.rowDetail.visible,label:'',grid:that,freeze:true,rowDetailColumn:true,autoGenerated:true,cellsAlign:'center',width:30});var _observableColumn=new JQX.Observable(_column18,_column18.observables);if(that.rowDetail.position==='near'){_column18.freeze='near';_observableColumn.freeze='near';that.viewColumns.splice(autoGeneratedNearColumns,0,_observableColumn);that._frozenNearColumns.splice(autoGeneratedNearColumns,0,_observableColumn);}else{that.viewColumns.push(_observableColumn);that._frozenFarColumns.splice(0,0,_observableColumn);}autoGeneratedNearColumns++;}var column=new JQX.Grid.Column({dataField:'_adaptiveColumn',allowSelect:false,visible:!that.adaptivityMode.responsiveLayout.autoShowHiddenCells,label:'',grid:that,freeze:'far',adaptiveColumn:true,autoGenerated:true,cellsAlign:'center',width:30});var observableColumn=new JQX.Observable(column,column.observables);observableColumn.canNotify=false;that.viewColumns.push(observableColumn);that._frozenFarColumns.splice(0,0,observableColumn);var commandColumn=new JQX.Grid.Column({dataField:'_commandColumn',allowSelect:false,visible:that.editing.enabled&&that.editing.commandColumn.visible&&!that.editing.commandColumn.inline,label:'',grid:that,freeze:'far',commandColumn:true,autoGenerated:true,align:'center',cellsAlign:'center',width:''});var observableCommandColumn=new JQX.Observable(commandColumn,commandColumn.observables);observableCommandColumn.canNotify=false;if(that.editing.commandColumn.position==='near'){commandColumn.freeze='near';observableCommandColumn.freeze='near';that.viewColumns.splice(autoGeneratedNearColumns,0,observableCommandColumn);that._frozenNearColumns.splice(autoGeneratedNearColumns,0,observableCommandColumn);}else{that.viewColumns.push(observableCommandColumn);that._frozenFarColumns.splice(0,0,observableCommandColumn);}that._commandColumn=observableCommandColumn;var selectionColumn=new JQX.Grid.Column({allowSelect:false,visible:that.selection.enabled&&that.selection.checkBoxes.enabled,dataField:'_checkBoxColumn',label:'',freeze:that.selection.checkBoxes.position,grid:that,selectionColumn:true,autoGenerated:true,cellsAlign:'center',width:32});var observableSelectionColumn=new JQX.Observable(selectionColumn,selectionColumn.observables);if(selectionColumn.freeze==='near'){that.viewColumns.splice(autoGeneratedNearColumns,0,observableSelectionColumn);that._frozenNearColumns.splice(autoGeneratedNearColumns,0,observableSelectionColumn);}else{that.viewColumns.push(observableSelectionColumn);that._frozenFarColumns.splice(0,0,observableSelectionColumn);}that._selectionColumn=observableSelectionColumn;that._selectionColumn.canNotify=false;that._observeColumns();that._templateColumns();}},{key:'_templateColumns',value:function _templateColumns(){var that=this;var computedStyle=getComputedStyle(that);var templateColumns=computedStyle.getPropertyValue('--jqx-grid-template-columns').trim();var columnGap=computedStyle.getPropertyValue('--jqx-grid-column-gap').trim();var rowGap=computedStyle.getPropertyValue('--jqx-grid-row-gap').trim();that._rowGap=parseInt(rowGap);that._columnGap=parseInt(columnGap);that._maxHeight=parseInt(computedStyle.maxHeight);that._minHeight=parseInt(computedStyle.minHeight);if(templateColumns!=='none'){var unboundColumnWidths=0;for(var _i189=0;_i189<that.viewColumns.length;_i189++){if(that.viewColumns[_i189].autoGenerated){unboundColumnWidths+=that.viewColumns[_i189].visible?that.viewColumns[_i189].width:0;}}var boundColumnWidths=[];var templateColumnsContainer=document.createElement('div');templateColumnsContainer.style.display='grid';templateColumnsContainer.style.gridTemplateColumns=templateColumns;for(var _i190=0;_i190<that.columns.length;_i190++){templateColumnsContainer.innerHTML+='<div></div>';}templateColumnsContainer.style.width=that.clientWidth-unboundColumnWidths+'px';that.$.root.appendChild(templateColumnsContainer);var templateColumnsArray=templateColumns.split(' ');for(var _i191=0;_i191<that.columns.length;_i191++){boundColumnWidths[_i191]=templateColumnsContainer.children[_i191].offsetWidth;if(templateColumnsArray[_i191]==='auto'){boundColumnWidths[_i191]='auto';}}templateColumnsContainer.parentNode.removeChild(templateColumnsContainer);var j=0;for(var _i192=0;_i192<that.viewColumns.length;_i192++){var column=that.viewColumns[_i192];if(column.autoGenerated){continue;}if(boundColumnWidths[j]){column.width=column.templateWidth=boundColumnWidths[j++];}}}else{for(var _i193=0;_i193<that.viewColumns.length;_i193++){var _column19=that.viewColumns[_i193];if(_column19.autoGenerated){continue;}if(_column19.templateWidth){_column19.width=_column19.templateWidth='auto';}}}}},{key:'_observeColumns',value:function _observeColumns(){var that=this;var columnPropertyChanged=function columnPropertyChanged(column,propertyName,oldValue,newValue){column.propertyChanged(propertyName,oldValue,newValue);};var _loop8=function _loop8(_i194){var column=that.viewColumns[_i194];column.onAction=function(){that._openMenu(this);};if(column.autoGenerated){column.notify(function(changes){column.canNotify=false;columnPropertyChanged(column,changes.propertyName,changes.oldValue,changes.newValue);column.canNotify=true;});}};for(var _i194=0;_i194<that.viewColumns.length;_i194++){_loop8(_i194);}that.columns.notify(function(changes){var column=null;if(changes.path){that.columns.canNotify=false;columnPropertyChanged(changes.target,changes.propertyName,changes.oldValue,changes.newValue);that.columns.canNotify=true;return;}that.columns.canNotify=false;var changeType=changes.action;var unboundColumnsCount=0;switch(changeType){case'length':{that.columns.canNotify=true;return;}case'add':{var addColumn=function addColumn(columnIndex){column=changes.object[columnIndex];if(column instanceof JQX.Grid.Column===false){column=new JQX.Grid.Column(column);var notify=that.columns.canNotify;that.columns.canNotify=false;changes.object[columnIndex]=column;column=changes.object[columnIndex];that.columns.canNotify=notify;}column.grid=that;if(column.freeze){that._frozenNearColumns.push(column);}else if(column.freeze==='far'){that._frozenFarColumns.push(column);}var index=that.viewColumns.length-that._frozenFarColumns.length;if(columnIndex<that.columns.length){that.viewColumns.splice(columnIndex+that._frozenNearColumns.length,0,column);}else{that.viewColumns.splice(index,0,column);}if(!that.columnByDataField[column.dataField]){that.columnByDataField[column.dataField]=column;}else{that.columnByDataField[column.dataField].children.push(column);column.parent=that.columnByDataField[column.dataField];column.valueField=column.dataField;var dataField=column.dataField+'_'+column.parent.children.length;that.columnByDataField[dataField]=column;column.dataField=dataField;}if(that.onColumnInserted){that.onColumnInserted(columnIndex,column);}};for(var _i195=0;_i195<changes.addedCount;_i195++){addColumn(changes.index+_i195);}break;}case'update':{column=changes.object[changes.index];column.grid=that;for(var _i196=0;_i196<changes.index;_i196++){if(that.viewColumns[_i196].autoGenerated){unboundColumnsCount++;}}that.viewColumns[unboundColumnsCount+changes.index]=column;that.columnByDataField[column.dataField]=column;if(that.onColumnUpdated){that.onColumnUpdated(changes.index,column);}break;}case'remove':{column=changes.removed[0];var index=changes.index;for(var _i197=0;_i197<=index;_i197++){if(that.viewColumns[_i197].autoGenerated){unboundColumnsCount++;}}that.viewColumns.splice(unboundColumnsCount+index,1);delete that.columnByDataField[column.dataField];if(that.onColumnRemoved){that.onColumnRemoved(changes.index,column);}break;}}that._initializeColumnGroupsHierarchy();that._refreshColumnsResponsiveVisibility();that._createColumnHeaderCellElements();that._templateColumns();that.refresh();that.columns.canNotify=true;});}/**
    * Calculates the width/height of the rows.
    */},{key:'_horizontalScrollbarHandler',/**
    * Handles pressed keys.
    
    _handleKeyStrokes(key) {
        const that = this;
        const toFocus = that.selectionMode === 'radioButton' || that.selectionMode === 'checkBox' || that.selectionMode === 'zeroOrMany' || that.selectionMode === 'oneOrMany';
        let rows = that.rows;
    
    
        if (that.disabled || that.readonly) {
            return;
        }
    
        switch (key) {
            case 'ArrowLeft':
            case 'ArrowUp':
                break;
            case 'ArrowRight':
            case 'ArrowDown':
                break;
            case ' ': {
                break;
            }
            case 'Home': {
                break;
            }
            case 'End': {
                break;
            }
            case 'PageUp': {
                break;
            }
            case 'PageDown': {
                break;
            }
        }
    
        that._recycle();
    }
    /**
    * Horizontal Scroll Bar handler
    */value:function _horizontalScrollbarHandler(){var that=this;that.closeMenu();that.isScrolling=true;requestAnimationFrame(function(){that._recycle();that.isScrolling=false;});}/**
    * Container mousewheel event handler.
    */},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(event){var that=this;if(that._scrollView.hScrollBar.$.hasClass('jqx-hidden')&&that._scrollView.vScrollBar.$.hasClass('jqx-hidden')){return;}if(!that.disabled&&!that._scrollView.vScrollBar.$.hasClass('jqx-hidden')){event.stopPropagation();event.preventDefault();that._scrollView.scrollTo(that._scrollView.scrollTop+that._getScrollCoefficient(event,that._clientSize.height));//            that._scrollView.scrollTop += event.deltaY < 0 ? -100 : 100;
}}/**
    * Removes all rows from DOM. 
    */},{key:'clearRows',value:function clearRows(){var that=this;that.dataSource=[];that.clearSelection();}},{key:'dataBind',value:function dataBind(){var that=this;that._renderRows();if(that.scrollMode==='virtual'||that.paging.enabled&&that.dataSource&&that.dataSource.virtualDataSource){that._virtualDataRequest('dataBind');}else if(that.dataSource&&that.dataSource.virtualDataSource){that._virtualDataRequest('dataBind');}}},{key:'refresh',value:function refresh(fullRefresh){var that=this;if(!that.isInitialized){return;}if(fullRefresh){that._initializeRows();that._initializeRowElements();}that._refresh();}},{key:'_refresh',value:function _refresh(){var that=this;if(that._isUpdating){return;}var vScrollWidth=that.$.verticalScrollBar.offsetWidth;that.removeAttribute('grouped');that.removeAttribute('tree');if(that.grouping.enabled&&that.dataSource.groupBy&&that.dataSource.groupBy.length>0){that.setAttribute('grouped','');}else if(that.dataSource.boundHierarchy){that.setAttribute('tree','');}if(that.isInitialized){// resize columns first, becase we have columns with auto or percentage width depending on the Grid's width.
that._refreshColumnsResponsiveVisibility();}// refresh layout and show or hide horizontal/vertical scrollbars..
that._refreshLayout();if(vScrollWidth!==that.$.verticalScrollBar.offsetWidth){that.__scrollWidth=null;that._refreshColumnsResponsiveVisibility();that._refreshScrollBars();}that._refreshSelection();that._recycle();requestAnimationFrame(function(){that._width=that.offsetWidth;that._height=that.offsetHeight;});}/**
    * Grid resize handler.
    */},{key:'_resizeHandler',value:function _resizeHandler(event){var that=this;if(event.target===that&&!that._isUpdatingScrollBars){that._isUpdatingScrollBars=true;that._autoHeight=false;if(that.$.content){that.$.content.classList.remove('auto-height');}that.refresh();that._isUpdatingScrollBars=false;}}},{key:'_refreshColumnsResponsiveVisibility',value:function _refreshColumnsResponsiveVisibility(){var that=this;var responsiveWidth=that.adaptivityMode.responsiveLayout.width;var adaptiveWidth=that.adaptivityMode.adaptiveLayout.width;var gridWidth=1+that.$.scrollView.offsetWidth;var columnContainer=that.$.columnContainer;var columnNearContainer=that.$.columnNearContainer;var columnFarContainer=that.$.columnFarContainer;var nearWidth=0;var farWidth=0;var computedColumnsWidth=0;var isTreeColumnSet=false;for(var _i198=0;_i198<that.viewColumns.length;_i198++){var _column20=that.viewColumns[_i198];_column20._treeColumn=false;if(_column20.visible&&!_column20.autoGenerated&&!isTreeColumnSet){_column20._treeColumn=true;isTreeColumnSet=true;}_column20.overflowWidth=undefined;_column20.adaptiveVisible=false;}that._refreshColumnWidths();var autoGeneratedNearWidth=0;var autoGeneratedFarWidth=0;for(var _i199=0;_i199<that.viewColumns.length;_i199++){var _column21=that.viewColumns[_i199];if(!_column21.visible||_column21.adaptiveVisible){continue;}if(_column21.freeze){if(_column21.freeze===true||_column21.freeze==='near'){nearWidth+=_column21.computedWidth;if(_column21.autoGenerated){autoGeneratedNearWidth+=_column21.computedWidth;}}else if(_column21.freeze==='far'){farWidth+=_column21.computedWidth;if(_column21.autoGenerated){autoGeneratedFarWidth+=_column21.computedWidth;}}}computedColumnsWidth+=_column21.computedWidth;}columnContainer.style.width=computedColumnsWidth+'px';columnNearContainer.style.width=nearWidth+'px';columnFarContainer.style.width=farWidth+'px';columnFarContainer.classList.remove('jqx-hidden');columnNearContainer.classList.remove('jqx-hidden');if(farWidth===0){columnFarContainer.classList.add('jqx-hidden');}if(nearWidth===0){columnNearContainer.classList.add('jqx-hidden');}columnFarContainer.classList.remove('border-collapse');if(farWidth===autoGeneratedFarWidth){columnFarContainer.classList.add('border-collapse');}that._autoGeneratedColumnsNearWidth=autoGeneratedNearWidth;that._autoGeneratedColumnsFarWidth=autoGeneratedFarWidth;if(that.adaptivityMode.responsiveLayout.enabled||that.adaptivityMode.adaptiveLayout.enabled){var responsiveMode=gridWidth<=responsiveWidth&&that.adaptivityMode.responsiveLayout.enabled;var adaptiveMode=gridWidth<=adaptiveWidth&&that.adaptivityMode.adaptiveLayout.enabled;if(responsiveMode||adaptiveMode){for(var _i200=that.viewColumns.length-1;_i200>=0;_i200--){var _column22=that.viewColumns[_i200];if(!_column22.visible||_column22.freeze){continue;}if(computedColumnsWidth-_column22.computedWidth<=gridWidth){break;}computedColumnsWidth-=_column22.computedWidth;_column22.adaptiveVisible=true;}if(computedColumnsWidth>gridWidth){var overflowWidth=computedColumnsWidth-gridWidth;var columnIndex=-1;var calculateOverflowWidth=function calculateOverflowWidth(overflowWidth){for(var _i201=that.viewColumns.length-1;_i201>=0;_i201--){var _column23=that.viewColumns[_i201];if(!_column23.visible||_column23.freeze){continue;}if(_column23.adaptiveVisible){continue;}if(columnIndex===-1){columnIndex=_i201;}var width=_column23.computedWidth-overflowWidth;if(width<_column23.minWidth){var maxOverflowColumnWidth=_column23.computedWidth-_column23.minWidth;_column23.overflowWidth=maxOverflowColumnWidth;overflowWidth-=maxOverflowColumnWidth;}else{_column23.overflowWidth=overflowWidth;return 0;}}return overflowWidth;};overflowWidth=calculateOverflowWidth(overflowWidth);if(overflowWidth>0&&columnIndex!==-1){var _column24=that.viewColumns[columnIndex];computedColumnsWidth-=_column24.computedWidth;_column24.adaptiveVisible=true;overflowWidth=computedColumnsWidth-gridWidth;calculateOverflowWidth(overflowWidth);}that._refreshColumnWidths();computedColumnsWidth=gridWidth;}}}that._computedColumnsWidth=computedColumnsWidth;that._frozenColumnsNearWidth=nearWidth;that._frozenColumnsFarWidth=farWidth;}/**
    * Document select start handler.
    */},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that.isScrolling||that.editing.isEditing){return;}event.preventDefault();}/**
    * Set tabIndex.
    */},{key:'setFocusable',value:function setFocusable(focusable){var that=this;if(that.disabled||!focusable){that.removeAttribute('tabindex');return;}that.tabIndex=0;}/**
    * Set Loading Indicator Visibility
    */},{key:'_setLoadingIndicatorVisibility',value:function _setLoadingIndicatorVisibility(){var that=this;if(that.displayLoadingIndicator){that.$.loadingIndicatorContainer.classList.remove('jqx-visibility-hidden');return;}that.$.loadingIndicatorContainer.classList.add('jqx-visibility-hidden');}},{key:'_refreshElementsVisibility',value:function _refreshElementsVisibility(){var that=this;var setVisibility=function setVisibility(element,visible){visible?element.classList.remove('jqx-hidden'):element.classList.add('jqx-hidden');};setVisibility(that.$.placeholder,!that.rows||that.rows&&that.rows.length===0||that.columns.length===0);setVisibility(that.$.footer,that.footer.visible);setVisibility(that.$.header,that.header.visible);setVisibility(that.$.groupHeader,that.groupHeader.visible);setVisibility(that.$.columnHeader,that.columnHeader.visible&&!that._adaptiveLayout&&that.columns.length>0);setVisibility(that.$.headerCommandBar,that.editing.commandBar.visible&&that.editing.enabled&&that.editing.commandBar.position!=='far');setVisibility(that.$.footerCommandBar,that.editing.commandBar.visible&&that.editing.enabled&&that.editing.commandBar.position!=='near');that.htmlColumnLastChild.classList.add('jqx-visibility-hidden');if(that.pager&&that.pager.visible&&that.paging.enabled){switch(that.pager.position){case'near':setVisibility(that.$.headerPager,true);setVisibility(that.$.footerPager,false);break;case'far':setVisibility(that.$.headerPager,false);setVisibility(that.$.footerPager,true);break;case'both':setVisibility(that.$.headerPager,true);setVisibility(that.$.footerPager,true);break;}}else{setVisibility(that.$.footerPager,false);setVisibility(that.$.headerPager,false);}that._refreshRowHierarchy();}},{key:'_refreshRowHierarchy',value:function _refreshRowHierarchy(){var that=this;that.rowHierarchy=null;if(!that.grouping.enabled&&that.dataSource.groupBy&&that.dataSource.groupBy.length>0){return;}if(that.dataSource.boundHierarchy){var reservedNames=that.dataSource.reservedNames;var addRow=function addRow(data){var row=new JQX.Grid.Row({data:data,index:that.rows.length});that.rowById[row.id]=row;return row;};var refreshRowsVisibility=function refreshRowsVisibility(boundSource,hierarchy){for(var _i202=0;_i202<boundSource.length;_i202++){var _dataItem3=boundSource[_i202];var _row20=that.rowById[_dataItem3.$.id];if(!_row20){_row20=addRow(_dataItem3);}_row20.data=_dataItem3;_row20.leaf=_dataItem3[reservedNames.leaf]||false;_row20.level=_dataItem3[reservedNames.level];_row20.groupDataField=_dataItem3.groupDataField;_row20.label=_dataItem3.label;if(_row20.data){_row20.filtered=_row20.data.$.filtered!==undefined?_row20.data.$.filtered:true;}if(_dataItem3.summaryRow){_row20.summaryRow=true;}if(that._toggledRow===null||that._toggledRow&&that._toggledRow.id!==_row20.id){_row20.expandHeight=0;}if(_dataItem3.parent){_row20.parent=that.rowById[_dataItem3.parent.$.id];_row20.parentId=_dataItem3.parent.$.id;}else{_row20.parent=null;_row20.parentId=null;}var expanded=_row20.expanded;if(_row20.visible===true&&_row20.filtered!==false){if(expanded||_dataItem3[reservedNames.leaf]){hierarchy.push(_row20);if(_dataItem3.children&&_dataItem3.children.length>0){var children=refreshRowsVisibility(_dataItem3.children,new Array());if(children.length===0){_row20.leaf=true;}for(var t=0;t<children.length;t++){hierarchy.push(children[t]);}}}else{hierarchy.push(_row20);if(_dataItem3.children&&_dataItem3.children.length>0){var _children=refreshRowsVisibility(_dataItem3.children,new Array());if(_children.length===0){_row20.leaf=true;}}}}}return hierarchy;};var hierarchy=that.dataSource.boundHierarchy;if(that.paging.enabled){hierarchy=hierarchy.slice(that.paging.pageIndex*that.paging.pageSize,(that.paging.pageIndex+1)*that.paging.pageSize);}that.rowHierarchy=refreshRowsVisibility(hierarchy,new Array());if(that._rowElements.length<that.rowHierarchy.length&&!that._toggledRow){that._initializeRowElements();}if(that.grouping.summaryRow.visible&&!that.grouping.summaryRow.inline){var addHierarchySummaryRow=function addHierarchySummaryRow(level,hierarchy,parent,index){if(level!==0){if(hierarchy.length>0&&hierarchy[hierarchy.length-1]&&!hierarchy[hierarchy.length-1].summaryRow){var _dataItem4={label:' ',boundSource:[],groupDataField:parent.data.groupDataField,$:{},summaryRow:true,leaf:true,level:level,expandHeight:0,siblings:hierarchy};_dataItem4.$.id='SubRow'+index+'_'+parent.data.$.id;if(parent){_dataItem4.parent=parent.data;_dataItem4.parentId=parent.data.$.id;}_dataItem4.data=Object.assign(_dataItem4);hierarchy.push(_dataItem4);}}for(var _i203=0;_i203<hierarchy.length;_i203++){if(hierarchy[_i203]&&hierarchy[_i203].data&&hierarchy[_i203].data.children){addHierarchySummaryRow(level+1,hierarchy[_i203].data.children,hierarchy[_i203],_i203);}}};addHierarchySummaryRow(0,that.rowHierarchy,null,0);}}}},{key:'applyContent',value:function applyContent(){}},{key:'_refreshContentHeight',value:function _refreshContentHeight(){var that=this;var contentHeight=that._clientSize.height;var offsetHeight=that.offsetHeight;that.$.container.classList.add('jqx-hidden');var newOffsetHeight=that.offsetHeight;that.$.container.classList.remove('jqx-hidden');if(that.verticalScrollBarVisibility==='hidden'||offsetHeight!==newOffsetHeight||that._minHeight&&that._minHeight===offsetHeight){contentHeight=that._scrollHeight+that.$.columnHeader.offsetHeight+that.$.filterFooter.offsetHeight;that.$.content.style.height=contentHeight+'px';that._contentHeight=contentHeight;if(that._maxHeight<contentHeight){that._autoHeight=false;that.$.content.classList.remove('auto-height');that.$.content.style.height=that._maxHeight+'px';that._contentHeight=that._maxHeight;}else{that._autoHeight=true;that.$.content.classList.add('auto-height');}return;}if(that.header.visible){contentHeight-=that.$.header.offsetHeight;}if(that.groupHeader.visible){contentHeight-=that.$.groupHeader.offsetHeight;}if(that.footer.visible){contentHeight-=that.$.footer.offsetHeight;}if(that.pager.visible){contentHeight-=that.$.headerPager.offsetHeight;contentHeight-=that.$.footerPager.offsetHeight;}if(that.editing.enabled&&that.editing.commandBar.visible){contentHeight-=that.$.headerCommandBar.offsetHeight;contentHeight-=that.$.footerCommandBar.offsetHeight;}that.$.content.style.height=contentHeight+'px';that._contentHeight=contentHeight;}},{key:'appendChild',value:function appendChild(){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(this,args.concat(Array.prototype.slice.call(arguments)));}},{key:'removeChild',value:function removeChild(){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(this,args.concat(Array.prototype.slice.call(arguments)));}},{key:'_refreshLayout',/**
    * Sets the initial scroll bar sizes.
    */value:function _refreshLayout(){var that=this;var source=that.rows;if(that._layoutSuspended){return;}that._visibleRows=null;that.__viewRows=null;that.__clientSize=null;that.__scrollHeight=null;that.__scrollWidth=null;that.__parentCells=null;that.$.columnFarContainer.classList.remove('vscroll');that.$.scrollView.classList.remove('hscroll');that.$.scrollView.classList.remove('vscroll');that._refreshElementsVisibility();that._refreshColumnHeights();that._refreshContentHeight();if(!(source&&source.url)){if(!source||source===null||source.length===0||that.columns.length===0){that.$.placeholder.classList.remove('jqx-hidden');that.scrollWidth=0;that.scrollHeight=0;return;}}if(!that.__columnHeaderHeight){that.__columnHeaderHeight=that.$.columnHeader.offsetHeight;}if(!that.__filterFooterOffsetHeight){that.__filterFooterOffsetHeight=that.$.filterFooter.classList.contains('jqx-hidden')?0:that.$.filterFooter.offsetHeight;}var scrollViewOffsetHeight=that._contentHeight-that.__filterFooterOffsetHeight-that.__columnHeaderHeight;that.$.scrollView.style.height=scrollViewOffsetHeight+'px';that.htmlColumnLastChild.style.height=that.__columnHeaderHeight+'px';if(that.paging.spinner.enabled&&that.paging.enabled){if(!that.pageScroll){var pageScroll=document.createElement('jqx-scroll-bar');pageScroll.orientation='vertical';pageScroll.style.height='100%';pageScroll.style.width='100%';pageScroll.max=Math.ceil(that.dataSource.length/that.paging.pageSize);pageScroll.step=that.paging.spinner.step;pageScroll.largeStep=that.paging.spinner.step;pageScroll.setAttribute('spinner','');pageScroll.setAttribute('jqx-id','spinner');pageScroll.ownerElement=that;that.addPropertyBinding('[[paging_spinner_step]]','step',pageScroll,that.$.columnHeader);pageScroll.addEventListener('change',function(event){that.paging.pageIndex=event.detail.value;});that.pageScroll=pageScroll;}that.htmlColumnLastChild.appendChild(that.pageScroll);}else{that.htmlColumnLastChild.innerHTML='';}that._refreshScrollBars();}},{key:'_refreshScrollBars',value:function _refreshScrollBars(){var that=this;var vScrollBar=that._scrollView.vScrollBar;var hScrollBar=that._scrollView.hScrollBar;var scrollViewOffsetHeight=that._contentHeight-that.__filterFooterOffsetHeight-that.__columnHeaderHeight;var scrollViewOffsetWidth=that.$.scrollView.offsetWidth;var hScrollWidth=that._scrollWidth-scrollViewOffsetWidth-that._contentBorder.left;var vScrollHeight=that._scrollHeight-scrollViewOffsetHeight-that._contentBorder.top;var columnNearContainerComputedStyle=that._columnNearContainerComputedStyle?that._columnNearContainerComputedStyle:getComputedStyle(that.$.columnNearContainer);var columnFarContainerComputedStyle=that._columnFarContainerComputedStyle?that._columnFarContainerComputedStyle:getComputedStyle(that.$.columnFarContainer);var nearWidth=parseInt(that.$.columnNearContainer.style.width)+parseInt(columnNearContainerComputedStyle.borderRightWidth);var farWidth=parseInt(that.$.columnFarContainer.style.width)+parseInt(columnFarContainerComputedStyle.borderLeftWidth);that.__frozenNearWidth=nearWidth;that.__frozenFarWidth=farWidth;that._columnNearContainerComputedStyle=columnNearContainerComputedStyle;that._columnFarContainerComputedStyle=columnFarContainerComputedStyle;that._refreshHorizontalScrollBarVisibility(hScrollWidth);that._refreshVerticalScrollBarVisibility(vScrollHeight);vScrollBar.style.height=scrollViewOffsetHeight+'px';if(that.computedVerticalScrollBarVisibility){if(!that.__scrollBarSize){that.__scrollBarSize=vScrollBar.offsetWidth;}that.__scrollWidth+=that.__scrollBarSize;that._refreshHorizontalScrollBarVisibility(that._scrollWidth-scrollViewOffsetWidth-1);that.$.columnFarContainer.classList.add('vscroll');that.htmlColumnLastChild.classList.remove('jqx-visibility-hidden');}hScrollBar.style.width=scrollViewOffsetWidth+'px';hScrollBar.style.left='0px';if(that.computedVerticalScrollBarVisibility&&that.computedHorizontalScrollBarVisibility){hScrollBar.style.width=scrollViewOffsetWidth-vScrollBar.offsetWidth+'px';vScrollBar.style.height=scrollViewOffsetHeight-hScrollBar.offsetHeight+'px';}if(that.computedHorizontalScrollBarVisibility){that.$.scrollView.classList.add('hscroll');if(that._autoHeight){that.$.content.style.height='auto';that.$.scrollView.style.height='auto';that.$.scrollView.style.paddingBottom=hScrollBar.offsetHeight+'px';}else{that.$.scrollView.style.paddingBottom='';}}else{that.$.scrollView.classList.remove('hscroll');}if((that.__frozenNearHeight>0||that._frozenNearRows&&that._frozenNearRows.length>0)&&!that.appearance.showVerticalScrollBarOnFixedColumns){var rowNearContainerComputedStyle=getComputedStyle(that.$.rowNearContainer);var nearHeight=that.__frozenNearHeight+parseInt(rowNearContainerComputedStyle.borderBottomWidth);vScrollBar.style.height=parseInt(vScrollBar.style.height)-nearHeight+'px';vScrollBar.style.top=nearHeight+'px';vScrollBar.style.setProperty('--jqx-scroll-bar-near-size',nearHeight+'px');}else if(that.appearance.showVerticalScrollBarOnFixedColumns){vScrollBar.style.top='0px';}if((that.__frozenFarHeight>0||that._frozenFarRows&&that._frozenFarRows.length>0)&&!that.appearance.showVerticalScrollBarOnFixedColumns){var rowFarContainerComputedStyle=getComputedStyle(that.$.rowFarContainer);var farHeight=-2+that.__frozenFarHeight+parseInt(rowFarContainerComputedStyle.borderTopWidth);vScrollBar.style.height=parseInt(vScrollBar.style.height)-farHeight+'px';vScrollBar.style.setProperty('--jqx-scroll-bar-far-size',farHeight+'px');if(that.__frozenNearHeight===0){vScrollBar.style.top='0px';}}if((nearWidth>0||farWidth>0)&&!that.appearance.showHorizontalScrollBarOnFixedColumns){hScrollBar.style.width=parseInt(hScrollBar.style.width)-nearWidth-farWidth+'px';hScrollBar.style.left=nearWidth+'px';hScrollBar.style.setProperty('--jqx-scroll-bar-near-size',nearWidth+parseInt(columnNearContainerComputedStyle.borderRightWidth)+'px');hScrollBar.style.setProperty('--jqx-scroll-bar-far-size',farWidth+parseInt(columnNearContainerComputedStyle.borderLeftWidth)+'px');if(that.computedVerticalScrollBarVisibility){if(!that.__scrollBarSize){that.__scrollBarSize=vScrollBar.offsetWidth;}hScrollBar.style.setProperty('--jqx-scroll-bar-far-size',farWidth+that.__scrollBarSize+'px');}}vScrollBar.refresh();hScrollBar.refresh();}/**
    * Enable/Disable Horizontal Scroll bar.
    */},{key:'_refreshHorizontalScrollBarVisibility',value:function _refreshHorizontalScrollBarVisibility(scrollWidth){var that=this;that.scrollWidth=scrollWidth;if(!that.computedHorizontalScrollBarVisibility){that.scrollLeft=0;}}/**
    * Enable/Disable Vertical Scroll bar.
    */},{key:'_refreshVerticalScrollBarVisibility',value:function _refreshVerticalScrollBarVisibility(scrollHeight){var that=this;if(that._autoHeight){that.scrollTop=0;that.scrollHeight=0;return;}if(that.computedHorizontalScrollBarVisibility){scrollHeight+=that.$.horizontalScrollBar.offsetHeight;}that.scrollHeight=scrollHeight;if(that.paging.enabled&&that.paging.spinner.visible){that.$.verticalScrollBarVisibility.classList.remove('jqx-hidden');}if(!that.computedVerticalScrollBarVisibility){that.scrollTop=0;}}/**
    * Style change event.
    */},{key:'_styleChangedHandler',value:function _styleChangedHandler(event){var that=this;if(event.detail.styleProperties['overflow']||that.classList.contains('jqx-grid-resize-mode')){return;}if(event.detail.styleProperties['grid-template-columns']){that._templateColumns();that.refresh();return;}that._resetCachedLayout();that._refreshLayout();that._recycle();}},{key:'_resetCachedLayout',value:function _resetCachedLayout(){var that=this;that.__cellsCommandTemplate=null;that.__autoRowHeight=null;that.__measuredColumnHeight=null;that.__columnHeaderHeight=null;that.__filterFooterOffsetHeight=null;}/**
    * SwipeLeft event handler.
    **/},{key:'_swipeLeftHandler',value:function _swipeLeftHandler(){}/**
    * SwipeRight event handler.
    */},{key:'_swipeRightHandler',value:function _swipeRightHandler(){}},{key:'_getRowIndexByPosition',value:function _getRowIndexByPosition(position){var that=this;var getRowIndex=function getRowIndex(rows){var bottomPointer=0;var topPointer=rows.length-1;if(position<=0){return 0;}var lastNode=rows[rows.length-1];if(lastNode.top!==-1&&lastNode.top<=position){return rows.length-1;}var condition=true;while(condition){var midPointer=Math.floor((bottomPointer+topPointer)/2);var currentrow=rows[midPointer];if(that._isRowInPosition(currentrow,position)){return midPointer;}else if(currentrow.top<position){bottomPointer=midPointer+1;}else if(currentrow.top>position){topPointer=midPointer-1;}else{bottomPointer=midPointer+1;}}};var index=getRowIndex(that._recyclingRows);return index;}},{key:'_isRowInPosition',value:function _isRowInPosition(row,position){var topPixel=row.top;var bottomPixel=row.top+row.height;var pixelInRow=topPixel<=position&&bottomPixel>position;if(row.height===0){return false;}return pixelInRow;}},{key:'_renderColumnGroupHeaders',value:function _renderColumnGroupHeaders(){var that=this;for(var _i204=0;_i204<that.columnGroups.length;_i204++){var columnGroup=that.columnGroups[_i204];columnGroup.column.render();}}},{key:'_isLastVisibleColumn',value:function _isLastVisibleColumn(column){var that=this;for(var _i205=that.viewColumns.length-1;_i205>=0;_i205--){var currentColumn=that.viewColumns[_i205];if(!currentColumn.visible){continue;}if(currentColumn===column){return true;}return false;}return false;}},{key:'_recycle',value:function _recycle(recycleColumns,recycleRows){var that=this;if(that._layoutSuspended){return;}if(that._isUpdating){return;}if(that.editing.isEditing){that.endEdit();}if(that._inputOverlay){if(that._inputOverlay.parentNode){that._inputOverlay.parentNode.removeChild(that._inputOverlay);}that._inputOverlay=null;}if(that._selection.selectionRect){that._refreshCellSelectionRect();}var value=that._scrollView.scrollTop;var rowIndex=that._getRowIndexByPosition(value);var rows=that._recyclingRows;var row=rows[rowIndex];var rowTop=row?row.top:0;var columnLeft=undefined;var nearWidth=0;var j=0;var rowSpanOffset=0;var colSpanOffset=0;for(var _i206=0;_i206<that._cellsMerge.length;_i206++){var cell=that._cellsMerge[_i206];var startRowIndex=rows.indexOf(cell.row);if(rowIndex>startRowIndex&&rowIndex<=startRowIndex+cell.rowSpan){rowIndex=startRowIndex;row=cell.row;rowSpanOffset=Math.max(rowSpanOffset,rowTop-row.top);rowTop=row.top;that.$.rowContainer.style.top=that.__frozenNearHeight-value+rowTop+'px';}if(cell.colSpan>1){for(var _j8=0;_j8<that.viewColumns.length;_j8++){var viewColumn=that.viewColumns[_j8];var _column25=viewColumn.autoGenerated?viewColumn:that.columnByDataField[viewColumn.dataField];if(!_column25.visible||_column25.adaptiveVisible){continue;}if(_column25.left+_column25.computedWidth-that._scrollView.scrollLeft>=nearWidth&&_column25.left-_column25.computedWidth-that._scrollView.scrollLeft<that._clientSize.width){var cellColumn=that.columnByDataField[cell.column.dataField];colSpanOffset=Math.max(colSpanOffset,_column25.left-cellColumn.left+_column25.computedWidth);break;}}}}if(recycleColumns!==false||that._cellsMerge.length>0){for(var _i207=0;_i207<that._columnElements.length;_i207++){var columnElement=that._columnElements[_i207];if(!columnElement.parentNode){break;}columnElement.set('column',null,false);columnElement.classList.add('jqx-visibility-hidden');}for(var _i208=0;_i208<that.columnGroups.length;_i208++){var _column26=that.columnGroups[_i208];var header=_column26.element;header.style.left=_column26.left+'px';header.style.width=_column26.computedWidth+'px';}that._firstVisibleColumn=null;that._lastVisibleColumn=null;for(var _i209=0;_i209<that.viewColumns.length;_i209++){var _viewColumn2=that.viewColumns[_i209];//      let column = viewColumn.autoGenerated ? viewColumn : that.columnByDataField[viewColumn.dataField];
var _column27=_viewColumn2;if(_column27.visible||_column27.adaptiveVisible){if(!that._firstVisibleColumn){that._firstVisibleColumn=_column27;}that._lastVisibleColumn=_column27;}if(_column27.element){if(_column27===that._firstVisibleColumn){_column27.element.classList.add('jqx-grid-column-border-collapse');}else{_column27.element.classList.remove('jqx-grid-column-border-collapse');}}if(_column27.freeze){if(_column27.freeze===true||_column27.freeze==='near'){if(_column27.visible){nearWidth+=_column27.computedWidth;}}if(!_column27.visible||_column27.adaptiveVisible){_column27.element.classList.add('jqx-visibility-hidden');}else{_column27.element.classList.remove('jqx-visibility-hidden');_column27.render();}continue;}if(!_column27.visible||_column27.adaptiveVisible){continue;}if(that._adaptiveLayout>0){_column27.element.classList.add('jqx-visibility-hidden');}else{if(_column27.left+_column27.computedWidth-that._scrollView.scrollLeft>=nearWidth-colSpanOffset&&_column27.left-_column27.computedWidth-that._scrollView.scrollLeft<that._clientSize.width){var _columnElement2=that._columnElements[j++];_columnElement2.set('column',_column27,false);if(!_columnElement2.parentNode){that.$.columnContainer.appendChild(_columnElement2);}_column27.element=_columnElement2;_column27.render();if(columnLeft===undefined){columnLeft=_column27.left;}}}}}if(columnLeft===undefined){columnLeft=0;}that.$.columnContainer.style.left=-that._scrollView.scrollLeft+'px';that.$.rowContainer.style.top=that.__frozenNearHeight-value+rowTop+'px';if(recycleRows===false){return;}if(!that._rowElements){return;}if(rowIndex>=0){j=0;var offsetHeight=Math.max(that._clientSize.height,that._overflowOffset);for(var _i210=rowIndex;_i210<rows.length;_i210++){var _row21=rows[_i210];if(_row21.height===0||!_row21.visible||_row21.filtered===false||_row21.freeze){continue;}var rowHeight=_row21.height;if(_row21.expandHeight){offsetHeight+=that.offsetHeight+_row21.expandHeight;}if(rowTop+rowHeight>=value-rowSpanOffset&&rowTop<=value+offsetHeight||that._autoHeight){var _rowElement3=that._rowElements[j++];if(!_rowElement3){break;}_row21.element=_rowElement3;_row21.grid=that;_row21.render();}else{break;}rowTop+=rowHeight;}}that._renderFrozenRows();if(j<that._rowElements.length){for(var _i211=j;_i211<that._rowElements.length;_i211++){var scrollRow=that._rowElements[j++];scrollRow.classList.add('jqx-hidden');}}}},{key:'_renderFrozenRows',value:function _renderFrozenRows(){var that=this;var anyFrozenNearRowVisible=false;var anyFrozenFarRowVisible=false;if(that._frozenNearRows.length===0){that.$.rowNearContainer.classList.add('jqx-hidden');}else{that.$.rowNearContainer.classList.remove('jqx-hidden');}for(var _i212=0;_i212<that._frozenNearRows.length;_i212++){var _row22=that._frozenNearRows[_i212];if(_row22.visible&&_row22.filtered){anyFrozenNearRowVisible=true;_row22.element=that.$.rowNearContainer.children[_i212];_row22.render();}}if(!anyFrozenNearRowVisible){that.$.rowNearContainer.classList.add('jqx-hidden');}if(that._frozenFarRows.length===0){that.$.rowFarContainer.classList.add('jqx-hidden');}else{that.$.rowFarContainer.classList.remove('jqx-hidden');}for(var _i213=0;_i213<that._frozenFarRows.length;_i213++){var _row23=that._frozenFarRows[_i213];if(_row23.visible){anyFrozenFarRowVisible=true;}_row23.element=that.$.rowFarContainer.children[_i213];_row23.render();}if(!anyFrozenFarRowVisible){that.$.rowFarContainer.classList.add('jqx-hidden');}}},{key:'_recycleRotate',value:function _recycleRotate(columnHeaderCellContentElement,textElement,halign,valign,value){var textRectangle=textElement.getBoundingClientRect();var boundingRectangle=columnHeaderCellContentElement.getBoundingClientRect();var padding=4;var left=0;var top=0;if(boundingRectangle.width===0){columnHeaderCellContentElement.innerHTML=value;return false;}if(textRectangle.left>boundingRectangle.left){left=boundingRectangle.left-textRectangle.left;}if(textRectangle.top<boundingRectangle.top){top=boundingRectangle.top-textRectangle.top;}if(halign==='left'||halign===''){left=padding;}if(halign==='center'){left+=boundingRectangle.width/2-textRectangle.width/2;}if(halign==='right'){left+=boundingRectangle.width-textRectangle.width-padding;}if(valign==='top'||valign===''){top=padding;}if(valign==='center'||valign==='middle'){top+=boundingRectangle.height/2-textRectangle.height/2;}if(valign==='bottom'){top+=boundingRectangle.height-textRectangle.height-padding;}textElement.style.left=left+'px';textElement.style.top=top+'px';return true;}},{key:'_virtualDataRequest',value:function _virtualDataRequest(action){var that=this;var first=-1;var last=-1;if(!that._rowElements&&that.scrollMode!=='infinite'){return;}if(that.scrollMode==='virtual'){for(var _i214=0;_i214<that._rowElements.length;_i214++){var _rowElement4=that._rowElements[_i214];var _row24=_rowElement4.row;var visibleIndex=_i214===0?_row24.visibleIndex:first+_i214;if(_rowElement4.classList.contains('jqx-hidden')){continue;}if(first===-1){first=visibleIndex;}if(visibleIndex===-1){continue;}last=1+visibleIndex;}}else if(that.scrollMode==='infinite'){first=Infinity;last=Infinity;}else{first=0;last=that.dataSource.length;}if(that.paging.enabled){first=that.paging.pageIndex*that.paging.pageSize;last=first+that.paging.pageSize;}if(last!==Infinity){last=Math.min(last,that.dataSource.length);}that.displayLoadingIndicator=true;that._setLoadingIndicatorVisibility();var details={first:first,last:last,sorting:that.getSortedColumns(),filtering:that.getFilteredColumns(),grouping:[],row:that._toggledRow?that._toggledRow.data:null,action:action};var dataSourceLength=that.dataSource.length;that.dataSource.onVirtualDataSourceRequested(function(){that.displayLoadingIndicator=false;that._setLoadingIndicatorVisibility();that._toggledRow=null;if(that.dataSource.length!==dataSourceLength){if(that.paging.enabled){that.$.headerPager.querySelector('jqx-pager').pagesCount=Math.ceil(that.dataSource.length/that.paging.pageSize);that.$.footerPager.querySelector('jqx-pager').pagesCount=Math.ceil(that.dataSource.length/that.paging.pageSize);}that._initializeRows();that._initializeRowElements();that.refresh();}else if(that.dataSource.virtualDataSourceOnExpand){that.refresh();}that._recycle();},details);}/**
    * Vertical Scroll Bar handler
    */},{key:'_verticalScrollbarHandler',value:function _verticalScrollbarHandler(data){var that=this;that.closeMenu();that.isScrolling=true;if(that._scrollTimer){clearTimeout(that._scrollTimer);}that._scrollTimer=setTimeout(function(){that._recycle(false);that.isScrolling=false;if(data.max===data.value){that.$.fireEvent('scrollBottomReached');if(that.scrollMode==='infinite'){that._virtualDataRequest('scroll');return;}}if(that.scrollMode==='virtual'){that._virtualDataRequest('scroll');}if(data.min===data.value){that.$.fireEvent('scrollTopReached');}});}},{key:'_autoRowHeight',get:function get(){var that=this;if(that.__autoRowHeight){return that.__autoRowHeight;}var row=new JQX.Grid.Row({adaptiveHeight:0,index:0,grid:that});var measureRowElement=row.createElement();var measuredHeight=that.rowMinHeight;that.$.scrollView.appendChild(measureRowElement);var data={};for(var _i215=0;_i215<that.dataSource.dataFields.length;_i215++){var dataField=that.dataSource.dataFields[_i215];data[dataField.name]='ABCDEFHIJLMNOPQRSTUVWXYZ1234567910|';}row.data=data;row.render();measureRowElement.style.height='';measureRowElement.style.lineHeight='';measuredHeight=Math.max(measureRowElement.offsetHeight,measuredHeight);for(var _i216=0;_i216<measureRowElement.children.length;_i216++){measureRowElement.children[_i216].style.height='';}for(var _i217=0;_i217<measureRowElement.children[1].children.length;_i217++){measureRowElement.children[1].children[_i217].style.height='auto';var cell=row.getCell(that.columns[0].dataField);cell.render();measuredHeight=Math.max(measuredHeight,8+measureRowElement.children[1].children[_i217].offsetHeight);break;}that.$.scrollView.removeChild(measureRowElement);that.__autoRowHeight=measuredHeight;return measuredHeight;}},{key:'_scrollHeight',get:function get(){var that=this;var rows=that._recyclingRows;var scrollHeight=0;var measuredHeight=that._autoRowHeight;var nearHeight=0;var farHeight=0;if(that.__scrollHeight){return that.__scrollHeight;}if(rows.length===0||that.columns.length===0){return 0;}that.rows.canNotify=false;// calculate adaptive columns count;
var adaptiveColumnsCount=0;var normalColumnsCount=0;if(that._responsiveLayout){for(var _i218=0;_i218<that.viewColumns.length;_i218++){var _column28=that.viewColumns[_i218];if(_column28.autoGenerated){continue;}if(_column28.adaptiveVisible){adaptiveColumnsCount++;}else{normalColumnsCount++;}}}else if(that._adaptiveLayout>0){for(var _i219=0;_i219<that.viewColumns.length;_i219++){var _column29=that.viewColumns[_i219];if(_column29.autoGenerated){continue;}adaptiveColumnsCount++;}}//const columnAdaptiveWidth = that._adaptiveLayout === 2 ? '50%' : that._adaptiveLayout === 1 ? '100%' : 0;
var length=rows.length;for(var _i220=0;_i220<length;_i220++){var _row25=rows[_i220];if(!_row25.visible||_row25.filtered===false){_row25.height=0;_row25.cellHeight=0;_row25.top=scrollHeight;continue;}var recalculateRowHeight=!_row25.height||!_row25.cellHeight||_row25.showDetail;if(recalculateRowHeight&&!_row25.expandHeight){if(!_row25.detailHeight){_row25.detailHeight=200;}if(!that.rowHeight){_row25.height=measuredHeight;_row25.adaptiveHeight=0;if(_row25.label!==undefined&&!_row25.summaryRow){_row25.height=that.grouping.groupRowHeight;}if(_row25.computedHeight){_row25.height=_row25.computedHeight;}_row25.cellHeight=_row25.height;if(that._responsiveLayout){var rowsCount=Math.ceil(adaptiveColumnsCount/normalColumnsCount);if(undefined===_row25.label){_row25.adaptiveHeight=rowsCount*measuredHeight;}else{_row25.adaptiveHeight=_row25.height;}_row25.adaptiveHeight+=50;}if(that.rowDetail.enabled&&_row25.showDetail){_row25.height+=_row25.detailHeight;}}else if(that.rowHeight){if(typeof that.rowHeight==='number'){if(that.rowHeight<that.rowMinHeight){that.rowHeight=that.rowMinHeight;}_row25.height=that.rowHeight;if(_row25.computedHeight){_row25.height=_row25.computedHeight;}if(_row25.label!==undefined){_row25.height=that.grouping.groupRowHeight;}_row25.cellHeight=_row25.height;if(that.rowDetail.enabled&&_row25.showDetail){_row25.height+=_row25.detailHeight;}}else{that.rowHeight(_i220,_row25);if(!_row25.height){_row25.height=measuredHeight;}_row25.cellHeight=_row25.height;if(that.rowDetail.enabled&&_row25.showDetail){_row25.height+=_row25.detailHeight;}}}if(that._rowGap&&_i220<that.rows.length-1){_row25.height+=that._rowGap;}}if(_row25.freeze===true||_row25.freeze==='near'){nearHeight+=_row25.height;}else if(_row25.freeze==='far'){farHeight+=_row25.height;}if(_row25.freeze){_row25.top=scrollHeight;continue;}if(_row25.top!==scrollHeight){_row25.top=scrollHeight;}if(_row25.expandHeight){scrollHeight+=_row25.cellHeight;}else{scrollHeight+=_row25.height;}}that.__scrollHeight=scrollHeight;that.__frozenNearHeight=nearHeight;that.__frozenFarHeight=farHeight;that._scrollView.scrollHeight=scrollHeight-that.$.scrollView.offsetHeight+nearHeight+farHeight;scrollHeight=that.__scrollHeight+nearHeight+farHeight;if(that.grouping.enabled&&that.dataSource.groupBy.length>0&&that.grouping.groupIndent>0){scrollHeight+=parseInt(that.grouping.groupIndent/2);}that.__scrollHeight=scrollHeight;that.rows.canNotify=true;return scrollHeight;}},{key:'_clientSize',get:function get(){var that=this;if(that.__clientSize){return that.__clientSize;}var computedStyle=getComputedStyle(that.$.container);var paddingX=parseFloat(computedStyle.paddingLeft)+parseFloat(computedStyle.paddingRight);var paddingY=parseFloat(computedStyle.paddingTop)+parseFloat(computedStyle.paddingBottom);var borderX=parseFloat(computedStyle.borderLeftWidth)+parseFloat(computedStyle.borderRightWidth);var borderY=parseFloat(computedStyle.borderTopWidth)+parseFloat(computedStyle.borderBottomWidth);that.__clientSize={width:that.$.container.offsetWidth-paddingX-borderX,height:that.$.container.offsetHeight-paddingY-borderY};return that.__clientSize;}},{key:'_viewRows',get:function get(){var that=this;if(that.__viewRows){return that.__viewRows;}if(!that._nearRowsAdded){that._nearRowsAdded=[];that._farRowsAdded=[];}var viewRows=!that.rowHierarchy?that.rows.toArray():that.rowHierarchy;var rows=[].concat(that._frozenNearDefaultRows,that._nearRowsAdded,viewRows,that._farRowsAdded,that._frozenFarDefaultRows);that.__viewRows=rows;return rows;}},{key:'styleProperties',get:function get(){return['grid-template-columns'];}},{key:'_scrollWidth',get:function get(){var that=this;if(that.__scrollWidth){return that.__scrollWidth;}var width=0;for(var _i221=0;_i221<that.viewColumns.length;_i221++){var _column30=that.viewColumns[_i221];if(!_column30.visible||_column30.adaptiveVisible){continue;}width+=_column30.computedWidth;}if(that.adaptivityMode.responsiveLayout.enabled){var responsiveWidth=that.adaptivityMode.responsiveLayout.width;var scrollViewWidth=1+that.$.scrollView.offsetWidth;if(scrollViewWidth<=responsiveWidth){return 0;}}if(that.adaptivityMode.adaptiveLayout.enabled){var adaptiveWidth=that.adaptivityMode.adaptiveLayout.width;var _scrollViewWidth=1+that.$.scrollView.offsetWidth;if(_scrollViewWidth<=adaptiveWidth){return 0;}}width=parseInt(width);that.__scrollWidth=width;that._scrollView.scrollWidth=width-that._clientSize.width;return that.__scrollWidth;}},{key:'enableShadowDOM',get:function get(){return true;}},{key:'_contentBorder',get:function get(){var that=this;if(that.__contentBorder){return that.__contentBorder;}var contentComputedStyle=getComputedStyle(that.$.content);var contentBorderX=parseFloat(contentComputedStyle.borderLeftWidth)+parseFloat(contentComputedStyle.borderRightWidth);var contentBorderY=parseFloat(contentComputedStyle.borderTopWidth)+parseFloat(contentComputedStyle.borderBottomWidth);var border={left:contentBorderX,top:contentBorderY};that.__contentBorder=border;return border;}},{key:'_recyclingRows',get:function get(){var that=this;if(that.rowHierarchy){return that.rowHierarchy;}var rows=that.getVisibleRows();if(that.paging.enabled){rows=rows.slice(that.paging.pageIndex*that.paging.pageSize,(that.paging.pageIndex+1)*that.paging.pageSize);}return rows;}}],[{key:'properties',// Grid's properties.
/*

    */get:function get(){return{//When the adaptivityMode property is set to responsiveLayout, 
//the grid automatically hides columns one by one when the browser window is resized  
//When a grid has hidden columns, an ellipsis button is displayed for every row. 
//Clicking this button expands an adaptive detail row containing the hidden data.
//When the adaptivityMode property is set to adaptiveLayout, 
//the grid automatically switches its layout at certain point.
'adaptivityMode':{value:{'responsiveLayout':{value:{'enabled':{value:false,type:'boolean'},'autoShowHiddenCells':{value:true,type:'boolean'},'width':{value:900,type:'number'}},type:'object'},'adaptiveLayout':{value:{'enabled':{value:false,type:'boolean'},'width':{value:450,type:'number'}},type:'object'}},type:'object'},'allowColumnReorder':{value:false,type:'boolean'},'allowRowReorder':{value:false,type:'boolean'},// context menu option.
'allowColumnFixing':{value:false,type:'boolean'},'appearance':{value:{'alternationStart':{value:0,type:'int'},'alternationEnd':{value:0,type:'int'},'alternationCount':{value:0,type:'int'},'allowHover':{value:false,type:'boolean',defaultReflectToAttribute:true},'allowHeaderHover':{value:true,type:'boolean',defaultReflectToAttribute:true},'allowRowToggleAnimation':{value:false,type:'boolean'},'allowRowDetailToggleAnimation':{value:false,type:'boolean'},'allowSortAnimation':{value:false,type:'boolean'},'allowColumnLabelAnimation':{value:true,type:'boolean'},'allowCheckBoxesSelectionAnimation':{value:true,type:'boolean'},'allowColumnMenuAnimation':{value:true,type:'boolean'},'allowColumnSortButtonAnimation':{value:true,type:'boolean'},'allowColumnActionButtonAnimation':{value:true,type:'boolean'},'allowColumnFilterButtonAnimation':{value:true,type:'boolean'},'allowColumnStickyPosition':{value:false,type:'boolean'},'autoShowColumnSortButton':{value:true,type:'boolean'},'autoShowColumnActionButton':{value:true,type:'boolean'},'autoShowColumnFilterButton':{value:true,type:'boolean'},'sortAnimationDuration':{value:500,type:'number'},'showRowHeader':{value:false,type:'boolean'},'showRowNumber':{value:false,type:'boolean'},'showColumnHeaderLines':{value:true,type:'boolean',defaultReflectToAttribute:true},'showColumnLines':{value:true,type:'boolean',defaultReflectToAttribute:true},'showRowLines':{value:true,type:'boolean',defaultReflectToAttribute:true},'showFilterColumnBackground':{value:true,type:'boolean'},'showSortColumnBackground':{value:true,type:'boolean'},'showFrozenColumnBackground':{value:true,type:'boolean'},'showFrozenRowBackground':{value:true,type:'boolean'},'showColumnSortButton':{value:true,type:'boolean'},'showColumnFilterButton':{value:true,type:'boolean'},'showColumnDescriptionButton':{value:false,type:'boolean'},'showColumnIcon':{value:false,type:'boolean'},'showColumnCustomButton':{value:false,type:'boolean'},'showColumnActionButton':{value:true,type:'boolean'},'showTooltips':{value:false,type:'boolean'},'showResizeTooltips':{value:true,type:'boolean'},'showHorizontalScrollBarOnFixedColumns':{value:false,type:'boolean'},'showVerticalScrollBarOnFixedColumns':{value:false,type:'boolean'}},type:'object'},'dataExport':{value:{'header':{value:true,type:'boolean'},'filterBy':{value:null,type:'object'},'groupBy':{value:null,type:'object'},'style':{value:null,type:'object'},'fileName':{value:'jqxGrid',type:'string'},'pageOrientation':{value:'portrait',type:'string'},'expandChar':{value:'+',type:'string'},'collapseChar':{value:'-',type:'string'}},type:'object'},'clipboard':{value:{'enabled':{value:true,type:'boolean'},'autoFillMode':{value:'copy',allowedValues:['none','copy','fillSeries'],type:'string'},'onPasteValue':{value:null,type:'any'}},type:'object'},'columns':{value:[],type:'any',reflectToAttribute:false},'columnWidth':{value:null,type:'any',reflectToAttribute:false},'columnChooser':{value:{'allowSearch':{value:false,type:'boolean'},'visible':{value:false,type:'boolean'},'label':{value:'Column Chooser',type:'string'},'mode':{value:'dragAndDrop',type:'string',allowedValues:['select','dragAndDrop']},'placeholder':{value:'Drag a column here to hide it',type:'string'},'width':{value:250,type:'number'},'height':{value:200,type:'number'}},type:'object'},'columnMenu':{value:{'autoClose':{value:true,type:'boolean'},'dataSource':{value:{'columnMenuCustomizeType':{command:'customizeTypeCommand',enabled:true,visible:false,icon:'jqx-icon-customize',label:'{{messages}}'},'columnMenuItemRename':{command:'renameCommand',enabled:true,visible:false,icon:'jqx-icon-rename',label:'{{messages}}'},'columnMenuItemEditDescription':{command:'editDescriptionCommand',enabled:true,visible:false,icon:'jqx-icon-info-circled',label:'{{messages}}'},'columnMenuItemDuplicate':{command:'duplicateCommand',visible:false,enabled:true,icon:'jqx-icon-duplicate',label:'{{messages}}'},'columnMenuItemInsertLeft':{command:'insertLeftCommand',visible:false,enabled:true,icon:'jqx-icon-insert-left',label:'{{messages}}'},'columnMenuItemInsertRight':{command:'insertRightCommand',visible:false,enabled:true,icon:'jqx-icon-insert-right',label:'{{messages}}'},'columnMenuItemSortAsc':{command:'sortAscCommand',visible:'auto',enabled:true,iconAlt:'jqx-icon-sort-number-up',icon:'jqx-icon-sort-name-up',label:'{{messages}}'},'columnMenuItemSortDesc':{command:'sortDescCommand',visible:'auto',enabled:true,iconAlt:'jqx-icon-sort-number-down',icon:'jqx-icon-sort-name-down',label:'{{messages}}'},'columnMenuItemRemoveSort':{command:'removeSortCommand',visible:'auto',enabled:true,icon:'jqx-icon-cancel-circled',label:'{{messages}}'},'columnMenuItemFilter':{command:'addFilterCommand',visible:'auto',enabled:true,icon:'jqx-icon-add-filter',label:'{{messages}}'},'columnMenuItemRemoveFilter':{command:'removeFilterCommand',enabled:true,visible:'auto',icon:'jqx-icon-cancel-circled-outline',label:'{{messages}}'},'columnMenuItemGroupBy':{command:'groupByCommand',enabled:true,visible:'auto',icon:'jqx-icon-object-group',label:'{{messages}}'},'columnMenuItemRemoveGroupBy':{command:'removeGroupByCommand',visible:'auto',enabled:true,icon:'jqx-icon-object-ungroup',label:'{{messages}}'},'columnMenuItemHide':{command:'hideColumnCommand',enabled:true,visible:false,icon:'jqx-icon-hide',label:'{{messages}}'},'columnMenuItemDelete':{command:'deleteColumnCommand',enabled:true,visible:false,icon:'jqx-icon-delete',label:'{{messages}}'}},type:'object'},'visible':{value:false,type:'boolean'},'width':{value:250,type:'number'},'height':{value:null,type:'number?'}},type:'object'},'columnGroups':{value:[],type:'array',reflectToAttribute:false},'columnHeight':{value:null,type:'any',reflectToAttribute:false},'columnMinHeight':{value:30,type:'any',reflectToAttribute:false},'columnResizeMode':{value:'none',type:'string',allowedValues:['none','split','growAndShrink']},'dataSource':{value:null,type:'object',reflectToAttribute:false},'displayLoadingIndicator':{value:false,type:'boolean'},'grouping':{value:{'enabled':{value:false,type:'boolean',reflectToAttribute:false},'allowCollapse':{value:false,type:'boolean',reflectToAttribute:false},'autoExpandAll':{value:false,type:'boolean',reflectToAttribute:false},'expandMode':{value:'buttonClick',type:'string',allowedValues:['buttonClick','rowClick'],reflectToAttribute:false},'groupRowHeight':{value:50,type:'any',reflectToAttribute:false},'toggleButtonIndent':{value:16,type:'number',reflectToAttribute:false},'groupIndent':{value:16,type:'number',reflectToAttribute:false},'groupBar':{value:{'visible':{value:false,type:'boolean',reflectToAttribute:false},'allowColumnDragDrop':{value:false,type:'boolean',reflectToAttribute:false},'allowColumnCloseButtons':{value:true,type:'boolean',reflectToAttribute:false}},type:'object'},'groupPanel':{value:{'visible':{value:false,type:'boolean',reflectToAttribute:false}},type:'object'},'summaryRow':{value:{'inline':{value:true,type:'boolean'},'visible':{value:true,type:'boolean'}},type:'object'}},type:'object'},'messages':{extend:true,value:{'en':{'invalidColumnProperty':'{{elementType}}: Invalid property name "{{propertyName}}" set for Column: "{{type}}"','invalidRowProperty':'{{elementType}}: Invalid property name "{{propertyName}}" set for Row"','frozenColumns':'{{elementType}}: To Pin/Freeze a column group, all columns within it should be frozen.','frozenRows':'{{elementType}}: To Pin/Freeze a special cell, all rows within it should be frozen.','columnGroups':'{{elementType}}: Please, check the initialization of the jqxGrid\'s columns array. The columns in a column group are expected to be siblings in the columns array.','min':'Min: {{value}}','max':'Max: {{value}} ','sum':'Sum: {{value}} ','avg':'Avg: {{value}} ','count':'Count: {{value}} ','pagerFirstButton':'First','pagerLastButton':'Last','pagerPreviousButton':'Previous','pagerNextButton':'Next','pagerNavigateToLabel':'Go to:','pagerPageSizeLabel':'Show:','pagerNavigateToInputPlaceholder':'','pagerEllipsis':'...','pagerSummaryString':'of','pagerSummaryPrefix':'of','pagerSummarySuffix':'','columnMenuCustomizeType':'Customize type','columnMenuItemRename':'Rename','columnMenuItemEditDescription':'Edit description','columnMenuItemDuplicate':'Duplicate','columnMenuItemInsertLeft':'Insert left','columnMenuItemInsertRight':'Insert right','columnMenuItemSortAsc':'Sort {{mode}}','columnMenuItemSortDesc':'Sort {{mode}}',//Sort A → Z
'columnMenuItemRemoveSort':'Remove Sort','columnMenuItemFilter':'Filter','columnMenuItemRemoveFilter':'Remove Filter','columnMenuItemGroupBy':'Group by this column','columnMenuItemRemoveGroupBy':'Remove Group','columnMenuItemHide':'Hide','columnMenuItemDelete':'Delete','commandBarAddRow':'Add','commandBarDeleteRow':'Delete','commandBarBatchRevert':'Revert','commandBarBatchSave':'Save','commandColumnEdit':'Edit','commandColumnDelete':'Delete','commandColumnCancel':'Cancel','commandColumnUpdate':'Update','commandColumnMenu':'','addNewRow':'Click here to add a new row','dialogEditHeader':'Edit {{value}}','dialogAddButtonConfirm':'ADD','dialogAddButtonCancel':'CANCEL','dialogEditButtonConfirm':'OK','dialogEditButtonCancel':'CANCEL','dialogDeleteButtonConfirm':'DELETE','dialogDeleteButtonCancel':'CANCEL','dialogAddHeader':'Add Row','dialogDeleteHeader':'Delete Row','dialogDeleteContent':'Are you sure you want to delete this row?'}},type:'object'},'onCellValue':{value:null,type:'any',reflectToAttribute:false},'onBeforeInit':{value:null,type:'any',reflectToAttribute:false},'onInit':{value:null,type:'any',reflectToAttribute:false},'onKey':{value:null,type:'any',reflectToAttribute:false},'onRender':{value:null,type:'any',reflectToAttribute:false},'onRowInit':{value:null,type:'any',reflectToAttribute:false},'onRowDetailInit':{value:null,type:'any',reflectToAttribute:false},'onRowDetailUpdated':{value:null,type:'any',reflectToAttribute:false},'onRowInserted':{value:null,type:'any',reflectToAttribute:false},'onRowRemoved':{value:null,type:'any',reflectToAttribute:false},'onRowUpdated':{value:null,type:'any',reflectToAttribute:false},'onColumnInit':{value:null,type:'any',reflectToAttribute:false},'onColumnInserted':{value:null,type:'any',reflectToAttribute:false},'onColumnRemoved':{value:null,type:'any',reflectToAttribute:false},'onColumnUpdated':{value:null,type:'any',reflectToAttribute:false},'onCommand':{value:null,reflectToAttribute:false,type:'any'},'filtering':{value:{'enabled':{value:false,type:'boolean'},'filter':{value:[],type:'array',reflectToAttribute:false},'filterRow':{value:{'visible':{value:false,type:'boolean'},'menuVisible':{value:false,type:'boolean'},'applyMode':{value:'auto',type:'string',allowedValues:['auto','click']},'autoApplyModeDelay':{value:300,type:'number'}},type:'object'},'filterMenu':{value:{'visible':{value:true,type:'boolean'},'buttons':{value:['cancel','clear','filter'],type:'array'},'dataSource':{value:null,type:'any'},'width':{value:250,type:'number'},'height':{value:200,type:'number'}},type:'object'},'filterBuilder':{value:{'visible':{value:false,type:'boolean'},'height':{value:null,type:'number?'}},type:'object'}},type:'object'},'editing':{value:{'active':{value:false,readonly:true,type:'boolean'},'enabled':{value:false,type:'boolean'},'batch':{value:false,type:'any'},'action':{value:'click',type:'string',allowedValues:['none','click','doubleClick']},'commandKeys':{value:{'commandKeyEdit':{value:{command:'commandKeyEditCommand',key:'F2'},type:'object'},'commandKeyCancel':{value:{command:'commandKeyCancelCommand',key:'Escape'},type:'object'},'commandKeyUpdate':{value:{command:'commandKeyUpdateCommand',key:'Enter | Tab'},type:'object'}},type:'object'},'commandBar':{value:{'visible':{value:false,type:'boolean'},'position':{value:'near',allowedValues:['near','far','both'],type:'string'},'displayMode':{value:'labelAndIcon',allowedValues:['label','icon','labelAndIcon'],type:'string'},'dataSource':{value:{'commandBarAddRow':{value:{'command':{value:'commandBarAddRowCommand',type:'any'},'icon':{value:'jqx-icon-plus',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:false,type:'any'}},type:'object'},'commandBarDeleteRow':{value:{'command':{value:'commandBarDeleteRowCommand',type:'any'},'icon':{value:'jqx-icon-delete',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:false,type:'any'}},type:'object'},'commandBarBatchSave':{value:{'command':{value:'commandBarBatchSaveCommand',type:'any'},'icon':{value:'jqx-icon-ok-squared',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:true,type:'any'}},type:'object'},'commandBarBatchRevert':{value:{'command':{value:'commandBarBatchRevertCommand',type:'any'},'icon':{value:'jqx-icon-ccw',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:true,type:'any'}},type:'object'}},type:'object'}},type:'object'},'commandColumn':{value:{'visible':{value:false,type:'boolean'},'inline':{value:false,type:'boolean'},'position':{value:'far',allowedValues:['near','far'],type:'string'},'displayMode':{value:'icon',allowedValues:['label','icon','labelAndIcon'],type:'string'},'dataSource':{value:{'commandColumnMenu':{value:{'command':{value:'commandColumnMenuCommand',type:'any'},'icon':{value:'jqx-icon-menu',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:false,type:'any'}},type:'object'},'commandColumnEdit':{value:{'command':{value:'commandColumnEditCommand',type:'any'},'icon':{value:'jqx-icon-rename',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:'auto',type:'any'}},type:'object'},'commandColumnDelete':{value:{'command':{value:'commandColumnDeleteCommand',type:'any'},'icon':{value:'jqx-icon-delete',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:true,type:'any'}},type:'object'},'commandColumnUpdate':{value:{'command':{value:'commandColumnUpdateCommand',type:'any'},'icon':{value:'jqx-icon-ok-squared',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:'auto',type:'any'}},type:'object'},'commandColumnCancel':{value:{'command':{value:'commandColumnCancelCommand',type:'any'},'icon':{value:'jqx-icon-cancel-circled',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:'auto',type:'any'}},type:'object'},'commandColumnRowMenu':{value:{'command':{value:'commandColumnRowMenuCommand',type:'any',reflectToAttribute:false},'icon':{value:'jqx-icon-ellipsis-vert',type:'string'},'label':{value:'{{messages}}',type:'string'},'visible':{value:false,type:'any'}},type:'object'},'commandColumnCustom':{value:{'command':{value:'',type:'any'},'icon':{value:'jqx-icon-ellipsis-vert',type:'string'},'label':{value:'',type:'string'},'visible':{value:false,type:'any'}},type:'object'}},type:'object'},'width':{value:null,type:'number?'}},reflectToAttribute:false,type:'object'},'mode':{value:'cell',allowedValues:['cell','row'],type:'string'},'addNewRow':{value:{'position':{value:'both',allowedValues:['near','far','both'],type:'string'},'visible':{value:false,type:'boolean'},'autoCreate':{value:false,type:'boolean'},'autoSave':{value:true,type:'boolean'},'label':{value:'{{message}}',type:'string'},'displayMode':{value:'row',allowedValues:['row','button'],type:'string'}},type:'object'},'dialog':{value:{'header':{value:'{{message}}',type:'string'},'height':{value:'auto',type:'any'},'width':{value:'auto',type:'any'},'left':{value:'center',type:'any'},'top':{value:'center',type:'any'},'enabled':{value:false,type:'boolean'},'visible':{value:false,type:'boolean'}},type:'object'},'addDialog':{value:{'header':{value:'{{message}}',type:'string'},'height':{value:'auto',type:'any'},'width':{value:'auto',type:'any'},'left':{value:'center',type:'any'},'top':{value:'center',type:'any'},'enabled':{value:false,type:'boolean'},'visible':{value:false,type:'boolean'}},type:'object'},'deleteDialog':{value:{'header':{value:'{{message}}',type:'string'},'height':{value:'auto',type:'any'},'width':{value:'auto',type:'any'},'left':{value:'center',type:'any'},'top':{value:'center',type:'any'},'enabled':{value:false,type:'boolean'},'visible':{value:false,type:'boolean'}},type:'object'}},type:'object'},'loadingIndicatorPlaceholder':{value:'Loading...',type:'string'},'loadingIndicatorPosition':{value:'center',allowedValues:['bottom','center','top'],type:'string'},'paging':{value:{'enabled':{value:false,type:'boolean'},'spinner':{value:{'enabled':{value:false,type:'boolean'},'step':{value:1,type:'number'}},type:'object'},'pageSize':{value:10,type:'int',validator:'pageSizeValidator'},'pageIndex':{value:0,type:'int',validator:'pageIndexValidator'}},type:'object'},'pager':{value:{'autoEllipsis':{value:'both',allowedValues:['none','before','after','both'],type:'string'},'position':{value:'far',allowedValues:['near','far','both'],type:'string'},'template':{value:'',type:'string'},'pageSizeSelector':{value:{'visible':{value:false,type:'boolean'},'dataSource':{value:[10,20,50],type:'object'},'position':{value:'far',allowedValues:['near','far'],type:'string'}},type:'object'},'summary':{value:{'position':{value:'far',allowedValues:['near','far'],type:'string'},'visible':{value:false,type:'boolean'}},type:'object'},'navigationButtons':{value:{'position':{value:'both',allowedValues:['near','far','both'],type:'string'},'prevNextButtons':{value:{'visible':{value:true,type:'boolean'}},type:'object'},'firstLastButtons':{value:{'visible':{value:true,type:'boolean'}},type:'object'},'labels':{value:{'visible':{value:false,type:'boolean'}},type:'object'}},type:'object'},'navigationInput':{value:{'position':{value:'far',allowedValues:['near','far'],type:'string'},'visible':{value:false,type:'boolean'}},type:'object'},'pageIndexSelectors':{value:{'visible':{value:true,type:'boolean'},'dataSource':{value:10,type:'any'}},type:'object'},'visible':{value:false,type:'boolean'}},type:'object',reflectToAttribute:false},'placeholder':{value:'No Rows',type:'string'},'rowDetail':{value:{'enabled':{value:false,type:'boolean'},'height':{value:200,type:'number'},'position':{value:'near',allowedValues:['near','far'],type:'string'},'template':{value:'',type:'any',reflectToAttribute:false},'visible':{value:true,type:'boolean'},'dialog':{value:{'header':{value:'{{message}}',type:'string'},'height':{value:'auto',type:'any'},'width':{value:'auto',type:'any'},'left':{value:'center',type:'any'},'top':{value:'center',type:'any'},'enabled':{value:false,type:'boolean'},'visible':{value:false,type:'boolean'}},type:'object'}},type:'object'},'rowMinHeight':{value:30,type:'number'},'rowHeight':{value:null,type:'any',reflectToAttribute:false},'rowResizeMode':{value:'none',type:'string',allowedValues:['none','split','growAndShrink']},'summaryRow':{value:{'position':{value:'far',allowedValues:['near','far'],type:'string'},'visible':{value:false,type:'boolean'},'template':{value:'',type:'string'}},type:'object'},'scrollMode':{value:'physical',allowedValues:['physical','virtual','infinite','deferred'],type:'string'},'columnHeader':{value:{'visible':{value:true,type:'boolean'}},type:'object'},'groupHeader':{value:{'visible':{value:false,type:'boolean'},'template':{value:'',type:'string'}},type:'object'},'header':{value:{'visible':{value:false,type:'boolean'},'template':{value:'',type:'string'}},type:'object'},'footer':{value:{'visible':{value:false,type:'boolean'},'template':{value:'',type:'string'}},type:'object'},'selection':{value:{'enabled':{value:false,type:'boolean'},'allowRowHeaderSelection':{value:false,type:'boolean'},'allowColumnHeaderSelection':{value:false,type:'boolean'},'allowRowSelection':{value:true,type:'boolean'},'allowCellSelection':{value:false,type:'boolean'},'allowDragSelection':{value:true,type:'boolean'},'allowDragSelectionAutoScroll':{value:true,type:'boolean'},'allowCellDragSelectionHandle':{value:true,type:'boolean'},'allowCellDragDropSelectionHandle':{value:true,type:'boolean'},'allowCellDragSelectionAutoFill':{value:true,type:'boolean'},'selectAllMode':{value:'page',allowedValues:['none','page','all'],type:'string'},'mode':{value:'many',type:'string',allowedValues:['one','many','extended']},'action':{value:'click',type:'string',allowedValues:['none','click','doubleClick']},'checkBoxes':{value:{'enabled':{value:false,type:'boolean'},'autoShow':{value:false,type:'boolean'},'action':{value:'click',type:'string',allowedValues:['none','click','doubleClick']},'selectAllMode':{value:'page',allowedValues:['none','page','all'],type:'string'},'position':{value:'near',allowedValues:['near','far'],type:'string'}},type:'object'},'selected':{value:'',type:'string'}},type:'object'},'sorting':{value:{'enabled':{value:false,type:'boolean'},'sort':{value:[],type:'array'},'mode':{value:'one',allowedValues:['one','many'],type:'string'},'sortToggleThreeStates':{value:true,type:'boolean'}},type:'object'}};}},{key:'requires',get:function get(){return{/*
                'JQX.Button': 'jqxbutton.js',
                'JQX.ScrollBar': 'jqxscrollbar.js',
                'JQX.Menu': 'jqxmenu.js',
                'JQX.Calendar': 'jqxcalendar.js',
                'JQX.TimePicker': 'jqxtimepicker.js',
                'JQX.DateTimePicker': 'jqxdatetimepicker.js',
                'JQX.Tree': 'jqxtree.js',
                'JQX.Utilities.Complex': 'jqxcomplex.js',
                'JQX.Utilities.BigNumber': 'jqxmath.js',
                'JQX.Utilities.NumericProcessor': 'jqxnumeric.js',    
                'JQX.NumericTextBox': 'jqxnumerictextbox.js',    
                'JQX.Pager': 'jqxpager.js',    
                'JQX.ListBox': 'jqxlistbox.js',    
                'JQX.DropDownList': 'jqxdropdownlist.js',    
                'JQX.ComboBox': 'jqxcombobox.js',    
                'JQX.Utilities.DateTime': 'jqxdate.js',    
                'JQX.FilterBuilder': 'jqxfilterbuilder.js',              
                'JQX.FilterPanel': 'jqxfilterpanel.js'      */};}},{key:'styleUrls',get:function get(){return['jqx.grid.css'];}},{key:'listeners',get:function get(){return{'focus':'_focusHandler','blur':'_blurHandler','wheel':'_mouseWheelHandler','document.up':'_upHandler','document.move':'_moveHandler','document.down':'_downHandler','document.scroll':'_scrollHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','resize':'_resizeHandler','columnHeader.down':'_columnDownHandler','columnHeader.move':'_columnMoveHandler','columnHeader.mouseleave':'_columnMouseLeaveHandler','rowNearContainer.down':'_rowDownHandler','rowContainer.down':'_rowDownHandler','rowFarContainer.down':'_rowDownHandler','selectstart':'_selectStartHandler','styleChanged':'_styleChangedHandler','swipeleft':'_swipeLeftHandler','swiperight':'_swipeRightHandler'};}}]);return Grid;}(JQX.ScrollViewer));(function(){'use strict';JQX.Grid.Extend=function(module){var methodNames=Object.getOwnPropertyNames(module.prototype);for(var index in methodNames){var methodName=methodNames[index];if(methodName==='constructor'){continue;}JQX.Grid.prototype[methodName]=module.prototype[methodName];}};JQX.Grid.Extend(JQX.Utilities.Grid.Pager);JQX.Grid.Extend(JQX.Utilities.Grid.Filter);JQX.Grid.Extend(JQX.Utilities.Grid.Sort);JQX.Grid.Extend(JQX.Utilities.Grid.Menu);JQX.Grid.Extend(JQX.Utilities.Grid.Select);JQX.Grid.Extend(JQX.Utilities.Grid.Edit);JQX.Grid.Extend(JQX.Utilities.Grid.Group);JQX.Grid.Extend(JQX.Utilities.Grid.Tree);JQX.Grid.Extend(JQX.Utilities.Grid.Export);JQX.Grid.Cell=JQX.Utilities.Grid.Cell;JQX.Grid.Row=JQX.Utilities.Grid.Row;JQX.Grid.Column=JQX.Utilities.Grid.Column;})();/**
 * Menu Item custom element.
 */JQX('jqx-menu-item',function(_JQX$BaseElement4){babelHelpers.inherits(MenuItem,_JQX$BaseElement4);function MenuItem(){babelHelpers.classCallCheck(this,MenuItem);return babelHelpers.possibleConstructorReturn(this,(MenuItem.__proto__||Object.getPrototypeOf(MenuItem)).apply(this,arguments));}babelHelpers.createClass(MenuItem,[{key:'template',/**
     * Menu Items Group's HTML template.
     */value:function template(){return'';}},{key:'ready',value:function ready(){babelHelpers.get(MenuItem.prototype.__proto__||Object.getPrototypeOf(MenuItem.prototype),'ready',this).call(this);this.$.addClass('jqx-unselectable');}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;if(propertyName!=='disabled'||newValue===false||!that.checked){return;}var parentMenu=that.menu;if(!parentMenu){return;}babelHelpers.get(MenuItem.prototype.__proto__||Object.getPrototypeOf(MenuItem.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);that.checked=false;var parentItem=that.parentItem,checkMode=parentItem?parentItem.checkMode:parentMenu.checkMode;if(checkMode==='radioButton'){parentMenu._validateRadioButtonSelection(parentItem,that.level,[]);}}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',// Menu Item's properties.
get:function get(){return{'checked':{value:false,type:'boolean'},'label':{value:'',type:'any'},'level':{value:null,type:'number?'},'separator':{value:false,type:'boolean'},'shortcut':{value:'',type:'string'},'value':{value:null,type:'any'}};}}]);return MenuItem;}(JQX.BaseElement));/**
 * Menu Items Group custom element.
 */JQX('jqx-menu-items-group',function(_JQX$BaseElement5){babelHelpers.inherits(MenuItemsGroup,_JQX$BaseElement5);function MenuItemsGroup(){babelHelpers.classCallCheck(this,MenuItemsGroup);return babelHelpers.possibleConstructorReturn(this,(MenuItemsGroup.__proto__||Object.getPrototypeOf(MenuItemsGroup)).apply(this,arguments));}babelHelpers.createClass(MenuItemsGroup,[{key:'template',/**
     * Menu Items Group's HTML template.
     */value:function template(){return'';}},{key:'ready',value:function ready(){babelHelpers.get(MenuItemsGroup.prototype.__proto__||Object.getPrototypeOf(MenuItemsGroup.prototype),'ready',this).call(this);this.$.addClass('jqx-unselectable');}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){if(['checkable','checkMode','disabled'].indexOf(propertyName)===-1){return;}var that=this,parentMenu=that.menu;if(!parentMenu){return;}babelHelpers.get(MenuItemsGroup.prototype.__proto__||Object.getPrototypeOf(MenuItemsGroup.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);switch(propertyName){case'checkable':if(newValue){that.itemContainer.setAttribute('checkable','');}else{that.itemContainer.removeAttribute('checkable');}if(parentMenu._isContainerOpened(that.container.level,that.container)&&parentMenu.mode!=='tree'&&!parentMenu._minimized){parentMenu._closeSubContainers(that.level+2);}break;case'checkMode':that.itemContainer.setAttribute('check-mode',newValue);parentMenu._changeToRadioButtonMode(newValue,that.itemContainer,that);break;case'disabled':{if(JQX.ListMenu&&parentMenu instanceof JQX.ListMenu){if(parentMenu._view){while(that.contains(parentMenu._view)){parentMenu._backButtonClickHandler();}}}else if(parentMenu._isContainerOpened(that.container.level,that.container)){parentMenu._closeSubContainers(that.level+1,that.container);}if(!that.checked){return;}that.checked=false;var parentItem=that.parentItem,checkMode=parentItem?parentItem.checkMode:parentMenu.checkMode;if(checkMode==='radioButton'){parentMenu._validateRadioButtonSelection(parentItem,that.level,[]);}break;}}}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',// Menu Items Group's properties.
get:function get(){return{'checkable':{value:false,type:'boolean'},'checked':{value:false,type:'boolean'},'checkMode':{value:'checkbox',allowedValues:['checkbox','radioButton'],type:'string'},'dropDownHeight':{value:null,type:'number?'},'expanded':{value:false,type:'boolean'},'label':{value:'',type:'any'},'level':{value:null,type:'number?'},'separator':{value:false,type:'boolean'},'value':{value:null,type:'any'}};}}]);return MenuItemsGroup;}(JQX.BaseElement));/**
 * Menu custom element.
 */JQX('jqx-menu',function(_JQX$BaseElement6){babelHelpers.inherits(Menu,_JQX$BaseElement6);function Menu(){babelHelpers.classCallCheck(this,Menu);return babelHelpers.possibleConstructorReturn(this,(Menu.__proto__||Object.getPrototypeOf(Menu)).apply(this,arguments));}babelHelpers.createClass(Menu,[{key:'template',/**
     * Menu's HTML template.
     */value:function template(){return'<div id="container">\n                    <div id="minimizedHeader" class ="jqx-header jqx-minimized-header jqx-hidden">\n                        <div id="hamburgerIcon" class ="jqx-hamburger-icon jqx-hidden">\n                            <div id="hamburgerIconLineTop" class ="jqx-hamburger-icon-line jqx-hamburger-icon-line-top"></div>\n                            <div id="hamburgerIconLineCenter" class ="jqx-hamburger-icon-line jqx-hamburger-icon-line-center"></div>\n                            <div id="hamburgerIconLineBottom" class ="jqx-hamburger-icon-line jqx-hamburger-icon-line-bottom"></div>\n                            <div id="customIconContainer" class ="jqx-hamburger-icon-custom-container jqx-hidden"></div>\n                        </div>\n                    </div>\n                    <jqx-repeat-button id="scrollButtonNear" class="jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-near jqx-hidden" animation="[[animation]]" unfocusable>\n                        <div id="arrowNear" class="jqx-arrow"></div>\n                    </jqx-repeat-button>\n                    <div id="mainContainer" class="jqx-menu-main-container">\n                        <content></content>\n                    </div>\n                    <jqx-repeat-button id="scrollButtonFar" class="jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-far jqx-hidden" animation="[[animation]]" unfocusable>\n                        <div id="arrowFar" class="jqx-arrow"></div>\n                    </jqx-repeat-button>\n                </div>';}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(Menu.prototype.__proto__||Object.getPrototypeOf(Menu.prototype),'attached',this).call(this);if(that._element==='tree'||JQX.ListMenu&&that instanceof JQX.ListMenu){return;}if(that.isCompleted&&that.dropDownAppendTo!==null){if(that._minimized){that._dropDownParent.appendChild(that.$.mainContainer);}else{for(var _i222=0;_i222<that._containersInBody.length;_i222++){that._dropDownParent.appendChild(that._containersInBody[_i222]);}}if(that.mode==='dropDown'){if(that._dropDownParent===that.parentElement){if(that._dynamicallyReparented){delete that._dynamicallyReparented;}else{that._positionRelativeTo=null;}}else{that._positionRelativeTo=that.parentElement;that._dynamicallyReparented=true;setTimeout(function(){that._dropDownParent.appendChild(that);},0);}}}}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(Menu.prototype.__proto__||Object.getPrototypeOf(Menu.prototype),'detached',this).call(this);if(that._element==='tree'||JQX.ListMenu&&that instanceof JQX.ListMenu){return;}that._close();if(that.dropDownAppendTo!==null){if(that._minimized){that._dropDownParent.removeChild(that.$.mainContainer);}else{that._removeContainersInBody();}}}/**
     * Called when the element is ready. Used for one-time configuration of the Menu.
     */},{key:'ready',value:function ready(){babelHelpers.get(Menu.prototype.__proto__||Object.getPrototypeOf(Menu.prototype),'ready',this).call(this);var that=this;that._element='menu';that._edgeMacFF=JQX.Utilities.Core.Browser.Edge||JQX.Utilities.Core.Browser.Firefox&&navigator.platform.toLowerCase().indexOf('mac')!==-1;that._containers=[];that._containersInBody=[];that._openedContainers=[];that._containersFixedHeight=[];that._menuItemsGroupsToExpand=[];that._additionalScrollButtons=[];that._createElement();}/**
     * Adds an item.
     *
     * @param {HTMLElement} item A jqx-menu-item to add to the Menu.
     * @param {HTMLElement/String} parent Optional The jqx-menu-items-group (or its id or numeric path) to add the item to.
     */},{key:'addItem',value:function addItem(item,parent){var that=this;if(!(item instanceof JQX.MenuItem||item instanceof JQX.MenuItemsGroup)){return;}var level=void 0,container=void 0;if(parent===undefined){parent=that.$.mainContainer;level=1;container=parent;}else{parent=that.getItem(parent);if(parent instanceof JQX.MenuItemsGroup===false){return;}level=parent.level+1;container=parent.itemContainer;}that._createItemHTMLStructure(item,level,parent,container.childElementCount,0);if(item instanceof JQX.MenuItemsGroup){that._processHTML(item,level+1);that._checkContainersLength();}container.appendChild(item);that._checkOverflowAddRemove(item.level,container);if(item instanceof JQX.MenuItemsGroup&&(that.mode==='tree'||that._minimized)){var arrows=item.getElementsByClassName('jqx-menu-items-group-arrow');for(var _i223=0;_i223<arrows.length;_i223++){arrows[_i223].className='jqx-menu-items-group-arrow down jqx-arrow-down';}that._expandItemsByDefault();}}/**
     * Checks an item.
     *
     * @param {HTMLElement/String} item jqx-menu-item/jqx-menu-items-group (or its id or numeric path).
     */},{key:'checkItem',value:function checkItem(item){var that=this;item=that.getItem(item);if(item===undefined||item.checked||item.disabled||item.templateApplied){return;}that._toggleItem(item);}/**
     * Clears all Menu items.
     */},{key:'clear',value:function clear(){var that=this;that.$.mainContainer.innerHTML='';that._removeContainersInBody();that._menuItems={};that._containers=[];that._containersInBody=[];that._openedContainers=[];that._containersFixedHeight=[];that._menuItemsGroupsToExpand=[];that._additionalScrollButtons=[];}/**
     * Closes the Menu when "mode" is 'dropDown'.
     */},{key:'close',value:function close(){var that=this;if(that.mode!=='dropDown'||that.opened===false&&that.$.hasClass('jqx-visibility-hidden')){return;}var closingEvent=that.$.fireEvent('closing',arguments[0]||{trigger:'programmatic'});if(!closingEvent.defaultPrevented){that.opened=false;that.$.addClass('jqx-visibility-hidden');that._close();that.$.fireEvent('close');}else{that.opened=true;}}/**
     * Collapses an item.
     *
     * @param {HTMLElement/String} item Optional jqx-menu-item/jqx-menu-items-group (or its id or numeric path).
     * @param {Boolean} animation Optional If set to false, disables collapse animation even if animation is enabled for the element.
     */},{key:'collapseItem',value:function collapseItem(item,animation){var that=this,animationType=that.animation,restoreAnimation=animation===false&&that.hasAnimation;if(item!==undefined){item=that.getItem(item);if(item===undefined||item instanceof JQX.MenuItem){return;}}else{// collapse all
if(restoreAnimation){that.animation='none';}that._close();if(restoreAnimation){setTimeout(function(){that.animation=animationType;},0);}return;}var level=item.level;if(that._openedContainers[level+1]&&that._isContainerOpened(level+1,item.container)){var mode=that.mode;if(restoreAnimation){that.animation='none';}that._closeSubContainers(level+1,item.container,undefined,arguments[2]!==false);if(level===1||mode==='tree'){that._checkOverflow(that.$.mainContainer,mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}if(restoreAnimation){that.animation=animationType;}}}/**
     * Expands an item.
     *
     * @param {HTMLElement/String} item jqx-menu-item/jqx-menu-items-group (or its id or numeric path).
     * @param {Boolean} animation Optional If set to false, disables expand animation even if animation is enabled for the element.
     */},{key:'expandItem',value:function expandItem(item,animation){var that=this;item=that.getItem(item);if(item===undefined||item instanceof JQX.MenuItemsGroup&&that._isContainerOpened(item.level+1,item.container)&&that._isBranchExpanded(item)){return;}var stack=[item],animationType=that.animation,restoreAnimation=animation===false&&that.hasAnimation;var stackItem=item.parentItem;if(restoreAnimation){that.animation='none';}that._discardKeyboardHover();while(stackItem){stack.unshift(stackItem);stackItem=stackItem.parentItem;}for(var _i224=0;_i224<stack.length;_i224++){var currentStackItem=stack[_i224];if(_i224===stack.length-1&&currentStackItem instanceof JQX.MenuItem){if(!(currentStackItem.disabled||currentStackItem.templateApplied)){that._hoverViaKeyboard(currentStackItem);}break;}if(!that._isContainerOpened(currentStackItem.container.level,currentStackItem.container)){that._menuItemsGroupSelectionHandler(currentStackItem,{target:currentStackItem,type:'expand',isTrusted:true},arguments[2]);}}if(restoreAnimation){that.animation=animationType;}}/**
     * Gets an item by its id or numeric path.
     *
     * @param {String} id The id or numeric path of an item.
     */},{key:'getItem',value:function getItem(id){var that=this;var item=void 0;if(typeof id==='string'){item=that.shadowRoot?that.shadowRoot.getElementById(id):document.getElementById(id);if(item===null){return that._menuItems[id];}}else if(!isNaN(id)){return that._menuItems[id.toString()];}else{item=id;}if(!(item instanceof JQX.MenuItem||item instanceof JQX.MenuItemsGroup)||!(that.contains(item)||that.$.mainContainer.contains(item)||item.parentElement.parentElement.ownerElement===that)){return;}return item;}/**
     * Maximizes the Menu.
     */},{key:'maximize',value:function maximize(){var that=this;if(!that._minimized){return;}var animationType=that.animation;that.$.mainContainer.style.marginTop='';that.$.mainContainer.style.marginLeft='';if(that.enableShadowDOM&&!that.$.mainContainer.id){that.$.mainContainer.id=that.$.mainContainer.getAttribute('jqx-id');}if(animationType!=='none'){that.animation='none';}that._positionDetection.removeOverlay();that._closeSubContainers(2);that.$minimizedHeader.addClass('jqx-hidden');that._minimized=false;if(that._minimizedDropDownOpened){that.$hamburgerIcon.removeClass('jqx-close-button');that._minimizedDropDownOpened=false;}if(that.dropDownAppendTo!==null){that._appendMinimizedContainerToMenu(that.$.mainContainer,that.$.scrollButtonFar);}if(that.mode!=='tree'){that.$mainContainer.addClass('jqx-menu-main-container');that.$mainContainer.removeClass('jqx-menu-minimized-items-container');var arrows=that.getElementsByClassName('jqx-menu-items-group-arrow');for(var _i225=0;_i225<arrows.length;_i225++){that._setArrowDirection(arrows[_i225],arrows[_i225].parentElement.parentElement.level+1);}if(that.dropDownAppendTo!==null){that._moveDropDownsToExternalContainer();}that._applyContainerFixedHeight();}that.$mainContainer.removeClass('jqx-visibility-hidden');that.$hamburgerIcon.addClass('jqx-hidden');that.removeAttribute('minimized');that._checkOverflow(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);if(animationType!=='none'){setTimeout(function(){that.animation=animationType;},0);}}/**
     * Minimizes the Menu.
     */},{key:'minimize',value:function minimize(){var that=this;if(that._minimized||that.mode==='dropDown'){return;}that.$minimizedHeader.removeClass('jqx-hidden');var differentDropDownParent=that.dropDownAppendTo!==null,animationType=that.animation,restoreAnimation=that.hasAnimation;if(restoreAnimation){that.animation='none';}that._positionDetection.removeOverlay();that._closeSubContainers(2);if(restoreAnimation&&differentDropDownParent){that.animation=animationType;}if(that.mode!=='tree'){if(differentDropDownParent){that._moveDropDownsToMenu();}that._removeContainerFixedHeight();}that._hideMainContainerScrollButtons();that.$mainContainer.removeClass('jqx-menu-main-container');that.$mainContainer.addClass('jqx-visibility-hidden');if(that.enableShadowDOM){that.$.mainContainer.removeAttribute('id');}if(that._edgeMacFF){that.$.mainContainer.style.left='';that.$.mainContainer.style.top='';that.$mainContainer.addClass('not-in-view');}that.$hamburgerIcon.removeClass('jqx-hidden');if(differentDropDownParent){that._appendMinimizedContainerToExternalElement(that.$.mainContainer);}setTimeout(function(){that.$mainContainer.addClass('jqx-menu-minimized-items-container');if(restoreAnimation&&!differentDropDownParent){that.animation=animationType;}},0);that._minimized=true;that.setAttribute('minimized','');if(that.mode!=='tree'){var arrows=that.$.mainContainer.getElementsByClassName('jqx-menu-items-group-arrow');for(var _i226=0;_i226<arrows.length;_i226++){that._setArrowDirection(arrows[_i226],arrows[_i226].parentElement.parentElement.level+1);}}}/**
     * Opens the Menu when "mode" is 'dropDown'.
     *
     * @param {Number} left Horizontal position.
     * @param {Number} top Vertical position.
     */},{key:'open',value:function open(left,top){var that=this;if(that.mode!=='dropDown'){return;}var openingEvent=that.$.fireEvent('opening');if(openingEvent.defaultPrevented){that.opened=false;return;}var actualParentRect=void 0;that.opened=true;if(that._positionRelativeTo){var targetRect=that._positionRelativeTo.getBoundingClientRect();left+=targetRect.left;top+=targetRect.top;if(that._positionedParent){actualParentRect=that._positionedParent.getBoundingClientRect();left-=actualParentRect.left;top-=actualParentRect.top;}else{left+=window.pageXOffset;top+=window.pageYOffset;}}// browser bounds detection
var overflowLeft=left+that.offsetWidth-document.documentElement.clientWidth,overflowTop=top+that.offsetHeight-document.documentElement.clientHeight;if(actualParentRect){overflowLeft+=actualParentRect.left;overflowTop+=actualParentRect.top;}else{overflowLeft-=window.pageXOffset;overflowTop-=window.pageYOffset;}if(overflowLeft>0){left-=overflowLeft;}else if(actualParentRect){left=Math.max(left,-actualParentRect.left);}else{left=Math.max(left,window.pageXOffset);}if(overflowTop>0){top-=overflowTop;}else if(actualParentRect){top=Math.max(top,-actualParentRect.top);}else{top=Math.max(top,window.pageYOffset);}// browser bounds detection end
if(!isNaN(left)){that.style.left=left+'px';}if(!isNaN(top)){that.style.top=top+'px';}that.$.removeClass('jqx-visibility-hidden');that.$.fireEvent('open');if(!that.hasAnimation&&!that._noAutoFocus){that.focus();}}/**
     * Removes an item.
     *
     * @param {HTMLElement/String} item The jqx-menu-item/jqx-menu-items-group (or its id or numeric path) to remove.
     */},{key:'removeItem',value:function removeItem(item){var that=this;item=that.getItem(item);if(item===undefined){return;}var itemParent=item.parentElement;if(item instanceof JQX.MenuItemsGroup){var container=item.container;if(that._isContainerOpened(container.level,container)){that._closeSubContainers(container.level,container);}if(item.level===1){var index=that._containersInBody.indexOf(container);if(index!==-1){that._containersInBody.splice(index,1);if(that.dropDownAppendTo!==null&&that.mode!=='tree'&&!that._minimized){that._dropDownParent.removeChild(container);}}}}itemParent.removeChild(item);that._refreshContainersArrays();that._menuItems={};that._refreshItemPaths(that.$.mainContainer,true);that._checkOverflowAddRemove(item.level,itemParent);}/**
     * Unchecks an item.
     *
     * @param {HTMLElement/String} item jqx-menu-item/jqx-menu-items-group (or its id or numeric path).
     */},{key:'uncheckItem',value:function uncheckItem(item){var that=this;item=that.getItem(item);if(item===undefined||!item.checked||item.disabled||item.templateApplied){return;}that._toggleItem(item);}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Menu.prototype.__proto__||Object.getPrototypeOf(Menu.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;function checkOverflow(){if(that.dropDownAppendTo!==null||that.mode==='tree'){that._checkOverflow(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}}function updateAttribute(attribute,container,setAttribute){if(setAttribute){container.setAttribute(attribute,'');}else{container.removeAttribute(attribute);}}switch(propertyName){case'animation':that.$.mainContainer.setAttribute('animation',newValue);that._additionalScrollButtons.forEach(function(element){element[0].animation=newValue;element[1].animation=newValue;});if(that._dropDownParent!==null){that._containers.forEach(function(element){element.setAttribute('animation',newValue);});}break;case'checkable':if(that.mode!=='tree'&&!that._minimized){that._closeSubContainers(2);}else if(that._minimized&&that.dropDownAppendTo!==null){updateAttribute('checkable',that.$.mainContainer,newValue);}break;case'checkboxes':that._close();if(that.dropDownAppendTo!==null){for(var _i227=0;_i227<that._containers.length;_i227++){var container=that._containers[_i227];updateAttribute('checkboxes',container,newValue);}if(that._minimized){updateAttribute('checkboxes',that.$.mainContainer,newValue);}}break;case'checkMode':that._changeToRadioButtonMode(newValue,that.$.mainContainer);if(that._minimized&&that.dropDownAppendTo!==null){that.$.mainContainer.setAttribute('check-mode',newValue);}break;case'dataSource':{var toMinimize=false;if(that._minimized){that.maximize();toMinimize=true;}that._removeContainersInBody();that._containersInBody=[];that._menuItems={};that._processDataSource();that._checkContainersLength();if(toMinimize){that.minimize();}else{checkOverflow();}that._expandItemsByDefault();that._suppressResizeHandler=true;setTimeout(function(){return delete that._suppressResizeHandler;},500);break;}case'dropDownAppendTo':{var oldDropDownParent=that._dropDownParent;that._positionDetection.getDropDownParent();if(that._dropDownParent===oldDropDownParent||that.mode==='tree'&&!that._minimized){return;}that._close();if(that._minimized){if(newValue===null){that._appendMinimizedContainerToMenu(that.$.mainContainer,that.$.scrollButtonFar);}else{that._appendMinimizedContainerToExternalElement(that.$.mainContainer);}return;}if(that._dropDownParent!==null&&oldDropDownParent===null){that._moveDropDownsToExternalContainer();}else if(that._dropDownParent===null&&oldDropDownParent!==null){that._moveDropDownsToMenu();}else if(that._dropDownParent!==null&&oldDropDownParent!==null){for(var _i228=0;_i228<that._containersInBody.length;_i228++){that._dropDownParent.appendChild(that._containersInBody[_i228]);}}if(newValue===null&&!that.$mainContainer.hasClass('simple')){that._hideMainContainerScrollButtons();}else{that._checkOverflow(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}for(var _i229=0;_i229<that._containersFixedHeight.length;_i229++){that._containersFixedHeight[_i229].itemContainer.checkOverflow=true;}if(that.mode==='dropDown'){that.close({trigger:'internal'});that._reparentMenu(true,oldDropDownParent);}break;}case'dropDownOverlay':if(!newValue){that._positionDetection.removeOverlay();}break;case'disabled':if(newValue){that._close();}that._setFocusable();that.$.scrollButtonNear.disabled=newValue;that.$.scrollButtonFar.disabled=newValue;if(!newValue&&(that.dropDownAppendTo!==null||that.$mainContainer.hasClass('simple')||that.mode==='tree')){that._updateScrollButtonVisibility(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}break;case'dropDownPosition':case'mode':{if(propertyName==='mode'){delete that._dynamicallyReparented;if(oldValue==='tree'||that._minimized){that._closeSubContainersTreeMode(2,undefined,undefined,undefined,true);that._openedContainers=[];}else{that._closeSubContainersDefaultMode(2);}that._discardKeyboardHover(true);if(that._minimized&&that._minimizedDropDownOpened){that.$mainContainer.addClass('jqx-visibility-hidden');that.$hamburgerIcon.removeClass('jqx-close-button');that._minimizedDropDownOpened=false;}if(newValue==='horizontal'||oldValue==='horizontal'){that._changeScrollButtonsArrows();}if(that._minimized){if(newValue==='dropDown'){that.mode=oldValue;}return;}if(that.opened===false){if(newValue==='dropDown'){that.$.addClass('jqx-visibility-hidden');}else if(oldValue==='dropDown'){that.$.removeClass('jqx-visibility-hidden');}}if(oldValue==='tree'){if(that.dropDownAppendTo!==null){that._moveDropDownsToExternalContainer();}that.$mainContainer.addClass('jqx-menu-main-container');that.$mainContainer.removeClass('jqx-menu-minimized-items-container');that._applyContainerFixedHeight();}else if(newValue==='tree'){if(that.dropDownAppendTo!==null){that._moveDropDownsToMenu();}that._applyTreeMode();}if(that.overflow==='auto'){that._hideMainContainerScrollButtons();}checkOverflow();}if(that.mode==='tree'||that._minimized){if(that._minimizedDropDownOpened){that._close();}if(that._minimized&&that.dropDownAppendTo!==null){that.$.mainContainer.setAttribute(that.properties[propertyName].attributeName,newValue);}return;}else if(propertyName==='dropDownPosition'){that._close();}var menuItemsGroups=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-menu-items-group'):that.getElementsByTagName('jqx-menu-items-group');for(var _i230=0;_i230<menuItemsGroups.length;_i230++){var currentMenuItemsGroup=menuItemsGroups[_i230];that._setArrowDirection(currentMenuItemsGroup.children[0].children[1],currentMenuItemsGroup.level+1);}if(that.dropDownAppendTo!==null){for(var _i231=0;_i231<that._containers.length;_i231++){var _container=that._containers[_i231];_container.setAttribute(JQX.Utilities.Core.toDash(propertyName),newValue);if(_container.level>2){that._setArrowDirection(_container.menuItemsGroup.children[0].children[1],_container.level);}}}break;}case'minimizeIconTemplate':that._applyMinimizeIconTemplate(newValue,oldValue);break;case'minimizeWidth':that._resizeHandler();break;case'opened':if(newValue){that.open();}else{that.close({trigger:'internal'});}break;case'overflow':that._handleOverflowChange();break;case'theme':if(that.dropDownAppendTo===null||JQX.ListMenu&&that instanceof JQX.ListMenu){return;}if(that._minimized){if(oldValue!==''){that.$mainContainer.removeClass(oldValue);}if(newValue!==''){that.$mainContainer.addClass(newValue);}}else{for(var _i232=0;_i232<that._containers.length;_i232++){var _container2=that._containers[_i232];if(oldValue!==''){_container2.classList.remove(oldValue);}if(newValue!==''){_container2.classList.add(newValue);}}}break;case'unfocusable':that._setFocusable();break;}}/**
     * Adds a container to the "_openedContainers" array.
     */},{key:'_addOpenedContainer',value:function _addOpenedContainer(level,container){var that=this;if(that.mode==='tree'||that._minimized){if(!that._openedContainers[level]){that._openedContainers[level]=[];}var menuItemsGroup=container.menuItemsGroup;menuItemsGroup.set('expanded',true);if(that._updateState){that._updateState('expanded',menuItemsGroup.id,true);}return that._openedContainers[level].push(container);}else{that._openedContainers[level]=container;}}/**
     * Appends the minimized items container to external element.
     */},{key:'_appendMinimizedContainerToExternalElement',value:function _appendMinimizedContainerToExternalElement(itemsContainer){var that=this;itemsContainer.ownerElement=that;that._dropDownParent.appendChild(itemsContainer);itemsContainer.setAttribute('animation',that.animation);if(that.theme!==''){itemsContainer.$.addClass(that.theme);}itemsContainer.$.addClass('jqx-menu-drop-down jqx-drop-down');itemsContainer.$.addClass('jqx-drop-down-repositioned');itemsContainer.setAttribute('check-mode',that.checkMode);itemsContainer.setAttribute('drop-down-position',that.dropDownPosition);itemsContainer.setAttribute('mode',that.mode);itemsContainer.setAttribute('loading-indicator-position',that.loadingIndicatorPosition);if(that.checkable){itemsContainer.setAttribute('checkable','');}if(that.checkboxes){itemsContainer.setAttribute('checkboxes','');}if(that.$.view&&that.detachedChildren.indexOf(that.$.view)){that.detachedChildren.push(that.$.view);}}/**
     * Appends the minimized items container to Menu.
     */},{key:'_appendMinimizedContainerToMenu',value:function _appendMinimizedContainerToMenu(itemsContainer,sibling){var that=this;delete itemsContainer.ownerElement;that.$.container.insertBefore(itemsContainer,sibling);itemsContainer.removeAttribute('animation');if(that.theme!==''){itemsContainer.$.removeClass(that.theme);}itemsContainer.$.removeClass('jqx-menu-drop-down jqx-drop-down');itemsContainer.$.removeClass('jqx-drop-down-repositioned');itemsContainer.removeAttribute('checkable');itemsContainer.removeAttribute('checkboxes');itemsContainer.removeAttribute('check-mode');itemsContainer.removeAttribute('drop-down-position');itemsContainer.removeAttribute('mode');itemsContainer.removeAttribute('loading-indicator-position');itemsContainer.removeAttribute('style');}/**
     * Applies fixed heights to containers.
     */},{key:'_applyContainerFixedHeight',value:function _applyContainerFixedHeight(){var that=this;for(var _i233=0;_i233<that._containers.length;_i233++){var container=that._containers[_i233];if(that._containersFixedHeight.indexOf(container)!==-1){container.style.height=container.menuItemsGroup.dropDownHeight+'px';container.itemContainer.checkOverflow=true;}else{container.style.height='';}}}/**
     * Applies grouping.
     */},{key:'_applyGrouping',value:function _applyGrouping(item,noRecursion){var that=this;var itemChildren=void 0;if(item===that.$.mainContainer){itemChildren=Array.from(item.children);}else{itemChildren=Array.from(item.container.firstElementChild.children);}for(var _i234=0;_i234<itemChildren.length;_i234++){var currentItem=itemChildren[_i234];currentItem.originalIndex=_i234;if(currentItem instanceof JQX.MenuItemsGroup&&noRecursion===undefined){that._applyGrouping(currentItem);}}that._sortItems(item);}/**
     * Applies minimize icon template.
     */},{key:'_applyMinimizeIconTemplate',value:function _applyMinimizeIconTemplate(newValue,oldValue){var that=this;if(newValue===null){if(oldValue===null){return;}that.$customIconContainer.addClass('jqx-hidden');that.$.customIconContainer.innerHTML='';that.$hamburgerIconLineTop.removeClass('jqx-hidden');that.$hamburgerIconLineCenter.removeClass('jqx-hidden');that.$hamburgerIconLineBottom.removeClass('jqx-hidden');}else{var potentialHTMLTemplate=document.getElementById(newValue);if(potentialHTMLTemplate!==null&&potentialHTMLTemplate.tagName.toLowerCase()==='template'){// label is the id of an HTML template
var templateContent=document.importNode(potentialHTMLTemplate.content,true);that.$hamburgerIconLineTop.addClass('jqx-hidden');that.$hamburgerIconLineCenter.addClass('jqx-hidden');that.$hamburgerIconLineBottom.addClass('jqx-hidden');that.$.customIconContainer.innerHTML='';that.$.customIconContainer.appendChild(templateContent);that.$customIconContainer.removeClass('jqx-hidden');}else{that.minimizeIconTemplate=oldValue;}}}/**
     * Applies mode: 'tree'.
     */},{key:'_applyTreeMode',value:function _applyTreeMode(){var that=this,arrows=that.getElementsByClassName('jqx-menu-items-group-arrow');that.$mainContainer.removeClass('jqx-menu-main-container');that.$mainContainer.addClass('jqx-menu-minimized-items-container');if(that.isCompleted){for(var _i235=0;_i235<arrows.length;_i235++){arrows[_i235].className='jqx-menu-items-group-arrow down';}}that._removeContainerFixedHeight();}/**
     * Default left arrow handler.
     */},{key:'_arrowLeftHandler',value:function _arrowLeftHandler(level,mode,focusedItem,lastOpenedContainer){var that=this;if(level===1){if(mode==='horizontal'){that._levelOneNavigate('_getLastEnabledChild',focusedItem,lastOpenedContainer);}}else if(level===2){that._levelOneNavigateFromLowerLevel('_getPreviousEnabledChild',focusedItem);}else{that._escapeHandler(focusedItem,level,lastOpenedContainer);}}/**
     * Default right arrow handler.
     */},{key:'_arrowRightHandler',value:function _arrowRightHandler(level,mode,focusedItem,lastOpenedContainer){var that=this;if(level===1){if(mode==='horizontal'){that._levelOneNavigate('_getFirstEnabledChild',focusedItem,lastOpenedContainer);}else{that._levelOneOpenDropDown(focusedItem);}}else{if(focusedItem instanceof JQX.MenuItemsGroup){that._selectionHandler({target:focusedItem,isTrusted:true});}else{that._levelOneNavigateFromLowerLevel('_getNextEnabledChild',focusedItem);}}}/**
     * Repositions container if it intersects with browser bounds.
     */},{key:'_browserBoundsDetection',value:function _browserBoundsDetection(container){var that=this;if(that.mode==='tree'&&!that._minimized){return;}container.style.marginTop='';container.style.marginLeft='';if(that.dropDownPosition!=='auto'){return;}var windowWidth=window.devicePixelRatio===1?document.documentElement.clientWidth:window.innerWidth,windowHeight=window.devicePixelRatio===1?document.documentElement.clientHeight:window.innerHeight,containerBoundingRect=container.getBoundingClientRect(),horizontalCorrection=windowWidth-containerBoundingRect.left-container.offsetWidth,verticalCorrection=windowHeight-containerBoundingRect.top-container.offsetHeight;if(horizontalCorrection<10){container.style.marginLeft=Math.min(horizontalCorrection-10,-10)+'px';}if(verticalCorrection<10){container.style.marginTop=Math.min(verticalCorrection-10,-10)+'px';}}/**
     * Changes the direction of scroll button arrows.
     */},{key:'_changeScrollButtonsArrows',value:function _changeScrollButtonsArrows(){var that=this;if(that.mode==='horizontal'){that.$arrowNear.removeClass('jqx-arrow-up');that.$arrowNear.addClass('jqx-arrow-left');that.$arrowFar.removeClass('jqx-arrow-down');that.$arrowFar.addClass('jqx-arrow-right');}else{that.$arrowNear.removeClass('jqx-arrow-left');that.$arrowNear.addClass('jqx-arrow-up');that.$arrowFar.removeClass('jqx-arrow-right');that.$arrowFar.addClass('jqx-arrow-down');}}/**
     * Changes to checkMode: 'radioButton'.
     */},{key:'_changeToRadioButtonMode',value:function _changeToRadioButtonMode(newValue,container,item){if(newValue==='radioButton'){var checkedChildren=[];for(var _i236=0;_i236<container.childElementCount;_i236++){var currentItem=container.children[_i236];if(currentItem.checked&&!currentItem.disabled&&!currentItem.templateApplied){checkedChildren.push(currentItem);}}this._validateRadioButtonSelection(item,item?item.level+1:1,checkedChildren);}}/**
     * Checks the number of dropdowns.
     */},{key:'_checkContainersLength',value:function _checkContainersLength(initialization){var that=this;if(that._containers.length===0){that.$mainContainer.addClass('simple');if(!initialization){that._checkOverflow(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}}else if(!initialization){that.$mainContainer.removeClass('simple');if(that.dropDownAppendTo===null&&that.mode!=='tree'){that.$mainContainer.removeClass('scroll-buttons-shown one-button-shown');}}}/**
     * Checks if items overflow and shows/hides scroll buttons.
     */},{key:'_checkOverflow',value:function _checkOverflow(element,horizontal,scrollButtons){var that=this,overflow=element===that.$.mainContainer?that.overflow:'auto';if(that._minimized||overflow==='hidden'||that.dropDownAppendTo===null&&that.mode!=='tree'&&element===that.$.mainContainer&&!that.$mainContainer.hasClass('simple')){return;}var oldScrollTop=element.scrollTop;if(overflow==='auto'){element.classList.remove('scroll-buttons-shown');element.classList.remove('one-button-shown');scrollButtons[0].$.addClass('jqx-hidden');scrollButtons[1].$.addClass('jqx-hidden');}var overflowing=void 0,showNear=void 0,showFar=void 0;if(horizontal){overflowing=Math.round(element.scrollWidth)>Math.round(element.offsetWidth);showNear=Math.round(element.scrollLeft)>0;showFar=Math.round(element.offsetWidth+element.scrollLeft)<Math.round(element.scrollWidth);}else{overflowing=Math.round(element.scrollHeight)>Math.round(element.offsetHeight);showNear=Math.round(element.scrollTop)>0;showFar=Math.round(element.offsetHeight+element.scrollTop)<Math.round(element.scrollHeight);}if(overflowing){if(overflow==='auto'){element.classList.add('scroll-buttons-shown');if(showNear){scrollButtons[0].$.removeClass('jqx-hidden');}if(showFar){scrollButtons[1].$.removeClass('jqx-hidden');}if((showNear&&showFar)===false){element.classList.add('one-button-shown');}if(!that.disabled){scrollButtons[0].disabled=false;scrollButtons[1].disabled=false;}element.scrollTop=oldScrollTop;}else{scrollButtons[0].$.removeClass('jqx-hidden');scrollButtons[1].$.removeClass('jqx-hidden');if(that.disabled){scrollButtons[0].disabled=true;scrollButtons[1].disabled=true;}else{scrollButtons[0].disabled=!showNear;scrollButtons[1].disabled=!showFar;}}}else if(overflow==='scroll'){scrollButtons[0].disabled=true;scrollButtons[1].disabled=true;}if(element===that.$.mainContainer&&that.mode!=='tree'){that._close();}}/**
     * Checks overflow after "addItem" or "removeItem" has been called.
     */},{key:'_checkOverflowAddRemove',value:function _checkOverflowAddRemove(level,itemParent){var that=this;if(level===1&&that.dropDownAppendTo!==null||that.mode==='tree'){that._checkOverflow(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}else if(level>1&&itemParent.dropDownHeightSet){if(that._isContainerOpened(level,itemParent.container)){that._checkOverflow(itemParent,false,[itemParent.container.children[0],itemParent.container.children[2]]);}else{itemParent.checkOverflow=true;}}}/**
     * Closes any open dropdown containers.
     */},{key:'_close',value:function _close(){var that=this;that._positionDetection.removeOverlay();that._closeSubContainers(2);that._discardKeyboardHover(true);if(that._minimized&&that._minimizedDropDownOpened){that.$mainContainer.addClass('jqx-visibility-hidden');if(that._edgeMacFF){that.$.mainContainer.style.left='';that.$.mainContainer.style.top='';that.$mainContainer.addClass('not-in-view');}that.$hamburgerIcon.removeClass('jqx-close-button');that._minimizedDropDownOpened=false;}}/**
     * Closes sub-containers.
     */},{key:'_closeSubContainers',value:function _closeSubContainers(level,container,preserveClass,fireEvent){var that=this;if(that.mode!=='tree'&&!that._minimized){that._closeSubContainersDefaultMode(level,container,preserveClass);}else{that._closeSubContainersTreeMode(level,container,preserveClass,fireEvent);}}/**
     * Closes sub-containers (in horizontal/vertical/dropDown mode).
     */},{key:'_closeSubContainersDefaultMode',value:function _closeSubContainersDefaultMode(level,container,preserveClass){var that=this,openedContainers=that._openedContainers;function applyClasses(i){var menuItemsGroup=openedContainers[i].menuItemsGroup;if(!(preserveClass&&i===level)){menuItemsGroup.$.removeClass('focus');menuItemsGroup.removeAttribute('focus');menuItemsGroup.$.removeClass('hover');menuItemsGroup.removeAttribute('hover');}menuItemsGroup.$.removeClass('jqx-menu-items-group-opened');openedContainers[i].$.addClass('jqx-visibility-hidden');if(that._edgeMacFF&&i===2&&!that.hasAnimation){openedContainers[i].style.left='';openedContainers[i].style.top='';openedContainers[i].$.addClass('not-in-view');}if(that._minimized){that._browserBoundsDetection(that.$.mainContainer);}that.$.fireEvent('collapse',{'item':menuItemsGroup,'label':menuItemsGroup.label,'path':menuItemsGroup.path,'value':menuItemsGroup.value,'children':menuItemsGroup.itemContainer.children});openedContainers[i]=undefined;}for(var _i237=openedContainers.length-1;_i237>=level;_i237--){if(openedContainers[_i237]===undefined){continue;}applyClasses(_i237,true);}}/**
     * Closes sub-containers (in tree/minimized mode).
     */},{key:'_closeSubContainersTreeMode',value:function _closeSubContainersTreeMode(level,container,preserveClass,fireEvent,modeChanged){var that=this;if(fireEvent){var _menuItemsGroup=container.menuItemsGroup,collapsingEvent=that.$.fireEvent('collapsing',{'item':_menuItemsGroup,'label':_menuItemsGroup.label,'path':_menuItemsGroup.path,'value':_menuItemsGroup.value,'children':container.itemContainer.children});if(collapsingEvent.defaultPrevented){return;}}if(container===undefined){that._collapseAll(false,modeChanged);return;}var menuItemsGroup=container.menuItemsGroup;menuItemsGroup.set('expanded',false);if(that._element==='menu'){if(preserveClass){var currentFocus=that.$.mainContainer.getElementsByClassName('focus')[0];if(currentFocus){currentFocus.$.removeClass('focus');currentFocus.removeAttribute('focus');}menuItemsGroup.$.addClass('focus');menuItemsGroup.setAttribute('focus','');that._focusedViaKeyboard=menuItemsGroup;}else{menuItemsGroup.$.removeClass('focus');menuItemsGroup.removeAttribute('focus');}}else{that._updateState('expanded',menuItemsGroup.id,false);}menuItemsGroup.$.removeClass('jqx-'+that._element+'-items-group-opened');if(modeChanged||!that.hasAnimation){menuItemsGroup.$.removeClass('jqx-'+that._element+'-items-group-expanded');container.$.addClass('jqx-visibility-hidden');if(that._minimized){that._browserBoundsDetection(that.$.mainContainer);}}else{that._collapseSection(container);}if(fireEvent){var eventDetail={'item':menuItemsGroup,'label':menuItemsGroup.label,'path':menuItemsGroup.path,'value':menuItemsGroup.value,'children':menuItemsGroup.itemContainer.children};if(that.toggleCallback){eventDetail.type='collapse';that.toggleCallback(eventDetail);}else{that.$.fireEvent('collapse',eventDetail);}}if(!that._openedContainers[level]){return;}var index=that._openedContainers[level].indexOf(container);if(index!==-1){that._openedContainers[level].splice(index,1);}}/**
     * Collapses all items (in tree/minimized mode).
     */},{key:'_collapseAll',value:function _collapseAll(fireEvent,modeChanged){var that=this;for(var _i238=that._openedContainers.length-1;_i238>=2;_i238--){if(that._openedContainers[_i238]===undefined){break;}for(var j=that._openedContainers[_i238].length-1;j>=0;j--){that._closeSubContainersTreeMode(_i238,that._openedContainers[_i238][j],undefined,fireEvent,modeChanged);}}if(!that.hasAnimation){that._checkOverflow(that.$.mainContainer,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}for(var _i239=that._openedContainers.length-1;_i239>=2;_i239--){var currentSet=that._openedContainers[_i239];if(currentSet===undefined||currentSet.length===0){that._openedContainers.splice(_i239,1);}else{break;}}if(that._openedContainers.length===2){that._openedContainers=[];}}/**
     * Collapses a section (in tree/minimized mode).
     */},{key:'_collapseSection',value:function _collapseSection(element){var that=this,sectionHeight=element.scrollHeight+'px';that._treeAnimationInProgress=element;element.style.transition='none';requestAnimationFrame(function(){if(that.mode!=='tree'&&!that._minimized){element.style.transition='';return;}element.style.height=sectionHeight;element.style.transition='';requestAnimationFrame(function(){element.style.height='0px';if(that.tagName.toLowerCase()==='jqx-tree'){element.$.addClass('jqx-visibility-hidden');}if(sectionHeight==='0px'){that._transitionendHandlerCollapse(that,element);}});});element.addEventListener('transitionend',that._transitionendHandlerCollapse);}/**
     * Applies initial settings to the Menu element.
     */},{key:'_createElement',value:function _createElement(){var that=this,mode=that.mode;that._positionDetection=new JQX.Utilities.PositionDetection(that);that._positionDetection.getDropDownParent();that._reparentMenu();if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}if(that.dataSource===null&&that.$.mainContainer.firstElementChild instanceof HTMLUListElement){that._processUList();}var items=that.getElementsByTagName('jqx-menu-item');var itemsReady=function itemsReady(){var animationType=that.animation;that._changeScrollButtonsArrows();that._setFocusable();if(mode==='dropDown'&&that.opened===false){if(that.hasAnimation){that.animation='none';that.$.addClass('jqx-visibility-hidden');that.animation=animationType;}else{that.$.addClass('jqx-visibility-hidden');}}that._menuItems={};that.$.mainContainer.setAttribute('animation',animationType);if(that.dataSource===null){that._processHTML(that.$.mainContainer,1);}else{that._processDataSource();}that._checkContainersLength(true);if((that.dropDownAppendTo!==null||that.$mainContainer.hasClass('simple')||that.mode==='tree')&&that.overflow==='scroll'){that.$mainContainer.addClass('scroll-buttons-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that._updateScrollButtonVisibility(that.$.mainContainer,mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}that._applyMinimizeIconTemplate(that.minimizeIconTemplate,null);if(mode==='tree'){that._applyTreeMode();}if(that.minimizeWidth!==null&&that.offsetWidth<=that.minimizeWidth){that.minimize();}else{that._checkOverflow(that.$.mainContainer,mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}that._expandItemsByDefault();if(that.__onCompleted){that._onCompleted=that.__onCompleted;that.__onCompleted=null;that._onCompleted();}};if(items.length===0){itemsReady();}else{if(that._onCompleted){that.__onCompleted=that._onCompleted;that._onCompleted=null;}that._ensureItemsReady(items,itemsReady);}}},{key:'_ensureItemsReady',value:function _ensureItemsReady(nodes,callback){var that=this;var contextCallback=function contextCallback(){var setContext=function setContext(context){for(var _i240=0;_i240<nodes.length;_i240++){nodes[_i240].context=context==='node'?nodes[_i240]:document;}};setContext('node');callback();setContext();};if(nodes.length===0){contextCallback();}else{that._nodesReadyListeners=0;for(var _i241=0;_i241<nodes.length;_i241++){var node=nodes[_i241];var readyEventHandler=function(){that._nodesReadyListeners--;if(that._nodesReadyListeners===0){contextCallback();delete that._nodesReadyListeners;}}.bind(that);if(!node.isCompleted){that._nodesReadyListeners++;node.completeHandlers=[];node._onCompleted=readyEventHandler;}}if(that._nodesReadyListeners===0){contextCallback();}}}/**
     * Creates the necessary HTML structure for a jqx-menu-item/jqx-menu-items-group.
     */},{key:'_createItemHTMLStructure',value:function _createItemHTMLStructure(currentItem,level,item,index){var that=this,labelContainer=document.createElement('div'),labelElement=document.createElement('div'),labelFragment=document.createDocumentFragment();var currentItemPath=void 0;currentItem.menu=that;if(level>1){currentItem.originalIndex=index;currentItemPath=item.path+'.'+currentItem.originalIndex;currentItem.parentItem=item;}else{currentItem.originalIndex=index;currentItemPath=''+index;}currentItem.path=currentItemPath;that._menuItems[currentItemPath]=currentItem;labelContainer.className='jqx-'+that._element+'-item-label-container';labelElement.className='jqx-'+that._element+'-item-label-element';if(that._element==='tree'){// Tree item indentation
that._setIndentation(labelContainer,level,that.rightToLeft?'paddingRight':'paddingLeft');}var currentItemChildNodes=Array.from(currentItem.childNodes);for(var _i242=0;_i242<currentItemChildNodes.length;_i242++){var currentNode=currentItemChildNodes[_i242];if(currentNode instanceof JQX.MenuItem||currentNode instanceof JQX.MenuItemsGroup){break;}labelElement.appendChild(currentNode);}if(labelElement.innerHTML.trim()===''){var currentItemLabel=currentItem.label||currentItem.getAttribute('label');if(currentItemLabel&&currentItemLabel!==''){that._setLabel(currentItemLabel,labelElement,currentItem,true);}else{currentItem.set('label','Item '+index);labelElement.innerHTML='Item '+index;}}else{currentItem.set('label',labelElement.innerHTML.trim());}if(currentItem instanceof JQX.MenuItemsGroup&&currentItem.titleLabel===undefined){currentItem.titleLabel=currentItem.label;}labelElement.innerHTML='<span>'+labelElement.innerHTML+'</span>';labelFragment.appendChild(labelElement);currentItem.set('level',level);currentItem.set('shortcut',currentItem.shortcut||currentItem.getAttribute('shortcut')||'');if(currentItem.shortcut&&currentItem instanceof JQX.MenuItem){var shortcutElement=document.createElement('div');shortcutElement.className='jqx-'+that._element+'-item-shortcut';shortcutElement.innerHTML=currentItem.shortcut;labelFragment.appendChild(shortcutElement);}labelContainer.appendChild(labelFragment);currentItem.insertBefore(labelContainer,currentItem.children[0]);if(!currentItem.id){currentItem.id=that.id+'ItemP'+currentItem.path.replace(/\./g,'_')+'L'+currentItem.label.replace(/<|\/|>|"|'|=|\s/g,'');}}/**
     * Creates the dropdown container of jqx-menu-items-group.
     */},{key:'_createMenuItemsGroupContainer',value:function _createMenuItemsGroupContainer(item,level){var that=this,container=document.createElement('div'),itemContainer=document.createElement('div');container.className='jqx-'+that._element+'-drop-down jqx-visibility-hidden';if(that._edgeMacFF&&level===2&&that.mode!=='tree'){container.className+=' not-in-view';}container.$=JQX.Utilities.Extend(container);container.level=level;container.setAttribute('level',level);container.menuItemsGroup=item;itemContainer.className='jqx-'+that._element+'-item-container';itemContainer.$=JQX.Utilities.Extend(itemContainer);itemContainer.container=container;itemContainer.menuItemsGroup=item;if(item.checkable){itemContainer.setAttribute('checkable','');}itemContainer.setAttribute('check-mode',item.checkMode);container.itemContainer=itemContainer;container.appendChild(itemContainer);if(item.dropDownHeight!==null){var repeatButtonNear=document.createElement('jqx-repeat-button'),repeatButtonFar=document.createElement('jqx-repeat-button');repeatButtonNear.className='jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-near jqx-hidden';repeatButtonNear.innerHTML='<div id="arrowNear" class="jqx-arrow jqx-arrow-up"></div>';repeatButtonNear.animation=that.animation;repeatButtonNear.unfocusable=true;repeatButtonFar.className='jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-far jqx-hidden';repeatButtonFar.innerHTML='<div id="arrowNear" class="jqx-arrow jqx-arrow-down"></div>';repeatButtonFar.animation=that.animation;repeatButtonFar.unfocusable=true;container.insertBefore(repeatButtonNear,itemContainer);container.appendChild(repeatButtonFar);container.$.addClass('drop-down-height-set');itemContainer.dropDownHeightSet=true;itemContainer.checkOverflow=true;container.style.height=item.dropDownHeight+'px';that._containersFixedHeight.push(container);that._additionalScrollButtons.push([repeatButtonNear,repeatButtonFar]);}return container;}/**
     * Removes "focused" class added by keyboard navigation.
     */},{key:'_discardKeyboardHover',value:function _discardKeyboardHover(overrideCheck){var that=this;if(!that._focusedViaKeyboard){return;}if(!overrideCheck&&that._focusedViaKeyboard instanceof JQX.MenuItemsGroup&&that._isContainerOpened(that._focusedViaKeyboard.level+1,that._focusedViaKeyboard.container)){return;}that._focusedViaKeyboard.$.removeClass('focus');that._focusedViaKeyboard.removeAttribute('focus');that._focusedViaKeyboard.$.removeClass('hover');that._focusedViaKeyboard.removeAttribute('hover');that._focusedViaKeyboard=undefined;}/**
     * Document down handler.
     */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;if(that.closeAction==='down'){that._closeOnDocumentInteraction(event.originalEvent);}}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=event.originalEvent.target;if(that.disabled||that.displayLoadingIndicator||!target.closest){return;}var closed=that.closeAction==='up'?that._closeOnDocumentInteraction(event.originalEvent):false;if(closed){return;}var activeElement=void 0,isInsideElement=void 0;if(JQX.EnableShadowDOM){activeElement=that.isInShadowRoot?that.getRootNode().activeElement:that.shadowRoot?that.shadowRoot.activeElement||document.activeElement:document.activeElement;isInsideElement=that.$.container.contains(event.originalEvent.composedPath()[0]);}else{activeElement=document.activeElement;isInsideElement=that.contains(target);}if(!closed&&that!==activeElement&&activeElement.closest('[template-applied]')===null){if(isInsideElement||target.closest('.jqx-list-menu-view')===that.$.view){that.focus();return;}var closestDropDown=target.closest('.jqx-drop-down-repositioned');if(closestDropDown&&closestDropDown.ownerElement===that){that.focus();}}}/**
     * Closes Menu drop downs on interaction with the document.
     */},{key:'_closeOnDocumentInteraction',value:function _closeOnDocumentInteraction(event){var that=this,target=event.target;var shadowRootTarget=void 0,isInsideElement=void 0;if(JQX.EnableShadowDOM){shadowRootTarget=event.composedPath()[0];isInsideElement=that.$.container.contains(shadowRootTarget);}else{isInsideElement=that.contains(target);}if(that.mode==='dropDown'&&that.opened){var closestDropDown=target.closest('.jqx-drop-down-repositioned');if(!isInsideElement&&(!closestDropDown||closestDropDown.ownerElement!==that)){that.close({trigger:'interaction',target:JQX.EnableShadowDOM?shadowRootTarget:target});return true;}}if(!isInsideElement&&target.closest('.jqx-menu-drop-down')===null||shadowRootTarget&&shadowRootTarget===that.$.mainContainer||target===that.$.mainContainer){if(that.mode==='tree'){return true;}that._close();return true;}}/**
     * Ends swiping and scrolls kinetically.
     */},{key:'_endSwiping',value:function _endSwiping(event,now,noBounce){var that=this;if(!that._dragStartDetails){return;}var mainContainer=that.$.mainContainer,timeDifference=Math.abs(that._dragStartDetails.startTime-now),speed=300/timeDifference,distanceDifference=(that._dragStartDetails.startY-event.pageY)*speed;var remaining=Math.abs(distanceDifference);var scrollable=function scrollable(){if(distanceDifference>0&&mainContainer.scrollTop===mainContainer.scrollHeight-mainContainer.offsetHeight||distanceDifference<0&&mainContainer.scrollTop===0){return false;}return true;};var scrollStep=0.03*Math.abs(distanceDifference)*speed;var kineticScrolling=function kineticScrolling(){if(scrollStep>5){var remainingPart=(remaining-scrollStep)/Math.abs(distanceDifference);if(remainingPart<0.1){scrollStep/=1.25;}else if(remainingPart<0.15){scrollStep/=1.2;}else if(remainingPart<0.2){scrollStep/=1.15;}else if(remainingPart<0.25){scrollStep/=1.1;}else if(remainingPart<0.3){scrollStep/=1.05;}}var oldScrollTop=mainContainer.scrollTop;if(distanceDifference>0){mainContainer.scrollTop=Math.min(oldScrollTop+scrollStep,mainContainer.scrollHeight-mainContainer.offsetHeight);}else{mainContainer.scrollTop=Math.max(oldScrollTop-scrollStep,0);}remaining-=scrollStep;that._updateScrollButtonVisibility(that.$.mainContainer,that.mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);var canBeScrolled=scrollable();if(remaining>0&&canBeScrolled){that._scrollingAnimationFrame=window.requestAnimationFrame(kineticScrolling);}else{that._wheelInProgress=false;if(!canBeScrolled){if(that._fireScrollBottomReachedEvent){that._fireScrollBottomReachedEvent(oldScrollTop);}if(noBounce!==true){var initialScrollTop=that.$.mainContainer.scrollTop;if(initialScrollTop===0){that._bounceTop();}else{that._bounceBottom(initialScrollTop);}}}}};if(that._scrollingAnimationFrame){cancelAnimationFrame(that._scrollingAnimationFrame);}if(timeDifference<1000&&scrollable()){that._scrollingAnimationFrame=window.requestAnimationFrame(kineticScrolling);}else{that._wheelInProgress=false;}delete that._dragStartDetails;}/**
     * Makes sure a jqx-menu-item/jqx-menu-items-group is visible by scrolling to it.
     */},{key:'_ensureVisible',value:function _ensureVisible(scrollTarget){var that=this;if(that._minimized){return;}var mode=that.mode;var parent=void 0,scrollButtons=void 0;if(mode!=='tree'&&scrollTarget.parentElement!==that.$.mainContainer){if(scrollTarget.dropDownHeight===null){return;}parent=scrollTarget.parentElement;scrollButtons=[parent.container.children[0],parent.container.children[2]];}else{parent=that.$.mainContainer;scrollButtons=[that.$.scrollButtonNear,that.$.scrollButtonFar];}if(parent===that.$.mainContainer&&(that.dropDownAppendTo===null&&that.mode!=='tree'&&!that.$mainContainer.hasClass('simple')||!parent.$.hasClass('scroll-buttons-shown')&&that.overflow!=='hidden')){return;}var parentBoundingRect=parent.getBoundingClientRect(),scrollTargetBoundingRect=scrollTarget.getBoundingClientRect();if(mode==='tree'){that._ensureVisibleTreeMode(scrollTarget,scrollTargetBoundingRect,parent,parentBoundingRect,0);return;}function setTargetScrollValue(scrollValue,scrollDimension,dimension){var targetScrollValue=scrollTarget.firstElementChild[dimension]+scrollValue-parent[dimension];if(targetScrollValue<0){targetScrollValue=scrollValue;}parent['scroll'+scrollDimension]=targetScrollValue;}function scrollTo(scrollDimension,dimension){var scrollValue=scrollTarget['offset'+scrollDimension],oldParentDimension=parent[dimension];if(scrollDimension==='Top'&&parent!==that.$.mainContainer&&!scrollButtons[0].$.hasClass('jqx-hidden')){scrollValue-=scrollButtons[0][dimension];}setTargetScrollValue(scrollValue,scrollDimension,dimension);that._updateScrollButtonVisibility(parent,scrollDimension==='Left',scrollButtons);if(oldParentDimension!==parent[dimension]){setTargetScrollValue(scrollValue,scrollDimension,dimension);}}if(parent===that.$.mainContainer&&mode==='horizontal'&&(parentBoundingRect.left>scrollTargetBoundingRect.left||parentBoundingRect.right<scrollTargetBoundingRect.right)){scrollTo('Left','offsetWidth');}else if(parentBoundingRect.top>scrollTargetBoundingRect.top||parentBoundingRect.bottom<scrollTargetBoundingRect.bottom){scrollTo('Top','offsetHeight');}}/**
     * Makes sure a jqx-menu-item/jqx-menu-items-group is visible by scrolling to it (when "mode" is 'tree').
     */},{key:'_ensureVisibleTreeMode',value:function _ensureVisibleTreeMode(item,scrollTargetBoundingRect,parent,parentBoundingRect,padding){var that=this;if((that._element==='menu'||that.scrollMode==='scrollButtons')&&!parent.$.hasClass('scroll-buttons-shown')&&that.overflow!=='hidden'){return;}var oldHeight=parent.offsetHeight,scrollButtonNearHidden=that.$scrollButtonNear.hasClass('jqx-hidden');var newScrollTop=void 0;if(parentBoundingRect.top>scrollTargetBoundingRect.top){newScrollTop=that._getOffsetTop(item);}else{var itemHeight=!item.expanded?item.offsetHeight:item.firstElementChild.offsetHeight+parseInt(window.getComputedStyle(item.children[1]).marginTop,10);if(that._element==='tree'){itemHeight+=parseFloat(getComputedStyle(that).getPropertyValue('--jqx-tree-item-vertical-offset'))||0;}if(parentBoundingRect.bottom<scrollTargetBoundingRect.top+itemHeight){newScrollTop=that._getOffsetTop(item)-oldHeight+itemHeight+padding;}else{return;}}parent.scrollTop=newScrollTop;if(that._element==='menu'||that.scrollMode==='scrollButtons'){that._updateScrollButtonVisibility(parent,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}if(that.overflow==='auto'&&scrollButtonNearHidden&&!that.$scrollButtonNear.hasClass('jqx-hidden')){parent.scrollTop+=oldHeight-parent.offsetHeight;}}/**
     * Escape key handler.
     */},{key:'_escapeHandler',value:function _escapeHandler(focusedItem,level,lastOpenedContainer){var that=this;if(focusedItem){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');}that._closeSubContainers(level,undefined,undefined,true);that._hoverViaKeyboard(lastOpenedContainer.menuItemsGroup);}/**
     * Expand items by default.
     */},{key:'_expandItemsByDefault',value:function _expandItemsByDefault(collapseBeforehand){var that=this;if(that._menuItemsGroupsToExpand.length===0&&!collapseBeforehand||that.mode!=='tree'&&!that._minimized){return;}var restoreAnimation=that.hasAnimation,animationType=that.animation;if(restoreAnimation){that.animation='none';}if(collapseBeforehand){that._collapseAll(false);}for(var _i243=0;_i243<that._menuItemsGroupsToExpand.length;_i243++){that.expandItem(that._menuItemsGroupsToExpand[_i243].path,undefined,false);}if(restoreAnimation){that.animation=animationType;}that._menuItemsGroupsToExpand=[];}/**
     * Expands a section (in tree/minimized mode).
     */},{key:'_expandSection',value:function _expandSection(element){var that=this,oldHeight=element.style.height,sectionHeight=element.scrollHeight+'px';element.style.height=sectionHeight;that._treeAnimationInProgress=element;if(oldHeight===sectionHeight||!parseFloat(oldHeight)&&!parseFloat(sectionHeight)){that._transitionendHandlerExpand(that,element);return;}element.addEventListener('transitionend',that._transitionendHandlerExpand);}/**
     * Filter input keyup handler.
     */},{key:'_filterInputKeyupHandler',value:function _filterInputKeyupHandler(){var that=this;if(that._filterTimer){clearTimeout(that._filterTimer);}that._filterTimer=setTimeout(function(){var context=that.context;that.context=that;that._applyFilter(that.$.filterInput.value,that._view);that._checkOverflow();that.context=context;},300);}/**
     * Finds an item based on filter criteria.
     */},{key:'_findItem',value:function _findItem(item,filterQuery){if(filterQuery===''){return item;}var that=this;switch(that.filterMode){case'startsWith':if(item.label.indexOf(filterQuery)===0){return item;}break;case'startsWithIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())===0){return item;}break;case'doesNotContain':if(item.label.indexOf(filterQuery)<0){return item;}break;case'doesNotContainIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())<0){return item;}break;case'contains':if(item.label.indexOf(filterQuery)>-1){return item;}break;case'containsIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())>-1){return item;}break;case'equals':if(item.label.localeCompare(filterQuery)===0){return item;}break;case'equalsIgnoreCase':if(item.label.toLowerCase().localeCompare(filterQuery.toLowerCase())===0){return item;}break;case'endsWith':if(item.label.endsWith(filterQuery)){return item;}break;case'endsWithIgnoreCase':if(item.label.toLowerCase().endsWith(filterQuery.toLowerCase())){return item;}break;}return null;}/**
     * Returns the first MenuItem/MenuItemsGroup that is not disabled.
     */},{key:'_getFirstEnabledChild',value:function _getFirstEnabledChild(parent){var children=parent.children;for(var _i244=0;_i244<children.length;_i244++){if(this._isChildEnabled(children[_i244])){return children[_i244];}}}/**
     * Returns the last MenuItem/MenuItemsGroup that is not disabled.
     */},{key:'_getLastEnabledChild',value:function _getLastEnabledChild(parent){var children=parent.children;for(var _i245=children.length-1;_i245>=0;_i245--){if(this._isChildEnabled(children[_i245])){return children[_i245];}}}/**
     * Returns the next MenuItem/MenuItemsGroup that is not disabled.
     */},{key:'_getNextEnabledChild',value:function _getNextEnabledChild(child){if(!child){return;}while(child.nextElementSibling){var nextElementSibling=child.nextElementSibling;if(this._isChildEnabled(nextElementSibling)){return nextElementSibling;}child=nextElementSibling;}}/**
     * Gets an item's offset from the top of the main container.
     */},{key:'_getOffsetTop',value:function _getOffsetTop(target){var offsetTop=target.offsetTop;while(target.offsetParent!==this.$.mainContainer){target=target.offsetParent;offsetTop+=target.offsetTop;}return offsetTop;}/**
     * Returns the previous MenuItem/MenuItemsGroup that is not disabled.
     */},{key:'_getPreviousEnabledChild',value:function _getPreviousEnabledChild(child){if(!child){return;}while(child.previousElementSibling){var previousElementSibling=child.previousElementSibling;if(this._isChildEnabled(previousElementSibling)){return previousElementSibling;}child=previousElementSibling;}}/**
     * Hamburger icon click handler.
     */},{key:'_hamburgerIconClickHandler',value:function _hamburgerIconClickHandler(event,itemContainer){if(event){event.stopPropagation();}var that=this;if(itemContainer===undefined){if(JQX.ListMenu&&that instanceof JQX.ListMenu){itemContainer=that.$.view;}else{itemContainer=that.$.mainContainer;}}if(that.disabled){return;}if(!that._minimizedDropDownOpened){that._positionDetection.placeOverlay();if(that.dropDownAppendTo!==null){var dropDownPosition=that.dropDownPosition,menuBoundingRect=that.getBoundingClientRect(),dropDownOffset=that._positionDetection.getDropDownOffset();if(dropDownPosition.indexOf('right')!==-1||dropDownPosition==='auto'){itemContainer.style.left=menuBoundingRect.left+dropDownOffset.x+'px';itemContainer.style.right='initial';}else if(dropDownPosition.indexOf('left')!==-1){itemContainer.style.left=menuBoundingRect.right-itemContainer.offsetWidth+dropDownOffset.x+'px';itemContainer.style.right='initial';}if(dropDownPosition.indexOf('bottom')!==-1||dropDownPosition.indexOf('overlay')!==-1||dropDownPosition==='auto'){itemContainer.style.top=menuBoundingRect.bottom+dropDownOffset.y+'px';}else if(dropDownPosition.indexOf('top')!==-1){itemContainer.style.top=menuBoundingRect.top+dropDownOffset.y+'px';}}if(that._edgeMacFF){itemContainer.$.removeClass('not-in-view');}itemContainer.$.removeClass('jqx-visibility-hidden');that.$hamburgerIcon.addClass('jqx-close-button');that._minimizedDropDownOpened=true;that._browserBoundsDetection(itemContainer);}else{that._close();}}/**
     * Handles change to the "overflow" property.
     */},{key:'_handleOverflowChange',value:function _handleOverflowChange(){var that=this;if((that._minimized||that.dropDownAppendTo===null&&!that.$mainContainer.hasClass('simple')&&that.mode!=='tree')&&!(JQX.ListMenu&&that instanceof JQX.ListMenu)){return;}var overflow=that.overflow;var horizontal=void 0;if(that.mode==='horizontal'){horizontal=true;that.$.mainContainer.scrollLeft=0;}else{horizontal=false;that.$.mainContainer.scrollTop=0;}if(overflow==='hidden'){that.$mainContainer.removeClass('scroll-buttons-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}else{that.$.scrollButtonNear.disabled=that.disabled;that.$.scrollButtonFar.disabled=that.disabled;if(overflow==='auto'){that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');that._checkOverflow(that.$.mainContainer,horizontal,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}else{that.$mainContainer.addClass('scroll-buttons-shown');that.$mainContainer.removeClass('one-button-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that._updateScrollButtonVisibility(that.$.mainContainer,horizontal,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}}}/**
     * Hides main container scroll buttons.
     */},{key:'_hideMainContainerScrollButtons',value:function _hideMainContainerScrollButtons(){var that=this;that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');that.$mainContainer.removeClass('scroll-buttons-shown');that.$mainContainer.removeClass('one-button-shown');}/**
     * Hovers an item via the keyboard.
     */},{key:'_hoverViaKeyboard',value:function _hoverViaKeyboard(item){if(!item){return;}var that=this;item.$.addClass('focus');item.setAttribute('focus','');that._focusedViaKeyboard=item;that._ensureVisible(item);}/**
     * Checks if all items in a tree branch are expanded.
     */},{key:'_isBranchExpanded',value:function _isBranchExpanded(item){var that=this;if(that.mode!=='tree'){return true;}var expanded=true;while(item.parentItem){expanded=expanded&&item.parentItem.expanded;item=item.parentItem;}return expanded;}/**
     * Checks if an item can be focused.
     */},{key:'_isChildEnabled',value:function _isChildEnabled(child){return!(child.disabled||child.templateApplied||child.hidden||child instanceof HTMLDivElement||child.offsetHeight===0);}/**
     * Checks if a container is opened.
     */},{key:'_isContainerOpened',value:function _isContainerOpened(level,container){var that=this;if(that.mode==='tree'||that._minimized){if(!that._openedContainers[level]){that._openedContainers[level]=[];}return that._openedContainers[level].indexOf(container)!==-1;}else{return that._openedContainers[level]===container;}}/**
     * Keydown event handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this,key=event.key;if(document.activeElement!==that||['ArrowDown','ArrowLeft','ArrowRight','ArrowUp','End','Enter','Escape','Home',' '].indexOf(key)===-1||that.disabled){return;}event.preventDefault();var mode=that.mode;if(mode==='tree'||that._minimized){that._keydownHandlerTreeMode(key);return;}var dropDownPosition=that.dropDownPosition,leftOrientation=dropDownPosition.indexOf('left')!==-1,topOrientation=dropDownPosition==='top-left'||dropDownPosition==='top-right',openedContainers=that._openedContainers;var lastOpenedContainer=that.$.mainContainer,level=1,focusedItem=void 0;for(var _i246=openedContainers.length-1;_i246>=0;_i246--){if(openedContainers[_i246]!==undefined){lastOpenedContainer=openedContainers[_i246];level=lastOpenedContainer.level;lastOpenedContainer=lastOpenedContainer.itemContainer;break;}}focusedItem=lastOpenedContainer.querySelector('[focus][level="'+level+'"]');switch(key){case'ArrowDown':if(level===1){if(mode==='horizontal'&&!topOrientation){that._levelOneOpenDropDown(focusedItem);}else if(mode!=='horizontal'){that._levelOneNavigate('_getFirstEnabledChild',focusedItem,lastOpenedContainer);}}else{that._navigate('_getNextEnabledChild',focusedItem,lastOpenedContainer);}break;case'ArrowLeft':if(!leftOrientation){that._arrowLeftHandler(level,mode,focusedItem,lastOpenedContainer);}else{if(level===1){if(mode==='horizontal'){that._levelOneNavigate('_getLastEnabledChild',focusedItem,lastOpenedContainer);}else{that._levelOneOpenDropDown(focusedItem);}}else{if(focusedItem instanceof JQX.MenuItemsGroup){that._selectionHandler({target:focusedItem,isTrusted:true});}else{that._levelOneNavigateFromLowerLevel('_getPreviousEnabledChild',focusedItem);}}}break;case'ArrowRight':if(!leftOrientation){that._arrowRightHandler(level,mode,focusedItem,lastOpenedContainer);}else{if(level===1){if(mode==='horizontal'){that._levelOneNavigate('_getFirstEnabledChild',focusedItem,lastOpenedContainer);}}else{if(level===2){that._levelOneNavigateFromLowerLevel('_getNextEnabledChild',focusedItem);}else{that._escapeHandler(focusedItem,level,lastOpenedContainer);}}}break;case'ArrowUp':if(level===1){if(mode==='horizontal'&&topOrientation){that._levelOneOpenDropDown(focusedItem);}else if(mode!=='horizontal'){that._levelOneNavigate('_getLastEnabledChild',focusedItem,lastOpenedContainer);}}else{that._navigate('_getPreviousEnabledChild',focusedItem,lastOpenedContainer);}break;case'End':case'Home':{var enabledChild=key==='End'?that._getLastEnabledChild(lastOpenedContainer):that._getFirstEnabledChild(lastOpenedContainer);if(!enabledChild||focusedItem===enabledChild){return;}if(focusedItem){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');}that._hoverViaKeyboard(enabledChild);break;}case'Enter':if(focusedItem){that._selectionHandler({target:focusedItem,isTrusted:true});}break;case'Escape':if(level>1){if(level===2){that._positionDetection.removeOverlay();}that._escapeHandler(focusedItem,level,lastOpenedContainer);}else if(mode==='dropDown'&&that.opened){that.close({trigger:'interaction',target:'Escape'});}break;case' ':if(focusedItem){that._toggleItem(focusedItem);}break;}}/**
     * Keydown event handler.
     */},{key:'_keydownHandlerTreeMode',value:function _keydownHandlerTreeMode(key){var that=this,menuItems=Array.from(that.$.mainContainer.querySelectorAll('jqx-menu-item, jqx-menu-items-group')),focusedItem=that.$.mainContainer.getElementsByClassName('focus')[0];function canItemBefocused(item){var level=item.level;return item.disabled===false&&item.templateApplied!==true&&(level===1||level>1&&that._isContainerOpened(level,item.parentElement.container)&&item.getBoundingClientRect().height>0);}function moveDown(startIndex){for(var _i247=startIndex;_i247<menuItems.length;_i247++){var currentItem=menuItems[_i247];if(canItemBefocused(currentItem)){if(focusedItem){if(focusedItem===currentItem){break;}focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');}that._hoverViaKeyboard(currentItem);break;}}}function moveUp(startIndex){for(var _i248=startIndex;_i248>=0;_i248--){var currentItem=menuItems[_i248];if(canItemBefocused(currentItem)){if(focusedItem){if(focusedItem===currentItem){break;}focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');}that._hoverViaKeyboard(currentItem);break;}}}function navigateToParentItem(){if(focusedItem.level>1){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');that._hoverViaKeyboard(focusedItem.parentItem);}}var startIndex=void 0;switch(key){case'ArrowDown':if(focusedItem){startIndex=menuItems.indexOf(focusedItem)+1;}else{startIndex=0;}moveDown(startIndex);break;case'ArrowLeft':if(!focusedItem){return;}if(focusedItem instanceof JQX.MenuItem){navigateToParentItem();}else{if(that._isContainerOpened(focusedItem.level+1,focusedItem.container)){that._closeSubContainers(focusedItem.level+1,focusedItem.container,true,true);return;}navigateToParentItem();}break;case'ArrowRight':if(!focusedItem||focusedItem instanceof JQX.MenuItem){return;}if(that._isContainerOpened(focusedItem.level+1,focusedItem.container)){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');that._hoverViaKeyboard(that._getFirstEnabledChild(focusedItem.itemContainer));}else{that._selectionHandler({target:focusedItem,type:'keydown',isTrusted:true},focusedItem);}break;case'ArrowUp':if(focusedItem){startIndex=menuItems.indexOf(focusedItem)-1;}else{startIndex=menuItems.length-1;}moveUp(startIndex);break;case'End':moveUp(menuItems.length-1);break;case'Enter':if(that._minimized&&!that._minimizedDropDownOpened){that._hamburgerIconClickHandler(undefined,that.$.mainContainer);}else if(focusedItem){that._selectionHandler({target:focusedItem,type:'keydown',isTrusted:true});}break;case'Escape':if(that._minimized&&that._minimizedDropDownOpened){that._close();}break;case'Home':moveDown(0);break;case' ':if(focusedItem){that._toggleItem(focusedItem);}break;}}/**
     * Navigates through first-level items.
     */},{key:'_levelOneNavigate',value:function _levelOneNavigate(method,focusedItem,lastOpenedContainer){var that=this;if(!focusedItem){var enabledChild=that[method](lastOpenedContainer);if(enabledChild){that._hoverViaKeyboard(enabledChild);}}else{if(method==='_getLastEnabledChild'){that._navigate('_getPreviousEnabledChild',focusedItem,lastOpenedContainer);}else{that._navigate('_getNextEnabledChild',focusedItem,lastOpenedContainer);}}}/**
     * Navigates to a first-level item.
     */},{key:'_levelOneNavigateFromLowerLevel',value:function _levelOneNavigateFromLowerLevel(method,focusedItem){var that=this,firstLevelItem=that[method](that._openedContainers[2].menuItemsGroup);if(firstLevelItem){if(focusedItem){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');}that._closeSubContainers(2);if(firstLevelItem instanceof JQX.MenuItemsGroup){that._selectionHandler({target:firstLevelItem,isTrusted:true});}else{that._hoverViaKeyboard(firstLevelItem);}}}/**
     * Opens first-level dropdown containers via the keyboard.
     */},{key:'_levelOneOpenDropDown',value:function _levelOneOpenDropDown(focusedItem){if(focusedItem&&focusedItem instanceof JQX.MenuItemsGroup){this._selectionHandler({target:focusedItem,isTrusted:true});}}/**
     * External main container handler.
     */},{key:'_mainContainerHandler',value:function _mainContainerHandler(event){var that=this;if(!that._minimized||that.dropDownAppendTo===null){return;}switch(event.type){case'click':that._selectionHandler(event);break;case'mouseleave':that._mouseleaveHandler(event);break;case'mouseout':that._mouseoutMouseoverHandler(event);break;case'mouseover':that._mouseoutMouseoverHandler(event);break;}}/**
     * jqx-menu-item selection handler.
     */},{key:'_menuItemSelectionHandler',value:function _menuItemSelectionHandler(closestItem,event){var that=this;function focus(){if(that.enableShadowDOM&&(that.shadowRoot.activeElement||document.activeElement)!==that&&that.dropDownAppendTo!==null&&event.type==='click'&&!that.shadowRoot.contains(closestItem)){that.focus();}else if(document.activeElement!==that&&that.dropDownAppendTo!==null&&event.type==='click'&&!that.contains(closestItem)){that.focus();}}if(closestItem.disabled||closestItem.templateApplied){focus();return;}if(!that._toggleItem(closestItem)){that.$.fireEvent('itemClick',{'item':closestItem,'label':closestItem.label,'value':closestItem.value});if(that.mode!=='tree'){that._close();if(that.mode==='dropDown'){that._ripple(closestItem,event);that.close({trigger:'interaction',target:closestItem});return;}}}that._ripple(closestItem,event);focus();}/**
     * jqx-menu-items-group selection handler.
     */},{key:'_menuItemsGroupSelectionHandler',value:function _menuItemsGroupSelectionHandler(closestItemsGroup,event,fireEvent){var that=this,mode=that.mode,container=closestItemsGroup.container,level=container.level,defaultView=mode!=='tree'&&!that._minimized;if(that._treeAnimationInProgress===container){return;}that._discardKeyboardHover();if(document.activeElement!==that&&that.dropDownAppendTo!==null&&event.type==='click'&&!that.contains(event.target)){that.focus();}if(event.type==='click'&&(!event.target.classList.contains('jqx-'+that._element+'-items-group-arrow')&&that._toggleItem(closestItemsGroup)||that.selectionMode==='mouseenter'&&mode!=='tree'&&!that._minimized)){return;}var animation=that.hasAnimation;if(that._isContainerOpened(level,container)){that._closeSubContainers(level,container,true,fireEvent!==false);if(defaultView&&closestItemsGroup.hasAttribute('focus')){that._focusedViaKeyboard=closestItemsGroup;}}else{var expandingEvent=that.$.fireEvent('expanding',{'item':closestItemsGroup,'label':closestItemsGroup.label,'path':closestItemsGroup.path,'value':closestItemsGroup.value,'children':closestItemsGroup.itemContainer.children});if(expandingEvent.defaultPrevented){return;}that._positionDetection.placeOverlay();if(defaultView){that._closeSubContainers(level);}if(animation&&!defaultView){if(event.type!=='expand'){that._ensureVisibleOnTransitionend=closestItemsGroup;}that._expandSection(container);}if(that._edgeMacFF&&level===2&&defaultView){container.$.removeClass('not-in-view');}container.$.removeClass('jqx-visibility-hidden');if(defaultView||event.type!=='expand'){if(!defaultView){var currentFocus=that.$.mainContainer.getElementsByClassName('focus')[0];if(currentFocus){currentFocus.$.removeClass('focus');currentFocus.removeAttribute('focus');}that._focusedViaKeyboard=closestItemsGroup;}else if(event.type==='keydown'){that._focusedViaKeyboard=closestItemsGroup;}closestItemsGroup.$.addClass('focus');closestItemsGroup.setAttribute('focus','');}closestItemsGroup.$.addClass('jqx-'+that._element+'-items-group-opened');closestItemsGroup.$.addClass('jqx-'+that._element+'-items-group-expanded');that._addOpenedContainer(level,container);if(defaultView){that._ensureVisible(closestItemsGroup);if(closestItemsGroup.level>1&&closestItemsGroup.parentElement.dropDownHeightSet){var dropDownPosition=that.dropDownPosition,top=closestItemsGroup.getBoundingClientRect().top-closestItemsGroup.parentElement.container.getBoundingClientRect().top;if(dropDownPosition.indexOf('bottom')!==-1||dropDownPosition==='auto'){container.style.top=top+'px';}else if(dropDownPosition.indexOf('top')!==-1){container.style.top=top+closestItemsGroup.offsetHeight+'px';}else{container.style.top=top+closestItemsGroup.offsetHeight/2+'px';}}if(container.itemContainer.checkOverflow&&container.itemContainer.dropDownHeightSet){that._checkOverflow(container.itemContainer,false,[container.children[0],container.children[2]]);delete container.itemContainer.checkOverflow;}}that._positionExternalContainer(container,closestItemsGroup);if(mode!=='tree'&&!that._minimized){that._browserBoundsDetection(container);}else if(!animation){that._browserBoundsDetection(that.$.mainContainer);}if(event.type===undefined){that._hoverViaKeyboard(that._getFirstEnabledChild(closestItemsGroup.itemContainer));}if(fireEvent!==false){that.$.fireEvent('expand',{'item':closestItemsGroup,'label':closestItemsGroup.label,'path':closestItemsGroup.path,'value':closestItemsGroup.value,'children':closestItemsGroup.itemContainer.children});}}if(defaultView){that._ripple(closestItemsGroup,event);}else if(mode==='tree'&&!animation){that._checkOverflow(that.$.mainContainer,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);if(!that._minimized&&event.type!=='expand'){that._ensureVisible(closestItemsGroup);}}}/**
     * Mouseenter handler.
     */},{key:'_mouseenterHandler',value:function _mouseenterHandler(){var that=this;if(that.autoFocusOnMouseenter&&document.activeElement!==that){that.focus();}}/**
     * Mouseleave handler.
     */},{key:'_mouseleaveHandler',value:function _mouseleaveHandler(event){var that=this;if(that.selectionMode==='mouseenter'&&that.mode!=='tree'&&!that._minimized){if(that.dropDownAppendTo!==null&&event.relatedTarget){if(that.contains(event.target)){var externalContainer=event.relatedTarget.closest('.jqx-menu-drop-down');if(externalContainer&&externalContainer.ownerElement===that){return;}}else if(that.contains(event.relatedTarget)){return;}}that._isElementHovered=false;that._autoCloseTimeout=setTimeout(function(){var context=that.context;clearTimeout(that._autoCloseTimeout);if(!that._isElementHovered){that.context=that;that._close();that.context=context;}},that.autoCloseDelay);}}/**
     * Mouseout/mouseover handler.
     */},{key:'_mouseoutMouseoverHandler',value:function _mouseoutMouseoverHandler(event){var that=this;if(that.disabled||that.displayLoadingIndicator){return;}var closestItem=event.target.closest('jqx-menu-item')||event.target.closest('jqx-menu-items-group');if(that.enableShadowDOM){closestItem=event.composedPath()[0].closest('jqx-menu-item')||event.composedPath()[0].closest('jqx-menu-items-group')||closestItem;}if(event.type==='mouseover'){that._isElementHovered=true;}if(closestItem===null||closestItem.disabled||closestItem.templateApplied){return;}if((that.mode==='tree'||that._minimized)&&closestItem.hasAttribute('focus')&&event.relatedTarget&&(event.target.parentElement===event.relatedTarget||event.relatedTarget.parentElement===event.target)){return;}that._discardKeyboardHover(false);if(event.type==='mouseover'){if(that.selectionMode==='mouseenter'&&that.mode!=='tree'&&!that._minimized){if(closestItem instanceof JQX.MenuItemsGroup&&!closestItem.hasAttribute('hover')){that._selectionHandler(event,closestItem);}else if(closestItem instanceof JQX.MenuItem){that._closeSubContainers(closestItem.level+1);}}var closestDropDown=event.target.closest('.jqx-menu-drop-down');if(!closestDropDown||closestDropDown&&!closestItem.contains(closestDropDown)){closestItem.$.addClass('hover');closestItem.setAttribute('hover','');that._discardKeyboardHover(true);}}else{if(that.mode!=='tree'&&!that._minimized){if(that.selectionMode==='mouseenter'&&event.relatedTarget===that.$.mainContainer){that._close();}if(closestItem instanceof JQX.MenuItemsGroup&&closestItem.container&&!closestItem.container.$.hasClass('jqx-visibility-hidden')){return;}}closestItem.$.removeClass('hover');closestItem.removeAttribute('hover');}}/**
     * Moves dropdowns to external container.
     */},{key:'_moveDropDownsToExternalContainer',value:function _moveDropDownsToExternalContainer(){var that=this;for(var _i249=0;_i249<that._containersInBody.length;_i249++){var container=that._containersInBody[_i249];that._dropDownParent.appendChild(container);container.$.listen('click',that._selectionHandler.bind(that));container.$.listen('mouseleave',that._mouseleaveHandler.bind(that));container.$.listen('mouseout',that._mouseoutMouseoverHandler.bind(that));container.$.listen('mouseover',that._mouseoutMouseoverHandler.bind(that));}for(var _i250=0;_i250<that._containers.length;_i250++){var _container3=that._containers[_i250];_container3.ownerElement=that;if(that.theme!==''){_container3.classList.add(that.theme);}_container3.classList.add('jqx-drop-down-repositioned');_container3.setAttribute('mode',that.mode);_container3.setAttribute('drop-down-position',that.dropDownPosition);if(that.checkboxes){_container3.setAttribute('checkboxes','');}}}/**
     * Moves dropdowns to the Menu.
     */},{key:'_moveDropDownsToMenu',value:function _moveDropDownsToMenu(){var that=this;for(var _i251=0;_i251<that._containersInBody.length;_i251++){var container=that._containersInBody[_i251];container.$.unlisten('click');container.$.unlisten('mouseleave');container.$.unlisten('mouseout');container.$.unlisten('mouseover');container.style.left='';container.style.right='';container.style.top='';container.style.marginLeft='';container.style.marginTop='';container.menuItemsGroup.appendChild(container);}for(var _i252=0;_i252<that._containers.length;_i252++){var _container4=that._containers[_i252];if(that.theme!==''){_container4.classList.remove(that.theme);}_container4.classList.remove('jqx-drop-down-repositioned');_container4.removeAttribute('mode');_container4.removeAttribute('drop-down-position');_container4.removeAttribute('checkboxes');}}/**
     * Navigates to an item via the keyboard.
     */},{key:'_navigate',value:function _navigate(method,focusedItem,lastOpenedContainer){var that=this;if(!focusedItem){if(method==='_getNextEnabledChild'){that._hoverViaKeyboard(that._getFirstEnabledChild(lastOpenedContainer));}else{that._hoverViaKeyboard(that._getLastEnabledChild(lastOpenedContainer));}return;}var navigateToChild=that[method](focusedItem);if(navigateToChild){focusedItem.$.removeClass('focus');focusedItem.removeAttribute('focus');that._hoverViaKeyboard(navigateToChild);}}/**
     * Positions an external dropdown container.
     */},{key:'_positionExternalContainer',value:function _positionExternalContainer(container,menuItemsGroup){var that=this;if(that.dropDownAppendTo===null||container.level!==2){return;}var dropDownPosition=that.dropDownPosition,mode=that.mode,menuItemsGroupRect=menuItemsGroup.getBoundingClientRect(),dropDownOffset=that._positionDetection.getDropDownOffset(),top=menuItemsGroupRect.top+dropDownOffset.y,bottom=menuItemsGroupRect.bottom+dropDownOffset.y;var left=menuItemsGroupRect.left+dropDownOffset.x;container.style.left='';container.style.right='';container.style.top='';if(dropDownPosition.indexOf('left')!==-1){left-=container.offsetWidth;if(mode==='horizontal'||dropDownPosition==='overlay-left'){left+=menuItemsGroupRect.width;}container.style.left=left+'px';container.style.right='initial';}else if(mode==='horizontal'||dropDownPosition==='overlay-right'){container.style.left=left+'px';}else{container.style.left=left+menuItemsGroupRect.width+'px';}switch(dropDownPosition){case'bottom-right':case'bottom-left':case'auto':if(mode==='horizontal'){container.style.top=bottom+'px';}else{container.style.top=top+'px';}break;case'top-right':case'top-left':if(mode==='horizontal'){container.style.top=top-container.offsetHeight+'px';}else{container.style.top=bottom-container.offsetHeight+'px';}break;case'overlay-right':case'overlay-left':container.style.top=top+menuItemsGroupRect.height/2+'px';break;}}/**
     * Processes "dataSource" object.
     */},{key:'_processDataSource',value:function _processDataSource(){var that=this,dataSource=that.dataSource,displayMember=that.displayMember,itemsMember=that.itemsMember,valueMember=that.valueMember;function processItem(item,parent){var element=void 0;if(Array.isArray(item[itemsMember])&&item[itemsMember].length>0){element=document.createElement('jqx-'+that._element+'-items-group');if(item.checkable===true){element.set('checkable',true);}if(item.checkMode==='checkbox'||item.checkMode==='radioButton'){element.set('checkMode',item.checkMode);}if(item.dropDownHeight){element.set('dropDownHeight',item.dropDownHeight);}if(item.expanded===true&&that.mode==='tree'){element.set('expanded',true);}for(var _i253=0;_i253<item[itemsMember].length;_i253++){processItem(item[itemsMember][_i253],element);}}else{element=document.createElement('jqx-'+that._element+'-item');if(item.shortcut!==undefined){element.set('shortcut',item.shortcut);}if(item.customAttribute){element.setAttribute(item.customAttribute,'');}}if(item.checked===true){element.set('checked',true);}if(item.disabled===true){element.set('disabled',true);}if(item[displayMember]!==undefined){element.set('label',item[displayMember]);}if(item.selected===true){element.set('selected',true);}if(item.separator===true){element.set('separator',true);}if(item[valueMember]!==undefined){element.set('value',item[valueMember]);}parent.appendChild(element);}that.$.mainContainer.innerHTML='';for(var _i254=0;_i254<dataSource.length;_i254++){var currentItem=dataSource[_i254];processItem(currentItem,that.$.mainContainer);}that._processHTML(that.$.mainContainer,1);}/**
     * Processes initial HTML structure.
     */},{key:'_processHTML',value:function _processHTML(item,level,autoSort){var that=this;var container=void 0,itemContainer=void 0;if(level>1){container=that._createMenuItemsGroupContainer(item,level);itemContainer=container.itemContainer;if((item.expanded||item.hasAttribute('expanded'))&&that.mode==='tree'){that._menuItemsGroupsToExpand.push(item);}else{item.set('expanded',false);item.removeAttribute('expanded');}}var itemChildren=Array.from(item.children),checkedChildren=[],itemFragment=document.createDocumentFragment();var pathOffset=0;for(var _i255=0;_i255<itemChildren.length;_i255++){if(level>1&&_i255===0){pathOffset++;continue;}var currentItem=itemChildren[_i255];if(!(currentItem instanceof JQX.MenuItem||currentItem instanceof JQX.MenuItemsGroup)){currentItem.parentElement.removeChild(currentItem);pathOffset++;continue;}that._createItemHTMLStructure(currentItem,level,item,_i255-pathOffset);if(currentItem.checked||currentItem.hasAttribute('checked')){if(!currentItem.disabled&&!currentItem.hasAttribute('disabled')&&!currentItem.templateApplied){checkedChildren.push(currentItem);}else{currentItem.set('checked',false);currentItem.removeAttribute('checked');}}if(level>1){itemFragment.appendChild(currentItem);}if(currentItem instanceof JQX.MenuItemsGroup){that._processHTML(currentItem,level+1);}}if(level>1){itemContainer.appendChild(itemFragment);item.container=container;item.itemContainer=itemContainer;if(item instanceof JQX.MenuItemsGroup){var arrowElement=document.createElement('div');arrowElement.className='jqx-'+that._element+'-items-group-arrow';that._setArrowDirection(arrowElement,level);item.firstElementChild.appendChild(arrowElement);}that._containers.push(container);if(level===2){that._containersInBody.push(container);if(that._edgeMacFF){container.addEventListener('transitionend',function(event){if(event.target===this&&this.$.hasClass('jqx-visibility-hidden')){this.style.left='';this.style.top='';this.$.addClass('not-in-view');}});}}if(that.dropDownAppendTo===null||that.mode==='tree'||that._minimized){item.appendChild(container);}else{container.ownerElement=that;container.classList.add('jqx-drop-down-repositioned');container.setAttribute('mode',that.mode);container.setAttribute('drop-down-position',that.dropDownPosition);if(that.checkboxes){container.setAttribute('checkboxes','');}if(that.theme!==''){container.$.addClass(that.theme);}container.setAttribute('animation',that.animation);if(level===2){that._dropDownParent.appendChild(container);container.$.listen('click',that._selectionHandler.bind(that));container.$.listen('mouseleave',that._mouseleaveHandler.bind(that));container.$.listen('mouseout',that._mouseoutMouseoverHandler.bind(that));container.$.listen('mouseover',that._mouseoutMouseoverHandler.bind(that));}else{item.appendChild(container);}}}that._validateRadioButtonSelection(item,level,checkedChildren);if(that._sortItems&&autoSort!==false){that._sortItems(item);}}/**
     * Processes initial HTML structure with <ul> element.
     */},{key:'_processUList',value:function _processUList(){var that=this,menuItemsGroupOpeningTagRegex=new RegExp(/<li>(.(?!<\/li>)|\n)*?<ul>/),menuItemsGroupClosingTagRegex=new RegExp(/<\/ul>(.|\n)*?<\/li>/);var innerHTML=that.$.mainContainer.firstElementChild.innerHTML;innerHTML=innerHTML.replace(/\r?\n|\r/g,'');innerHTML=innerHTML.replace(/<li(.|\n)*?>/g,'<li>');innerHTML=innerHTML.replace(/<li><\/li>/g,'<li> </li>');innerHTML=innerHTML.replace(/<ul(.|\n)*?>/g,'<ul>');while(menuItemsGroupOpeningTagRegex.test(innerHTML)){var match=menuItemsGroupOpeningTagRegex.exec(innerHTML),content='<jqx-'+that._element+'-items-group>'+match[0].slice(4,match[0].length-4);innerHTML=innerHTML.replace(match[0],content);}while(menuItemsGroupClosingTagRegex.test(innerHTML)){var _match=menuItemsGroupClosingTagRegex.exec(innerHTML),_content3='</jqx-'+that._element+'-items-group>';innerHTML=innerHTML.replace(_match[0],_content3);}innerHTML=innerHTML.replace(/li>/g,'jqx-'+that._element+'-item>');that.$.mainContainer.innerHTML=innerHTML;}/**
     * Refreshes the "_containers" and "_containersFixedHeight" arrays.
     */},{key:'_refreshContainersArrays',value:function _refreshContainersArrays(){var that=this;for(var _i256=that._containers.length-1;_i256>=0;_i256--){var container=that._containers[_i256];if(!document.body.contains(container)){that._containers.splice(_i256,1);var index=that._containersFixedHeight.indexOf(container);if(index>-1){that._containersFixedHeight.splice(index,1);that._additionalScrollButtons.splice(index,1);}}}that._checkContainersLength();}/**
     * Refreshes numeric item paths.
     */},{key:'_refreshItemPaths',value:function _refreshItemPaths(item,firstLevel,getChildren,resetOriginalIndex){var that=this;var container=void 0;if(firstLevel){container=item;}else{container=item.container.itemContainer;}var children=getChildren?getChildren(item):container.children;for(var _i257=0;_i257<children.length;_i257++){var currentItem=children[_i257];var currentItemPath=void 0;if(resetOriginalIndex){currentItem.originalIndex=_i257;}if(!firstLevel){currentItemPath=item.path+'.'+_i257;}else{currentItemPath=''+_i257;}currentItem.path=currentItemPath;that._menuItems[currentItemPath]=currentItem;if(currentItem instanceof JQX.MenuItemsGroup){that._refreshItemPaths(currentItem,undefined,getChildren,resetOriginalIndex);}}}/**
     * Removes fixed heights of containers.
     */},{key:'_removeContainerFixedHeight',value:function _removeContainerFixedHeight(){var that=this;for(var _i258=0;_i258<that._containersFixedHeight.length;_i258++){var container=that._containersFixedHeight[_i258];container.style.height='';container.itemContainer.$.removeClass('scroll-buttons-shown');container.itemContainer.$.removeClass('one-button-shown');container.children[0].$.addClass('jqx-hidden');container.children[2].$.addClass('jqx-hidden');container.itemContainer.checkOverflow=true;}}/**
     * Removes containers added to the body or a custom external element.
     */},{key:'_removeContainersInBody',value:function _removeContainersInBody(){var that=this;if(that.dropDownAppendTo!==null&&!that._minimized){for(var _i259=0;_i259<that._containersInBody.length;_i259++){that._dropDownParent.removeChild(that._containersInBody[_i259]);}}}/**
     * Changes the parent of a Menu in 'dropDown' mode.
     */},{key:'_reparentMenu',value:function _reparentMenu(dynamicChange,oldDropDownParent){var that=this;if(that.mode!=='dropDown'||that._dropDownParent===null&&!dynamicChange||that._dropDownParent===that.parentElement){return;}if(!dynamicChange||oldDropDownParent===null){that._positionRelativeTo=that.parentElement;}else if(that._dropDownParent===null){that._positionRelativeTo.appendChild(that);that._positionRelativeTo=null;return;}that._dropDownParent.appendChild(that);}/**
     * Resize handler.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(that._suppressResizeHandler){delete that._suppressResizeHandler;return;}var minimizeWidth=that.minimizeWidth,mode=that.mode;if(minimizeWidth!==null&&mode!=='dropDown'){if(that.offsetWidth<=minimizeWidth&&!that._minimized){that.minimize();return;}else if(that.offsetWidth>minimizeWidth){that.maximize();}}if(that.dropDownAppendTo!==null||mode==='tree'){that._checkOverflow(that.$.mainContainer,mode==='horizontal',[that.$.scrollButtonNear,that.$.scrollButtonFar]);}}/**
     * Triggers ripple effect.
     */},{key:'_ripple',value:function _ripple(target,event){var that=this;if(that.hasRippleAnimation&&event.type==='click'){JQX.Utilities.Animation.Ripple.animate(target,event.pageX,event.pageY);return true;}}/**
     * Scrolls using scroll buttons.
     */},{key:'_scroll',value:function _scroll(scrollButton){if(scrollButton.closest('[template-applied]')){return;}var that=this,mode=that.mode,scrollCoefficient=scrollButton.classList.contains('jqx-scroll-button-near')?-1:1;if(scrollButton.parentElement===that.$.container){var mainContainer=that.$.mainContainer;if(mode!=='tree'){that._closeSubContainers(2);}if(that.mode==='horizontal'){mainContainer.scrollLeft=mainContainer.scrollLeft+scrollCoefficient*10;that._updateScrollButtonVisibility(mainContainer,true,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}else{mainContainer.scrollTop=mainContainer.scrollTop+scrollCoefficient*10;that._updateScrollButtonVisibility(mainContainer,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}}else{var container=scrollButton.parentElement,itemContainer=container.itemContainer;that._closeSubContainers(container.level+1);itemContainer.scrollTop=itemContainer.scrollTop+scrollCoefficient*10;that._updateScrollButtonVisibility(itemContainer,false,[container.children[0],container.children[2]]);}}/**
     * Selection handler.
     */},{key:'_selectionHandler',value:function _selectionHandler(event,closestItemsGroup){var that=this,target=event.target;if(target.closest('[template-applied]')){event.stopPropagation();}if(that.disabled||that.displayLoadingIndicator){return;}if(closestItemsGroup===undefined){if(event.type==='click'){var closestScrollButton=target.closest('jqx-repeat-button');if(closestScrollButton){that._scroll(closestScrollButton,event);return;}}if(!event.isTrusted){return;}var closestItem=target.closest('jqx-'+that._element+'-item');if(closestItem){that._menuItemSelectionHandler(closestItem,event);return;}closestItemsGroup=target.closest('jqx-'+that._element+'-items-group');if(closestItemsGroup&&(target===closestItemsGroup.container||target===closestItemsGroup.container.firstElementChild)){return;}}if(closestItemsGroup&&!closestItemsGroup.disabled){that._menuItemsGroupSelectionHandler(closestItemsGroup,event);}}/**
     * Sets direction of arrows.
     */},{key:'_setArrowDirection',value:function _setArrowDirection(arrowElement,level){var that=this,mode=that.mode;if(mode==='tree'||that._minimized){arrowElement.className='jqx-'+that._element+'-items-group-arrow down jqx-arrow-down';return;}if(that.dropDownPosition.slice(0,7)!=='overlay'){if(level===2&&mode==='horizontal'){if(that.dropDownPosition.slice(0,3)!=='top'){arrowElement.className='jqx-menu-items-group-arrow down jqx-arrow-down';}else{arrowElement.className='jqx-menu-items-group-arrow up jqx-arrow-up';}}else{arrowElement.className='jqx-menu-items-group-arrow right jqx-arrow-right';}}else{arrowElement.className='jqx-menu-items-group-arrow minus';}}/**
     * Sets whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}var tabindex=that.getAttribute('tabindex');if(tabindex===null||tabindex<0){that.setAttribute('tabindex',0);}}/**
     * Sets the HTML content of an item's label or shortcut.
     */},{key:'_setLabel',value:function _setLabel(label,labelElement,item,labelSet){var potentialHTMLTemplate=document.getElementById(label);if(potentialHTMLTemplate!==null&&potentialHTMLTemplate.tagName.toLowerCase()==='template'){// label is the id of an HTML template
var templateContent=document.importNode(potentialHTMLTemplate.content,true);if(item instanceof JQX.MenuItem){labelElement.appendChild(templateContent);if(labelSet){item.setAttribute('template-applied','');item.templateApplied=true;}}else if(JQX.ListMenu&&this instanceof JQX.ListMenu){var regex=new RegExp(/{{title="(.*)"}}/);for(var _i260=0;_i260<templateContent.childNodes.length;_i260++){if(regex.test(templateContent.childNodes[_i260].innerHTML)){item.titleLabel=regex.exec(templateContent.childNodes[_i260].innerHTML)[1];templateContent.childNodes[_i260].innerHTML=templateContent.childNodes[_i260].innerHTML.replace(regex,'');}else if(regex.test(templateContent.childNodes[_i260].textContent)){item.titleLabel=regex.exec(templateContent.childNodes[_i260].textContent)[1];templateContent.childNodes[_i260].textContent=templateContent.childNodes[_i260].textContent.replace(regex,'');}}if(item.titleLabel===undefined){item.titleLabel=templateContent.textContent;}labelElement.appendChild(templateContent);}else{labelElement.innerHTML=label;item.titleLabel=label;}}else{labelElement.innerHTML=label;if(item instanceof JQX.MenuItemsGroup){item.titleLabel=label;}}}/**
     * Toggles an item's checked state.
     */},{key:'_toggleItem',value:function _toggleItem(item){var that=this;if(that.checkboxes){var parent=item.level===1?that:item.parentItem;if(parent.checkable){var fireItemClick=false;if(parent.checkMode==='checkbox'){fireItemClick=true;item.set('checked',!item.checked);that.$.fireEvent('itemCheckChange',{'item':item,'label':item.label,'value':item.value,checked:item.checked});}else if(!item.checked){fireItemClick=true;item.set('checked',true);that._uncheckSiblings(item);that.$.fireEvent('itemCheckChange',{'item':item,'label':item.label,'value':item.value,checked:true});}if(item instanceof JQX.MenuItem&&fireItemClick){that.$.fireEvent('itemClick',{'item':item,'label':item.label,'value':item.value});}if(that.mode!=='tree'&&that.elementName!=='ListMenu'){that._close();that.close();}return true;}}return false;}/**
     * transitionend handler.
     */},{key:'_transitionendHandler',value:function _transitionendHandler(event){var that=this;if(that.mode==='dropDown'&&that.opened&&event.target===that&&document.activeElement!==that&&!that._noAutoFocus){that.focus();}}/**
     * Collapse animation transitionend handler.
     */},{key:'_transitionendHandlerCollapse',value:function _transitionendHandlerCollapse(){var menu=void 0,container=void 0;if(arguments.length===1){if(arguments[0].propertyName==='visibility'){return;}container=this;menu=container.menuItemsGroup.menu;}else{menu=arguments[0];container=arguments[1];}container.menuItemsGroup.$.removeClass('jqx-'+menu._element+'-items-group-expanded');container.removeEventListener('transitionend',menu._transitionendHandlerCollapse);container.style.height=null;container.$.addClass('jqx-visibility-hidden');menu._checkOverflow(menu.$.mainContainer,false,[menu.$.scrollButtonNear,menu.$.scrollButtonFar]);if(menu._minimized){menu._browserBoundsDetection(menu.$.mainContainer);}delete menu._treeAnimationInProgress;}/**
     * Expand animation transitionend handler.
     */},{key:'_transitionendHandlerExpand',value:function _transitionendHandlerExpand(){var menu=void 0,container=void 0;if(arguments.length===1){if(arguments[0].propertyName==='visibility'){return;}container=this;menu=container.menuItemsGroup.menu;}else{menu=arguments[0];container=arguments[1];}container.removeEventListener('transitionend',menu._transitionendHandlerExpand);container.style.height=null;menu._checkOverflow(menu.$.mainContainer,false,[menu.$.scrollButtonNear,menu.$.scrollButtonFar]);if(menu._minimized){menu._browserBoundsDetection(menu.$.mainContainer);}if(menu._ensureVisibleOnTransitionend){menu._ensureVisible(menu._ensureVisibleOnTransitionend);delete menu._ensureVisibleOnTransitionend;}delete menu._treeAnimationInProgress;}/**
     * Unchecks siblings (when "checkMode" is 'radioButton').
     */},{key:'_uncheckSiblings',value:function _uncheckSiblings(item){for(var _i261=0;_i261<item.parentElement.childElementCount;_i261++){var currentItem=item.parentElement.children[_i261];if(currentItem!==item&&currentItem.checked){currentItem.set('checked',false);this.$.fireEvent('itemCheckChange',{'item':currentItem,'label':currentItem.label,'value':currentItem.value,checked:false});}}}/**
     * Unsorts items.
     */},{key:'_unsortItems',value:function _unsortItems(item,noRecursion){var that=this;var itemChildren=void 0,parent=void 0,originalOrder=[];if(item===that.$.mainContainer){parent=item;itemChildren=item.children;}else{parent=item.container.firstElementChild;itemChildren=parent.children;}for(var _i262=0;_i262<itemChildren.length;_i262++){var currentItem=itemChildren[_i262];originalOrder[currentItem.originalIndex]=currentItem;if(currentItem instanceof JQX.MenuItemsGroup&&noRecursion===undefined){that._unsortItems(currentItem);}}if(originalOrder.length<2){return;}for(var _i263=0;_i263<originalOrder.length;_i263++){parent.appendChild(originalOrder[_i263]);}}/**
     * Updates scroll button visibility.
     */},{key:'_updateScrollButtonVisibility',value:function _updateScrollButtonVisibility(element,horizontal,scrollButtons){var that=this,overflow=that.overflow,mainContainer=element===that.$.mainContainer;if(mainContainer&&overflow==='hidden'){return;}var showNear=true,showFar=true,scrollDirection=void 0,dimension=void 0,scrollDimension=void 0;if(horizontal){scrollDirection='scrollLeft';dimension='offsetWidth';scrollDimension='scrollWidth';}else{scrollDirection='scrollTop';dimension='offsetHeight';scrollDimension='scrollHeight';}if(Math.round(element[scrollDirection])===0){showNear=false;}if(Math.round(element[dimension]+element[scrollDirection])>=Math.round(element[scrollDimension])){showFar=false;}if(!mainContainer||overflow==='auto'){if(showNear&&showFar){scrollButtons[0].$.removeClass('jqx-hidden');scrollButtons[1].$.removeClass('jqx-hidden');element.classList.remove('one-button-shown');return;}if(showNear){scrollButtons[0].$.removeClass('jqx-hidden');}else{scrollButtons[0].$.addClass('jqx-hidden');}if(showFar){scrollButtons[1].$.removeClass('jqx-hidden');}else{scrollButtons[1].$.addClass('jqx-hidden');}element.classList.add('one-button-shown');}else if(overflow==='scroll'&&!that.disabled){scrollButtons[0].disabled=!showNear;scrollButtons[1].disabled=!showFar;}}/**
     * Validates radio button selection.
     */},{key:'_validateRadioButtonSelection',value:function _validateRadioButtonSelection(item,level,checkedChildren){var that=this;if(that.checkboxes){var parentItem=void 0,parentElement=void 0;if(level===1){parentItem=that;parentElement=that.$.mainContainer;}else{parentItem=item;parentElement=item.itemContainer;}if(parentItem.checkMode==='radioButton'&&parentItem.checkable){if(checkedChildren.length>1){for(var _i264=checkedChildren.length-2;_i264>=0;_i264--){checkedChildren[_i264].set('checked',false);}}else if(checkedChildren.length===0){var firstEnabledChild=that._getFirstEnabledChild(parentElement);if(firstEnabledChild){firstEnabledChild.set('checked',true);}}}}}/**
     * wheel handler.
     */},{key:'_wheelHandler',value:function _wheelHandler(event){var that=this;if(!that.enableMouseWheelAction||that._wheelInProgress||that.disabled||that.displayLoadingIndicator||that.$.mainContainer.offsetHeight===that.$.mainContainer.scrollHeight){if(that._wheelInProgress){event.preventDefault();}return;}event.preventDefault();that._dragStartDetails={startY:event.pageY,x:event.pageX,y:event.pageY,startTime:Date.now(),target:event.target};that._wheelInProgress=true;var swipeInfo={pageY:event.pageY+(event.deltaY>0?-1:1)*50};that._endSwiping(swipeInfo,that._dragStartDetails.startTime+100,true);}},{key:'items',/**
     * Menu's items.
     */get:function get(){return this._menuItems;}}],[{key:'properties',// Menu's properties.
get:function get(){return{'autoCloseDelay':{value:100,type:'number'},'autoFocusOnMouseenter':{value:false,type:'boolean'},'checkable':{value:false,type:'boolean'},'checkboxes':{value:false,type:'boolean'},'checkMode':{value:'checkbox',allowedValues:['checkbox','radioButton'],type:'string'},'closeAction':{value:'up',allowedValues:['up','down','none'],type:'string'},'dataSource':{value:null,type:'array?',reflectToAttribute:false},'displayMember':{value:'label',type:'string'},'dropDownAppendTo':{value:null,type:'any?'},'dropDownOverlay':{value:false,type:'boolean'},'dropDownPosition':{value:'auto',allowedValues:['top-left','top-right','bottom-left','bottom-right','overlay-left','overlay-right','auto'],type:'string'},'enableMouseWheelAction':{value:false,type:'boolean'},'itemsMember':{value:'items',type:'string'},'minimizeIconTemplate':{value:null,type:'string?'},'minimizeWidth':{value:null,type:'number?'},'mode':{value:'horizontal',allowedValues:['horizontal','vertical','dropDown','tree'],type:'string'},'opened':{value:false,type:'boolean'},'overflow':{value:'auto',allowedValues:['auto','hidden','scroll'],type:'string'},'selectionMode':{value:'click',allowedValues:['click','mouseenter'],type:'string'},'valueMember':{value:'value',type:'string'}};}/**
     * Menu's event listeners.
     */},{key:'listeners',get:function get(){return{'container.click':'_selectionHandler','keydown':'_keydownHandler','mouseenter':'_mouseenterHandler','mouseleave':'_mouseleaveHandler','container.mouseout':'_mouseoutMouseoverHandler','container.mouseover':'_mouseoutMouseoverHandler','resize':'_resizeHandler','transitionend':'_transitionendHandler','hamburgerIcon.click':'_hamburgerIconClickHandler','mainContainer.click':'_mainContainerHandler','mainContainer.mouseleave':'_mainContainerHandler','mainContainer.mouseout':'_mainContainerHandler','mainContainer.mouseover':'_mainContainerHandler','document.down':'_documentDownHandler','document.up':'_documentUpHandler'};}/**
     * Menu's required files.
     */},{key:'requires',get:function get(){return{'JQX.RepeatButton':'jqxbutton.js'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.menu.css'];}}]);return Menu;}(JQX.BaseElement));/**
 * List Menu custom element.
 */JQX('jqx-list-menu',function(_JQX$Menu){babelHelpers.inherits(ListMenu,_JQX$Menu);function ListMenu(){babelHelpers.classCallCheck(this,ListMenu);return babelHelpers.possibleConstructorReturn(this,(ListMenu.__proto__||Object.getPrototypeOf(ListMenu)).apply(this,arguments));}babelHelpers.createClass(ListMenu,[{key:'template',/**
     * List Menu's HTML template.
     */value:function template(){return'<div id="container">\n                    <div id="hamburgerIcon" class="jqx-hamburger-icon jqx-hidden">\n                        <div id="hamburgerIconLineTop" class="jqx-hamburger-icon-line jqx-hamburger-icon-line-top"></div>\n                        <div id="hamburgerIconLineCenter" class="jqx-hamburger-icon-line jqx-hamburger-icon-line-center"></div>\n                        <div id="hamburgerIconLineBottom" class="jqx-hamburger-icon-line jqx-hamburger-icon-line-bottom"></div>\n                        <div id="customIconContainer" class="jqx-hamburger-icon-custom-container jqx-hidden"></div>\n                    </div>\n                    <div id="view" class="jqx-list-menu-view">\n                        <div id="header" class="jqx-header jqx-hidden">\n                            <jqx-button id="backButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable>\n                                <div class="jqx-arrow jqx-arrow-left"></div>\n                            </jqx-button>\n                            <div id="title" class="jqx-title"></div>\n                        </div>\n                        <div class="jqx-list-menu-filter-input-container jqx-hidden" id="filterInputContainer">\n                            <input id="filterInput" class="jqx-filter-input" disabled="[[disabled]]" placeholder="[[filterInputPlaceholder]]" type="text" />\n                        </div>\n                        <jqx-repeat-button id="scrollButtonNear" class="jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-near jqx-hidden" animation="[[animation]]" unfocusable>\n                            <div id="arrowNear" class="jqx-arrow jqx-arrow-up"></div>\n                        </jqx-repeat-button>\n                        <div id="mainContainer" class="jqx-menu-main-container">\n                            <content></content>\n                        </div>\n                        <jqx-repeat-button id="scrollButtonFar" class="jqx-menu-scroll-button jqx-spin-button jqx-scroll-button-far jqx-hidden" animation="[[animation]]" unfocusable>\n                            <div id="arrowFar" class="jqx-arrow jqx-arrow-down"></div>\n                        </jqx-repeat-button>\n                        <div id="loadingIndicatorContainer" class="jqx-loader-container jqx-hidden">\n                            <span id="loadingIndicator" class="jqx-loader"></span>\n                            <span id="loadingIndicatorPlaceHolder" class="jqx-loader-label jqx-hidden">[[loadingIndicatorPlaceholder]]</span>\n                        </div>\n                    </div>\n                </div>';}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(ListMenu.prototype.__proto__||Object.getPrototypeOf(ListMenu.prototype),'attached',this).call(this);if(that.isCompleted&&that.dropDownAppendTo!==null&&that._minimized){that._dropDownParent.appendChild(that.$.view);}}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(ListMenu.prototype.__proto__||Object.getPrototypeOf(ListMenu.prototype),'detached',this).call(this);that._close();if(that.dropDownAppendTo!==null&&that._minimized){that._dropDownParent.removeChild(that.$.view);}}/**
     * Adds an item.
     *
     * @param {HTMLElement} item A jqx-menu-item to add to the List Menu.
     * @param {HTMLElement/String} parent Optional The jqx-menu-items-group (or its id or numeric path) to add the item to.
     */},{key:'addItem',value:function addItem(item,parent){var that=this;if(!(item instanceof JQX.MenuItem||item instanceof JQX.MenuItemsGroup)){return;}var parentView=void 0,level=void 0,container=void 0,appliedFilter=void 0;if(parent===undefined){parent=that.$.mainContainer;parentView=undefined;level=1;container=parent;appliedFilter=that._topLevelFilter;}else{if(typeof parent==='string'){parent=that.getItem(parent);}if(parent===undefined||!(parent instanceof JQX.MenuItemsGroup&&(that.contains(parent)||parent.closest('.jqx-list-menu-view')===that.$.view))){return;}parentView=parent;level=parent.level+1;container=parent.itemContainer;appliedFilter=parent.filter;}that._createItemHTMLStructure(item,level,parent,that._getCurrentViewItems(parentView).length,0);if(item instanceof JQX.MenuItemsGroup){that._processHTML(item,level+1);}if(that._view!==parent&&!parent.$.hasClass('jqx-hidden')&&parent.offsetHeight>0&&parent.offsetWidth>0&&(!that._view&&!that.$.mainContainer.contains(parent)||that._view&&!that._view.contains(parent))){item.$.addClass('jqx-hidden');}if(that.grouped){var children=Array.from(container.children);for(var _i265=children.length-1;_i265>=0;_i265--){if(children[_i265].$.hasClass('jqx-list-menu-group-label')){container.removeChild(children[_i265]);}}that._unsortItems(parent,true);}container.appendChild(item);if(that.grouped){var view=that._view;that._applyGrouping(parent,true);that._home();if(view){that.changePage(view.path);}}if(that.filterable&&appliedFilter!==undefined&&appliedFilter!==''&&that._findItem(item,appliedFilter)===null){item.$.addClass('jqx-hidden');item.hidden=true;}that._toggleFilterInputGroupLabelVisibility();that._checkOverflow();}/**
     * Navigates to the previous page (jqx-menu-items-group).
     *
     * @param {Boolean} animation Optional If set to false, disables collapse animation even if animation is enabled for the element.
     */},{key:'back',value:function back(animation){var that=this,animationType=that.animation,restoreAnimation=animation===false&&animationType!=='none';if(restoreAnimation){that.animation='none';}that._backButtonClickHandler();if(restoreAnimation){that.animation=animationType;}}/**
     * Navigates to a particular page (jqx-menu-items-group).
     *
     * @param {String} id The id or numeric path of a page (jqx-menu-items-group).
     */},{key:'changePage',value:function changePage(id){var that=this,item=that.getItem(id);if(item===undefined||item instanceof JQX.MenuItem||item.hidden){return;}var stack=[item];var stackItem=item.parentItem,start=0;that._discardKeyboardHover();while(stackItem){stack.unshift(stackItem);stackItem=stackItem.parentItem;}if(that._view){var index=stack.indexOf(that._view);if(index===-1){that._home();}else{start=index+1;}}for(var _i266=start;_i266<stack.length;_i266++){if(stack[_i266].disabled||stack[_i266].hidden){break;}that._menuItemsGroupSelectionHandler(stack[_i266],{type:'expand'},true);}}/**
     * Maximizes the List Menu.
     */},{key:'maximize',value:function maximize(){var that=this;if(!that._minimized){return;}that._positionDetection.removeOverlay();that._minimized=false;if(that._minimizedDropDownOpened){that.$hamburgerIcon.removeClass('jqx-close-button');that._minimizedDropDownOpened=false;}if(that.dropDownAppendTo!==null){that._appendMinimizedContainerToMenu(that.$.view,null);}that.$view.removeClass('jqx-visibility-hidden');that.$view.removeClass('jqx-list-menu-view-minimized');that.$hamburgerIcon.addClass('jqx-hidden');that.removeAttribute('minimized');if(that.enableShadowDOM){that.$.view.id=that.$.view.getAttribute('jqx-id');var templateElements=that.$.view.querySelectorAll('[jqx-id]');for(var _i267=0;_i267<templateElements.length;_i267++){templateElements[_i267].id=templateElements[_i267].getAttribute('jqx-id');}}that.$.mainContainer.scrollTop=0;that._checkOverflow();}/**
     * Minimizes the List Menu.
     */},{key:'minimize',value:function minimize(){var that=this;if(that._minimized){return;}that.$view.addClass('jqx-visibility-hidden');if(that.enableShadowDOM){that.$.view.removeAttribute('id');var templateElements=that.$.view.querySelectorAll('[jqx-id]');for(var _i268=0;_i268<templateElements.length;_i268++){templateElements[_i268].removeAttribute('id');}}if(that._edgeMacFF){that.$view.addClass('not-in-view');}that.$hamburgerIcon.removeClass('jqx-hidden');setTimeout(function(){if(that.dropDownAppendTo!==null){that._appendMinimizedContainerToExternalElement(that.$.view);}that.$view.addClass('jqx-list-menu-view-minimized');that.$.mainContainer.scrollTop=0;that._checkOverflow();},0);that._minimized=true;that.setAttribute('minimized','');}/**
     * Removes an item.
     *
     * @param {HTMLElement/String} item The jqx-menu-item/jqx-menu-items-group (or its id or numeric path) to remove.
     */},{key:'removeItem',value:function removeItem(item){var that=this;if(typeof item==='string'){item=that.getItem(item);}if(item===undefined||!(item instanceof JQX.MenuItem||item instanceof JQX.MenuItemsGroup)||!(that.contains(item)||item.closest('.jqx-list-menu-view')===that.$.view)){return;}var itemParent=item.parentElement;while(item.contains(that._view)){that._backButtonClickHandler(undefined,true);}var view=that._view;if(that.grouped){that._home();that._discardGrouping();}itemParent.removeChild(item);that._menuItems={};that._refreshItemPaths(that.$.mainContainer,true,function(item){return that._getCurrentViewItems(item===that.$.mainContainer?undefined:item);});if(that.grouped){that._applyGrouping(that.$.mainContainer);if(view){that.changePage(view.path);}}that._toggleFilterInputGroupLabelVisibility();that._checkOverflow();}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){if(propertyName==='disabled'||propertyName==='dropDownOverlay'||propertyName==='minimizeIconTemplate'||propertyName==='minimizeWidth'||propertyName==='overflow'||propertyName==='unfocusable'){babelHelpers.get(ListMenu.prototype.__proto__||Object.getPrototypeOf(ListMenu.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);return;}var that=this;switch(propertyName){case'animation':that.$.view.setAttribute('animation',newValue);break;case'checkable':case'checkboxes':if(that._minimized&&that.dropDownAppendTo!==null){if(newValue){that.$.view.setAttribute(propertyName,'');}else{that.$.view.removeAttribute(propertyName);}}break;case'checkMode':that._changeToRadioButtonMode(newValue,that.$.mainContainer);if(that._minimized&&that.dropDownAppendTo!==null){that.$.view.setAttribute('check-mode',newValue);}break;case'dataSource':that.$header.addClass('jqx-hidden');that.$mainContainer.removeClass('header-shown');that._view=undefined;that._menuItems={};that._topLevelFilter='';that._processDataSource();that._toggleFilterInputGroupLabelVisibility();that._checkOverflow();break;case'displayLoadingIndicator':if(newValue){var hoveredItem=that.$.mainContainer.querySelector('[hover]');if(hoveredItem){hoveredItem.removeAttribute('hover');}that._discardKeyboardHover();that.$loadingIndicatorContainer.removeClass('jqx-hidden');}else{that.$loadingIndicatorContainer.addClass('jqx-hidden');}break;case'dropDownAppendTo':{var oldDropDownParent=that._dropDownParent;that._positionDetection.getDropDownParent();if(that._dropDownParent===oldDropDownParent||!that._minimized){return;}that._close();if(newValue===null){that._appendMinimizedContainerToMenu(that.$.view,null);}else{that._appendMinimizedContainerToExternalElement(that.$.view);}that.$.mainContainer.scrollTop=0;that._checkOverflow();break;}case'dropDownPosition':{that._close();if(that._minimized&&that.dropDownAppendTo!==null){that.$.view.setAttribute('drop-down-position',newValue);}break;}case'filterable':that._toggleFilterInputGroupLabelVisibility(true);if(newValue===false){if(that._topLevelFilter!==''){that._applyFilter('');}for(var _i269=that._filteredLowerLevelGroups.length-1;_i269>=0;_i269--){that._applyFilter('',that._filteredLowerLevelGroups[_i269]);}}that._checkOverflow();break;case'filterMode':if(!that.filterable){return;}if(that._topLevelFilter!==''){that._applyFilter(that._topLevelFilter);}for(var _i270=that._filteredLowerLevelGroups.length-1;_i270>=0;_i270--){that._applyFilter(that._filteredLowerLevelGroups[_i270].filter,that._filteredLowerLevelGroups[_i270]);}break;case'grouped':that._home();if(newValue){that._applyGrouping(that.$.mainContainer);}else{that._discardGrouping();}that._toggleFilterInputGroupLabelVisibility(false,true);that._checkOverflow();break;case'loadingIndicatorPosition':if(that.dropDownAppendTo!==null&&that._minimized){that.$.view.setAttribute('loading-indicator-position',newValue);}if(newValue==='center'){that.$loadingIndicatorPlaceHolder.addClass('jqx-hidden');}else{that.$loadingIndicatorPlaceHolder.removeClass('jqx-hidden');}break;case'theme':babelHelpers.get(ListMenu.prototype.__proto__||Object.getPrototypeOf(ListMenu.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);if(that.dropDownAppendTo!==null&&that._minimized){if(oldValue!==''){that.$view.removeClass(oldValue);}if(newValue){that.$view.addClass(newValue);}}break;}}/**
     * Appends group headers.
     */},{key:'_appendGroupLabels',value:function _appendGroupLabels(groups,groupChildren){for(var _i271=0;_i271<groups.length;_i271++){var groupLabel=document.createElement('div');groupLabel.$=JQX.Utilities.Extend(groupLabel);groupLabel.className='jqx-list-menu-group-label';groupLabel.innerHTML=groups[_i271];groupLabel.groupChildren=groupChildren[_i271];groupChildren[_i271][0].parentElement.insertBefore(groupLabel,groupChildren[_i271][0]);for(var j=0;j<groupChildren[_i271].length;j++){groupChildren[_i271][j].groupLabel=groupLabel;}}}/**
     * Applies filter.
     */},{key:'_applyFilter',value:function _applyFilter(filterQuery,view){var that=this,items=that._getCurrentViewItems(view);for(var _i272=0;_i272<items.length;_i272++){var _item18=that._findItem(items[_i272],filterQuery);if(_item18&&_item18.hidden){_item18.hidden=false;if(view===that._view||that._view!==undefined&&view!==undefined&&!view.contains(that._view)||that._view===undefined){_item18.$.removeClass('jqx-hidden');}}else if(!_item18){items[_i272].hidden=true;items[_i272].$.addClass('jqx-hidden');}}if(view){view.filter=filterQuery;var index=that._filteredLowerLevelGroups.indexOf(view);if(filterQuery===''){if(index!==-1){that._filteredLowerLevelGroups.splice(index,1);}}else if(index===-1){that._filteredLowerLevelGroups.push(view);}}else{that._topLevelFilter=filterQuery;}}/**
     * Back button click handler.
     */},{key:'_backButtonClickHandler',value:function _backButtonClickHandler(event,noAnimation){var that=this,view=that._view;if(event){event.stopPropagation();}if(!view||that.disabled&&event||that.displayLoadingIndicator||that._inTransition){return;}var animation=that.hasAnimation,animationType=that.animation,resetAnimation=false;if(animation&&noAnimation){animation=false;resetAnimation=true;that.animation='none';}that._discardKeyboardHover();that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');that.$mainContainer.removeClass('scroll-buttons-shown');view.firstElementChild.classList.remove('jqx-hidden');if(!animation){view.$.removeClass('jqx-menu-items-group-opened');view.container.$.addClass('jqx-hidden');}else{that._inTransition=true;view.container.$.addClass('no-transition');view.container.$.addClass('jqx-hidden');view.$.addClass('right');view.$.removeClass('right');view.container.$.removeClass('no-transition');}that._showHideMenuItemsGroupSiblings(view,'removeClass',animation);if(animation){setTimeout(function(){view.container.style.top=view.parentElement.getBoundingClientRect().top-view.getBoundingClientRect().top+'px';},0);}else if(resetAnimation){that.animation=animationType;}if(view.level===1){that.$header.addClass('jqx-hidden');that.$mainContainer.removeClass('header-shown');that._view=undefined;}else{that.$.title.innerHTML=view.parentItem.titleLabel;that._view=view.parentItem;}that._toggleFilterInputGroupLabelVisibility();that.$.mainContainer.scrollTop=0;if(!animation){that._checkOverflow();}if(event){that.focus();}}/**
     * Applies bottom bounce effect.
     */},{key:'_bounceBottom',value:function _bounceBottom(initialScrollTop){var that=this,mainContainer=that.$.mainContainer;that.$mainContainer.addClass('bounce-bottom');function bounceBack(){mainContainer.scrollTop-=5;if(mainContainer.scrollTop>initialScrollTop){window.requestAnimationFrame(bounceBack);}else{that.$mainContainer.removeClass('bounce-bottom');}}function bounceForth(){mainContainer.scrollTop+=5;if(mainContainer.scrollTop!==mainContainer.scrollHeight-mainContainer.offsetHeight){window.requestAnimationFrame(bounceForth);}else{window.requestAnimationFrame(bounceBack);}}window.requestAnimationFrame(bounceForth);}/**
     * Applies top bounce effect.
     */},{key:'_bounceTop',value:function _bounceTop(){var that=this,mainContainer=that.$.mainContainer;that.$mainContainer.addClass('bounce-top');function bounceBack(){mainContainer.scrollTop-=5;if(mainContainer.scrollTop>0){window.requestAnimationFrame(bounceBack);}else{window.requestAnimationFrame(bounceForth);}}function bounceForth(){mainContainer.scrollTop+=5;if(mainContainer.scrollTop!==50){window.requestAnimationFrame(bounceForth);}else{mainContainer.scrollTop=0;that.$mainContainer.removeClass('bounce-top');}}window.requestAnimationFrame(bounceBack);}/**
     * Checks if items overflow and shows/hides scroll buttons.
     */},{key:'_checkOverflow',value:function _checkOverflow(){var that=this,overflow=that.overflow;if(overflow==='hidden'){return;}var overflowing=Math.round(that.$.mainContainer.scrollHeight)>Math.round(that.$.mainContainer.offsetHeight),showNear=Math.round(that.$.mainContainer.scrollTop)>0,showFar=Math.round(that.$.mainContainer.offsetHeight+that.$.mainContainer.scrollTop)<Math.round(that.$.mainContainer.scrollHeight);if(overflowing){if(overflow==='auto'){if(!that.$mainContainer.hasClass('scroll-buttons-shown')){that.$mainContainer.addClass('scroll-buttons-shown');}if(showNear){that.$scrollButtonNear.removeClass('jqx-hidden');}else{that.$scrollButtonNear.addClass('jqx-hidden');}if(showFar){that.$scrollButtonFar.removeClass('jqx-hidden');}else{that.$scrollButtonFar.addClass('jqx-hidden');}if((showNear&&showFar)===false){that.$mainContainer.addClass('one-button-shown');}else{that.$mainContainer.removeClass('one-button-shown');}if(!that.disabled){that.$.scrollButtonNear.disabled=false;that.$.scrollButtonFar.disabled=false;}}else{that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}else{that.$.scrollButtonNear.disabled=!showNear;that.$.scrollButtonFar.disabled=!showFar;}}}else if(!overflowing&&overflow==='auto'&&that.$mainContainer.hasClass('scroll-buttons-shown')){that.$mainContainer.removeClass('scroll-buttons-shown');that.$mainContainer.removeClass('one-button-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}else if(!overflowing&&overflow==='scroll'){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}}/**
     * Closes any open pop-up containers.
     */},{key:'_close',value:function _close(){var that=this;that._discardKeyboardHover(true);if(that._minimized&&that._minimizedDropDownOpened){that._positionDetection.removeOverlay();that.$view.addClass('jqx-visibility-hidden');if(that._edgeMacFF){that.$.view.style.left='';that.$.view.style.top='';that.$view.addClass('not-in-view');}that.$hamburgerIcon.removeClass('jqx-close-button');that._minimizedDropDownOpened=false;}}/**
     * Applies initial settings to the List Menu element.
     */},{key:'_createElement',value:function _createElement(){var that=this;that.mode='vertical';that._positionDetection=new JQX.Utilities.PositionDetection(that);that._positionDetection.getDropDownParent();if(that.dataSource===null&&that.$.mainContainer.firstElementChild instanceof HTMLUListElement){that._processUList();}var items=that.getElementsByTagName('jqx-menu-item'),itemsReady=function itemsReady(){that._setFocusable();that._menuItems={};that._topLevelFilter='';that._filteredLowerLevelGroups=[];that.$.view.setAttribute('animation',that.animation);if(that.dataSource===null){that._processHTML(undefined,1);}else{that._processDataSource();}that._toggleFilterInputGroupLabelVisibility();if(that.overflow==='scroll'){that.$mainContainer.addClass('scroll-buttons-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that._updateScrollButtonVisibility(that.$.mainContainer,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);}that._applyMinimizeIconTemplate(that.minimizeIconTemplate,null);if(that.minimizeWidth!==null&&that.offsetWidth<=that.minimizeWidth){that.minimize();}else{that._checkOverflow();}if(that.displayLoadingIndicator){that.$loadingIndicatorContainer.removeClass('jqx-hidden');}if(that.loadingIndicatorPosition!=='center'){that.$loadingIndicatorPlaceHolder.removeClass('jqx-hidden');}if(that.__onCompleted){that._onCompleted=that.__onCompleted;that.__onCompleted=null;that._onCompleted();}};if(items.length===0){itemsReady();}else{if(that._onCompleted){that.__onCompleted=that._onCompleted;that._onCompleted=null;}that._ensureItemsReady(items,itemsReady);}}/**
     * Creates the pop-up container of jqx-menu-items-group.
     */},{key:'_createMenuItemsGroupContainer',value:function _createMenuItemsGroupContainer(item,level){var container=document.createElement('div'),itemContainer=document.createElement('div');container.className='jqx-menu-drop-down jqx-hidden';container.$=JQX.Utilities.Extend(container);container.level=level;container.setAttribute('level',level);container.menuItemsGroup=item;itemContainer.className='jqx-menu-item-container';itemContainer.$=JQX.Utilities.Extend(itemContainer);itemContainer.container=container;itemContainer.menuItemsGroup=item;if(item.checkable){itemContainer.setAttribute('checkable','');}itemContainer.setAttribute('check-mode',item.checkMode);container.itemContainer=itemContainer;container.appendChild(itemContainer);return container;}/**
     * Removes grouping.
     */},{key:'_discardGrouping',value:function _discardGrouping(){var that=this,groupLabels=Array.from(that.$.view.getElementsByClassName('jqx-list-menu-group-label'));for(var _i273=0;_i273<groupLabels.length;_i273++){var currentGroupLabel=groupLabels[_i273];currentGroupLabel.parentElement.removeChild(currentGroupLabel);}that._unsortItems(that.$.mainContainer);}/**
     * Removes "hover" attribute added by keyboard navigation.
     */},{key:'_discardKeyboardHover',value:function _discardKeyboardHover(){var that=this;if(!that._focusedViaKeyboard){return;}if(that._focusedViaKeyboard===that.$.backButton){that.$.backButton.removeAttribute('hover');that.$.backButton.$.button.removeAttribute('hover');}else{that._focusedViaKeyboard.removeAttribute('focus');that._focusedViaKeyboard.removeAttribute('hover');}that._focusedViaKeyboard=undefined;}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=event.originalEvent.target;that._endSwiping(event,Date.now());if(that._swipeDetails){if(that._swipeDetails.direction==='left'){if(that._swipeDetails.start>event.pageX&&that._swipeDetails.start-event.pageX>that.offsetWidth/4){that._selectionHandler({target:that._swipeDetails.target},that._swipeDetails.target,true);}}else{if(that._swipeDetails.start<event.pageX&&event.pageX-that._swipeDetails.start>that.offsetWidth/4){that._backButtonClickHandler();}}delete that._swipeDetails;return;}if(target===that.$.filterInput||that.disabled||that.displayLoadingIndicator||!target.closest){return;}if(!that.contains(target)&&target.closest('.jqx-list-menu-view')!==that.$.view){that._close();if(that._scrolling){delete that._scrolling;}}else if((that.contains(target)||target.closest('.jqx-list-menu-view')===that.$.view)&&that!==document.activeElement){that.focus();}}/**
     * Makes sure a jqx-menu-item/jqx-menu-items-group is visible by scrolling to it.
     */},{key:'_ensureVisible',value:function _ensureVisible(scrollTarget){var that=this,parent=that.$.mainContainer;if(!parent.$.hasClass('scroll-buttons-shown')&&that.overflow!=='hidden'){return;}var parentBoundingRect=parent.getBoundingClientRect(),scrollTargetBoundingRect=scrollTarget.getBoundingClientRect(),scrollButtons=[that.$.scrollButtonNear,that.$.scrollButtonFar],oldScrollTop=parent.scrollTop;if(parentBoundingRect.top>scrollTargetBoundingRect.top||parentBoundingRect.bottom<scrollTargetBoundingRect.bottom){parent.scrollTop=scrollTarget.offsetTop;that._updateScrollButtonVisibility(parent,false,scrollButtons);}that._fireScrollBottomReachedEvent(oldScrollTop);}/**
     * Fires the "scrollBottomReached" event.
     */},{key:'_fireScrollBottomReachedEvent',value:function _fireScrollBottomReachedEvent(oldScrollTop){var that=this,mainContainer=that.$.mainContainer,currentScrollTop=mainContainer.scrollTop;if(oldScrollTop===currentScrollTop||currentScrollTop!==mainContainer.scrollHeight-mainContainer.offsetHeight){return;}that.$.fireEvent('scrollBottomReached');}/**
     * Gets all jqx-menu-item and jqx-menu-items-group elements in current view.
     */},{key:'_getCurrentViewItems',value:function _getCurrentViewItems(view){var that=this;if(!that.grouped){if(view===undefined){return that.$.mainContainer.children;}else{return view.container.firstElementChild.children;}}else{if(view===undefined){return that.$.view.querySelectorAll('.jqx-menu-main-container > jqx-menu-item, .jqx-menu-main-container > jqx-menu-items-group');}else{var allChildren=view.container.firstElementChild.children,items=[];for(var _i274=0;_i274<allChildren.length;_i274++){var currentItem=allChildren[_i274];if(currentItem instanceof JQX.MenuItem||currentItem instanceof JQX.MenuItemsGroup){items.push(currentItem);}}return items;}}}/**
     * Sorts and groups items.
     */},{key:'_sortItems',value:function _sortItems(item){var that=this;if(!that.grouped){return;}var groups=[],groupChildren=[];var parent=void 0;if(item instanceof JQX.MenuItemsGroup){parent=item.container.firstElementChild;}else if(item===that.$.mainContainer){parent=item;}var children=Array.from(parent.children);children.sort(function(a,b){return a.label.localeCompare(b.label);});// sort items in DOM
for(var _i275=children.length-1;_i275>=0;_i275--){parent.insertBefore(children[_i275],parent.firstElementChild);}// retrieve groups and first elements in groups
for(var _i276=0;_i276<children.length;_i276++){var currentChild=children[_i276],firstCharacter=currentChild.label.charAt(0),index=groups.indexOf(firstCharacter.toUpperCase());if(index===-1){groups.push(firstCharacter.toUpperCase());groupChildren.push([currentChild]);}else{groupChildren[index].push(currentChild);}}that._appendGroupLabels(groups,groupChildren);}/**
     * Displays top-level view.
     */},{key:'_home',value:function _home(){var that=this;while(that._view){that._backButtonClickHandler(undefined,true);}}/**
     * Keydown event handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this,key=event.key;if(document.activeElement!==that||['ArrowDown','ArrowLeft','ArrowRight','ArrowUp','End','Enter','Escape','Home',' '].indexOf(key)===-1||that.disabled||that.displayLoadingIndicator){return;}event.preventDefault();var view=that._view,lastOpenedContainer=view?view.itemContainer:that.$.mainContainer,hoveredItem=that.$.backButton.hasAttribute('hover')?that.$.backButton:lastOpenedContainer.querySelector('[focus]');switch(key){case'ArrowDown':that._navigate('_getNextEnabledChild',hoveredItem,lastOpenedContainer);break;case'ArrowLeft':that._backButtonClickHandler();break;case'ArrowRight':if(hoveredItem&&hoveredItem instanceof JQX.MenuItemsGroup){that._menuItemsGroupSelectionHandler(hoveredItem,{type:'keydown'});}break;case'ArrowUp':that._navigate('_getPreviousEnabledChild',hoveredItem,lastOpenedContainer);break;case'End':case'Home':{if(view&&key==='Home'){that.$.mainContainer.scrollTop=0;that._checkOverflow();that.$.backButton.setAttribute('hover','');that.$.backButton.$.button.setAttribute('hover','');that._focusedViaKeyboard=that.$.backButton;if(hoveredItem){hoveredItem.removeAttribute('focus');}return;}var enabledChild=key==='End'?that._getLastEnabledChild(lastOpenedContainer):that._getFirstEnabledChild(lastOpenedContainer);if(!enabledChild||hoveredItem===enabledChild){return;}if(hoveredItem){if(hoveredItem===that.$.backButton){that.$.backButton.removeAttribute('hover');that.$.backButton.$.button.removeAttribute('hover');}else{hoveredItem.removeAttribute('focus');}}that._hoverViaKeyboard(enabledChild);break;}case'Enter':if(that._minimized&&!that._minimizedDropDownOpened){that._hamburgerIconClickHandler(undefined,that.$.view);}else if(hoveredItem){if(hoveredItem===that.$.backButton){that._backButtonClickHandler();}else{that._selectionHandler({target:hoveredItem});}}break;case'Escape':if(that._minimized&&that._minimizedDropDownOpened&&!that._view){that._close();}else{that._backButtonClickHandler();}break;case' ':if(hoveredItem){if(hoveredItem===that.$.backButton){that._backButtonClickHandler();}else{that._toggleItem(hoveredItem);}}break;}}/**
     * mainContainer down handler.
     */},{key:'_mainContainerDownHandler',value:function _mainContainerDownHandler(event){var that=this;if(!JQX.Utilities.Core.isMobile||that.disabled||that.displayLoadingIndicator){return;}that._dragStartDetails={startY:event.pageY,x:event.pageX,y:event.pageY,startTime:Date.now(),target:event.originalEvent.target};}/**
     * mainContainer handler.
     */},{key:'_mainContainerHandler',value:function _mainContainerHandler(){return;}/**
     * mainContainer move handler.
     */},{key:'_mainContainerMoveHandler',value:function _mainContainerMoveHandler(event){var that=this;if(!that._dragStartDetails){return;}var pageY=event.pageY,difference=that._dragStartDetails.y-pageY,oldScrollTop=that.$.mainContainer.scrollTop;that.$.mainContainer.scrollTop+=difference;if(oldScrollTop!==that.$.mainContainer.scrollTop){that._checkOverflow();that._fireScrollBottomReachedEvent(oldScrollTop);}that._dragStartDetails={startY:that._dragStartDetails.startY,x:event.pageX,y:pageY,startTime:that._dragStartDetails.startTime,target:event.originalEvent.target};that._scrolling=true;}/**
     * mainContainer swipeleft/swiperight handler.
     */},{key:'_mainContainerSwipeHandler',value:function _mainContainerSwipeHandler(event){var that=this;if(!JQX.Utilities.Core.isMobile||that.disabled||that.displayLoadingIndicator){return;}var target=event.originalEvent.target,closestItem=target.closest('jqx-menu-item'),closestGroup=target.closest('jqx-menu-items-group');if(event.type==='swiperight'){var _target=closestItem||closestGroup;if(_target){delete that._dragStartDetails;delete that._scrolling;that._swipeDetails={direction:'right',start:event.pageX,target:_target};}}else if(closestGroup&&closestItem===null){delete that._dragStartDetails;delete that._scrolling;that._swipeDetails={direction:'left',start:event.pageX,target:closestGroup};}}/**
     * Returns the root's activeElement and isInside flag indicating whether the target is inside the element or not.
     * @param {any} target - target
     */},{key:'_getRootDetails',value:function _getRootDetails(rootNode,event){var that=this;if(!rootNode){return;}if(!that.enableShadowDOM){return{activeElement:rootNode.activeElement,isInsideElement:that.contains(event.target)};}var activeElement=void 0,isInsideElement=void 0;while(rootNode){if(!activeElement&&rootNode.activeElement){activeElement=rootNode.activeElement;}if(rootNode.host===that){isInsideElement=true;}if(rootNode===document){break;}rootNode=rootNode.host?rootNode.host.getRootNode():rootNode.getRootNode();}return{activeElement:activeElement,isInsideElement:isInsideElement};}/**
     * jqx-menu-items-group selection handler.
     */},{key:'_menuItemsGroupSelectionHandler',value:function _menuItemsGroupSelectionHandler(closestItemsGroup,event,noAnimation){var that=this,container=closestItemsGroup.container,level=container.level,rootDetails=that._getRootDetails(event.target?event.target.getRootNode():null,event);if(that._view===closestItemsGroup){return;}that._discardKeyboardHover();if(rootDetails&&rootDetails.activeElement!==that&&that.dropDownAppendTo!==null&&event.type==='click'&&!rootDetails.isInsideElement){that.focus();}if(that._inTransition){return;}if(event.type==='click'&&!event.target.classList.contains('jqx-menu-items-group-arrow')&&that._toggleItem(closestItemsGroup)){that._ripple(closestItemsGroup,event);return;}var animation=that.hasAnimation,animationType=that.animation,resetAnimation=false;if(animation&&noAnimation){animation=false;resetAnimation=true;that.animation='none';}if(level===2){that.$header.removeClass('jqx-hidden');that.$mainContainer.addClass('header-shown');}that.$.title.innerHTML=closestItemsGroup.titleLabel;that._view=closestItemsGroup;that._toggleFilterInputGroupLabelVisibility();closestItemsGroup.removeAttribute('hover');closestItemsGroup.removeAttribute('focus');closestItemsGroup.$.addClass('jqx-menu-items-group-opened');that._showHideMenuItemsGroupSiblings(closestItemsGroup,'addClass',animation);if(!animation){closestItemsGroup.firstElementChild.classList.add('jqx-hidden');}else{that._inTransition=true;closestItemsGroup.firstElementChild.classList.add('animate');setTimeout(function(){container.style.top=closestItemsGroup.parentElement.getBoundingClientRect().top-closestItemsGroup.getBoundingClientRect().top+'px';},0);}container.$.removeClass('jqx-hidden');if(resetAnimation){that.animation=animationType;}that.$.mainContainer.scrollTop=0;if(!animation){that._checkOverflow();}that.$.fireEvent('expand',{'item':closestItemsGroup,'label':closestItemsGroup.label,'path':closestItemsGroup.path,'value':closestItemsGroup.value});}/**
     * Mouseout/mouseover handler.
     */},{key:'_mouseoutMouseoverHandler',value:function _mouseoutMouseoverHandler(event){var that=this;if(that.disabled||that.displayLoadingIndicator){return;}var closestItem=event.target.closest('jqx-menu-item')||event.target.closest('jqx-menu-items-group');if(closestItem===null||that._view&&closestItem.level<=that._view.level||closestItem.disabled||closestItem.templateApplied){return;}that._discardKeyboardHover();if(event.type==='mouseover'){closestItem.setAttribute('hover','');that._discardKeyboardHover(true);}else{closestItem.removeAttribute('hover');}}/**
     * Navigates to an item via the keyboard.
     */},{key:'_navigate',value:function _navigate(method,hoveredItem,lastOpenedContainer){var that=this;if(!hoveredItem){if(method==='_getNextEnabledChild'){if(that._view){that.$.backButton.setAttribute('hover','');that.$.backButton.$.button.setAttribute('hover','');that._focusedViaKeyboard=that.$.backButton;}else{that._hoverViaKeyboard(that._getFirstEnabledChild(lastOpenedContainer));}}else{that._hoverViaKeyboard(that._getLastEnabledChild(lastOpenedContainer));}return;}var navigateToChild=void 0;if(method==='_getNextEnabledChild'&&hoveredItem===that.$.backButton){navigateToChild=that._getFirstEnabledChild(lastOpenedContainer);if(navigateToChild){that.$.backButton.removeAttribute('hover');that.$.backButton.$.button.removeAttribute('hover');}else{return;}}else if(method==='_getPreviousEnabledChild'&&that._view&&hoveredItem===that._getFirstEnabledChild(lastOpenedContainer)){that.$.backButton.setAttribute('hover','');that.$.backButton.$.button.setAttribute('hover','');that._focusedViaKeyboard=that.$.backButton;hoveredItem.removeAttribute('focus');return;}else{navigateToChild=that[method](hoveredItem);}if(navigateToChild){hoveredItem.removeAttribute('focus');that._hoverViaKeyboard(navigateToChild);}}/**
     * Processes initial HTML structure.
     */},{key:'_processHTML',value:function _processHTML(item,level){var that=this;var container=void 0,itemContainer=void 0;if(item===undefined){item=that.$.mainContainer;}if(level>1){container=that._createMenuItemsGroupContainer(item,level);itemContainer=container.itemContainer;}var itemChildren=Array.from(item.children),checkedChildren=[];var pathOffset=0;for(var _i277=0;_i277<itemChildren.length;_i277++){if(level>1&&_i277===0){pathOffset++;continue;}var currentItem=itemChildren[_i277];if(!(currentItem instanceof JQX.MenuItem||currentItem instanceof JQX.MenuItemsGroup)){currentItem.parentElement.removeChild(currentItem);pathOffset++;continue;}that._createItemHTMLStructure(currentItem,level,item,_i277-pathOffset);if(currentItem.checked){if(!currentItem.disabled&&!currentItem.templateApplied){checkedChildren.push(currentItem);}else{currentItem.checked=false;}}if(level>1){itemContainer.appendChild(currentItem);}if(currentItem instanceof JQX.MenuItemsGroup){that._processHTML(currentItem,level+1);}}if(level>1){item.container=container;item.itemContainer=itemContainer;if(item instanceof JQX.MenuItemsGroup){var arrowElement=document.createElement('div');arrowElement.className='jqx-menu-items-group-arrow jqx-arrow-right right';item.children[0].appendChild(arrowElement);}item.appendChild(container);}that._validateRadioButtonSelection(item,level,checkedChildren);that._sortItems(item);}/**
     * Resize handler.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this,minimizeWidth=that.minimizeWidth;if(minimizeWidth!==null){if(!that._minimized&&that.offsetWidth<=minimizeWidth){that.minimize();return;}else if(that._minimized&&that.offsetWidth>minimizeWidth){that.maximize();return;}}that._checkOverflow();}/**
     * Scrolls using scroll buttons.
     */},{key:'_scroll',value:function _scroll(scrollButton){var that=this,mainContainer=that.$.mainContainer,scrollCoefficient=scrollButton.classList.contains('jqx-scroll-button-near')?-1:1,oldScrollTop=mainContainer.scrollTop;mainContainer.scrollTop=mainContainer.scrollTop+scrollCoefficient*10;if(oldScrollTop!==mainContainer.scrollTop){that._updateScrollButtonVisibility(mainContainer,false,[that.$.scrollButtonNear,that.$.scrollButtonFar]);that._fireScrollBottomReachedEvent(oldScrollTop);}}/**
     * Selection handler.
     */},{key:'_selectionHandler',value:function _selectionHandler(event,closestItemsGroup,swipe){var that=this,target=event.target;if(that.disabled||that.displayLoadingIndicator){return;}if(that._scrolling||that._swipeDetails&&!swipe){delete that._dragStartDetails;delete that._scrolling;delete that._swipeDetails;return;}function focus(){var rootDetails=that._getRootDetails(target.getRootNode(),event);if(rootDetails&&rootDetails.activeElement!==that&&that.dropDownAppendTo!==null&&event.type==='click'&&!rootDetails.isInsideElement){that.focus();}}if(closestItemsGroup===undefined){if(event.type==='click'){var closestScrollButton=target.closest('jqx-repeat-button');if(closestScrollButton){that._scroll(closestScrollButton,event);return;}}var closestItem=target.closest('jqx-menu-item');if(closestItem){if(closestItem.disabled||closestItem.templateApplied){focus();return;}if(!that._toggleItem(closestItem)){that.$.fireEvent('itemClick',{'item':closestItem,'label':closestItem.label,'value':closestItem.value});}that._ensureVisible(closestItem);that._ripple(closestItem,event);focus();return;}closestItemsGroup=target.closest('jqx-menu-items-group');if(closestItemsGroup&&(target===closestItemsGroup.container||target===closestItemsGroup.container.firstElementChild)){return;}}if(closestItemsGroup&&!closestItemsGroup.disabled){that._menuItemsGroupSelectionHandler(closestItemsGroup,event);}}/**
     * Shows/hides the siblings of a jqx-menu-items-group.
     */},{key:'_showHideMenuItemsGroupSiblings',value:function _showHideMenuItemsGroupSiblings(menuItemsGroup,method,animation){var parentElement=menuItemsGroup.parentElement,children=parentElement.children;var _loop9=function _loop9(_i278){var currentChild=children[_i278];if(currentChild===menuItemsGroup){return'continue';}if(!currentChild.hidden){if(!animation){currentChild.$[method]('jqx-hidden');}else{if(method==='addClass'){currentChild.$.addClass('animate');}else{currentChild.$.removeClass('jqx-hidden');currentChild.$.addClass('right');setTimeout(function(){currentChild.$.removeClass('right');},0);}}}};for(var _i278=0;_i278<children.length;_i278++){var _ret12=_loop9(_i278);if(_ret12==='continue')continue;}}/**
     * Toggles the visibility of the filter input.
     */},{key:'_toggleFilterInputGroupLabelVisibility',value:function _toggleFilterInputGroupLabelVisibility(filterableChanged,groupedChanged){var that=this,itemsCount=that._getCurrentViewItems(that._view).length;if(groupedChanged!==true){var shown=!that.$filterInputContainer.hasClass('jqx-hidden');if(that.filterable&&itemsCount>1){if(!shown){that.$mainContainer.addClass('filter-input-shown');that.$filterInputContainer.removeClass('jqx-hidden');}if(that._view){that.$.filterInput.value=that._view.filter||'';}else{that.$.filterInput.value=that._topLevelFilter;}}else if(shown){that.$mainContainer.removeClass('filter-input-shown');that.$filterInputContainer.addClass('jqx-hidden');}}if(!filterableChanged&&that.grouped&&itemsCount>0){var firstGroupLabel=that._view?that._view.container.firstElementChild.firstElementChild.$:that.$.mainContainer.firstElementChild.$;if(itemsCount===1){firstGroupLabel.addClass('jqx-hidden');}else{firstGroupLabel.removeClass('jqx-hidden');}}}/**
     * External view handler.
     */},{key:'_viewHandler',value:function _viewHandler(event){var that=this;if(event.type==='transitionend'){var target=event.target;if(target===that.$.view||that.$.backButton.contains(target)){return;}if(target.classList.contains('animate')){target.classList.remove('animate');target.classList.add('jqx-hidden');}if(target.classList.contains('jqx-menu-drop-down')){target.style.top='';}if(target.classList.contains('jqx-menu-items-group-opened')){target.classList.remove('jqx-menu-items-group-opened');}that._checkOverflow();that._inTransition=false;return;}if(!that._minimized||that.dropDownAppendTo===null){return;}switch(event.type){case'click':that._selectionHandler(event);break;case'mouseout':that._mouseoutMouseoverHandler(event);break;case'mouseover':that._mouseoutMouseoverHandler(event);break;}}}],[{key:'properties',// List Menu's properties.
get:function get(){return{'displayLoadingIndicator':{value:false,type:'boolean'},'dropDownPosition':{value:'auto',allowedValues:['top-left','top-right','bottom-left','bottom-right','auto'],type:'string'},'filterable':{value:false,type:'boolean'},'filterInputPlaceholder':{value:'',type:'string'},'filterMode':{value:'containsIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase'],type:'string'},'grouped':{value:false,type:'boolean'},'loadingIndicatorPlaceholder':{value:'Loading...',type:'string'},'loadingIndicatorPosition':{value:'center',allowedValues:['bottom','center','top'],type:'string'}};}/**
     * List Menu's event listeners.
     */},{key:'listeners',get:function get(){return{'resize':'_resizeHandler','backButton.click':'_backButtonClickHandler','filterInput.keyup':'_filterInputKeyupHandler','mainContainer.down':'_mainContainerDownHandler','mainContainer.move':'_mainContainerMoveHandler','mainContainer.swipeleft':'_mainContainerSwipeHandler','mainContainer.swiperight':'_mainContainerSwipeHandler','view.click':'_viewHandler','view.mouseout':'_viewHandler','view.mouseover':'_viewHandler','view.transitionend':'_viewHandler','view.wheel':'_wheelHandler'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.listmenu.css'];}}]);return ListMenu;}(JQX.Menu));/**
 * Tank custom element.
 */JQX('jqx-tank',function(_JQX$BaseElement7){babelHelpers.inherits(Tank,_JQX$BaseElement7);function Tank(){babelHelpers.classCallCheck(this,Tank);return babelHelpers.possibleConstructorReturn(this,(Tank.__proto__||Object.getPrototypeOf(Tank)).apply(this,arguments));}babelHelpers.createClass(Tank,[{key:'template',/**
     * Tank's HTML template.
     */value:function template(){return'<div id="container" class="jqx-container">\n                    <div id="scaleNear" class="jqx-scale jqx-scale-near"></div>\n                    <div id="track" class="jqx-track">\n                        <div id="fill" class="jqx-value">\n                            <div id="bubbleContainer" class="jqx-bubble-container"></div>\n                            <div id="tooltip" class="jqx-tooltip"><div id="tooltipContent" class="jqx-tooltip-content jqx-unselectable"></div></div>\n                            <div id="thumb" class="jqx-thumb">\n                                <div class="jqx-thumb-label-container">\n                                    <span id="thumbLabel" class="jqx-thumb-label"></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div id="trackTicksContainer" class="jqx-track-ticks-container jqx-hidden"></div>\n                    </div>\n                    <div id="scaleFar" class="jqx-scale jqx-scale-far"></div>\n                    <input id="hiddenInput" type="hidden" name="[[name]]">\n                </div>';}/**
     * Invoked when an instance of custom element is attached to the DOM for the first time.
     */},{key:'ready',value:function ready(){babelHelpers.get(Tank.prototype.__proto__||Object.getPrototypeOf(Tank.prototype),'ready',this).call(this);var that=this;that._redefineProperty('customTicks');this._createElement();}},{key:'_createElement',value:function _createElement(){var that=this;//Escape the initial transiton
that.$.fill.style.transition='none';if(that.mode==='numeric'){that._getEventValue=function(){return that.value;};}else{that._handleDateScale();}that._setSettingsObject();that._setDrawVariables();that._getLayoutType();//Creating instances of NumericProcessor and NumberRenderer
that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');that._numberRenderer=new JQX.Utilities.NumberRenderer();if(!that._isVisible()){that._renderingSuspended=true;return;}that._renderingSuspended=false;that._setInitialComponentDisplay();that._measurements={};that._wordLengthNumber=that._numericProcessor.getWordLength(that.wordLength);that._validateInitialPropertyValues();that._setTicksAndInterval();// Initial adjustments
that._validate(true);that._updateTooltipValue(that._drawValue);that._setFocusable();that._setTrackSize();//Add bubbles effect
that._setBubbles();//Restore CSS transition
that.$.fill.style.transition='';that.$.hiddenInput.value=that._getEventValue();}/*
     * Public methods
     *//**
     * Sets or gets the value of the tank.
     *
     * @param {Number/String} value Optional value to be set to the tank. If this parameter is not set, the method gets the value.
     */},{key:'val',value:function val(value){var that=this;if(value!==undefined){if(that.mode==='date'){var newValue=JQX.Utilities.DateTime.validateDate(value);newValue=newValue.getTimeStamp();if(newValue.compare(that.value)!==0){that._validate(false,newValue,undefined,true);return;}return that._valueDate;}if(that.value.toString().toUpperCase()!==value.toString().toUpperCase()){// use as value setter
value=value.toString().replace(/\s/g,'');if(that._numericProcessor.regexScientificNotation.test(value)){value=that._numericProcessor.scientificToDecimal(value);}var valueToValidate=that._discardDecimalSeparator(value.toString());that._validate(false,valueToValidate,undefined,true);delete that._valueBeforeCoercion;}else{return that.value=typeof value==='string'?value:value.toString();}}else{// use as value getter
return that._getEventValue();}}/**
    * Adds bubbles in the fill area.
    */},{key:'_setBubbles',value:function _setBubbles(){var that=this;if(!that.hasAnimation){//Removes the bubble elements
//const bubbles = that.getElementsByClassName('bubble');
//if (bubbles.length > 0) {
//    for (let b = bubbles.length; b > -1; b--) {
//        b[0].parentElement.removeChild(b[0]);
//    }
//}
return;}var fragment=document.createDocumentFragment(),bubble=void 0;for(var b=0;b<5;b++){bubble=document.createElement('div');bubble.classList.add('bubble');bubble.classList.add('bubble'+(b+1));fragment.appendChild(bubble);}that.$.bubbleContainer.appendChild(fragment);}},{key:'_setTrackSize',value:function _setTrackSize(){var that=this;//Calculte initial track size
if(that.orientation==='vertical'){that._trackSize=that.$.track.offsetWidth;}else{that._trackSize=that.$.track.offsetHeight;}}/**
     * Gets the optimal size of the tank.
     */},{key:'getOptimalSize',value:function getOptimalSize(){var that=this;if(that._renderingSuspended){return{width:0,height:0};}var propertiesObj=void 0,largestLabelSize=void 0,sizeObject=void 0;switch(that.labelsVisibility){case'all':largestLabelSize=that._numericProcessor._longestLabelSize;break;case'endPoints':largestLabelSize=Math.max(that._tickIntervalHandler.labelsSize.minLabelOtherSize,that._tickIntervalHandler.labelsSize.maxLabelOtherSize);break;case'none':largestLabelSize=0;break;}switch(that.orientation){case'horizontal':propertiesObj={marginA:'marginBottom',marginB:'marginTop',nearScaleDistance:'bottom',farScaleDistance:'top',paddingA:'paddingBottom',paddingB:'paddingTop',offset:'offsetWidth',distance:'left'};if(that._orientationChanged){propertiesObj.offset='offsetHeight';that._trackChanged=true;}sizeObject=that._getSize(largestLabelSize,propertiesObj);return{width:sizeObject.optimalOtherSize,height:sizeObject.optimalSize};case'vertical':propertiesObj={marginA:'marginLeft',marginB:'marginRight',nearScaleDistance:'right',farScaleDistance:'left',paddingA:'paddingLeft',paddingB:'paddingRight',offset:'offsetHeight',distance:'top'};if(that._orientationChanged){propertiesObj.offset='offsetWidth';that._trackChanged=true;}sizeObject=that._getSize(largestLabelSize,propertiesObj);return{width:sizeObject.optimalSize,height:sizeObject.optimalOtherSize};}}/**
     * Invoked when the value of a public property has been changed by the user.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(key,oldValue,value){babelHelpers.get(Tank.prototype.__proto__||Object.getPrototypeOf(Tank.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}// eslint-disable-next-line
if(value==oldValue){that[key]=oldValue;return;}switch(key){case'labelsVisibility':case'ticksVisibility':that._updateScaleWidth(that._numericProcessor._longestLabelSize);return;case'coerce':if(value){var valueBeforeCoercion=that.value,coercedValue=value=that.logarithmicScale?Math.pow(10,that._numericProcessor.getCoercedValue(Math.log10(valueBeforeCoercion))):that._numericProcessor.getCoercedValue(valueBeforeCoercion);that._validate(false,coercedValue,true,true);that._valueBeforeCoercion=valueBeforeCoercion;// stores value before coercion
}else{if(that._valueBeforeCoercion!==undefined){that._validate(false,that._valueBeforeCoercion,false,true);}}return;case'interval':{//Validates the Interval
that._numericProcessor.validateInterval(value);var newValue=value=that.logarithmicScale?Math.pow(10,that._numericProcessor.getCoercedValue(Math.log10(that.value))):that._numericProcessor.getCoercedValue(that.value);that._validate(false,newValue,that.coerce,true);break;}case'min':case'max':{if(that.mode==='date'){delete that._dateInterval;that[key]=JQX.Utilities.DateTime.validateDate(value).getTimeStamp();}that._validateMinMax(key,false,oldValue);var validValue=that._numericProcessor.createDescriptor(that._discardDecimalSeparator(that.value,that.decimalSeparator),undefined,true,that.validation==='strict');that._setTicksAndInterval();that._numericProcessor.updateValue(validValue);var optimalSize=that.getOptimalSize(),actualSize=that.getBoundingClientRect(),trackSize=that.$.track.getBoundingClientRect();if(optimalSize.width>actualSize.width&&trackSize.width<20){that.style.width=optimalSize.width+'px';that.style.height=optimalSize.height+'px';}break;}case'inverted':{that._getLayoutType();if(that._normalLayout){that.$.fill.style[that._settings.margin]='0px';}var invertedNumberToValidate=that._numericProcessor.createDescriptor(that.value),validInvertedValue=that._numericProcessor.validate(invertedNumberToValidate,that._minObject,that._maxObject);that._setTicksAndInterval();that._numericProcessor.updateValue(validInvertedValue);break;}case'orientation':{var fillStyle=that.$.fill.style,containerStyle=that.$.container.style;//resizeChange handler flag
if(that._orientationChanged!==true){that._orientationChanged=true;}that._tankSizeBeforeOrientation={width:that.offsetWidth,height:that.offsetHeight};that._setSettingsObject();that._getLayoutType();if(that.inverted){fillStyle.marginTop='0';fillStyle.marginLeft='0';}switch(that.orientation){case'vertical':if(!that.inverted){fillStyle.marginTop='auto';fillStyle.marginLeft='0';}fillStyle.width='100%';containerStyle.paddingLeft='0';containerStyle.paddingRight='0';break;case'horizontal':if(!that.inverted){fillStyle.marginTop='0';fillStyle.marginLeft='auto';}fillStyle.height='100%';containerStyle.paddingTop='0';containerStyle.paddingBottom='0';break;}that._validateMinMax('both');var orientationNumberToValidate=that._numericProcessor.createDescriptor(that.value),validOrientationValue=that._numericProcessor.validate(orientationNumberToValidate,that._minObject,that._maxObject);that._setTicksAndInterval();that._setTicksAndInterval();//
that._numericProcessor.updateValue(validOrientationValue);that._trackChanged=true;break;}case'significantDigits':case'precisionDigits':{if(that.mode==='date'){return;}if(key==='precisionDigits'&&that.scaleType==='integer'){that.error(that.localize('noInteger',{elementType:that.nodeName.toLowerCase(),property:key}));}if(key==='significantDigits'&&that.precisionDigits!==null){that.precisionDigits=null;}else if(key==='precisionDigits'&&that.significantDigits!==null){that.significantDigits=null;}// Validates significantDigits
that._validateInitialPropertyValues();// Redraw the labels
that._setTicksAndInterval();if(that.orientation==='horizontal'&&that.inverted){var px=that._numericProcessor.valueToPx(that._numericProcessor.getCoercedValue(that._drawValue));that.updateFillSizeAndPosition(px,that._settings.margin,value,false);}break;}case'decimalSeparator':{if(that.scaleType==='integer'||that.mode==='date'){return;}var numericValue=that._discardDecimalSeparator(that.value,oldValue),valueWithNewSeparator=that._applyDecimalSeparator(numericValue);that.value=numericValue;delete that._valueBeforeCoercion;// Redraw the labels
that._numericProcessor.addTicksAndLabels();that._updateTooltipValue(valueWithNewSeparator);break;}case'value':{that.value=oldValue;if(value===null){return;}if(that.mode==='date'){var _newValue=JQX.Utilities.DateTime.validateDate(value);_newValue=_newValue.getTimeStamp();if(_newValue.compare(oldValue)!==0){that._validate(false,_newValue,undefined,true);}return;}if(value.toString().toUpperCase()!==oldValue.toString().toUpperCase()){var valueToValidate=value!==undefined?value.toString().replace(/\s/g,''):oldValue.toString().replace(/\s/g,'');if(that._numericProcessor.regexScientificNotation.test(valueToValidate)){valueToValidate=that._numericProcessor.scientificToDecimal(valueToValidate);}that._validate(false,valueToValidate,undefined,true);delete that._valueBeforeCoercion;}else{that.value=typeof value==='string'?value:value.toString();}break;}case'scaleType':if(that.mode==='date'){that.scaleType='integer';return;}that._changeScaleType(oldValue,value);break;case'disabled':case'unfocusable':that._setFocusable();break;case'showUnit':case'unit':{that._setTicksAndInterval();that._moveThumbBasedOnValue(that._drawValue);break;}case'tooltipPosition':break;case'wordLength':{if(that.mode==='date'){that.wordLength='uint64';return;}that._wordLengthNumber=that._numericProcessor.getWordLength(value);that._validateMinMax('both');var numberToValidate=that._numericProcessor.createDescriptor(that.value),_validValue=that._numericProcessor.validate(numberToValidate,that._minObject,that._maxObject);that._setTicksAndInterval();that._numericProcessor.updateValue(_validValue);break;}case'scalePosition':{that._setInitialComponentDisplay();that._setTicksAndInterval();that._moveThumbBasedOnValue(that._drawValue);break;}case'labelFormatFunction':case'scientificNotation':{if(that.mode==='date'&&key==='scientificNotation'){return;}var _numericValue=that._discardDecimalSeparator(that.value,that.decimalSeparator);// Recalculate label position and redraw the labels
that._setTicksAndInterval();//Update toolTip\'s value
that._updateTooltipValue(_numericValue);break;}case'logarithmicScale':if(that.mode==='date'){that.logarithmicScale=false;return;}that._validateMinMax('both');that._setTicksAndInterval();that._validate(false,that.value,undefined,true);break;case'ticksPosition':if(value==='scale'){that.$trackTicksContainer.addClass('jqx-hidden');that.$.trackTicksContainer.innerHTML='';}else{that.$trackTicksContainer.removeClass('jqx-hidden');}that._numericProcessor.addTicksAndLabels();break;case'customInterval':if(value){if(that._customTicks){that.customTicks=that._customTicks;}that._numericProcessor.validateCustomTicks();}else if(that.mode==='date'){that._customTicks=that.customTicks;}that._setTicksAndInterval();that._coerceCustomInterval();break;case'customTicks':if(that.mode==='date'&&!that.customInterval){that._customTicks=value;that.customTicks=oldValue;return;}that._numericProcessor.validateCustomTicks();if(that.customInterval){that._setTicksAndInterval();that._coerceCustomInterval();}break;case'dateLabelFormatString':if(that.mode==='date'){that._setTicksAndInterval();}break;case'mode':that.mode=oldValue;break;case'showThumbLabel':if(value&&that.showTooltip){that.showTooltip=false;}break;case'showTooltip':if(value&&that.showThumbLabel){that.showThumbLabel=false;}break;case'validation':if(value==='strict'){that._validate(false,that.value);}break;}}/**
     * Sets the "_settings" object.
     */},{key:'_setSettingsObject',value:function _setSettingsObject(){var that=this;if(that.orientation==='horizontal'){that._settings={clientSize:'clientWidth',dimension:'width',leftOrTop:'left',margin:'marginLeft',offset:'offsetLeft',otherSize:'offsetHeight',size:'offsetWidth',page:'pageX'};}else{that._settings={clientSize:'clientHeight',dimension:'height',leftOrTop:'top',margin:'marginTop',offset:'offsetTop',otherSize:'offsetWidth',size:'offsetHeight',page:'pageY'};}}/**
     * Sets the display of the scales.
     */},{key:'_setInitialComponentDisplay',value:function _setInitialComponentDisplay(){var that=this;switch(that.scalePosition){case'near':that.$scaleNear.removeClass('jqx-hidden');that.$scaleFar.addClass('jqx-hidden');break;case'far':that.$scaleNear.addClass('jqx-hidden');that.$scaleFar.removeClass('jqx-hidden');break;case'both':that.$scaleFar.removeClass('jqx-hidden');that.$scaleNear.removeClass('jqx-hidden');break;case'none':that.$scaleFar.addClass('jqx-hidden');that.$scaleNear.addClass('jqx-hidden');break;}that.$tooltip.addClass('jqx-hidden');if(that.ticksPosition==='track'){that.$trackTicksContainer.removeClass('jqx-hidden');}}/**
    * Style changed event handler.
    **/},{key:'_styleChangedHandler',value:function _styleChangedHandler(){var that=this;if(!that._isVisible()){that._renderingSuspended=true;return;}else if(that._renderingSuspended){that._createElement();return;}if(that._renderingSuspended){return;}that._setTicksAndInterval();that._moveThumbBasedOnValue(that._drawValue);}/**
     * Validates initial property values.
     */},{key:'_validateInitialPropertyValues',value:function _validateInitialPropertyValues(){var that=this,value=babelHelpers.typeof(that.value)===String?that.value.replace(/\s/g,''):that.value.toString().replace(/\s/g,'');if(that.mode==='numeric'&&that._numericProcessor.regexScientificNotation.test(value)){that.value=that._numericProcessor.scientificToDecimal(value);delete that._valueBeforeCoercion;}//Validates significantDigits
that.significantDigits=that.significantDigits!==null?Math.min(Math.max(that.significantDigits,1),21):null;if(that.significantDigits===null&&that.precisionDigits===null){that.significantDigits=8;}else if(that.significantDigits!==null&&that.precisionDigits!==null){that.error(that.localize('significantPrecisionDigits',{elementType:that.nodeName.toLowerCase()}));}//minMax validation
that._validateMinMax('both',true);if(that.showTooltip&&that.showThumbLabel){that.showTooltip=false;}}/**
      * Validates the properties "min" and "max".
      */},{key:'_validateMinMax',value:function _validateMinMax(validatedProperty,initialValidation,oldValue){var that=this;var validateMin=validatedProperty==='min'||validatedProperty==='both',validateMax=validatedProperty==='max'||validatedProperty==='both';if((typeof initialValidation==='undefined'?'undefined':babelHelpers.typeof(initialValidation))===undefined){initialValidation=false;}if(validatedProperty==='both'){validator('min',oldValue);validator('max',oldValue);}else{validator(validatedProperty,oldValue);}function validator(param,oldValue){that._numericProcessor.validateMinMax(param==='min'||initialValidation,param==='max'||initialValidation);var value=that['_'+param+'Object'];var validateCondition=param==='min'?that._numericProcessor.compare(that.max,value,true)<=0:that._numericProcessor.compare(that.min,value,true)>0;if(validateCondition){if(oldValue){that._numberRenderer=new JQX.Utilities.NumberRenderer(oldValue);param==='min'?validateMin=false:validateMax=false;that[param]=oldValue;that['_'+param+'Object']=oldValue;}else{that.error(that.localize('invalidMinOrMax',{elementType:that.nodeName.toLowerCase(),property:param}));}}else{that._numberRenderer=new JQX.Utilities.NumberRenderer(value);that[param]=that['_'+param+'Object'];}}if(that.logarithmicScale){that._validateOnLogarithmicScale(validateMin,validateMax,oldValue);}else{that._drawMin=that.min;that._drawMax=that.max;}that.min=that.min.toString();that.max=that.max.toString();that._minObject=that._numericProcessor.createDescriptor(that.min);that._maxObject=that._numericProcessor.createDescriptor(that.max);if(that.mode==='date'){that._minDate=JQX.Utilities.DateTime.fromFullTimeStamp(that.min);that._maxDate=JQX.Utilities.DateTime.fromFullTimeStamp(that.max);}//Validates the Interval
that._numericProcessor.validateInterval(that.interval);if(that.customInterval){that._numericProcessor.validateCustomTicks();}}/**
     * Calculates the tank's major and minor ticks interval.
     */},{key:'_calculateTickInterval',value:function _calculateTickInterval(){var that=this;var intervals=that._tickIntervalHandler.getInterval('linear',that._drawMin,that._drawMax,that.$.track,that.logarithmicScale);if(intervals.major!==that._majorTicksInterval){that._intervalHasChanged=true;that._majorTicksInterval=intervals.major;}else{that._intervalHasChanged=true;}that._minorTicksInterval=intervals.minor;if(that.mode==='date'){that._calculateDateInterval(intervals.major);}}/**
     * Calculates the tank's ticks when the scale is date.
     */},{key:'_calculateDateInterval',value:function _calculateDateInterval(majorTicksInterval){var that=this,timeParts={month:'2628000000000000000000000000000',day:'86400000000000000000000000000',hour:'3600000000000000000000000000',minute:'60000000000000000000000000',second:'1000000000000000000000000'};var part='year',bigNumberTimePart=new JQX.Utilities.BigNumber('31536000000000000000000000000000'),difference=bigNumberTimePart.subtract(majorTicksInterval).abs(),range=new JQX.Utilities.BigNumber(that.min).subtract(that.max).abs(),projectedNumberOfTicks=range.divide(majorTicksInterval).toString();if(projectedNumberOfTicks<2){majorTicksInterval=range.divide(3);}for(var timePart in timeParts){if(timeParts.hasOwnProperty(timePart)){var currentBigNumberTimePart=new JQX.Utilities.BigNumber(timeParts[timePart]),currentDifference=currentBigNumberTimePart.subtract(majorTicksInterval).abs();if(currentDifference.compare(difference)===-1){part=timePart;bigNumberTimePart=currentBigNumberTimePart;difference=currentDifference;}else{break;}}}if(part==='second'){that._numberRenderer.numericValue=parseFloat(majorTicksInterval);if(that._numberRenderer.numericValue<1000){that._dateIncrementMethod='addYoctoseconds';that._dateIntervalNumber=1;return;}var scientificPrefix=that._numberRenderer.toScientific(10);scientificPrefix=scientificPrefix.charAt(scientificPrefix.length-1);that._dateIncrementMethod=that._unitToMethod[scientificPrefix];that._dateIntervalNumber=Math.pow(10,that._numericProcessor.prefixesToPowers[scientificPrefix]);return;}that._dateInterval=true;var calculatedInterval=!that.customInterval;var customTicks=void 0,numberOfTimeParts=void 0,toAdd=void 0;if(calculatedInterval){customTicks=[new JQX.Utilities.BigNumber(that.min)];numberOfTimeParts=range.divide(bigNumberTimePart).toString();toAdd=Math.max(1,Math.floor(numberOfTimeParts/projectedNumberOfTicks));}switch(part){case'year':if(calculatedInterval){for(var _i279=that._minDate.year()+toAdd;_i279<that._maxDate.year();_i279+=toAdd){customTicks.push(new JQX.Utilities.BigNumber(new JQX.Utilities.DateTime(_i279,1,1).getTimeStamp()));}}that._dateIncrementMethod='addYears';break;case'month':if(calculatedInterval){for(var _i280=new JQX.Utilities.DateTime(that._minDate.year(),that._minDate.month()+toAdd,1);_i280.compare(that._maxDate)===-1;_i280.addMonths(toAdd,false)){customTicks.push(new JQX.Utilities.BigNumber(_i280.getTimeStamp()));}}that._dateIncrementMethod='addMonths';break;case'day':if(calculatedInterval){for(var _i281=new JQX.Utilities.DateTime(that._minDate.year(),that._minDate.month(),that._minDate.day()+toAdd);_i281.compare(that._maxDate)===-1;_i281.addDays(toAdd,false)){customTicks.push(new JQX.Utilities.BigNumber(_i281.getTimeStamp()));}}that._dateIncrementMethod='addDays';that._dateIntervalNumber=86400000000000000000000000000;break;case'hour':if(calculatedInterval){for(var _i282=new JQX.Utilities.DateTime(that._minDate.year(),that._minDate.month(),that._minDate.day(),that._minDate.hour()+toAdd);_i282.compare(that._maxDate)===-1;_i282.addHours(toAdd,false)){customTicks.push(new JQX.Utilities.BigNumber(_i282.getTimeStamp()));}}that._dateIncrementMethod='addHours';that._dateIntervalNumber=3600000000000000000000000000;break;case'minute':if(calculatedInterval){for(var _i283=new JQX.Utilities.DateTime(that._minDate.year(),that._minDate.month(),that._minDate.day(),that._minDate.hour(),that._minDate.minute()+toAdd);_i283.compare(that._maxDate)===-1;_i283.addMinutes(toAdd,false)){customTicks.push(new JQX.Utilities.BigNumber(_i283.getTimeStamp()));}}that._dateIncrementMethod='addMinutes';that._dateIntervalNumber=60000000000000000000000000;break;}if(calculatedInterval){if(customTicks[customTicks.length-1].compare(that.max)===-1){customTicks.push(new JQX.Utilities.BigNumber(that.max));}that.customTicks=customTicks;}}/**
     * Formats the value.
     */},{key:'_formatNumber',value:function _formatNumber(value){var that=this;if(that.mode==='date'){var date=JQX.Utilities.DateTime.fromFullTimeStamp(value);return date.toString(that.dateLabelFormatString);}var numberRenderer=that._numberRenderer;var renderedNumber=parseFloat(value);numberRenderer.numericValue=value;if(that.scientificNotation){renderedNumber=that._numberRenderer.toScientific(that.significantDigits,that.precisionDigits);}else{switch(that.scaleType){case'floatingPoint':renderedNumber=that._applyDecimalSeparator(numberRenderer.toDigits(that.significantDigits,that.precisionDigits));break;case'integer':renderedNumber=numberRenderer.isENotation(renderedNumber)?Math.round(numberRenderer.largeExponentialToDecimal(renderedNumber)):Math.round(renderedNumber);renderedNumber=numberRenderer.toDigits(that.significantDigits,0);break;}}return renderedNumber;}/**
    * Applies formatting to tank labels.
    */},{key:'_formatLabel',value:function _formatLabel(labelValue,unselectableUnit){var that=this;var renderedLabel=void 0;if(that.labelFormatFunction){if(that.mode==='date'){labelValue=JQX.Utilities.DateTime.fromFullTimeStamp(labelValue);}renderedLabel=that.labelFormatFunction(labelValue);if(renderedLabel!==undefined&&renderedLabel!==''){return renderedLabel;}}renderedLabel=that._formatNumber(labelValue);that._numberRenderer=new JQX.Utilities.NumberRenderer(renderedLabel);if(that.showUnit){if(unselectableUnit!==false){renderedLabel+=' <span class="jqx-unselectable">'+that.unit+'</span>';}else{renderedLabel+=' '+that.unit;}}return renderedLabel;}/**
     * Applies necessary paddings to the track container.
     */},{key:'_layout',value:function _layout(){var that=this,containerStyle=that.$.container.style,paddingStart=that._tickIntervalHandler.labelsSize.minLabelSize/2+'px',paddingEnd=that._tickIntervalHandler.labelsSize.maxLabelSize/2+'px';switch(that.orientation){case'horizontal':if(that.scalePosition==='none'){containerStyle.paddingLeft='';containerStyle.paddingRight='';break;}if(!that.inverted){containerStyle.paddingLeft=paddingStart;containerStyle.paddingRight=paddingEnd;}else{containerStyle.paddingLeft=paddingEnd;containerStyle.paddingRight=paddingStart;}break;case'vertical':if(that.scalePosition==='none'){containerStyle.paddingTop='';containerStyle.paddingBottom='';break;}if(!that.inverted){containerStyle.paddingBottom=paddingStart;containerStyle.paddingTop=paddingEnd;}else{containerStyle.paddingBottom=paddingEnd;containerStyle.paddingTop=paddingStart;}break;}that._measurements.trackLength=that.$.track[this._settings.clientSize];}/**
     * Track click event handler.
     */},{key:'_trackDownHandler',value:function _trackDownHandler(event){var that=this;if(that.disabled||that.readonly||!JQX.Utilities.Core.isMobile&&event.button!==0){return;}if(that.mechanicalAction==='switchUntilReleased'){that._cachedValue={};that._cachedValue._number=that._number;that._cachedValue._drawValue=that._drawValue;that._cachedValue.value=that.value;if(that._valueDate){that._cachedValue._valueDate=that._valueDate;}}that._getTrackStartAndEnd();that._moveThumbBasedOnCoordinates(event,true,that.mechanicalAction!=='switchWhenReleased');that._thumbDragged=true;that.$track.addClass('jqx-dragged');if(that.showTooltip){that.$tooltip.removeClass('jqx-hidden');}}/**
     * Track mousemove event handler.
     */},{key:'_trackMoveHandler',value:function _trackMoveHandler(event){if(event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
     * Document mousemove event handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this;if(that._thumbDragged){event.originalEvent.preventDefault();that._moveThumbBasedOnCoordinates(event,true,that.mechanicalAction!=='switchWhenReleased');that.$fill.addClass('disable-animation');}}/**
     * Document mouseup event handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;if(!that._thumbDragged){return;}if(that.mechanicalAction==='switchWhenReleased'){that._moveThumbBasedOnCoordinates(event,true,true);}else if(that.mechanicalAction==='switchUntilReleased'){if(that._numericProcessor.compare(that._number,that._cachedValue._number)){var oldValue=that._getEventValue();that._number=that._cachedValue._number;that._drawValue=that._cachedValue._drawValue;if(that._cachedValue._valueDate){that._valueDate=that._cachedValue._valueDate;}that.value=that._cachedValue.value;that._moveThumbBasedOnValue(that._drawValue);var _value21=that._getEventValue();that.$.fireEvent('change',{'value':_value21,'oldValue':oldValue});that.$.hiddenInput.value=_value21;}}if(that.showTooltip){that.$tooltip.addClass('jqx-hidden');}that._thumbDragged=false;that.$track.removeClass('jqx-dragged');that.$fill.removeClass('disable-animation');}/**
     * Document select start handler.
     */},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that._thumbDragged){event.preventDefault();}}/**
     * Tank resize event handler.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(!that._isVisible()){that._renderingSuspended=true;return;}else if(that._renderingSuspended){that._createElement();return;}if(that._renderingSuspended){return;}if(that._orientationChanged!==true){that._setTicksAndInterval();that._moveThumbBasedOnValue(that._drawValue);}//Needed for getOptimalSize method
if(that._trackChanged){that._measurements.trackLength=that.$.track[this._settings.clientSize];that._setTicksAndInterval();that._moveThumbBasedOnValue(that._drawValue);}that._setTrackSize();delete that._orientationChanged;delete that._trackChanged;}/**
     * Moves the tank's thumb and updates the filled part of the track based on the position of the mouse.
     */},{key:'_moveThumbBasedOnCoordinates',value:function _moveThumbBasedOnCoordinates(event,checkBoundaries,changeValue){var that=this;var coordinate=checkBoundaries?Math.min(Math.max(event[that._settings.page],that._trackStart),that._trackEnd):event[that._settings.page],value=that._numericProcessor.pxToValue(coordinate);if(that.logarithmicScale){that._drawValue=Math.log10(value);value=that._numericProcessor.getCoercedValue(that._drawValue);}else{that._drawValue=value;value=that._numericProcessor.getCoercedValue(value);}// Validating the coordinate
coordinate=Math.min(Math.max(that._numericProcessor.valueToPx(value)+that._trackStart,that._trackStart),that._trackEnd);var size=coordinate-that._trackStart;that.updateFillSizeAndPosition(size,that._settings.margin,value,true,changeValue);if(event.originalEvent){event.originalEvent.stopPropagation();}}/**
     * Moves the tank's thumb and updates the filled part of the track based on a passed value.
     */},{key:'_moveThumbBasedOnValue',value:function _moveThumbBasedOnValue(value){var that=this,px=that._numericProcessor.valueToPx(that._numericProcessor.getCoercedValue(value));that.updateFillSizeAndPosition(px,that._settings.margin,value,true);}/**
    * Applies the filling, updates the tooltip and the value
    */},{key:'updateFillSizeAndPosition',value:function updateFillSizeAndPosition(size,margin,newValue,updateTooltip,changeValue){var that=this,fillStyle=that.$.fill.style;if(that._normalLayout){fillStyle[that._settings.dimension]=size+'px';}else{fillStyle[that._settings.dimension]=Math.min(that._measurements.trackLength,Math.max(0,that._measurements.trackLength-size))+'px';fillStyle[margin]=size+'px';}if(updateTooltip){var oldValue=that.value;delete that._valueBeforeCoercion;that._numericProcessor.updateToolTipAndValue(newValue,oldValue,changeValue);}}/**
    * Sets tooltip's value.
    */},{key:'_updateTooltipValue',value:function _updateTooltipValue(value){var that=this;if(value===undefined){value=that.value;}if(that.logarithmicScale){value=Math.pow(10,value.toString());}value=that._formatLabel(value);that.$.tooltipContent.innerHTML=value;that.$.thumbLabel.innerHTML=value;}/**
    * Returns the optimal size, based on tank settings.
    **/},{key:'_getSize',value:function _getSize(largestLabelSize,properties){var that=this,tankStyle=window.getComputedStyle(that),trackStyle=window.getComputedStyle(that.$.track),trackSize=that._trackSize+parseFloat(trackStyle[properties.marginA])+parseFloat(trackStyle[properties.marginB]);var firstLabel=void 0,lastLabel=void 0,optimalSize=void 0,optimalOtherSize=void 0;function calcScaleSize(selector,distance){var labels=selector.getElementsByClassName('jqx-label');firstLabel=labels[0];lastLabel=labels[labels.length-1];var firstLabelStyle=window.getComputedStyle(labels[0])[distance];optimalSize+=parseFloat(firstLabelStyle);}optimalSize=trackSize;switch(that.scalePosition){case'none':optimalSize+=parseFloat(tankStyle[properties.paddingA])+parseFloat(tankStyle[properties.paddingB]);if(typeof that._tankSizeBeforeOrientation!=='undefined'){optimalOtherSize=that.orientation==='horizontal'?that._tankSizeBeforeOrientation.height:that._tankSizeBeforeOrientation.width;}else{optimalOtherSize=that.orientation==='horizontal'?parseFloat(trackStyle.width):parseFloat(trackStyle.height);}if(that._trackChanged!==true){that._trackChanged=true;}return{optimalSize:optimalSize,optimalOtherSize:optimalOtherSize};case'near':optimalSize+=largestLabelSize;calcScaleSize(that.$.scaleNear,properties.nearScaleDistance);break;case'far':optimalSize+=largestLabelSize;calcScaleSize(that.$.scaleFar,properties.farScaleDistance);break;case'both':optimalSize+=2*largestLabelSize;calcScaleSize(that.$.scaleNear,properties.nearScaleDistance);calcScaleSize(that.$.scaleFar,properties.farScaleDistance);break;}var firstRect=void 0,lastRect=void 0,difference=void 0;optimalSize+=parseFloat(tankStyle[properties.paddingA])+parseFloat(tankStyle[properties.paddingB]);firstRect=firstLabel.getBoundingClientRect();lastRect=lastLabel.getBoundingClientRect();optimalOtherSize=that[properties.offset];difference=firstRect[properties.distance]+firstLabel[properties.offset]-lastRect[properties.distance];if(difference>0){optimalOtherSize=firstLabel[properties.offset]+lastLabel[properties.offset];}return{optimalSize:optimalSize,optimalOtherSize:optimalOtherSize};}/**
     * Calculates the tank's current value range.
     */},{key:'_getRange',value:function _getRange(){var that=this;if(that.logarithmicScale){that._range=that._drawMax-that._drawMin;return;}if(that.scaleType==='floatingPoint'){that._range=(that._drawMax-that._drawMin).toString();}else{that._range=new JQX.Utilities.BigNumber(that._drawMax).subtract(that._drawMin).toString();}}/**
     * Gets the coordinates of the track and the value per pixel ratio.
     */},{key:'_getTrackStartAndEnd',value:function _getTrackStartAndEnd(){var that=this;var trackStart=void 0,offset=that.$.track.getBoundingClientRect();if(that.orientation==='horizontal'){var scrollLeft=document.body.scrollLeft||document.documentElement.scrollLeft;trackStart=offset.left+scrollLeft;}else{var scrollTop=document.body.scrollTop||document.documentElement.scrollTop;trackStart=offset.top+scrollTop;}var trackEnd=trackStart+that._measurements.trackLength,pxRange=trackEnd-trackStart;that._trackStart=trackStart;that._trackEnd=trackEnd;that._valuePerPx=that._numericProcessor.getValuePerPx(that._range,pxRange);}/**
    * Update scale's width.
    */},{key:'_updateScaleWidth',value:function _updateScaleWidth(longestLabelSize){var that=this;var scaleCoeficient=that.ticksPosition==='track'?4:12;switch(that.labelsVisibility){case'all':longestLabelSize=that._numericProcessor._longestLabelSize;break;case'endPoints':longestLabelSize=Math.max(that._tickIntervalHandler.labelsSize.minLabelOtherSize,that._tickIntervalHandler.labelsSize.maxLabelOtherSize);break;case'none':longestLabelSize=0;break;}var scaleSize=scaleCoeficient+longestLabelSize,trackComputedStyle=window.getComputedStyle(that.$.track),variablesUsed=Boolean(trackComputedStyle.getPropertyValue('--jqx-tank-scale-size'));if(variablesUsed){that.$.container.style.setProperty('--jqx-tank-scale-size',scaleSize+'px');}else{var computedStyles=window.getComputedStyle(that),scaleNearStyle=that.$.scaleNear.style,scaleFarStyle=that.$.scaleFar.style,trackStyle=that.$.track.style,trackMinWidth=parseFloat(trackComputedStyle.getPropertyValue('min-width'));var dimension=void 0,dimension2=void 0,dimensionValue=void 0,margins=void 0,outlineWidth=parseFloat(trackComputedStyle.getPropertyValue('outline-width'))||0,outlineOffset=parseFloat(trackComputedStyle.getPropertyValue('outline-offset'))||0,outline=outlineWidth+outlineOffset,paddings=void 0;switch(that.orientation){case'horizontal':dimension='height';dimension2='width';dimensionValue=that.offsetHeight;paddings=parseFloat(computedStyles.getPropertyValue('padding-top'))+parseFloat(computedStyles.getPropertyValue('padding-bottom'));margins=parseFloat(trackComputedStyle.getPropertyValue('margin-top'))+parseFloat(trackComputedStyle.getPropertyValue('margin-bottom'));break;case'vertical':dimension='width';dimension2='height';dimensionValue=that.offsetWidth;paddings=parseFloat(computedStyles.getPropertyValue('padding-left'))+parseFloat(computedStyles.getPropertyValue('padding-right'));margins=parseFloat(trackComputedStyle.getPropertyValue('margin-left'))+parseFloat(trackComputedStyle.getPropertyValue('margin-right'));break;}switch(that.scalePosition){case'near':scaleNearStyle.setProperty(dimension,scaleSize+'px');trackStyle.setProperty(dimension,Math.max(isNaN?0:trackMinWidth,dimensionValue-paddings-scaleSize-4-margins-outline)+'px');break;case'far':scaleFarStyle.setProperty(dimension,scaleSize+'px');trackStyle.setProperty(dimension,Math.max(isNaN?0:trackMinWidth,dimensionValue-paddings-scaleSize-4-margins-outline)+'px');break;case'both':scaleNearStyle.setProperty(dimension,scaleSize+'px');scaleFarStyle.setProperty(dimension,scaleSize+'px');trackStyle.setProperty(dimension,Math.max(isNaN?0:trackMinWidth,dimensionValue-paddings-2*scaleSize-4-margins-outline)+'px');break;case'none':trackStyle.setProperty(dimension,'');break;}trackStyle.setProperty(dimension2,'100%');scaleNearStyle.setProperty(dimension2,'100%');scaleFarStyle.setProperty(dimension2,'100%');}}/**
     * Appends ticks and labels to the scales.
     */},{key:'_appendTicksAndLabelsToScales',value:function _appendTicksAndLabelsToScales(ticks,labels){var that=this;function applyTicksAndLabels(scaleElement){scaleElement.innerHTML=labels;if(that.ticksPosition==='scale')scaleElement.innerHTML+=ticks;}switch(that.scalePosition){case'near':applyTicksAndLabels(that.$.scaleNear);break;case'far':applyTicksAndLabels(that.$.scaleFar);break;case'both':applyTicksAndLabels(that.$.scaleNear);applyTicksAndLabels(that.$.scaleFar);break;}if(that.ticksPosition==='track'){that.$.trackTicksContainer.innerHTML=ticks;}}/**
     * Replaces a custom decimal separator with the default one.
     */},{key:'_discardDecimalSeparator',value:function _discardDecimalSeparator(value,separator){var that=this;if(separator===undefined){separator=that.decimalSeparator;}if(separator!=='.'){var decimalSeparatorRegExp=new RegExp(separator,'g');return typeof value==='string'?value.replace(decimalSeparatorRegExp,'.'):value.toString().replace(decimalSeparatorRegExp,'.');}else{return value;}}/**
    * Applies a custom decimal separator.
    */},{key:'_applyDecimalSeparator',value:function _applyDecimalSeparator(value){var that=this;if(typeof value!=='string'){value=value.toString();}if(that.decimalSeparator!=='.'){value=value.replace(/\./g,that.decimalSeparator);}return value;}/**
     * Validates the value of the Tank.
     */},{key:'_validate',value:function _validate(initialValidation,programmaticValue,coerced,programmaticValueIsSet){var that=this;var value=void 0;that._programmaticValueIsSet=programmaticValueIsSet&&that.validation==='interaction';if(initialValidation){value=that.value;}else{value=programmaticValue;}var actualValue=void 0,validNumber=void 0;if(coerced!==true&&that.coerce){actualValue=that._numericProcessor.createDescriptor(value,true,true,true);actualValue=that.logarithmicScale?Math.pow(10,that._numericProcessor.getCoercedValue(Math.log10(actualValue))):that._numericProcessor.getCoercedValue(actualValue);validNumber=actualValue;}else if(that.validation==='strict'||!initialValidation&&!that._programmaticValueIsSet){actualValue=that._numericProcessor.createDescriptor(value,true,true,true);validNumber=actualValue;}else{actualValue=that._numericProcessor.createDescriptor(value,true,true,false);validNumber=that._numericProcessor.validate(actualValue,that._minObject,that._maxObject);}if(that._numericProcessor.regexScientificNotation.test(validNumber)){validNumber=that._numericProcessor.scientificToDecimal(validNumber);}validNumber=that._discardDecimalSeparator(validNumber,that.decimalSeparator);if(initialValidation){that._number=validNumber;that._drawValue=that.logarithmicScale?Math.log10(validNumber):validNumber;if(that.mode==='numeric'){that.value=actualValue.toString();}else{that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(actualValue);that.value=actualValue;}delete that._valueBeforeCoercion;that._moveThumbBasedOnValue(that._drawValue);}else{that._numericProcessor.updateValue(actualValue);}that._programmaticValueIsSet=false;}/**
     * Changes the input format.
     */},{key:'_changeScaleType',value:function _changeScaleType(){var that=this;that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');that._validateMinMax('both');that._setTicksAndInterval();that._scaleTypeChangedFlag=true;that._validate(true,that._number.toString());that._scaleTypeChangedFlag=false;}/**
    * Sets new Ticks and Interval 
    */},{key:'_setTicksAndInterval',value:function _setTicksAndInterval(){var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}//Set the New Format here
var minLabel=that._formatLabel(that.min),maxLabel=that._formatLabel(that.max);//gets the range with the new min/max
that._getRange();//creates a new tickIntervalHandler instance
that._tickIntervalHandler=new JQX.Utilities.TickIntervalHandler(that,minLabel,maxLabel,'jqx-label',that._settings.size,that.scaleType==='integer',that.logarithmicScale);//re-arranges the layout
that._layout();if(!that.customInterval){// calculates the tickInterval
that._calculateTickInterval();if(that._dateInterval){that._intervalHasChanged=true;that._numericProcessor.addCustomTicks();}else{// Add the ticks and labels
that._numericProcessor.addTicksAndLabels();}}else{if(that.mode==='date'){that._calculateTickInterval();}// custom ticks
that._intervalHasChanged=true;that._numericProcessor.addCustomTicks();}}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}that.tabIndex=that.tabIndex>0?that.tabIndex:0;}/**
     * Increments or decrements a value when a key is pressed.
     */},{key:'_keyIncrementDecrement',value:function _keyIncrementDecrement(action,preValue){var that=this,actionCoefficient=action==='add'?1:-1,calculatePreValue=preValue===undefined;if(calculatePreValue){preValue=that.logarithmicScale?new JQX.Utilities.BigNumber(that._drawValue):that._drawValue;}if(that.customInterval&&that.coerce){if(calculatePreValue){if(that.logarithmicScale){preValue=that.value;}if(that.mode==='numeric'){preValue=preValue.toString();}}var possibleValues=void 0,index=void 0;if(that.mode==='numeric'){possibleValues=that.customTicks.indexOf(that.min)!==-1?that.customTicks.slice(0):[that.min].concat(that.customTicks);index=possibleValues.indexOf(preValue);}else{possibleValues=that.customTicks.findIndex(function(element){return element.compare(that._drawMin)===0;})!==-1?that.customTicks.slice(0):[that._drawMin].concat(that.customTicks);index=possibleValues.findIndex(function(element){return element.compare(preValue)===0;});}var adjacent=possibleValues[index+1*actionCoefficient];if(adjacent!==undefined){return adjacent;}else if(preValue===that.max&&action==='subtract'){return possibleValues[possibleValues.length-2];}return preValue;}if(that.mode==='numeric'){var newValue=that._numericProcessor.incrementDecrement(preValue,action,that._validInterval);if(that.logarithmicScale){that._drawValue=newValue;newValue=Math.pow(10,Math.round(newValue));}return newValue;}if(that.validation==='interaction'&&(that._valueDate.compare(that._minDate)===-1||that._valueDate.compare(that._maxDate)===1)){that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(that._drawValue);}that._valueDate[that._dateIncrementMethod](actionCoefficient*parseFloat(that.interval),false);that._drawValue=new JQX.Utilities.BigNumber(that._valueDate.getTimeStamp());if(that._drawValue.compare(that._drawMin)===-1){that._drawValue=new JQX.Utilities.BigNumber(that._drawMin);that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(that._drawValue);}if(that._drawValue.compare(that._drawMax)===1){that._drawValue=new JQX.Utilities.BigNumber(that._drawMax);that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(that._drawValue);}return that._drawValue;}/**
    * Tank keydown event handler. Changes the value when user press an arrow, home or end key.
    */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this;if(that.disabled||that.readonly){return;}var keyCode=!event.charCode?event.which:event.charCode,handledKeyCodes=[35,36,37,38,39,40];if(handledKeyCodes.indexOf(keyCode)===-1){return;}var isIncrementKey=[35,38,39].indexOf(keyCode)>-1,isDecrementKey=[36,37,40].indexOf(keyCode)>-1;event.preventDefault();if(that.scaleType==='floatingPoint'){if(parseFloat(that.value)<=parseFloat(that.min)&&isDecrementKey||parseFloat(that.value)>=parseFloat(that.max)&&isIncrementKey){return;}}else{var testValue=new JQX.Utilities.BigNumber(that._drawValue);if(testValue.compare(that._drawMin)!==1&&isDecrementKey||testValue.compare(that._drawMax)!==-1&&isIncrementKey){return;}}var newValue=void 0;switch(keyCode){case 40://down arrow
case 37://left arrow
newValue=that._keyIncrementDecrement('subtract');break;case 38://top arrow
case 39://right arrow
newValue=that._keyIncrementDecrement('add');break;case 36://home
that._drawValue=that._drawMin;newValue=that.min;break;case 35://end
that._drawValue=that._drawMax;newValue=that.max;break;}that._validate(false,newValue,keyCode);return false;}/**
    * Sets internal variables, used about scale drawing and preserving the value from initial validation
    **/},{key:'_setDrawVariables',value:function _setDrawVariables(){var that=this;if(that.logarithmicScale){that._drawValue=Math.log10(that.value);that._drawMin=Math.log10(that.min);that._drawMax=Math.log10(that.max);}else{that._drawValue=that.value;that._drawMin=that.min;that._drawMax=that.max;}}/**
    * validates values when is used logarithmic scale
    **/},{key:'_validateOnLogarithmicScale',value:function _validateOnLogarithmicScale(validateMin,validateMax){var that=this;function findNearestPowerOfTen(value){return Math.pow(10,Math.round(Math.log10(value)-Math.log10(5.5)+0.5));}if(validateMin){if(that.min<=0){that.min=1;that._drawMin=0;}else if(Math.log10(that.min)%1!==0){var nearestPowerOfTen=findNearestPowerOfTen(parseFloat(that.min));if(nearestPowerOfTen>that.min){nearestPowerOfTen/=10;}that._drawMin=Math.log10(that.min);}else{that._drawMin=Math.log10(that.min);}}if(validateMax){if(that.max<=0){that.max=1;that._drawMax=0;}else if(Math.log10(that.max)%1!==0){var _nearestPowerOfTen=findNearestPowerOfTen(parseFloat(that.max));if(_nearestPowerOfTen<that.max){_nearestPowerOfTen*=10;}that._drawMax=Math.log10(that.max);}else{that._drawMax=Math.log10(that.max);}}if(that.scaleType==='integer'){if(that._drawMin<0){that._drawMin=0;that.min=1;}if(that._drawMax<0){that._drawMax=1;that.max=10;}}if(that._drawMax===that._drawMin){that._drawMax=that._drawMin+1;}}/**
     * Sets the internal property "_normalLayout" based on the properties "orientation" and "inverted".
     */},{key:'_getLayoutType',value:function _getLayoutType(){var that=this,orientation=that.orientation,inverted=that.inverted;that._normalLayout=orientation==='horizontal'&&!inverted||orientation==='vertical'&&inverted;}/**
     * Applies a CSS class to change fill's pointer. Used instead of :hover CSS selector.
    **/},{key:'_trackOnMouseEnterHandler',value:function _trackOnMouseEnterHandler(){var that=this;if(!that.readonly&&!that.disabled){that.$track.addClass('track-hovered');that.$.track.setAttribute('hover','');}}/**
     * Removes the CSS class used to change fill's pointer.
    **/},{key:'_trackOnMouseLeaveHandler',value:function _trackOnMouseLeaveHandler(){var that=this;if(!that.readonly&&!that.disabled){that.$track.removeClass('track-hovered');that.$.track.removeAttribute('hover');}}/**
     * Checks if the element is visible.
     */},{key:'_isVisible',value:function _isVisible(){var that=this;return!!(that.offsetWidth||that.offsetHeight||that.getClientRects().length);}/**
     * Coerces the value when changes to custom interval-related settings are made.
     */},{key:'_coerceCustomInterval',value:function _coerceCustomInterval(){var that=this;if(!that.coerce){return;}var valueBeforeCoercion=that._valueBeforeCoercion,newCoercedValue=that.logarithmicScale?Math.pow(10,that._numericProcessor.getCoercedValue(Math.log10(that.value))):that._numericProcessor.getCoercedValue(that.value);that._validate(false,newCoercedValue,true,true);that._valueBeforeCoercion=valueBeforeCoercion;}/**
     * Handles date scale.
     */},{key:'_handleDateScale',value:function _handleDateScale(){var that=this,dateTime=JQX.Utilities.DateTime;if(!dateTime){that.error(that.localize('missingReference',{elementType:that.nodeName.toLowerCase(),files:'jqxdate.js'}));}that._customTicks=that.customTicks;that._unitToMethod={'Y':'addSeconds','Z':'addMilliseconds','E':'addMicroseconds','P':'addNanoseconds','T':'addPicoseconds','G':'addFemtoseconds','M':'addAttoseconds','k':'addZeptoseconds'};that._minDate=dateTime.validateDate(that.min);that.min=that._minDate.getTimeStamp();that._maxDate=dateTime.validateDate(that.max);that.max=that._maxDate.getTimeStamp();if(!that.rangeSlider){that._valueDate=dateTime.validateDate(that.value);that.value=that._valueDate.getTimeStamp();}that._properties.min.serialize='_serializeMin';that._properties.max.serialize='_serializeMax';that._properties.value.serialize='_serializeValue';that.scaleType='integer';that.logarithmicScale=false;that.wordLength='uint64';var propertiesToRedefine=['min','max','value'];var _loop10=function _loop10(_i284){var propertyName=propertiesToRedefine[_i284];Object.defineProperty(that,propertyName,{get:function get(){if(that.context===that){return that.properties[propertyName].value;}else{return that['_'+propertyName+'Date'];}},set:function set(value){that.updateProperty(that,that._properties[propertyName],value);}});};for(var _i284=0;_i284<propertiesToRedefine.length;_i284++){_loop10(_i284);}that._getEventValue=function(){return that._valueDate.clone();};}/**
     * Serializes "min".
     */},{key:'_serializeMin',value:function _serializeMin(){return this._minDate.toString();}/**
     * Serializes "max".
     */},{key:'_serializeMax',value:function _serializeMax(){return this._maxDate.toString();}/**
     * Serializes "value".
     */},{key:'_serializeValue',value:function _serializeValue(){return this._valueDate.toString();}/**
     * Redefines property getter and setter.
     */},{key:'_redefineProperty',value:function _redefineProperty(propertyName){var that=this;Object.defineProperty(that,propertyName,{get:function get(){return that.properties[propertyName].value;},set:function set(value){function replacer(key,value){if(value instanceof JQX.Utilities.BigNumber){return value.toString();}return value;}var oldValue=that.properties[propertyName].value,stringifiedOldValue=JSON.stringify(oldValue,replacer),stringifiedValue=JSON.stringify(value,replacer);if(stringifiedOldValue===stringifiedValue){return;}that.properties[propertyName].value=value;if(that.isReady&&(!that.ownerElement||that.ownerElement&&that.ownerElement.isReady)&&that.context!==that){var _context=that.context;that.context=that;that.propertyChangedHandler(propertyName,oldValue,value);that.context=_context;}}});}}],[{key:'properties',/**
     * Tank's properties.
     */get:function get(){return{'coerce':{value:false,type:'boolean'},'customInterval':{value:false,type:'boolean'},'customTicks':{reflectToAttribute:false,value:['0','50','100'],type:'array'},'dateLabelFormatString':{value:'d',type:'string'},'decimalSeparator':{value:'.',type:'string'},'interval':{value:'1',type:'any'},'inverted':{value:false,type:'boolean'},'labelFormatFunction':{value:null,type:'function?'},'labelsVisibility':{value:'all',allowedValues:['all','endPoints','none'],type:'string'},'logarithmicScale':{value:false,type:'boolean'},'max':{value:'100',type:'any'},'mechanicalAction':{value:'switchWhileDragging',allowedValues:['switchUntilReleased','switchWhenReleased','switchWhileDragging'],type:'string'},'messages':{value:{'en':{'missingReference':'{{elementType}}: Missing reference to {{files}}.','significantPrecisionDigits':'{{elementType}}: the properties significantDigits and precisionDigits cannot be set at the same time.','invalidMinOrMax':'{{elementType}}: Invalid {{property}} value. Max cannot be lower than Min.','noInteger':'{{elementType}}: precisionDigits could be set only on "floatingPoint" scaleType.'}},type:'object',extend:true},'min':{value:'0',type:'any'},'mode':{value:'numeric',allowedValues:['numeric','date'],type:'string'},'name':{value:'',type:'string'},'orientation':{value:'vertical',allowedValues:['horizontal','vertical'],type:'string'},'precisionDigits':{value:null,type:'number?'},'scalePosition':{value:'near',allowedValues:['near','far','both','none'],type:'string'},'scaleType':{value:'floatingPoint',allowedValues:['floatingPoint','integer'],type:'string'},'scientificNotation':{value:false,type:'boolean'},'showThumbLabel':{value:false,type:'boolean'},'showTooltip':{value:false,type:'boolean'},'showUnit':{value:false,type:'boolean'},'significantDigits':{value:null,type:'number?'},'thumbLabelPosition':{value:'near',allowedValues:['near','far'],type:'string'},'ticksPosition':{value:'scale',allowedValues:['scale','track'],type:'string'},'ticksVisibility':{value:'minor',allowedValues:['major','minor','none'],type:'string'},'tooltipPosition':{value:'near',allowedValues:['near','far'],type:'string'},'unit':{value:'kg',type:'string'},'validation':{value:'strict',allowedValues:['strict','interaction'],type:'string'},'value':{value:'0',type:'any'},'wordLength':{value:'int32',allowedValues:['int8','uint8','int16','uint16','int32','uint32','int64','uint64'],type:'string'}};}/**
     * Tank's event listeners.
     */},{key:'listeners',get:function get(){return{'track.down':'_trackDownHandler','track.move':'_trackMoveHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','keydown':'_keydownHandler','resize':'_resizeHandler','styleChanged':'_styleChangedHandler','document.selectstart':'_selectStartHandler','track.mouseenter':'_trackOnMouseEnterHandler','track.mouseleave':'_trackOnMouseLeaveHandler'};}},{key:'requires',get:function get(){return{'JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.NumericProcessor':'jqxnumeric.js','JQX.Utilities.TickIntervalHandler':'jqxtickintervalhandler.js'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.tank.css'];}}]);return Tank;}(JQX.BaseElement));/**
 * Gauge custom element.
 */JQX('jqx-gauge',function(_JQX$Tank){babelHelpers.inherits(Gauge,_JQX$Tank);function Gauge(){babelHelpers.classCallCheck(this,Gauge);return babelHelpers.possibleConstructorReturn(this,(Gauge.__proto__||Object.getPrototypeOf(Gauge)).apply(this,arguments));}babelHelpers.createClass(Gauge,[{key:'template',/**
     * Gauge's HTML template.
     */value:function template(){var template='<div id="container">\n                <div id="svgContainer" class="jqx-svg-container"></div>\n                <div class="jqx-digital-display-container">\n                    <jqx-numeric-text-box id="digitalDisplay"\n                                            class="jqx-digital-display"\n                                            decimal-separator="[[decimalSeparator]]"\n                                            max="[[max]]"\n                                            min="[[min]]"\n                                            name="[[name]]"\n                                            readonly\n                                            input-format="[[scaleType]]"\n                                            scientific-notation="[[scientificNotation]]"\n                                            show-unit="[[showUnit]]"\n                                            unit="[[unit]]"\n                                            unfocusable\n                                            validation="interaction"\n                                            word-length="[[wordLength]]">\n                    </jqx-numeric-text-box>\n                </div>\n            </div>';return template;}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'attached',this).call(this);if(!that.isCompleted){return;}if(that._trackListener){that._trackListener=new JQX.Utilities.InputEvents(that._track);that._trackListener.down(function(event){that._SVGElementDownHandler(event);});}if(that._fillListener){that._fillListener=new JQX.Utilities.InputEvents(that._fill);that._fillListener.down(function(event){that._SVGElementDownHandler(event);});}if(that._lineListener){that._lineListener=new JQX.Utilities.InputEvents(that._line);that._lineListener.down(function(event){that._SVGElementDownHandler(event);});}}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'detached',this).call(this);that._unlisten();}/**
     * Invoked when an instance of custom element is attached to the DOM for the first time.
     */},{key:'ready',value:function ready(){babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'ready',this).call(this);}/**
     * Gets the optimal size of the Gauge.
     */},{key:'getOptimalSize',value:function getOptimalSize(){var that=this;if(that._renderingSuspended){return{width:0,height:0};}if(that.sizeMode==='circle'){return{width:that.offsetWidth,height:that._updateSize(true)};}else{return{width:that.offsetWidth,height:that.offsetHeight};}}/**
     * Sets or gets the value of the Gauge.
     *
     * @param {Number/String} value Optional value to be set to the Gauge. If this parameter is not set, the method gets the value.
     */},{key:'val',value:function val(value){var that=this;if(value!==undefined){// use as value setter
if(that.mode==='date'){value=JQX.Utilities.DateTime.validateDate(value);value=value.getTimeStamp();}// eslint-disable-next-line
if(that._numericProcessor.compare(value,that.value)){var oldValue=that.value;that._validateValue(value,that.value);if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}that._animate(oldValue);}}else{// use as value getter
return that._getEventValue();}}/**
     * Applies initial settings to the Gauge element.
     */},{key:'_createElement',value:function _createElement(){var that=this;if(that.mode==='numeric'){that._getEventValue=function(){return that.value;};}else{that._handleDateScale();that.digitalDisplay=false;}//Creating instances of NumericProcessor, NumberRenderer and Draw
that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');that._numberRenderer=new JQX.Utilities.NumberRenderer();that._draw=new JQX.Utilities.Draw(that.$.svgContainer);if(!that._isVisible()){that._renderingSuspended=true;return;}that._renderingSuspended=false;that._setSettingsObject();that._wordLengthNumber=that._numericProcessor.getWordLength(that.wordLength);that._measurements={};that._validateInitialPropertyValues();that._getMeasurements();that._setDrawVariables();that._getRange();that._numericProcessor.getAngleRangeCoefficient();if(that.mode==='numeric'||!that.coerce){that._validateValue();}else{that._coerceInitialDateValue=true;}that._initTickIntervalHandler();that._renderAnalogItems();delete that._preventResizeHandler;that._setFocusable();that._setUpdatePointerMethod();}/**
     * Invoked when the value of a public property has been changed by the user.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(key,oldValue,value){function validateMinMax(validateMin,validateMax,oldMin,oldMax){var toValidate=validateMin&&validateMax?'both':key;that._validateMinMax(toValidate,false,oldValue);if(key!=='logarithmicScale'&&key!=='scaleType'&&(key!=='wordLength'&&that[key]===oldValue||key==='wordLength'&&that.min===oldMin&&that.max===oldMax)){return;}that._setDrawVariables();that._getRange();that._numericProcessor.getAngleRangeCoefficient();that._initTickIntervalHandler();that._renderAnalogItems();that._validateValue(that.value,that.value);that._updatePointer();}var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}switch(key){case'analogDisplayType':delete that._customSVGElements;that._getMeasurements();if(value==='needle'&&that.digitalDisplayPosition==='center'){that.digitalDisplayPosition='bottom';}else if(oldValue==='needle'&&that.digitalDisplayPosition==='bottom'){that.digitalDisplayPosition='center';}that._renderAnalogItems();that._setUpdatePointerMethod();break;case'coerce':if(value){var valueBeforeCoercion=that.value;that._validateValue(valueBeforeCoercion);that._updatePointer();that._valueBeforeCoercion=valueBeforeCoercion;// stores value before coercion
}else{if(that._valueBeforeCoercion!==undefined){that._validateValue(that._valueBeforeCoercion);// restores the value from before coercion
that._updatePointer();}}break;case'customInterval':if(value){if(that._customTicks){that.customTicks=that._customTicks;}that._numericProcessor.validateCustomTicks();}else if(that.mode==='date'){that._customTicks=that.customTicks;}that._initTickIntervalHandler();that._renderAnalogItems();that._coerceCustomInterval();break;case'customTicks':if(that.mode==='date'&&!that.customInterval){that._customTicks=value;that.customTicks=oldValue;return;}that._numericProcessor.validateCustomTicks();if(that.customInterval){that._initTickIntervalHandler();that._renderAnalogItems();that._coerceCustomInterval();}break;case'dateLabelFormatString':case'showUnit':case'unit':that._initTickIntervalHandler();that._renderAnalogItems();break;case'decimalSeparator':case'scientificNotation':if(that.mode==='date'){return;}that._initTickIntervalHandler();that._renderAnalogItems();break;case'digitalDisplay':case'digitalDisplayPosition':if(that.mode==='date'){if(key==='digitalDisplay'){that.digitalDisplay=false;}return;}that._updateSize();break;case'mechanicalAction':case'messages':case'readonly':break;case'disabled':case'unfocusable':that._setFocusable();break;case'drawNeedle':if(that.analogDisplayType!=='needle'){return;}if(oldValue===null){that._draw.removeElement(that._needle);}if(value!==null){that._updatePointer();}else{that._renderAnalogItems();delete that._customSVGElements;}break;case'endAngle':case'startAngle':that._validateAngles();that._numericProcessor.getAngleRangeCoefficient();that._renderAnalogItems();break;case'interval':that._numericProcessor.validateInterval(that.interval);that._validateValue();that._updatePointer();break;case'inverted':case'labelFormatFunction':case'showRanges':that._renderAnalogItems();break;case'labelsVisibility':if(oldValue==='all'&&value==='endPoints'||oldValue==='endPoints'&&value==='all'){return;}that._getMeasurements();that._renderAnalogItems();break;case'logarithmicScale':if(that.mode==='date'){that.logarithmicScale=false;return;}that._initTickIntervalHandler();validateMinMax(true,true);break;case'max':case'min':if(that.mode==='date'){delete that._dateInterval;that[key]=JQX.Utilities.DateTime.validateDate(value).getTimeStamp();}validateMinMax(key==='min',key==='max');break;case'mode':that.mode=oldValue;break;case'needlePosition':if(that.analogDisplayType==='needle'){that._updatePointer();}break;case'precisionDigits':case'significantDigits':if(that.mode==='date'){return;}if(key==='precisionDigits'&&that.scaleType==='integer'){that.error(that.localize('noInteger',{elementType:that.nodeName.toLowerCase(),property:key}));}if(key==='significantDigits'&&that.precisionDigits!==null){that.precisionDigits=null;}else if(key==='precisionDigits'&&that.significantDigits!==null){that.significantDigits=null;}if(value!==null){that.$.digitalDisplay.precisionDigits=that.precisionDigits;that.$.digitalDisplay.significantDigits=that.significantDigits;}that._initTickIntervalHandler();that._renderAnalogItems();break;case'ranges':if(!that.showRanges){return;}that._renderAnalogItems();break;case'scaleType':if(that.mode==='date'){that.scaleType='integer';return;}that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');validateMinMax(true,true);break;case'scalePosition':case'ticksPosition':that._getMeasurements();that._renderAnalogItems();break;case'sizeMode':that._preventResizeHandler=true;if(value==='circle'){that.$.container.removeAttribute('style');that.style.height=that.offsetWidth+'px';that._measurements.cachedHeight=that.offsetHeight;}else{that.$.container.style.height=that.offsetWidth+'px';that._updateSize();}break;case'theme':babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);that._getMeasurements();that._renderAnalogItems();break;case'ticksVisibility':if(oldValue==='minor'&&value==='major'||oldValue==='major'&&value==='minor'){return;}that._getMeasurements();that._renderAnalogItems();break;case'validation':if(value==='strict'){that._validateValue(that.value,that.value);}break;case'value':{if(that.mode==='date'){value=JQX.Utilities.DateTime.validateDate(value);value=value.getTimeStamp();}that._validateValue(value,oldValue);var stringValue=value.toString();if(that.value.toString()===stringValue){that._drawValue=that.logarithmicScale?Math.log10(stringValue).toString():stringValue;}that._animate(oldValue);break;}case'wordLength':if(that.mode==='date'){that.wordLength='uint64';return;}that._wordLengthNumber=that._numericProcessor.getWordLength(that.wordLength);if(that.scaleType==='integer'){validateMinMax(true,true,that.min,that.max);}break;}}/**
     * Draws the Gauge's analog display.
     */},{key:'_addAnalogDisplay',value:function _addAnalogDisplay(){var that=this,measurements=that._measurements,radius=measurements.radius,draw=that._draw;if(that.analogDisplayType==='needle'){// needle
that._drawNeedle(false);// central circle
var centralCircleRadius=(measurements.needleWidth+5)/2;that._centralCircle=draw.circle(radius,radius,centralCircleRadius,{'class':'jqx-needle-central-circle'});that._minCoordinates.push(radius-centralCircleRadius);that._maxCoordinates.push(radius+centralCircleRadius);}else{var distance=radius-that._distance.trackDistance-measurements.trackBorderWidth/2-1;// track
that._track=draw.pieslice(radius,radius,distance-measurements.trackWidth,distance,that.startAngle,that.endAngle,0,{'class':'jqx-track'});that._trackListener=new JQX.Utilities.InputEvents(that._track);that._trackListener.down(function(event){that._SVGElementDownHandler(event);});}}/**
     * Calculates the tick drawing distance.
     */},{key:'_calculateTickAndLabelDistance',value:function _calculateTickAndLabelDistance(){var that=this,measurements=that._measurements;if(that.scalePosition==='none'){that._plotLabels=false;that._plotTicks=false;measurements.innerRadius=measurements.radius;return{majorTickDistance:0,minorTickDistance:0,labelDistance:0,needleDistance:0,trackDistance:0};}var labelsSize=that._tickIntervalHandler.labelsSize,labelSizeCoefficient=that._largestLabelSize||Math.max(labelsSize.minLabelSize,labelsSize.minLabelOtherSize,labelsSize.maxLabelSize,labelsSize.maxLabelOtherSize);var majorTickDistance=1,minorTickDistance=void 0,labelDistance=void 0,needleDistance=void 0,trackDistance=0;that._largestLabelSize=labelSizeCoefficient;if(that.scalePosition==='outside'){majorTickDistance=labelSizeCoefficient;minorTickDistance=majorTickDistance+measurements.majorTickSize-measurements.minorTickSize;labelDistance=0;}if(that.analogDisplayType==='needle'){if(that.scalePosition==='outside'){needleDistance=majorTickDistance+measurements.majorTickSize;}else{needleDistance=majorTickDistance+measurements.majorTickSize+labelSizeCoefficient;}if(that.ticksVisibility==='none'){labelDistance=0;needleDistance-=measurements.majorTickSize;}if(that.labelsVisibility==='none'){needleDistance-=labelSizeCoefficient;if(that.scalePosition==='outside'){majorTickDistance-=labelSizeCoefficient;minorTickDistance-=labelSizeCoefficient;}}}else{if(that.labelsVisibility==='none'&&that.ticksVisibility==='none'){trackDistance=0;}else{if(that.scalePosition==='outside'){if(that.ticksPosition==='scale'){if(that.labelsVisibility==='none'){majorTickDistance=1;minorTickDistance=1+measurements.majorTickSize-measurements.minorTickSize;}if(that.ticksVisibility!=='none'){trackDistance=majorTickDistance+measurements.majorTickSize+2;}else{trackDistance=labelSizeCoefficient;}}else{if(that.labelsVisibility!=='none'){minorTickDistance=minorTickDistance-(measurements.trackWidth+measurements.trackBorderWidth)/4;trackDistance=majorTickDistance-1;}else{majorTickDistance=1;minorTickDistance=(measurements.trackWidth+measurements.trackBorderWidth)/4+1;trackDistance=0;}}}else{if(that.ticksPosition==='scale'){majorTickDistance=measurements.trackWidth+1.5*measurements.trackBorderWidth+2;if(that.ticksVisibility==='none'){labelDistance=majorTickDistance;}}else{minorTickDistance=(measurements.trackWidth+measurements.trackBorderWidth)/4+1;}}}}if(minorTickDistance===undefined){minorTickDistance=majorTickDistance;}if(labelDistance===undefined){labelDistance=majorTickDistance+measurements.majorTickSize;}measurements.innerRadius=measurements.radius-labelDistance;delete that._plotLabels;delete that._plotTicks;delete that._equalToHalfRadius;if(that.scalePosition==='inside'){if(measurements.innerRadius<labelSizeCoefficient){that._plotLabels=false;if(that.ticksPosition==='scale'){if(that.analogDisplayType!=='needle'&&measurements.innerRadius<measurements.majorTickSize){that._plotTicks=false;}}else{that._equalToHalfRadius=true;measurements.innerRadius=measurements.radius/2;}}}else if(measurements.radius-trackDistance-measurements.trackBorderWidth<measurements.trackWidth){measurements.trackWidth=measurements.radius-trackDistance-measurements.trackBorderWidth;measurements.lineSize=measurements.trackWidth+measurements.trackBorderWidth;if(that.ticksPosition==='track'){measurements.majorTickSize=measurements.lineSize;measurements.minorTickSize=measurements.majorTickSize/2;minorTickDistance=majorTickDistance+(measurements.majorTickSize-measurements.minorTickSize)/2;}}return{majorTickDistance:majorTickDistance,minorTickDistance:minorTickDistance,labelDistance:labelDistance,needleDistance:needleDistance,trackDistance:trackDistance};}/**
     * Calculates the tank's major and minor ticks intervals.
     */},{key:'_calculateTickInterval',value:function _calculateTickInterval(){var that=this,intervals=that._tickIntervalHandler.getInterval('radial',that._drawMin,that._drawMax,that.$.container,that.logarithmicScale);if(intervals.major!==that._majorTicksInterval){that._intervalHasChanged=true;that._majorTicksInterval=intervals.major;}else{that._intervalHasChanged=true;}that._minorTicksInterval=intervals.minor;if(that.mode==='date'){that._calculateDateInterval(intervals.major);}}/**
     * Computes the points of a needle (needlePosition: 'center').
     */},{key:'_computeNeedlePointsCenter',value:function _computeNeedlePointsCenter(pointerWidth,angle){var that=this,measurements=that._measurements,innerRadius=measurements.innerRadius,radius=measurements.radius,sin=Math.sin(angle),cos=Math.cos(angle);var pointerLength=void 0;if(that.scalePosition==='inside'){pointerLength=(innerRadius-that._largestLabelSize)*0.9;}else{pointerLength=(innerRadius-that._distance.needleDistance)*0.9;}var x=radius+pointerLength*sin,y=radius+pointerLength*cos,startX1=radius+pointerWidth*cos,startY1=radius-pointerWidth*sin,startX2=radius-pointerWidth*cos,startY2=radius+pointerWidth*sin,points='M '+startX1+','+startY1+' L '+startX2+','+startY2+' L '+x+','+y+' Z';return points;}/**
     * Computes the points of a needle (needlePosition: 'edge').
     */},{key:'_computeNeedlePointsEdge',value:function _computeNeedlePointsEdge(pointerWidth,angle,pointerLength){var that=this,radius=that._measurements.radius,distance=radius-that._distance.needleDistance,distanceMinusPointerLength=distance-pointerLength,sin=Math.sin(angle),cos=Math.cos(angle),hPointX=radius+distanceMinusPointerLength*sin,hPointY=radius+distanceMinusPointerLength*cos,startPointX1=hPointX+pointerWidth*cos,startPointY1=hPointY-pointerWidth*sin,startPointX2=hPointX-pointerWidth*cos,startPointY2=hPointY+pointerWidth*sin,endPointX=radius+distance*sin,endPointY=radius+distance*cos,points='M '+startPointX1+','+startPointY1+' L '+startPointX2+','+startPointY2+' L '+endPointX+','+endPointY+' Z';return points;}/**
     * Document (mouse)move event handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){if(!this._dragging){return;}var that=this,angle=that._getAngleByCoordinate(event.pageX,event.pageY),quadrant=that._getQuadrant(angle),rotationDirection=that._getRotationDirection();if(that._normalizedStartAngle===that.endAngle){var normalizedReferentAngle=void 0;if(!that.inverted){if(that._lockCW&&rotationDirection==='ccw'){normalizedReferentAngle=that.endAngle;that._unlockRotation('_lockCW',angle,quadrant,normalizedReferentAngle,{firstCondition:angle>normalizedReferentAngle,secondCondition:angle<normalizedReferentAngle});}else if(that._lockCCW&&rotationDirection==='cw'){normalizedReferentAngle=that._normalizedStartAngle;that._unlockRotation('_lockCCW',angle,quadrant,normalizedReferentAngle,{firstCondition:angle<normalizedReferentAngle,secondCondition:angle>normalizedReferentAngle});}}else{if(that._lockCW&&rotationDirection==='cw'){normalizedReferentAngle=that._normalizedStartAngle;that._unlockRotation('_lockCW',angle,quadrant,normalizedReferentAngle,{firstCondition:angle<normalizedReferentAngle,secondCondition:angle>normalizedReferentAngle});}else if(that._lockCCW&&rotationDirection==='ccw'){normalizedReferentAngle=that.endAngle;that._unlockRotation('_lockCCW',angle,quadrant,normalizedReferentAngle,{firstCondition:angle>normalizedReferentAngle,secondCondition:angle<normalizedReferentAngle});}}}else{if(that._lockCW&&rotationDirection==='ccw'&&!that._outsideRange&&that._numericProcessor._getAngleDifference(angle,that._normalizedStartAngle)<10){that._lockCW=false;}else if(that._lockCCW&&rotationDirection==='cw'&&!that._outsideRange&&that._numericProcessor._getAngleDifference(angle,that.endAngle)<10){that._lockCCW=false;}}that._angle=angle;that._quadrant=quadrant;if(event.originalEvent){event.originalEvent.stopPropagation();event.originalEvent.preventDefault();}if(that._lockCW||that._lockCCW){return;}var newValue=that._numericProcessor.getValueByAngle(angle);if(that._normalizedStartAngle===that.endAngle){var lockedValue=that._numericProcessor.lockRotation(rotationDirection==='cw'&&!that.inverted||rotationDirection==='ccw'&&that.inverted,newValue);if(lockedValue!==undefined){newValue=lockedValue;}}else{if(rotationDirection==='ccw'&&that._outsideEnd){that._lockCCW=true;}else if(rotationDirection==='cw'&&that._outsideStart){that._lockCW=true;}}if(newValue!==undefined&&that._numericProcessor.compare(newValue,that.value)){cancelAnimationFrame(that._animationFrameId);that._updatePointer(newValue);if(that.mechanicalAction!=='switchWhenReleased'){that._numericProcessor.updateGaugeValue(newValue);}else{that._valueAtMoveEnd=newValue;}}}/**
     * Gauge (mouse)up event handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(){var that=this;if(that._dragging){that._lockCW=false;that._lockCCW=false;that._dragging=false;that.removeAttribute('dragged');if(that.mechanicalAction!=='switchWhileDragging'){var newValue=that.mechanicalAction==='switchUntilReleased'?that._valueAtDragStart:that._valueAtMoveEnd;if(that._numericProcessor.compare(newValue,that.value)){if(that.mechanicalAction==='switchUntilReleased'){that._animate(that.value,newValue);}that._numericProcessor.updateGaugeValue(newValue);}}}}/**
     * Gauge (mouse)down event handler.
     */},{key:'_downHandler',value:function _downHandler(event,targetIsTrack){var that=this,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(that.analogDisplayType!=='needle'&&!targetIsTrack||that.disabled||that.readonly||(that.enableShadowDOM?target.getRootNode().host===that.$.digitalDisplay:that.$.digitalDisplay.contains(target))||!JQX.Utilities.Core.isMobile&&('buttons'in event&&event.buttons!==1||event.which!==1)){event.stopPropagation();return;}var x=event.pageX,y=event.pageY;that._measurements.center=that._getCenterCoordinates();if(that.analogDisplayType==='needle'){var distanceFromCenter=Math.sqrt(Math.pow(that._measurements.center.x-x,2)+Math.pow(that._measurements.center.y-y,2));if(distanceFromCenter>that._measurements.radius){event.stopPropagation();return;}}if(that.mechanicalAction==='switchUntilReleased'){that._valueAtDragStart=that.value;}that._angle=that._getAngleByCoordinate(x,y);that._quadrant=that._getQuadrant(that._angle);var newValue=that._numericProcessor.getValueByAngle(that._angle);if(newValue!==undefined&&that._numericProcessor.compare(newValue,that.value)){that._animate(that.value,newValue);if(that.mechanicalAction!=='switchWhenReleased'){that._numericProcessor.updateGaugeValue(newValue);}else{that._valueAtMoveEnd=newValue;}}that._dragging=true;that.setAttribute('dragged','');}/**
     * Animates pointer.
     */},{key:'_animate',value:function _animate(oldValue,newValue){var that=this,logarithmicScale=that.logarithmicScale,totalIterations=Math.max(1,Math.round(that.animationDuration/15));cancelAnimationFrame(that._animationFrameId);if(!that.hasAnimation||totalIterations===1){that._updatePointer(newValue);return;}var numericProcessor=that._numericProcessor;var i=1,nextValue=void 0,getNextValue=void 0,oldDrawValue=void 0,newDrawValue=void 0;if(newValue===undefined){newValue=that.value;}oldValue=parseFloat(numericProcessor.validate(numericProcessor.createDescriptor(oldValue),that._minObject,that._maxObject));newValue=parseFloat(numericProcessor.validate(numericProcessor.createDescriptor(newValue),that._minObject,that._maxObject));if(logarithmicScale){oldDrawValue=Math.log10(oldValue);newDrawValue=Math.log10(newValue);}else{oldDrawValue=oldValue;newDrawValue=newValue;}var total=Math.abs(newDrawValue-oldDrawValue);if(newValue>oldValue){getNextValue=function getNextValue(){return Math.min(JQX.Utilities.Animation.Easings.easeInOutSine(i,oldDrawValue,total,totalIterations),newDrawValue);};}else{getNextValue=function getNextValue(){return Math.max(2*oldDrawValue-JQX.Utilities.Animation.Easings.easeInOutSine(i,oldDrawValue,total,totalIterations),newDrawValue);};}function getNextDrawValue(){nextValue=getNextValue();if(logarithmicScale){nextValue=Math.pow(10,nextValue);}}function animate(){i++;if(i===totalIterations){nextValue=newValue;that._updatePointer(nextValue);return;}that._updatePointer(nextValue);getNextDrawValue();that._animationFrameId=requestAnimationFrame(animate);}getNextDrawValue();that._animationFrameId=requestAnimationFrame(animate);}/**
     * Draws/updates the fill or line.
     */},{key:'_drawFill',value:function _drawFill(update,value){var that=this;if(that.analogDisplayType==='needle'){return;}if(value===undefined){value=that._number;}var measurements=that._measurements,radius=measurements.radius,distance=radius-that._distance.trackDistance-measurements.trackBorderWidth/2-1;if(that.analogDisplayType==='fill'){var angle=that._numericProcessor.getAngleByValue(value,true,true);var startAngle=void 0,endAngle=void 0;if(!that.inverted){startAngle=angle;endAngle=that.endAngle;}else{startAngle=that.startAngle;endAngle=angle;}if(update){that._fill.setAttribute('d',that._draw.pieSlicePath(radius,radius,distance-measurements.trackWidth,distance,startAngle,endAngle,0));}else{that._fill=that._draw.pieslice(radius,radius,distance-measurements.trackWidth,distance,startAngle,endAngle,0,{'class':'jqx-value'});that._fillListener=new JQX.Utilities.InputEvents(that._fill);that._fillListener.down(function(event){that._SVGElementDownHandler(event);});}}else{var width=distance+measurements.trackBorderWidth/2,innerWidth=width-measurements.lineSize,_angle=that._numericProcessor.getAngleByValue(value),angleSin=Math.sin(_angle),angleCos=Math.cos(_angle),x1=radius+width*angleSin,y1=radius+width*angleCos,x2=radius+innerWidth*angleSin,y2=radius+innerWidth*angleCos;if(update){that._line.setAttribute('x1',x1);that._line.setAttribute('y1',y1);that._line.setAttribute('x2',x2);that._line.setAttribute('y2',y2);}else{that._line=that._draw.line(x1,y1,x2,y2,{'class':'jqx-line'});that._lineListener=new JQX.Utilities.InputEvents(that._line);that._lineListener.down(function(event){that._SVGElementDownHandler(event);});}}}/**
     * Draws a label.
     */},{key:'_drawLabel',value:function _drawLabel(angle,value,distance,middle){var that=this,measurements=that._measurements,r=measurements.radius,stylingObj={'class':'jqx-label'+(middle!==false?' jqx-label-middle':''),'font-size':measurements.fontSize,'font-family':measurements.fontFamily,'font-weight':measurements.fontWeight,'font-style':measurements.fontStyle};value=that._formatLabel(value.toString(),false);var textSize=that._draw.measureText(value,0,stylingObj),w=r-distance-that._largestLabelSize/2,x=Math.round(r+w*Math.sin(angle))-textSize.width/2,y=Math.round(r+w*Math.cos(angle))-textSize.height/2,label=that._draw.text(value,x,y,textSize.width,textSize.height,0,stylingObj);that._minCoordinates.push(y);that._maxCoordinates.push(y+label.getBBox().height);}/**
     * Draws/updates the needle.
     */},{key:'_drawNeedle',value:function _drawNeedle(update,value){var that=this,measurements=that._measurements;if(value===undefined){value=that._number;}var angle=that._numericProcessor.getAngleByValue(value);if(!that.drawNeedle){var points=void 0;if(that.needlePosition==='center'){points=that._computeNeedlePointsCenter(measurements.needleWidth/2,angle);}else{points=that._computeNeedlePointsEdge(measurements.needleWidth/2,angle,measurements.needleLength);}if(update){that._needle.setAttribute('d',points);}else{that._needle=that._draw.path(points,{'class':'jqx-needle'});}}else{that._customSVGElements=that.drawNeedle(that,that._draw,measurements.radius,angle,that._distance.needleDistance);if(that._customSVGElements){var parent=that._customSVGElements[0].parentElement||that._customSVGElements[0].parentNode;for(var _i285=0;_i285<that._customSVGElements.length;_i285++){parent.insertBefore(that._customSVGElements[_i285],that._centralCircle);}}}}/**
     * Draws ranges.
     */},{key:'_drawRanges',value:function _drawRanges(){var that=this,numericProcessor=that._numericProcessor,ranges=that.ranges;if(!that.showRanges||ranges.length===0){return;}var measurements=that._measurements,radius=measurements.radius;var distance=void 0,rangeSize=void 0,startValue=void 0,endValue=void 0;if(that.analogDisplayType==='needle'){rangeSize=measurements.rangeSize;if(that.scalePosition==='inside'){distance=radius-1;}else{distance=radius-that._distance.needleDistance-2;if(that.labelsVisibility==='none'&&that.ticksVisibility==='none'){distance+=1;}}}else{distance=radius-that._distance.trackDistance-measurements.trackBorderWidth/2-1;rangeSize=measurements.trackWidth;}if(!that.inverted){startValue='startValue';endValue='endValue';}else{startValue='endValue';endValue='startValue';}for(var _i286=0;_i286<ranges.length;_i286+=1){var currentRange=ranges[_i286],validStartValue=numericProcessor.validateColorRange(currentRange[startValue]),validEndValue=numericProcessor.validateColorRange(currentRange[endValue]);var range=that._draw.pieslice(radius,radius,distance-rangeSize,distance,numericProcessor.getAngleByValue(validEndValue,true,true),numericProcessor.getAngleByValue(validStartValue,true,true),0,{'class':'jqx-range '+currentRange.className});that._ranges.push(range);}}/**
     * Draws a tick.
     */},{key:'_drawTick',value:function _drawTick(angle,width,type){var that=this,measurements=that._measurements,r=measurements.radius;var className='jqx-tick',size=void 0;if(type==='major'){size=measurements.majorTickSize;}else{size=measurements.minorTickSize;className+=' jqx-tick-minor';}var innerWidth=width-size,x1=r+width*Math.sin(angle),y1=r+width*Math.cos(angle),x2=r+innerWidth*Math.sin(angle),y2=r+innerWidth*Math.cos(angle);that._draw.line(x1,y1,x2,y2,{'class':className});that._minCoordinates.push(Math.min(y1,y2));that._maxCoordinates.push(Math.max(y1,y2));}/**
     * Returns the angle equivalent of coordinates.
     */},{key:'_getAngleByCoordinate',value:function _getAngleByCoordinate(x,y){function isInRange(from,to,angle){while(to<from){to+=360;}while(angle<from){angle+=360;}return angle>=from&&angle<=to;}var that=this,center=that._measurements.center,angleRadians=Math.atan2(y-center.y,x-center.x);var angleDeg=-1*angleRadians*180/Math.PI;if(angleDeg<0){angleDeg+=360;}that._actualAngle=angleDeg;if(that._normalizedStartAngle!==that.endAngle&&!isInRange(that._normalizedStartAngle,that.endAngle,angleDeg)){// coordinates are outside the range
if(that._numericProcessor._getAngleDifference(angleDeg,that._normalizedStartAngle)<=that._numericProcessor._getAngleDifference(angleDeg,that.endAngle)){angleDeg=that._normalizedStartAngle;that._outsideStart=true;that._outsideEnd=false;}else{angleDeg=that.endAngle;that._outsideEnd=true;that._outsideStart=false;}that._outsideRange=true;}else{that._outsideRange=false;that._outsideStart=false;that._outsideEnd=false;}return angleDeg;}/**
     * Returns the coordinates of the Gauge's center.
     */},{key:'_getCenterCoordinates',value:function _getCenterCoordinates(){var that=this,offset=that.$.container.getBoundingClientRect(),radius=that._measurements.radius,scrollLeft=document.body.scrollLeft||document.documentElement.scrollLeft,scrollTop=document.body.scrollTop||document.documentElement.scrollTop;return{x:offset.left+scrollLeft+radius,y:offset.top+scrollTop+radius};}/**
     * Gets inline "fill"/"stroke" set to _track, _fill or _line.
     */},{key:'_getInlineColors',value:function _getInlineColors(){var that=this;var trackColor='',fillColor='',lineColor='';if(that._track){trackColor=that._track.style.fill;}if(that._fill){fillColor=that._fill.style.fill;}if(that._line){lineColor=that._line.style.stroke;}return[trackColor,fillColor,lineColor];}/**
     * Measures some elements of the Gauge and stores the results.
     */},{key:'_getMeasurements',value:function _getMeasurements(){var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}var measurements=that._measurements;measurements.cachedWidth=that.offsetWidth;measurements.cachedHeight=that.offsetHeight;measurements.radius=measurements.cachedWidth/2;var measureElement=document.createElement('div');if(that.enableShadowDOM){that.shadowRoot.appendChild(measureElement);}else{that.appendChild(measureElement);}// ticks
measureElement.className='jqx-tick';measurements.majorTickSize=measureElement.offsetWidth;measureElement.className+=' jqx-tick-minor';measurements.minorTickSize=measureElement.offsetWidth;// labels
measureElement.className='jqx-label';var measureElementStyle=window.getComputedStyle(measureElement);measurements.fontSize=measureElementStyle.fontSize;measurements.fontFamily=measureElementStyle.fontFamily;measurements.fontWeight=measureElementStyle.fontWeight;measurements.fontStyle=measureElementStyle.fontStyle;measurements.trackWidth=0;measurements.trackBorderWidth=0;if(that.analogDisplayType==='needle'){// needle
measureElement.className='jqx-needle';measurements.needleWidth=measureElement.offsetWidth;measurements.needleLength=measureElement.offsetHeight;// ranges
measureElement.className='jqx-range';measurements.rangeSize=measureElement.offsetWidth;}else{// 'fill' and 'line' case
// track
measureElement.className='jqx-track';measurements.trackBorderWidth=parseFloat(measureElementStyle.strokeWidth);measurements.trackWidth=Math.min(measureElement.offsetWidth,measurements.radius-measurements.trackBorderWidth);measurements.lineSize=measurements.trackWidth+measurements.trackBorderWidth;if(that.ticksPosition==='track'){measurements.majorTickSize=measurements.lineSize;measurements.minorTickSize=measurements.majorTickSize/2;}}if(that.enableShadowDOM){that.shadowRoot.removeChild(measureElement);}else{that.removeChild(measureElement);}}/**
     * Returns the quadrant of an angle.
     */},{key:'_getQuadrant',value:function _getQuadrant(angle){if(angle>270){return 4;}else if(angle>180){return 3;}else if(angle>90){return 2;}else{return 1;}}/**
     * Returns the rotation direction.
     */},{key:'_getRotationDirection',value:function _getRotationDirection(){var that=this,quadrant=that._getQuadrant(that._actualAngle);if(that._actualAngle<that._angle&&(quadrant!==1||that._quadrant!==4)||that._actualAngle>that._angle&&quadrant===4&&that._quadrant===1){return'cw';}else{return'ccw';}}/**
     * Creates a new TickIntervalHandler instance.
     */},{key:'_initTickIntervalHandler',value:function _initTickIntervalHandler(){var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}var minLabel=that._formatLabel(that.min,false),maxLabel=that._formatLabel(that.max,false);that._tickIntervalHandler=new JQX.Utilities.TickIntervalHandler(that,minLabel,maxLabel,'jqx-label',that._settings.size,that.scaleType==='integer',that.logarithmicScale);}/**
     * Gauge keydown event handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this,oldValue=that._getEventValue(),stringValue=that._number.toString();if(that.mode==='numeric'){if(that.value.toString()!==stringValue){that.value=stringValue;that.$.digitalDisplay.value=stringValue;}babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'_keydownHandler',this).call(this,event);if(that.value.toString()!==oldValue){that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}}else{if(that.value.toString()!==stringValue){that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(stringValue);that.value=that._number;that.$.digitalDisplay.$.input.value=that._valueDate;}babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'_keydownHandler',this).call(this,event);if(that._valueDate.compare(oldValue)!==0){that.$.fireEvent('change',{'value':that._getEventValue(),'oldValue':oldValue});}}}/**
     * Normalizes the value of an angle.
     */},{key:'_normalizeAngle',value:function _normalizeAngle(angle){angle=angle%360;if(angle<0){angle+=360;}return angle;}/**
     * Renders the analog display, ticks and labels in the correct order
     */},{key:'_renderAnalogItems',value:function _renderAnalogItems(distanceCalculation){var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}var colors=that._getInlineColors();that._unlisten();that._draw.clear();delete that._needle;delete that._centralCircle;delete that._track;delete that._trackListener;delete that._fill;delete that._fillListener;delete that._line;delete that._lineListener;that._ranges=[];that._minCoordinates=[];that._maxCoordinates=[];if(distanceCalculation!==false){delete that._largestLabelSize;that._distance=that._calculateTickAndLabelDistance();}if(that._plotTicks!==false||that._plotLabels!==false){that._calculateTickInterval();var cachedLabelsSize=that._cachedLabelsSize,alternativeLargestLabelSize=Math.max(cachedLabelsSize.minLabelSize,cachedLabelsSize.minLabelOtherSize,cachedLabelsSize.maxLabelSize,cachedLabelsSize.maxLabelOtherSize);if(distanceCalculation!==false&&that._largestLabelSize!==alternativeLargestLabelSize){that._largestLabelSize=alternativeLargestLabelSize;that._distance=that._calculateTickAndLabelDistance();that._calculateTickInterval();}}if(that._coerceInitialDateValue){that._validateValue();delete that._coerceInitialDateValue;}that._drawRanges();that._addAnalogDisplay();if(that.ticksVisibility!=='none'&&that._plotTicks!==false||that.labelsVisibility!=='none'&&that._plotLabels!==false){if(!(that.customInterval||that._dateInterval)){that._numericProcessor.addGaugeTicksAndLabels();}else{that._numericProcessor.addGaugeCustomTicks();}}that._drawFill(false);that._updateSize();that._restoreInlineColors(colors[0],colors[1],colors[2]);}/**
     * Gauge resize event handler. Ensures the Gauge's bounding box always has the correct proportions.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(that._preventResizeHandler){delete that._preventResizeHandler;return;}if(!that._isVisible()){that._renderingSuspended=true;return;}else if(that._renderingSuspended){that._createElement();return;}var measurements=that._measurements;if(that._renderingSuspended||measurements.cachedWidth===that.offsetWidth&&measurements.cachedHeight===that.offsetHeight){return;}if(that.sizeMode==='circle'){if(that.offsetWidth!==that.offsetHeight){if(measurements.cachedWidth!==that.offsetWidth){that.style.height=that.offsetWidth+'px';that._preventResizeHandler=true;}else if(measurements.cachedHeight!==that.offsetHeight){that.style.width=that.offsetHeight+'px';that._preventResizeHandler=true;}}}else{if(measurements.cachedHeight!==that.offsetHeight&&measurements.cachedWidth===that.offsetWidth){that.style.height=measurements.cachedHeight+'px';that._preventResizeHandler=true;return;}that.$.container.style.height=that.offsetWidth+'px';}measurements.cachedWidth=that.offsetWidth;measurements.cachedHeight=that.offsetHeight;measurements.radius=measurements.cachedWidth/2;if(!that._equalToHalfRadius){measurements.innerRadius=measurements.radius-that._distance.labelDistance;}else{measurements.innerRadius=measurements.radius/2;}that._renderAnalogItems(false);}/**
     * Restores inline "fill"/"stroke" previously set to _track, _fill or _line.
     */},{key:'_restoreInlineColors',value:function _restoreInlineColors(trackColor,fillColor,lineColor){var that=this;if(that._track&&trackColor!==''){that._track.style.fill=trackColor;}if(that._fill&&fillColor!==''){that._fill.style.fill=fillColor;}if(that._line&&lineColor!==''){that._line.style.stroke=lineColor;}}/**
     * Document select start handler.
     */},{key:'_selectStartHandler',value:function _selectStartHandler(event){if(this._dragging){event.preventDefault();}}/**
     * Specifies the behaviour of the method "_updatePointer".
     */},{key:'_setUpdatePointerMethod',value:function _setUpdatePointerMethod(){var that=this;if(that.analogDisplayType==='needle'){that._updatePointer=function(value){if(that._customSVGElements){for(var _i287=0;_i287<that._customSVGElements.length;_i287++){that._draw.removeElement(that._customSVGElements[_i287]);}}that._drawNeedle(true,value);};}else{that._updatePointer=function(value){that._drawFill(true,value);};}}/**
     * styleChanged event handler.
     */},{key:'_styleChangedHandler',value:function _styleChangedHandler(event){var that=this;if(event.detail.styleProperties&&event.detail.styleProperties['min-height']){return;}if(!that._isVisible()){that._renderingSuspended=true;return;}else if(that._renderingSuspended){that._createElement();return;}that._getMeasurements();that._initTickIntervalHandler();that._renderAnalogItems();}/**
     * (Mouse)down event handler for the track, fill and line SVG elements.
     */},{key:'_SVGElementDownHandler',value:function _SVGElementDownHandler(event){var that=this,oldContext=that.context;that.context=that;that._downHandler(event,true);that.context=oldContext;}/**
     * Unlocks rotation of the analog display.
     */},{key:'_unlockRotation',value:function _unlockRotation(lockName,angle,quadrant,referentAngle,conditions){var that=this,firstCondition=conditions.firstCondition,secondCondition=conditions.secondCondition,angleQuadrant=that._getQuadrant(referentAngle);if((firstCondition&&(quadrant!==4||angleQuadrant!==1)||secondCondition&&quadrant===4&&angleQuadrant===1)&&that._numericProcessor._getAngleDifference(angle,referentAngle)<10){that[lockName]=false;}}/**
     * Updates the size of the Gauge when "sizeMode" is 'circle'.
     */},{key:'_updateSize',value:function _updateSize(getter){var that=this;if(that.sizeMode==='circle'&&getter===undefined){return;}var minCoordinates=that._minCoordinates,maxCoordinates=that._maxCoordinates;var top=minCoordinates[0],bottom=maxCoordinates[0];for(var _i288=1;_i288<minCoordinates.length;_i288++){top=Math.min(top,minCoordinates[_i288]);}for(var _i289=1;_i289<maxCoordinates.length;_i289++){bottom=Math.max(bottom,maxCoordinates[_i289]);}var gaugeClientRect=that.getBoundingClientRect();if(that.digitalDisplay){var digitalDisplayClientRect=that.$.digitalDisplay.getBoundingClientRect();top=Math.min(top,digitalDisplayClientRect.top-gaugeClientRect.top);bottom=Math.max(bottom,digitalDisplayClientRect.bottom-gaugeClientRect.top);}if(that.analogDisplayType!=='needle'){var trackBBox=that._track.getBBox();top=Math.min(top,trackBBox.y);bottom=Math.max(bottom,trackBBox.y+trackBBox.height);}for(var _i290=0;_i290<that._ranges.length;_i290++){var rangeBBox=that._ranges[_i290].getBBox();top=Math.min(top,rangeBBox.y-gaugeClientRect.top);bottom=Math.max(bottom,rangeBBox.y+rangeBBox.height-gaugeClientRect.top);}top-=2;var newHeight=bottom-top;if(getter===undefined){that._preventResizeHandler=true;that.style.height=newHeight+'px';that.$.container.style.marginTop=-1*top+'px';that._measurements.cachedHeight=newHeight;}else{return Math.round(newHeight);}}/**
     * Updates the values of the Gauge and its digital display and fires the "change" event.
     */},{key:'_updateValue',value:function _updateValue(newValue){this._numericProcessor.updateGaugeValue(newValue);}/**
     * Validates the value and updates the pointer.
     */},{key:'_validate',value:function _validate(initialValidation,programmaticValue,keyCode){var that=this,oldValue=that.value;that._validateValue(programmaticValue);if(keyCode&&(keyCode===35||keyCode===36)){that._animate(oldValue);}else{that._updatePointer();}}/**
     * Validates the startAngle and endAngle properties.
     */},{key:'_validateAngles',value:function _validateAngles(){var that=this;that._normalizedStartAngle=that._normalizeAngle(that.startAngle);that.endAngle=that._normalizeAngle(that.endAngle);if(that._normalizedStartAngle<that.endAngle){that.startAngle=that._normalizedStartAngle;}else{that.startAngle=that._normalizedStartAngle-360;}that._angleDifference=that.endAngle-that.startAngle;}/**
     * Validates initial property values.
     */},{key:'_validateInitialPropertyValues',value:function _validateInitialPropertyValues(){babelHelpers.get(Gauge.prototype.__proto__||Object.getPrototypeOf(Gauge.prototype),'_validateInitialPropertyValues',this).call(this);var that=this;if(that.sizeMode==='circle'){if(that.offsetWidth<that.offsetHeight){that.style.height=that.offsetWidth+'px';}else if(that.offsetWidth>that.offsetHeight){that.style.width=that.offsetHeight+'px';}}else{if(that.offsetHeight!==that.offsetWidth){that.style.height=that.offsetWidth+'px';}that.$.container.style.height=that.offsetWidth+'px';}that._validateAngles();if(that.significantDigits!==null){that.$.digitalDisplay.significantDigits=that.significantDigits;}else if(that.precisionDigits!==null){that.$.digitalDisplay.precisionDigits=that.precisionDigits;}}/**
     * Validates the Gauge's value.
     */},{key:'_validateValue',value:function _validateValue(value,oldValue){var that=this,numericProcessor=that._numericProcessor,logarithmicGauge=that.logarithmicScale,strictValidation=that.validation==='strict';var fireEvent=strictValidation&&oldValue!==undefined;if(value===undefined){fireEvent=false;value=that.value;}else{value=value.toString();}if(numericProcessor.regexScientificNotation.test(value)){value=numericProcessor.scientificToDecimal(value);}if(isNaN(value)){value=oldValue||0;}var valueNoRangeValidation=void 0,stringValueNoRangeValidation=void 0,stringValue=void 0;if(that.coerce){valueNoRangeValidation=numericProcessor.getCoercedValue(numericProcessor.createDescriptor(value,true,true,true),false,logarithmicGauge);that._number=valueNoRangeValidation;stringValueNoRangeValidation=valueNoRangeValidation.toString();stringValue=stringValueNoRangeValidation;}else if(strictValidation){valueNoRangeValidation=numericProcessor.getCoercedValue(numericProcessor.createDescriptor(value,true,true,true),false,logarithmicGauge);that._number=valueNoRangeValidation;stringValueNoRangeValidation=valueNoRangeValidation.toString();stringValue=stringValueNoRangeValidation;}else{fireEvent=false;valueNoRangeValidation=numericProcessor.getCoercedValue(numericProcessor.createDescriptor(value,true,true,false),false,logarithmicGauge);that._number=numericProcessor.validate(valueNoRangeValidation,numericProcessor.createDescriptor(that._minObject),numericProcessor.createDescriptor(that._maxObject));stringValueNoRangeValidation=valueNoRangeValidation.toString();stringValue=that._number.toString();}var oldValueDetail=void 0,valueDetail=void 0;if(that.mode==='numeric'){oldValueDetail=oldValue;valueDetail=stringValueNoRangeValidation;that.value=stringValueNoRangeValidation;// the "value" property continues to return the value set by the user
that.$.digitalDisplay.value=stringValueNoRangeValidation;}else{oldValueDetail=that._valueDate;that._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(stringValueNoRangeValidation);valueDetail=that._valueDate;that.value=valueNoRangeValidation;that.$.digitalDisplay.$.input.value=that._valueDate;}that._drawValue=logarithmicGauge?Math.log10(stringValue).toString():stringValue;if(fireEvent&&numericProcessor.compare(that._number,oldValue)){that.$.fireEvent('change',{'value':valueDetail,'oldValue':oldValueDetail});}delete that._valueBeforeCoercion;}/**
     * Removes custom event listeners.
     */},{key:'_unlisten',value:function _unlisten(){var that=this;if(that._trackListener){that._trackListener.unlisten();}if(that._fillListener){that._fillListener.unlisten();}if(that._lineListener){that._lineListener.unlisten();}}}],[{key:'properties',/**
     * Gauge's properties.
     */get:function get(){return{'analogDisplayType':{value:'needle',allowedValues:['needle','fill','line'],type:'string'},'animationDuration':{value:300,type:'number'},'digitalDisplay':{value:false,type:'boolean'},'digitalDisplayPosition':{value:'bottom',allowedValues:['top','bottom','right','left','center'],type:'string'},'drawNeedle':{value:null,type:'function?'},'endAngle':{value:210,type:'number'},'needlePosition':{value:'center',allowedValues:['center','edge'],type:'string'},'ranges':{value:[],type:'array'},'scalePosition':{value:'inside',allowedValues:['outside','inside','none'],type:'string'},'showRanges':{value:false,type:'boolean'},'sizeMode':{value:'circle',allowedValues:['circle','auto'],type:'string'},'startAngle':{value:-30,type:'number'}};}/**
     * Gauge's event listeners.
     */},{key:'listeners',get:function get(){return{'down':'_downHandler','resize':'_resizeHandler','styleChanged':'_styleChangedHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','document.selectstart':'_selectStartHandler','keydown':'_keydownHandler','move':'_trackMoveHandler'};}/**
     * Gauge's required files.
     */},{key:'requires',get:function get(){return{'JQX.Utilities.Draw':'jqxdraw.js','JQX.NumericTextBox':'jqxnumerictextbox.js'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.gauge.css'];}}]);return Gauge;}(JQX.Tank));/**
 * Slider custom element.
 */JQX('jqx-slider',function(_JQX$Tank2){babelHelpers.inherits(Slider,_JQX$Tank2);function Slider(){babelHelpers.classCallCheck(this,Slider);return babelHelpers.possibleConstructorReturn(this,(Slider.__proto__||Object.getPrototypeOf(Slider)).apply(this,arguments));}babelHelpers.createClass(Slider,[{key:'template',/**
     * Slider's HTML template.
     */value:function template(){var template='<div id="container" class="jqx-container">\n                <div id="scaleNear" class="jqx-scale jqx-scale-near"></div>\n                <div id="trackContainer" class="jqx-track-container">\n                    <jqx-repeat-button id="leftButton" class="jqx-spin-button" animation="[[animation]]" unfocusable>\n                        <div id="leftArrow" class="jqx-arrow"></div>\n                    </jqx-repeat-button>\n                    <div id="track" class="jqx-track">\n                        <div id="fill" class="jqx-value"></div>\n                        <div id="trackTicksContainer" class="jqx-track-ticks-container jqx-hidden"></div>\n                        <div id="thumb" class="jqx-thumb">\n                            <span id="thumbLabel" class="jqx-thumb-label"></span>\n                            <div id="tooltip" class="jqx-tooltip">\n                                <div id="tooltipContent" class="jqx-tooltip-content jqx-unselectable"></div>\n                            </div>\n                        </div>\n                        <div id="secondThumb" class="jqx-thumb">\n                            <span id="secondThumbLabel" class="jqx-thumb-label"></span>\n                            <div id="secondTooltip" class="jqx-tooltip">\n                                <div id="secondTooltipContent" class="jqx-tooltip-content jqx-unselectable"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <jqx-repeat-button id="rightButton" class="jqx-spin-button" animation="[[animation]]" unfocusable>\n                        <div id="rightArrow" class="jqx-arrow"></div>\n                    </jqx-repeat-button>\n                </div>\n                <div id="scaleFar" class="jqx-scale jqx-scale-far"></div>\n                <input id="hiddenInput" type="hidden" name="[[name]]">\n            </div>';return template;}},{key:'_createElement',value:function _createElement(){var that=this,numericScale=that.mode==='numeric';if(!that._renderingSuspended){if(numericScale){that._redefineProperty('values');}else if(!numericScale){that._handleDateScale();}}that._setSettingsObject();that._setDrawVariables();that._getLayoutType();//Creating instances of NumericProcessor and NumberRenderer
that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');that._numberRenderer=new JQX.Utilities.NumberRenderer();if(!that._isVisible()){that._renderingSuspended=true;return;}that._renderingSuspended=false;that._setInitialComponentDisplay();that._measurements={};that._getMeasurements();that._wordLengthNumber=that._numericProcessor.getWordLength(that.wordLength);var valuesHandler=that._valuesHandler=that.rangeSlider?new JQX.Utilities.SliderMultipleValueHandler(that):new JQX.Utilities.SliderSingleValueHandler(that);if(numericScale){that._getEventValue=function(){return that._valuesHandler.getValue();};}that._validateInitialPropertyValues();that._setTicksAndInterval();valuesHandler.validate(true);// initial value(s) validation
valuesHandler.updateTooltipValue();window.requestAnimationFrame(function(){that.$thumb.addClass('enable-animation');that.$secondThumb.addClass('enable-animation');that.$fill.addClass('enable-animation');});that._setFocusable();that._makeThumbAccessible();that.$.hiddenInput.value=that._getEventValue();}/*
     * Public methods
     *//**
     * Sets or gets the value of the slider.
     *
     * @param {Number/String} value Optional value to be set to the slider. If this parameter is not set, the method gets the value.
     */},{key:'val',value:function val(value){var that=this,valuesHandler=that._valuesHandler;if(value!==undefined){if(that.mode==='date'){if(!that.rangeSlider){value=JQX.Utilities.DateTime.validateDate(value);value=value.getTimeStamp();}else{value[0]=JQX.Utilities.DateTime.validateDate(value[0]);value[1]=JQX.Utilities.DateTime.validateDate(value[1]);value[0]=value[0].getTimeStamp();value[1]=value[1].getTimeStamp();}}// use as value setter
if(valuesHandler.areDifferent(value)){valuesHandler.validate(false,value,true);}}else{// use as value getter
return that._getEventValue();}}/**
     * Gets the optimal size of the slider.
     */},{key:'getOptimalSize',value:function getOptimalSize(){var that=this;if(that._renderingSuspended){return{width:0,height:0};}var sliderStyle=window.getComputedStyle(that),trackStyle=window.getComputedStyle(that.$.trackContainer);var optimalSize=0,largestLabelSize=void 0,optimalOtherSize=void 0,labels=void 0,firstLabel=void 0,lastLabel=void 0,firstRect=void 0,lastRect=void 0,difference=void 0;if(that.labelsVisibility==='all'){largestLabelSize=that._numericProcessor._longestLabelSize;}else if(that.labelsVisibility==='endPoints'){largestLabelSize=Math.max(that._tickIntervalHandler.labelsSize.minLabelOtherSize,that._tickIntervalHandler.labelsSize.maxLabelOtherSize);}else{largestLabelSize=0;}if(that.orientation==='horizontal'){optimalSize+=parseFloat(trackStyle.marginTop)+parseFloat(trackStyle.marginBottom)+that.$.track.offsetHeight;if(that.scalePosition==='near'||that.scalePosition==='both'){optimalSize+=largestLabelSize;labels=that.$.scaleNear.getElementsByClassName('jqx-label');firstLabel=labels[0];lastLabel=labels[labels.length-1];optimalSize+=parseFloat(window.getComputedStyle(firstLabel).bottom);}if(that.scalePosition==='far'||that.scalePosition==='both'){optimalSize+=largestLabelSize;labels=that.$.scaleFar.getElementsByClassName('jqx-label');firstLabel=labels[0];lastLabel=labels[labels.length-1];optimalSize+=parseFloat(window.getComputedStyle(firstLabel).top);}optimalSize+=parseFloat(sliderStyle.paddingTop)+parseFloat(sliderStyle.paddingBottom);optimalOtherSize=that.offsetWidth;if(that.scalePosition!=='none'){firstRect=firstLabel.getBoundingClientRect();lastRect=lastLabel.getBoundingClientRect();difference=firstRect.left+firstLabel.offsetWidth-lastRect.left;if(difference>0){optimalOtherSize=firstLabel.offsetWidth+lastLabel.offsetWidth+Math.max(10,that.$.thumb.offsetWidth);}}return{width:optimalOtherSize,height:optimalSize};}else{optimalSize+=parseFloat(trackStyle.marginLeft)+parseFloat(trackStyle.marginRight)+that.$.track.offsetWidth;if(that.scalePosition==='near'||that.scalePosition==='both'){optimalSize+=largestLabelSize;labels=that.$.scaleNear.getElementsByClassName('jqx-label');firstLabel=labels[0];lastLabel=labels[labels.length-1];optimalSize+=parseFloat(window.getComputedStyle(firstLabel).right);}if(that.scalePosition==='far'||that.scalePosition==='both'){optimalSize+=largestLabelSize;labels=that.$.scaleFar.getElementsByClassName('jqx-label');firstLabel=labels[0];lastLabel=labels[labels.length-1];optimalSize+=parseFloat(window.getComputedStyle(firstLabel).left);}optimalSize+=parseFloat(sliderStyle.paddingLeft)+parseFloat(sliderStyle.paddingRight);optimalOtherSize=that.offsetHeight;if(that.scalePosition!=='none'){firstRect=firstLabel.getBoundingClientRect();lastRect=lastLabel.getBoundingClientRect();difference=firstRect.top+firstLabel.offsetHeight-lastRect.top;if(difference>0){optimalOtherSize=firstLabel.offsetHeight+lastLabel.offsetHeight+Math.max(10,that.$.thumb.offsetHeight);}}return{width:optimalSize,height:optimalOtherSize};}}/**
     * Invoked when the value of a public property has been changed by the user.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(key,oldValue,value){var that=this,sameHandlers=['disabled','mode','readonly','showThumbLabel','tooltipPosition','unfocusable','validation'];if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}if(sameHandlers.indexOf(key)!==-1){babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);return;}var valuesHandler=that._valuesHandler;function redraw(){that._setTicksAndInterval();valuesHandler.validate(false,valuesHandler.getValue(),true);}// eslint-disable-next-line
if(key!=='values'&&value!=oldValue||key==='values'&&(value[0]!=oldValue[0]||value[1]!==oldValue[1])){switch(key){case'coerce':if(value){var valueBeforeCoercion=valuesHandler.getValue();valuesHandler.validate(false,valueBeforeCoercion.slice(0),true);that._valueBeforeCoercion=valueBeforeCoercion;// stores value before coercion
}else{if(that._valueBeforeCoercion!==undefined){valuesHandler.validate(false,that._valueBeforeCoercion.slice(0),true);// restores the value from before coercion
}}break;case'customInterval':case'customTicks':babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);if(that.customInterval){valuesHandler.validate(false,valuesHandler.getValue(),true);}break;case'dateLabelFormatString':if(that.mode==='date'){redraw();}break;case'decimalSeparator':case'scientificNotation':if(that.mode==='date'){return;}redraw();break;case'interval'://Validates the Interval
that._numericProcessor.validateInterval(value);valuesHandler.validate(false,valuesHandler.getValue(),true);break;case'inverted':that._getLayoutType();if(that._normalLayout){that.$.fill.style[that._settings.margin]='0px';}redraw();break;case'labelFormatFunction':case'showUnit':case'unit':redraw();break;case'labelsVisibility':case'ticksVisibility':return;case'logarithmicScale':if(that.mode==='date'){that.logarithmicScale=false;return;}that._validateMinMax('both');redraw();break;case'min':case'max':if(that.mode==='date'){delete that._dateInterval;that[key]=JQX.Utilities.DateTime.validateDate(value).getTimeStamp();}that._validateMinMax(key,false,oldValue);redraw();break;case'orientation':// clears previously applied inline styles
that.$.container.removeAttribute('style');that.$.trackContainer.removeAttribute('style');that.$.fill.removeAttribute('style');that.$.thumb.removeAttribute('style');that.$.secondThumb.removeAttribute('style');that._setSettingsObject();that._getLayoutType();that._getMeasurements();redraw();if(value==='horizontal'){that.$leftArrow.removeClass('jqx-arrow-up');that.$rightArrow.removeClass('jqx-arrow-down');that.$leftArrow.addClass('jqx-arrow-left');that.$rightArrow.addClass('jqx-arrow-right');}else{that.$leftArrow.removeClass('jqx-arrow-left');that.$rightArrow.removeClass('jqx-arrow-right');that.$leftArrow.addClass('jqx-arrow-up');that.$rightArrow.addClass('jqx-arrow-down');}break;case'precisionDigits':case'significantDigits':if(that.mode==='date'){return;}if(key==='precisionDigits'&&that.scaleType==='integer'){that.error(that.localize('noInteger',{elementType:that.nodeName.toLowerCase(),property:key}));}if(key==='significantDigits'&&that.precisionDigits!==null){that.precisionDigits=null;}else if(key==='precisionDigits'&&that.significantDigits!==null){that.significantDigits=null;}redraw();break;case'rangeSlider':if(value){that.values=[that.min,that.value];that._drawValues=[that._drawMin,that._drawValue];if(that.mode==='date'){that._valueDate=[that._minDate.clone(),that._valueDate];}if(that._valueBeforeCoercion!==undefined){that._valueBeforeCoercion=[that.min,that._valueBeforeCoercion];}valuesHandler=that._valuesHandler=new JQX.Utilities.SliderMultipleValueHandler(that);}else{that.value=that.values[1];that._drawValue=that._drawValues[1];if(that.mode==='date'){that._valueDate=that._valueDate[1];}if(that._valueBeforeCoercion!==undefined){that._valueBeforeCoercion=that._valueBeforeCoercion[1];}valuesHandler=that._valuesHandler=new JQX.Utilities.SliderSingleValueHandler(that);that.$.fill.style.marginTop=0;that.$.fill.style.marginLeft=0;}valuesHandler.validate(false,valuesHandler.getValue(),true);break;case'scalePosition':that._setInitialComponentDisplay();redraw();break;case'scaleType':if(that.mode==='date'){that.scaleType='integer';return;}that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'scaleType');that._validateMinMax('both');that._setTicksAndInterval();valuesHandler.validate(true);break;case'showButtons':if(value){that.$leftButton.removeClass('jqx-hidden');that.$rightButton.removeClass('jqx-hidden');}else{that.$leftButton.addClass('jqx-hidden');that.$rightButton.addClass('jqx-hidden');}that._setTicksAndInterval();valuesHandler.moveThumbBasedOnValue(valuesHandler.getDrawValue(),undefined,true);break;case'showTooltip':babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);if(!value){that.$tooltip.addClass('jqx-hidden');that.$secondTooltip.addClass('jqx-hidden');}break;case'theme':babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);redraw();break;case'ticksPosition':if(value==='scale'){that.$trackTicksContainer.addClass('jqx-hidden');that.$.trackTicksContainer.innerHTML='';}else{that.$trackTicksContainer.removeClass('jqx-hidden');}that._setTicksAndInterval();break;case'value':case'values':if(key==='value'&&that.rangeSlider||key==='values'&&!that.rangeSlider){return;}that[key]=oldValue;if(that.mode==='date'){if(key==='value'){value=JQX.Utilities.DateTime.validateDate(value);value=value.getTimeStamp();that.value=value;if(value.compare(oldValue)===0){return;}}else{value[0]=JQX.Utilities.DateTime.validateDate(value[0]);value[1]=JQX.Utilities.DateTime.validateDate(value[1]);value[0]=value[0].getTimeStamp();value[1]=value[1].getTimeStamp();that.values=value;if(value[0].compare(oldValue[0])===0&&value[1].compare(oldValue[1])===0){return;}}}valuesHandler.validate(false,value,true);break;case'wordLength':if(that.mode==='date'){that.wordLength='uint64';return;}that._wordLengthNumber=that._numericProcessor.getWordLength(value);that._validateMinMax('both');redraw();break;}}else if(typeof value!=='string'&&typeof oldValue==='string'){that[key]=oldValue;}}/**
     * Adds the class "jqx-moved-thumb" to the moved thumb.
     */},{key:'_addMovedThumbClass',value:function _addMovedThumbClass(){var that=this;if(!that.rangeSlider){return;}that._movedThumb.$.addClass('jqx-moved-thumb');if(that._movedThumb===that.$.thumb){that.$secondThumb.removeClass('jqx-moved-thumb');}else{that.$thumb.removeClass('jqx-moved-thumb');}}/**
     * Sets the display of the scales.
     */},{key:'_setInitialComponentDisplay',value:function _setInitialComponentDisplay(){babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'_setInitialComponentDisplay',this).call(this);var that=this;that.$secondTooltip.addClass('jqx-hidden');if(!that.showButtons){that.$leftButton.addClass('jqx-hidden');that.$rightButton.addClass('jqx-hidden');}}/**
     * Measures some elements of the slider and stores the results.
     */},{key:'_getMeasurements',value:function _getMeasurements(){var that=this,measurements=that._measurements,track=that.$.track,thumb=that.$.thumb;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}if(that.orientation==='horizontal'){measurements.trackWidth=track.offsetHeight;measurements.thumbSize=thumb.offsetWidth;measurements.borderWidth=parseFloat(window.getComputedStyle(that.$.track).borderLeftWidth);}else{measurements.trackWidth=track.offsetWidth;measurements.thumbSize=thumb.offsetHeight;measurements.borderWidth=parseFloat(window.getComputedStyle(that.$.track).borderTopWidth);}measurements.halfThumbSize=measurements.thumbSize/2;}/**
     * Applies necessary paddings to the track container.
     */},{key:'_layout',value:function _layout(){var that=this,measurements=that._measurements,containerStyle=that.$.container.style,thumbPadding=measurements.halfThumbSize,labelsSize=that._tickIntervalHandler.labelsSize;var minLabelPadding=void 0,maxLabelPadding=void 0,paddingStart=void 0,paddingEnd=void 0;if(that.scalePosition!=='none'){minLabelPadding=labelsSize.minLabelSize/2;maxLabelPadding=labelsSize.maxLabelSize/2;}else{minLabelPadding=0;maxLabelPadding=0;}if(!that.showButtons){paddingStart=Math.max(thumbPadding,minLabelPadding)+'px';paddingEnd=Math.max(thumbPadding,maxLabelPadding)+'px';}else{var spinButtonSize=that.$.leftButton[that._settings.size],buttonSize=spinButtonSize+thumbPadding;paddingStart=Math.max(minLabelPadding-buttonSize,0)+'px';paddingEnd=Math.max(maxLabelPadding-buttonSize,0)+'px';}if(that.orientation==='horizontal'){if(!that.inverted){containerStyle.paddingLeft=paddingStart;containerStyle.paddingRight=paddingEnd;}else{containerStyle.paddingLeft=paddingEnd;containerStyle.paddingRight=paddingStart;}measurements.trackLength=that.$.track.clientWidth;that.$leftArrow.addClass('jqx-arrow-left');that.$rightArrow.addClass('jqx-arrow-right');}else{if(!that.inverted){containerStyle.paddingBottom=paddingStart;containerStyle.paddingTop=paddingEnd;}else{containerStyle.paddingBottom=paddingEnd;containerStyle.paddingTop=paddingStart;}measurements.trackLength=that.$.track.clientHeight;that.$leftArrow.addClass('jqx-arrow-up');that.$rightArrow.addClass('jqx-arrow-down');}}/**
     * Track click event handler.
     */},{key:'_trackDownHandler',value:function _trackDownHandler(event){var that=this,mechanicalAction=that.mechanicalAction;if(that.disabled||that.readonly||!that.rangeSlider&&event.target===that.$.thumb){return;}if(that._stopTrackDownHandler){that._stopTrackDownHandler=false;return;}if(mechanicalAction!=='switchWhileDragging'){that._valueAtDragStart=that._valuesHandler.getValue();}that._getTrackStartAndEnd();that._valuesHandler.setActiveThumbOnTrackClick(event);that._moveThumbBasedOnCoordinates(event,true,mechanicalAction!=='switchWhenReleased');that._thumbDragged=true;that.setAttribute('dragged','');if(that.showTooltip){that._movedTooltip.removeClass('jqx-hidden');}}},{key:'_trackMoveHandler',value:function _trackMoveHandler(){}/**
     * Thumb mousedown event handler.
     */},{key:'_thumbDownHandler',value:function _thumbDownHandler(event){var that=this;if(that.disabled||that.readonly){return;}that._getTrackStartAndEnd();if(event[that._settings.page]<that._trackStart||event[that._settings.page]>that._trackEnd){that._stopTrackDownHandler=true;}if(that.mechanicalAction!=='switchWhileDragging'){that._valueAtDragStart=that._valuesHandler.getValue();}window.getSelection().removeAllRanges();that._thumbDragged=true;that.setAttribute('dragged','');that.$track.addClass('jqx-dragged');that._movedThumb=event.target;that._addMovedThumbClass();that._movedTooltip=that.$tooltip;if(that.rangeSlider){if(that._movedThumb===that.$.thumb){that._staticThumb=that.$.secondThumb;that.$secondTooltip.addClass('jqx-hidden');}else{that._staticThumb=that.$.thumb;that._movedTooltip=that.$secondTooltip;that.$tooltip.addClass('jqx-hidden');}}if(that.showTooltip){that._movedTooltip.removeClass('jqx-hidden');}event.stopPropagation();}/**
     * Thumb move and mouseleave event handler.
     */},{key:'_thumbMoveMouseleaveHandler',value:function _thumbMoveMouseleaveHandler(event){var that=this;if(that.disabled||that.readonly){return;}var target=event.target;if(event.type==='move'){var targetRect=target.getBoundingClientRect(),windowScrollX=window.scrollX||window.pageXOffset,windowScrollY=window.scrollY||window.pageYOffset,centerX=(targetRect.left+targetRect.right)/2+windowScrollX,centerY=(targetRect.top+targetRect.bottom)/2+windowScrollY,rSquared=Math.pow(targetRect.width/2,2);if(Math.pow(event.pageX-centerX,2)+Math.pow(event.pageY-centerY,2)>rSquared){return;}target.setAttribute('hover','');}else{target.removeAttribute('hover');}}/**
     * Document mousemove event handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this;if(that._thumbDragged){that.$thumb.removeClass('enable-animation');that.$secondThumb.removeClass('enable-animation');that.$fill.removeClass('enable-animation');that._moveThumbBasedOnCoordinates(event,true,that.mechanicalAction!=='switchWhenReleased');}}/**
     * Document mouseup event handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event,canceled){var that=this;if(!that._thumbDragged){return;}that.$thumb.addClass('enable-animation');that.$secondThumb.addClass('enable-animation');that.$fill.addClass('enable-animation');if(!canceled){if(that.mechanicalAction==='switchUntilReleased'){that._valuesHandler.validate(false,that._valueAtDragStart);}else if(that.mechanicalAction==='switchWhenReleased'){that._moveThumbBasedOnCoordinates(event,true,true);}}if(that.showTooltip){that._movedTooltip.addClass('jqx-hidden');}that._thumbDragged=false;that.removeAttribute('dragged');that._makeThumbAccessible();that._movedThumb=undefined;that.$track.removeClass('jqx-dragged');}/**
     * Spin button click event handler.
     */},{key:'_spinButtonClickHandler',value:function _spinButtonClickHandler(event){var that=this;if(that.disabled||that.readonly){return;}var operation=void 0;if(that.$.leftButton.contains(event.target)===that._normalLayout){operation='subtract';}else{operation='add';}that._valuesHandler.incrementOrDecrement(operation);}/**
     * Slider keydown event handler.
     */},{key:'_keydownHandlerSlider',value:function _keydownHandlerSlider(event){var that=this,key=event.key;if(key==='Escape'&&that._thumbDragged&&that.mechanicalAction==='switchWhenReleased'){that._documentUpHandler(undefined,true);that._valuesHandler.validate(false,that._valueAtDragStart);return;}if(['ArrowDown','ArrowLeft','ArrowRight','ArrowUp'].indexOf(key)!==-1&&!that.coerce){that.$thumb.removeClass('enable-animation');that.$secondThumb.removeClass('enable-animation');that.$fill.removeClass('enable-animation');that._restoreAnimationClass=true;}this._valuesHandler.keydownHandler(event);}/**
    * Slider keyup event handler.
    */},{key:'_keyupHandlerSlider',value:function _keyupHandlerSlider(){var that=this;if(that._restoreAnimationClass){that.$thumb.addClass('enable-animation');that.$secondThumb.addClass('enable-animation');that.$fill.addClass('enable-animation');}}/**
     * Slider resize and styleChanged event handler.
     */},{key:'_resizeAndStyleChangedHandler',value:function _resizeAndStyleChangedHandler(event){var that=this,valuesHandler=that._valuesHandler;if(!that._isVisible()){that._renderingSuspended=true;return;}else if(that._renderingSuspended){that._createElement();return;}if(that._renderingSuspended){return;}that._getMeasurements();that._setTicksAndInterval();valuesHandler.validate(false,valuesHandler.getValue(),true);if(event.type==='styleChanged'){var changedStyleProperties=event.detail.styleProperties;if(changedStyleProperties['font-size']||changedStyleProperties['font-family']||changedStyleProperties['font-style']||changedStyleProperties['font-weight']){var optimum=that.getOptimalSize();that.style.width=optimum.width+'px';that.style.height=optimum.height+'px';}}}/**
     * Moves the slider's thumb and updates the filled part of the track based on the position of the mouse.
     */},{key:'_moveThumbBasedOnCoordinates',value:function _moveThumbBasedOnCoordinates(event,checkBoundaries,changeValue){var that=this,numericProcessor=that._numericProcessor,trackStart=that._trackStart,margin=that._settings.margin;var coordinate=event[that._settings.page];if(checkBoundaries){coordinate=that._valuesHandler.restrictThumbCoordinates(coordinate,trackStart,that._trackEnd);}var newValue=numericProcessor.pxToValue(coordinate);if(that.rangeSlider&&that._movedThumb===that.$.thumb&&numericProcessor.compare(newValue,that.values[1],true)===1){newValue=numericProcessor.createDescriptor(that.values[1]);}var actualNewValue=newValue;if(!that.logarithmicScale){newValue=numericProcessor.getCoercedValue(newValue);actualNewValue=newValue;}else{newValue=numericProcessor.getCoercedValue(Math.log10(newValue));actualNewValue=parseFloat(Math.pow(10,newValue).toFixed(11));}coordinate=numericProcessor.valueToPx(newValue)+trackStart;var size=coordinate-trackStart;that._movedThumb.style[margin]=size-that._measurements.halfThumbSize+'px';that._valuesHandler.updateFillSizeAndPosition(size,margin,actualNewValue,true,changeValue);if(JQX.Utilities.Core.isMobile&&event.originalEvent){event.originalEvent.stopPropagation();event.originalEvent.preventDefault();}}/**
     * Moves the slider's thumb and updates the filled part of the track based on a passed value.
     */},{key:'_moveThumbBasedOnValue',value:function _moveThumbBasedOnValue(thumb,value,triggerEvent,firstPass){var that=this,px=that._numericProcessor.valueToPx(value),margin=that._settings.margin;thumb.style[margin]=px-that._measurements.halfThumbSize+'px';var actualValue=that._getSingleActualValue(value);if(!firstPass){that._valuesHandler.updateFillSizeAndPosition(px,margin,actualValue,triggerEvent,triggerEvent);}else if(that.rangeSlider){that._firstPassSize=px;}}/**
     * Calls the appropriate validation function.
     */},{key:'_validate',value:function _validate(initialValidation,programmaticValue,coerced,programmaticValueIsSet){this._valuesHandler.validate(initialValidation,programmaticValue,programmaticValueIsSet);}/**
     * Calls the appropriate update function.
     */},{key:'_updateValue',value:function _updateValue(value){var valuesHandler=this._valuesHandler;valuesHandler.updateValue(valuesHandler.getActualValue(value));}/**
     * Makes the first thumb accessible.
     */},{key:'_makeThumbAccessible',value:function _makeThumbAccessible(){var that=this;if(that.rangeSlider){if(that.$.thumb[that._settings.offset]===that.$.secondThumb[that._settings.offset]&&that._numericProcessor.compare(that.values[1],that.max)===false){that.$thumb.addClass('accessible');}else{that.$thumb.removeClass('accessible');}}}/**
     * Returns a single, actual value.
     */},{key:'_getSingleActualValue',value:function _getSingleActualValue(value){if(this.logarithmicScale){return parseFloat(Math.pow(10,value).toFixed(11));}return value.toString();}/**
     * Coerces the value when changes to custom interval-related settings are made.
     */},{key:'_coerceCustomInterval',value:function _coerceCustomInterval(){var that=this;if(that.coerce){var valueBeforeCoercion=that._valueBeforeCoercion;that._valuesHandler.validate(false,that._valuesHandler.getValue());that._valueBeforeCoercion=valueBeforeCoercion;}}/**
     * wheel event handler
     */},{key:'_wheelHandler',value:function _wheelHandler(event){var that=this;if(document.activeElement!==that||!that.enableMouseWheelAction){return;}event.stopPropagation();event.preventDefault();if(event.wheelDelta>0){that._keydownHandlerSlider({key:'ArrowRight',which:39,preventDefault:function preventDefault(){}});}else{that._keydownHandlerSlider({key:'ArrowLeft',which:37,preventDefault:function preventDefault(){}});}}/**
     * Handles date scale.
     */},{key:'_handleDateScale',value:function _handleDateScale(){var that=this,dateTime=JQX.Utilities.DateTime;babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'_handleDateScale',this).call(this);Object.defineProperty(that,'values',{get:function get(){if(that.context===that){return that.properties.values.value;}else{return that._valueDate;}},set:function set(value){function replacer(key,value){if(value instanceof JQX.Utilities.BigNumber){return value.toString();}return value;}var oldValue=that.properties.values.value,stringifiedOldValue=JSON.stringify(oldValue,replacer),stringifiedValue=JSON.stringify(value,replacer);if(stringifiedOldValue===stringifiedValue){return;}that.properties.values.value=value;if(that.isReady&&(!that.ownerElement||that.ownerElement&&that.ownerElement.isReady)&&that.context!==that){var _context2=that.context;that.context=that;that.propertyChangedHandler('values',oldValue,value);that.context=_context2;}}});if(that.rangeSlider){that._valueDate=[dateTime.validateDate(that.values[0]),dateTime.validateDate(that.values[1])];that.values=[that._valueDate[0].getTimeStamp(),that._valueDate[1].getTimeStamp()];}that._properties.values.serialize='_serializeValue';}/**
     * Sets new Ticks and Interval 
     */},{key:'_setTicksAndInterval',value:function _setTicksAndInterval(){var that=this;if(that._skipTrackReset){delete that._skipTrackReset;}else{that.$.track.style[that._settings.dimension]=null;}babelHelpers.get(Slider.prototype.__proto__||Object.getPrototypeOf(Slider.prototype),'_setTicksAndInterval',this).call(this);if(that.$.track[that._settings.size]<10){that._skipTrackReset=true;that.$.track.style[that._settings.dimension]=that.getOptimalSize()[that._settings.dimension]+'px';that._getMeasurements();that._setTicksAndInterval();that._valuesHandler.validate(false,that._valuesHandler.getValue());}}}],[{key:'properties',/**
     * Slider's properties.
     */get:function get(){return{'enableMouseWheelAction':{value:false,type:'boolean'},'orientation':{value:'horizontal',allowedValues:['horizontal','vertical'],type:'string',defaultReflectToAttribute:true},'rangeSlider':{value:false,type:'boolean'},'showButtons':{value:false,type:'boolean'},'values':{value:['0','100'],type:'array'}};}/**
     * Slider's event listeners.
     */},{key:'listeners',get:function get(){return{'track.down':'_trackDownHandler','thumb.down':'_thumbDownHandler','secondThumb.down':'_thumbDownHandler','thumb.mouseleave':'_thumbMoveMouseleaveHandler','secondThumb.mouseleave':'_thumbMoveMouseleaveHandler','thumb.move':'_thumbMoveMouseleaveHandler','secondThumb.move':'_thumbMoveMouseleaveHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','leftButton.click':'_spinButtonClickHandler','rightButton.click':'_spinButtonClickHandler','keydown':'_keydownHandlerSlider','keyup':'_keyupHandlerSlider','resize':'_resizeAndStyleChangedHandler','styleChanged':'_resizeAndStyleChangedHandler','document.selectstart':'_selectStartHandler','wheel':'_wheelHandler'};}/**
     * Slider's required files.
     */},{key:'requires',get:function get(){return{'JQX.RepeatButton':'jqxbutton.js'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.slider.css','jqx.button.css'];}}]);return Slider;}(JQX.Tank));/**
 * A class for instantiating a tooltip handler object (standard case).
 */JQX.Utilities.Assign('SliderSingleValueHandler',function(){function SliderSingleValueHandler(context){babelHelpers.classCallCheck(this,SliderSingleValueHandler);this.context=context;if(context.mode==='date'){context._getEventValue=function(value){if(value!==undefined){return JQX.Utilities.DateTime.fromFullTimeStamp(value);}return context._valueDate.clone();};}}babelHelpers.createClass(SliderSingleValueHandler,[{key:'applyFunctionToValue',value:function applyFunctionToValue(fn,argument){var that=this,context=that.context;if(argument===undefined){argument=context.value;}var result=fn.apply(context,[argument]);return result;}},{key:'areDifferent',value:function areDifferent(other){return this.context.value!==other;}},{key:'incrementOrDecrement',value:function incrementOrDecrement(operation){var context=this.context,newValue=context._keyIncrementDecrement(operation);this.validate(false,newValue);}},{key:'setActiveThumbOnTrackClick',value:function setActiveThumbOnTrackClick(){var context=this.context;context._movedThumb=context.$.thumb;context._addMovedThumbClass();context._movedTooltip=context.$tooltip;}},{key:'getActualValue',value:function getActualValue(value){return this.context._getSingleActualValue(value);}},{key:'getCoercedLogarithmicValue',value:function getCoercedLogarithmicValue(value){var context=this.context;if(context.logarithmicScale){var newDrawValue=context._numericProcessor.getCoercedValue(Math.log10(value));return this.getActualValue(newDrawValue);}return value;}},{key:'getDrawValue',value:function getDrawValue(){return this.context._drawValue;}},{key:'getValue',value:function getValue(){return this.context.value;}},{key:'keydownHandler',value:function keydownHandler(event){this.context._keydownHandler(event);}},{key:'moveThumbBasedOnValue',value:function moveThumbBasedOnValue(value,triggerEvent,noUpdate){var context=this.context;if(value===undefined){value=context.value;}context._moveThumbBasedOnValue(context.$.thumb,value,triggerEvent);if(noUpdate!==true){context._drawValue=value;var actualValue=this.getActualValue(value);var updatedValue=void 0;if(context._valueNoRangeValidation!==undefined){updatedValue=context._valueNoRangeValidation.toString();}else{updatedValue=actualValue.toString();}if(context.mode==='date'){context._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(updatedValue);}context.value=updatedValue;delete context._valueBeforeCoercion;this.updateTooltipValue(actualValue);}}},{key:'restrictThumbCoordinates',value:function restrictThumbCoordinates(coordinate,trackStart,trackEnd){coordinate=Math.max(coordinate,trackStart);coordinate=Math.min(coordinate,trackEnd);return coordinate;}},{key:'updateFillSizeAndPosition',value:function updateFillSizeAndPosition(size,margin,newValue,updateTooltip,changeValue){var context=this.context,fillStyle=context.$.fill.style,dimension=context._settings.dimension;if(context._normalLayout){fillStyle[dimension]=size+'px';}else{fillStyle[dimension]=context._measurements.trackLength-size+'px';fillStyle[margin]=size+'px';}if(updateTooltip){var oldValue=context.value,eventOldValue=context._getEventValue(oldValue),numericProcessor=context._numericProcessor;if(numericProcessor.compare(numericProcessor.createDescriptor(newValue),numericProcessor.createDescriptor(oldValue))){this.updateTooltipValue(newValue);if(changeValue){var updatedValue=void 0;context._drawValue=context.logarithmicScale?Math.log10(newValue):newValue;if(context._valueNoRangeValidation!==undefined){updatedValue=context._valueNoRangeValidation.toString();}else{updatedValue=newValue.toString();}if(context.mode==='date'){context._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(updatedValue);}context.value=updatedValue;delete context._valueBeforeCoercion;if(context._programmaticValueIsSet!==true){var eventValue=context._getEventValue();//Update hidden input
context.$.hiddenInput.value=eventValue;context.$.fireEvent('change',{'value':eventValue,'oldValue':eventOldValue});}}}}}},{key:'updateTooltipValue',value:function updateTooltipValue(newValue){var context=this.context;if(newValue===undefined){newValue=context.value;}var newFormattedValue=context._formatLabel(newValue);if(context.$.tooltipContent.innerHTML!==newFormattedValue){context.$.tooltipContent.innerHTML=newFormattedValue;context.$.thumbLabel.innerHTML=newFormattedValue;}}},{key:'updateValue',value:function updateValue(value){var context=this.context,renderedValue=context._numericProcessor.createDescriptor(value,true,false);context._drawValue=context.logarithmicScale?Math.log10(renderedValue):renderedValue;this.moveThumbBasedOnValue(context._drawValue,true);}},{key:'validate',value:function validate(initialValidation,programmaticValue,programmaticValueIsSet){var context=this.context,numericProcessor=context._numericProcessor;var value=void 0;context._programmaticValueIsSet=programmaticValueIsSet&&context.validation==='interaction';if(initialValidation){value=context.value;}else{value=programmaticValue;}var validNumber=void 0;if(context.coerce){value=context._numericProcessor.createDescriptor(value,true,true,true);}if(context.logarithmicScale){value=this.getCoercedLogarithmicValue(value);}else{value=numericProcessor.getCoercedValue(value);}if(context.validation==='strict'){context._valueNoRangeValidation=numericProcessor.createDescriptor(value,true,true,true);validNumber=context._valueNoRangeValidation;}else{context._valueNoRangeValidation=numericProcessor.createDescriptor(value,true,true,false);validNumber=numericProcessor.validate(context._valueNoRangeValidation,context._minObject,context._maxObject);}if(initialValidation){context._drawValue=context.logarithmicScale?Math.log10(validNumber):validNumber;value=context._valueNoRangeValidation.toString();if(context.mode==='date'){context._valueDate=JQX.Utilities.DateTime.fromFullTimeStamp(value);}context.value=value;this.moveThumbBasedOnValue(context._drawValue,undefined,true);}else{this.updateValue(validNumber);}delete context._valueNoRangeValidation;context._programmaticValueIsSet=false;}}]);return SliderSingleValueHandler;}());/**
 * A class for instantiating a tooltip handler object (range slider case).
 */JQX.Utilities.Assign('SliderMultipleValueHandler',function(){function SliderMultipleValueHandler(context){babelHelpers.classCallCheck(this,SliderMultipleValueHandler);this.context=context;if(context.mode==='date'){context._getEventValue=function(value,index){var result=[context._valueDate[0].clone(),context._valueDate[1].clone()];if(value!==undefined){result[index]=JQX.Utilities.DateTime.fromFullTimeStamp(value);}return result;};}}babelHelpers.createClass(SliderMultipleValueHandler,[{key:'applyFunctionToValue',value:function applyFunctionToValue(fn,argument){var that=this,context=that.context,result=[];if(argument===undefined){argument=context.values;}result[0]=fn.apply(context,[argument[0]]);result[1]=fn.apply(context,[argument[1]]);return result;}},{key:'areDifferent',value:function areDifferent(other){var values=this.context.values;return values[0]!==other[0]||values[1]!==other[1];}},{key:'incrementOrDecrement',value:function incrementOrDecrement(operation){var context=this.context,changedValues=context.values.slice(0);var changedIndex=void 0;if(operation==='add'){changedIndex=1;}else{changedIndex=0;}changedValues[changedIndex]=this.keyIncrementDecrement(operation,changedIndex);this.validate(false,changedValues);}},{key:'keydownHandler',value:function keydownHandler(event){var context=this.context;if(context.disabled||context.readonly){return;}var keyCode=!event.charCode?event.which:event.charCode,handledKeyCodes=[35,36,37,38,39,40];if(handledKeyCodes.indexOf(keyCode)!==-1){event.preventDefault();var updatedValues=context.values.slice(0);var newValue=void 0;switch(keyCode){case 40://down arrow
case 37://left arrow
newValue=this.keyIncrementDecrement('subtract',0);updatedValues[0]=newValue;context._movedThumb=context.$.thumb;break;case 38://top arrow
case 39://right arrow
newValue=this.keyIncrementDecrement('add',1);updatedValues[1]=newValue;context._movedThumb=context.$.secondThumb;break;case 36://home
context._drawValues[0]=context._drawMin;updatedValues[0]=context.min;context._movedThumb=context.$.thumb;break;case 35://end
context._drawValues[1]=context._drawMax;updatedValues[1]=context.max;context._movedThumb=context.$.secondThumb;break;}this.validate(false,updatedValues);return false;}}},{key:'keyIncrementDecrement',value:function keyIncrementDecrement(action,changedIndex){var context=this.context;var preValue=void 0,newValue=void 0;if(context.customInterval&&context.coerce){preValue=this.getValue()[changedIndex];return context._keyIncrementDecrement(action,preValue.toString());}if(context.mode==='date'){preValue=context._valueDate[changedIndex];newValue=preValue[context._dateIncrementMethod]((action==='add'?1:-1)*parseFloat(context.interval),true);newValue=newValue.getTimeStamp();if(newValue.compare(context._drawMin)===-1){return new JQX.Utilities.BigNumber(context._drawMin);}if(newValue.compare(context._drawMax)===1){return new JQX.Utilities.BigNumber(context._drawMax);}return newValue;}var drawValue=context._drawValues[changedIndex];preValue=context._numericProcessor.createDescriptor(drawValue);newValue=context._numericProcessor.incrementDecrement(preValue,action,context._validInterval);if(context.logarithmicScale){context._drawValues[changedIndex]=newValue;newValue=parseFloat(Math.pow(10,Math.round(newValue)).toFixed(11));}return newValue;}},{key:'setActiveThumbOnTrackClick',value:function setActiveThumbOnTrackClick(event){var context=this.context,commonTerm=context._trackStart+context._measurements.halfThumbSize,offset=context._settings.offset,thumb=context.$.thumb,secondThumb=context.$.secondThumb,thumbOffset=thumb[offset],secondThumbOffset=secondThumb[offset],clickedCoordinate=event[context._settings.page];var middleBetweenThumbs=context._normalLayout?commonTerm+thumbOffset+(secondThumbOffset-thumbOffset)/2:commonTerm+secondThumbOffset+(thumbOffset-secondThumbOffset)/2;if(context._normalLayout&&clickedCoordinate<=middleBetweenThumbs||!context._normalLayout&&clickedCoordinate>middleBetweenThumbs){context._movedThumb=thumb;context._staticThumb=secondThumb;context._movedTooltip=context.$tooltip;context.$secondTooltip.addClass('jqx-hidden');}else{context._movedThumb=secondThumb;context._staticThumb=thumb;context._movedTooltip=context.$secondTooltip;context.$tooltip.addClass('jqx-hidden');}context._addMovedThumbClass();}},{key:'getActualValue',value:function getActualValue(values){if(this.context.logarithmicScale){return[parseFloat(Math.pow(10,values[0].toString()).toFixed(11)),parseFloat(Math.pow(10,values[1].toString()).toFixed(11))];}return[values[0].toString(),values[1].toString()];}},{key:'getCoercedLogarithmicValue',value:function getCoercedLogarithmicValue(values){var context=this.context;if(context.logarithmicScale){var newDrawValues=[];newDrawValues[0]=context._numericProcessor.getCoercedValue(Math.log10(values[0]));newDrawValues[1]=context._numericProcessor.getCoercedValue(Math.log10(values[1]));return this.getActualValue(newDrawValues);}return values;}},{key:'getDrawValue',value:function getDrawValue(){return this.context._drawValues;}},{key:'getValue',value:function getValue(){return this.context.values.slice(0);}},{key:'moveThumbBasedOnValue',value:function moveThumbBasedOnValue(value,changedIndex,noUpdate){var context=this.context,both=changedIndex===undefined;if(value===undefined){value=context.values;}context._numericProcessor.restrictValue(value);if(both||changedIndex===1){context._movedThumb=context.$.secondThumb;context._moveThumbBasedOnValue(context.$.secondThumb,value[1],true,both);}if(both||changedIndex===0){context._movedThumb=context.$.thumb;context._moveThumbBasedOnValue(context.$.thumb,value[0],true);}delete context._firstPassSize;if(noUpdate!==true){context._drawValues=value;var actualValues=this.getActualValue(value);var updatedValues=void 0;if(context._valuesNoRangeValidation){updatedValues=[context._valuesNoRangeValidation[0].toString(),context._valuesNoRangeValidation[1].toString()];}else{updatedValues=actualValues;}if(context.mode==='date'){context._valueDate=[JQX.Utilities.DateTime.fromFullTimeStamp(actualValues[0]),JQX.Utilities.DateTime.fromFullTimeStamp(actualValues[1])];}context.values=updatedValues;delete context._valueBeforeCoercion;this.updateTooltipValue();}}},{key:'restrictThumbCoordinates',value:function restrictThumbCoordinates(coordinate,trackStart,trackEnd){var context=this.context,staticThumbOffset=trackStart+context._staticThumb[context._settings.offset]+context._measurements.halfThumbSize;if(context._movedThumb===context.$.thumb&&context._normalLayout||context._movedThumb===context.$.secondThumb&&!context._normalLayout){coordinate=Math.max(coordinate,trackStart);coordinate=Math.min(coordinate,trackEnd,staticThumbOffset);}else{coordinate=Math.max(coordinate,trackStart,staticThumbOffset);coordinate=Math.min(coordinate,trackEnd);}return coordinate;}},{key:'updateFillSizeAndPosition',value:function updateFillSizeAndPosition(size,margin,newValue,updateTooltip,changeValue){var context=this.context,fillStyle=context.$.fill.style,dimension=context._settings.dimension,offset=context._settings.offset,halfThumbSize=context._measurements.halfThumbSize;var thumbOffset=void 0,secondThumbOffset=void 0;if(context._movedThumb===context.$.thumb){thumbOffset=size-halfThumbSize;secondThumbOffset=context._firstPassSize!==undefined?context._firstPassSize-halfThumbSize:context.$.secondThumb[offset];}else{thumbOffset=context._firstPassSize!==undefined?context._firstPassSize-halfThumbSize:context.$.thumb[offset];secondThumbOffset=size-halfThumbSize;}if(context._normalLayout){fillStyle[dimension]=Math.max(0,secondThumbOffset-thumbOffset)+'px';fillStyle[margin]=thumbOffset+halfThumbSize+'px';}else{fillStyle[dimension]=Math.max(0,thumbOffset-secondThumbOffset)+'px';fillStyle[margin]=secondThumbOffset+halfThumbSize+'px';}if(updateTooltip){var numericProcessor=context._numericProcessor,index=context._movedThumb===context.$.thumb?0:1,oldValue=context.values[index],oldValues=context._getEventValue(oldValue,index);if(numericProcessor.compare(numericProcessor.createDescriptor(newValue),numericProcessor.createDescriptor(oldValue))){var updatedValues=context.values.slice(0);updatedValues[index]=newValue.toString();this.updateTooltipValue(newValue,index);if(changeValue){var finalUpdatedValues=void 0;this.updateDrawValues(updatedValues);if(context._valuesNoRangeValidation){finalUpdatedValues=[context._valuesNoRangeValidation[0].toString(),context._valuesNoRangeValidation[1].toString()];}else{finalUpdatedValues=updatedValues;}if(context.mode==='date'){context._valueDate=[JQX.Utilities.DateTime.fromFullTimeStamp(updatedValues[0]),JQX.Utilities.DateTime.fromFullTimeStamp(updatedValues[1])];}context.values=finalUpdatedValues;delete context._valueBeforeCoercion;if(context._programmaticValueIsSet!==true){var newValues=context._getEventValue();//Update hidden input
context.$.hiddenInput.value=newValues;context.$.fireEvent('change',{'value':newValues,'oldValue':oldValues});}}}}}},{key:'updateDrawValues',value:function updateDrawValues(values){var context=this.context;if(context.logarithmicScale){context._drawValues[0]=Math.log10(values[0]);context._drawValues[1]=Math.log10(values[1]);}else{context._drawValues=values.slice(0);}}},{key:'updateTooltipValue',value:function updateTooltipValue(newValue,index){var context=this.context;if(newValue===undefined){var values=context.values,formattedFirstValue=context._formatLabel(values[0]),formattedSecondValue=context._formatLabel(values[1]);if(context.$.tooltipContent.innerHTML!==formattedFirstValue){context.$.tooltipContent.innerHTML=formattedFirstValue;context.$.thumbLabel.innerHTML=formattedFirstValue;}if(context.$.secondTooltipContent.innerHTML!==formattedSecondValue){context.$.secondTooltipContent.innerHTML=formattedSecondValue;}}else{var formattedNewValue=context._formatLabel(newValue);if(index===0&&context.$.tooltipContent.innerHTML!==formattedNewValue||index===undefined){context.$.tooltipContent.innerHTML=formattedNewValue;context.$.thumbLabel.innerHTML=formattedNewValue;}if(index===1&&context.$.secondTooltipContent.innerHTML!==formattedNewValue||index===undefined){context.$.secondTooltipContent.innerHTML=formattedNewValue;context.$.secondThumbLabel.innerHTML=formattedNewValue;}}}},{key:'updateValue',value:function updateValue(values){var context=this.context,renderedValues=[];var changedIndex=void 0;renderedValues[0]=context._numericProcessor.createDescriptor(values[0],true,false);renderedValues[1]=context._numericProcessor.createDescriptor(values[1],true,false);this.updateDrawValues(renderedValues);if(context._movedThumb===context.$.secondThumb){changedIndex=1;}this.moveThumbBasedOnValue(context._drawValues.slice(0),changedIndex);}},{key:'validate',value:function validate(initialValidation,programmaticValue,programmaticValueIsSet){var context=this.context,numericProcessor=context._numericProcessor;var validNumbers=[],values=void 0;context._programmaticValueIsSet=programmaticValueIsSet&&context.validation==='interaction';if(initialValidation){values=context.values.slice(0);}else{values=programmaticValue;}if(context.coerce){values[0]=numericProcessor.createDescriptor(values[0],true,true,true);values[1]=numericProcessor.createDescriptor(values[1],true,true,true);}if(context.logarithmicScale){values=this.getCoercedLogarithmicValue(values);}else{values[0]=numericProcessor.getCoercedValue(values[0]);values[1]=numericProcessor.getCoercedValue(values[1]);}context._valuesNoRangeValidation=[];context._valuesNoRangeValidation[0]=numericProcessor.createDescriptor(values[0],true,true,false);context._valuesNoRangeValidation[1]=numericProcessor.createDescriptor(values[1],true,true,false);context._numericProcessor.restrictValue(context._valuesNoRangeValidation);validNumbers[0]=numericProcessor.validate(context._valuesNoRangeValidation[0],context._minObject,context._maxObject);validNumbers[1]=numericProcessor.validate(context._valuesNoRangeValidation[1],context._minObject,context._maxObject);if(initialValidation){context._drawValues=[];this.updateDrawValues(validNumbers);values=[context._valuesNoRangeValidation[0].toString(),context._valuesNoRangeValidation[1].toString()];if(context.mode==='date'){context._valueDate=[JQX.Utilities.DateTime.fromFullTimeStamp(validNumbers[0]),JQX.Utilities.DateTime.fromFullTimeStamp(validNumbers[1])];}context.values=values;this.moveThumbBasedOnValue(context._drawValues,undefined,true);}else{this.updateValue(validNumbers);}delete context._valuesNoRangeValidation;context._programmaticValueIsSet=false;}}]);return SliderMultipleValueHandler;}());/**
 * Accordion item custom element.
 */JQX('jqx-accordion-item',function(_JQX$ContentElement4){babelHelpers.inherits(AccordionItem,_JQX$ContentElement4);function AccordionItem(){babelHelpers.classCallCheck(this,AccordionItem);return babelHelpers.possibleConstructorReturn(this,(AccordionItem.__proto__||Object.getPrototypeOf(AccordionItem)).apply(this,arguments));}babelHelpers.createClass(AccordionItem,[{key:'template',/**
     * Expander item's HTML template.
     */value:function template(){return'<div id="container">\n                    <div id="accordionItemHeader" class ="jqx-accordion-item-header jqx-unselectable">\n                        <span id="arrow" class ="jqx-arrow"></span>\n                        <span id="label" class ="jqx-label" inner-h-t-m-l=\'[[label]]\'></span>\n                    </div>\n                    <div id="accordionItemContent" class ="jqx-accordion-item-content">\n                        <div id="contentContainer" class ="jqx-content-container"><content></content></div>\n                    </div>\n                </div>';}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(AccordionItem.prototype.__proto__||Object.getPrototypeOf(AccordionItem.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);oldValue=parseInt(oldValue);newValue=parseInt(newValue);if(propertyName!=='index'||isNaN(oldValue)||isNaN(newValue)){return;}var that=this,allSiblingsCount=that.parentElement.parentElement._items.length;if(newValue<0){newValue=0;}else if(newValue>=allSiblingsCount){newValue=allSiblingsCount-1;}if(newValue!==oldValue){that.$.fireEvent('indexChange',{'newIndex':newValue,'oldIndex':oldValue});}that.index=newValue;}/**
    * Accordion's header onMouseEnter handler.
    **/},{key:'_headerMouseEnterHandler',value:function _headerMouseEnterHandler(){var that=this;if(that.disabled){return;}that.setAttribute('hovered','');}/**
    * Accordion's header onMouseLeave handler.
    **/},{key:'_headerMouseLeaveHandler',value:function _headerMouseLeaveHandler(){var that=this;if(that.disabled){return;}that.removeAttribute('hovered');}/**
   * Accordion's material ripple effect
   **/},{key:'_ripple',value:function _ripple(event){var that=this;if(that.disabled){return;}if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(that.$.container,event.pageX,event.pageY);}}/**
     * Sets the index without "propertyChangedHandler" being called
     */},{key:'_setIndex',value:function _setIndex(index){var that=this,oldContext=that.context;that.context=that;that.index=index;that.context=oldContext;}},{key:'enableShadowDOM',get:function get(){return false;}/**
     * Accordion item's event listeners.
     */}],[{key:'properties',// Accordion item's properties.
get:function get(){return{'dragged':{value:false,type:'boolean'},'expanded':{value:false,type:'boolean'},'focused':{value:false,type:'boolean'},'index':{value:null,type:'number?'},'label':{value:'',type:'string'}};}},{key:'listeners',get:function get(){return{'accordionItemHeader.mouseenter':'_headerMouseEnterHandler','accordionItemHeader.mouseleave':'_headerMouseLeaveHandler','accordionItemHeader.down':'_ripple'};}}]);return AccordionItem;}(JQX.ContentElement));/**
* Accordion custom element.
*/JQX('jqx-accordion',function(_JQX$BaseElement8){babelHelpers.inherits(Accordion,_JQX$BaseElement8);function Accordion(){babelHelpers.classCallCheck(this,Accordion);return babelHelpers.possibleConstructorReturn(this,(Accordion.__proto__||Object.getPrototypeOf(Accordion)).apply(this,arguments));}babelHelpers.createClass(Accordion,[{key:'template',/**
    * Accordion's HTML template.
    */value:function template(){return'<div id="container">\n                    <content></content>\n                </div>';}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'ready',/**
    * Called when the element is ready. Used for one-time configuration of the Accordion.
    */value:function ready(){babelHelpers.get(Accordion.prototype.__proto__||Object.getPrototypeOf(Accordion.prototype),'ready',this).call(this);var that=this;that._createElement();}/**
   * Updates the accordion when a property is changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
   * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
   */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;if(propertyName==='expandedIndexes'){if(oldValue.toString()===newValue.toString()){return;}var sanitizedNewValue=[];if(that._items.length>0){for(var _i291=0;_i291<newValue.length;_i291++){var sanitizedNewValueSingleItem=parseInt(newValue[_i291]);if(!isNaN(sanitizedNewValueSingleItem)){if(that._expandModeIs(['single','singleFitHeight','toggle'])){if(sanitizedNewValue.length<1&&sanitizedNewValueSingleItem>=0&&sanitizedNewValueSingleItem<that._items.length){sanitizedNewValue.push(sanitizedNewValueSingleItem);}break;}else{if(sanitizedNewValueSingleItem>=0&&sanitizedNewValueSingleItem<=that._items.length&&sanitizedNewValue.indexOf(sanitizedNewValueSingleItem)===-1){sanitizedNewValue.push(sanitizedNewValueSingleItem);}}}}}if(sanitizedNewValue.length===0&&that._expandModeIs(['single','singleFitHeight'])){newValue=oldValue.slice();that.expandedIndexes=newValue;return;}newValue=sanitizedNewValue;var indexes=that._compareExpandedIndexes(oldValue,newValue);that._toggleItems('collapse',indexes.collapse);that._toggleItems('expand',indexes.expand);that.expandedIndexes=newValue;return;}babelHelpers.get(Accordion.prototype.__proto__||Object.getPrototypeOf(Accordion.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);switch(propertyName){case'disabled':that._setFocusable();that._enableDisableHandler();break;case'expandMode':if(that._items.length===0){break;}if(oldValue==='multiple'&&newValue!=='none'||oldValue==='none'&&newValue!=='multiple'){var indexesToCollapse=that.expandedIndexes.slice(1);that._toggleItems('collapse',indexesToCollapse);if(that.expandedIndexes.length===0&&that._expandModeIs(['single','singleFitHeight'])){expandFirstItem();}}else if(oldValue==='toggle'&&that._expandModeIs(['single','singleFitHeight'])&&that.expandedIndexes.length===0){expandFirstItem();}if(!that._supportCSSVariables||!that._usedCSSVariables){var expandedIndex=that.expandedIndexes[0];if(oldValue==='singleFitHeight'){that._items[expandedIndex].$.accordionItemContent.style.height='';}else if(newValue==='singleFitHeight'){that._items[expandedIndex].$.accordionItemContent.style.height=that._expandedItemsContainerHeight-1+'px';}}break;case'unfocusable':that._setFocusable();break;default:break;}function expandFirstItem(){that._toggleItems('expand',[0]);that.expandedIndexes=[0];}}/**
    * Appends a "jqx-accordion-item" node as the last position.
    */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&(node.classList.contains('jqx-resize-trigger-container')||node.classList.contains('jqx-measure-element'))){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!(node instanceof JQX.AccordionItem)){that.error(that.localize('accordionItemRequired',{method:'appendChild'}));}that.insert(that._items.length,node);}/**
    * Collapse method. Collapses selected item
    */},{key:'collapse',value:function collapse(index,programmaticUse){var that=this;index=that._validateItemsIndex(index,'collapse');if(isNaN(index)){return;}var isExpanded=that._items[index].expanded;if(!isExpanded||that._expandModeIs(['single','singleFitHeight'])&&that.expandedIndexes.indexOf(index)>-1){return;}that._collapseItem(index,programmaticUse);}/**
    * Expand method.
    */},{key:'expand',value:function expand(index,programmaticUse){var that=this;index=that._validateItemsIndex(index,'expand');if(isNaN(index)){return;}var isExpanded=that._items[index].expanded;if(isExpanded){return;}if(that._expandModeIs(['single','singleFitHeight','toggle'])){that._toggleItems('collapse',that.expandedIndexes);}that._expandItem(index,programmaticUse);}/**
    * Inserts items in specific position. It has two parameters - index and item(items).
    */},{key:'insert',value:function insert(index,items){var that=this,accordionWasEmpty=that._items.length===0;var item=void 0,fragment=void 0;if(!items){if(typeof index==='number'){items=[{label:'',content:''}];}else{items=[{label:index?index.toString():'',content:index?index.toString():''}];index=0;}}if(items instanceof HTMLElement){if(!(items instanceof JQX.AccordionItem)){that.error(that.localize('accordionItemRequired',{method:'insert'}));}else{item=items;}}else if(Array.isArray(items)){fragment=document.createDocumentFragment();for(var _i292=0;_i292<items.length;_i292++){var fragmentItem=that._createItem(items[_i292]);fragment.appendChild(fragmentItem);}}else if(items instanceof Object){item=that._createItem(items);}else if(typeof items==='string'||typeof items==='number'){item=that._createItem({label:items.toString(),content:items.toString()});}else{item=that._createItem({label:'',content:''});}if(index>that._items.length){item?that.$.container.appendChild(item):that.$.container.appendChild(fragment);}else{item?that.$.container.insertBefore(item,that._items[index]):that.$.container.insertBefore(fragment,that._items[index]);}item&&(item.tabIndex=that._tabIndex);that._storeItems();if(accordionWasEmpty&&that._expandModeIs(['single','singleFitHeight'])){that._expandItem(0);}else{that.expandedIndexes=that._getExpandedIndexes();}that._updateExpanedContentHeight();that._updateInlineHeight();that._storeItemsCoordinates();that._updateItemsIndexProperty();}/**
     * Inserts the specified "jqx-accordion-item" node before the reference "jqx-accordion-item" node.
     */},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(newNode===undefined||referenceNode===undefined||!(newNode instanceof JQX.AccordionItem)||!(referenceNode instanceof JQX.AccordionItem)){that.error(that.localize('accordionItemRequired',{method:'insertBefore'}));}if(referenceNode!==undefined&&referenceNode!==null){if(!that.contains(referenceNode)){that.error(that.localize('referenceNodeNotChild',{argument:'referenceNode'}));}that.insert(that._items.indexOf(referenceNode),newNode);}else{that.insert(that._items.indexOf(referenceNode),newNode);}}/**
    * Removes an item on specific positions or "jqx-accordion-item" child node.
    */},{key:'remove',value:function remove(index){var that=this;var item=void 0;if(index instanceof HTMLElement){if(!(index instanceof JQX.AccordionItem)){that.error(that.localize('accordionItemRequired',{method:'remove'}));}else if(!that.contains(index)){that.error(that.localize('referenceNodeNotChild',{argument:'node'}));}item=index;index=item.index;}else{index=that._validateItemsIndex(index,'remove');if(isNaN(index)){return;}item=that._items[index];}if(item){item.parentNode.removeChild(item);that._storeItems();if(that._expandModeIs(['singleFitHeight'])){that._preventAnimation=true;}if(that._expandModeIs(['single','singleFitHeight'])&&index===that.expandedIndexes[0]&&that._items.length>0){that._expandItem(0);that._selectedItem=that._items[0];that._selectedItemIndex=0;that._itemIsFocussed=true;}that.expandedIndexes=that._getExpandedIndexes();that._updateExpanedContentHeight();that._updateInlineHeight();that._storeItemsCoordinates();that._updateItemsIndexProperty();}}/**
     * Removes a child "jqx-accordion-item" node.
     */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!(node instanceof HTMLElement)){that.error(that.localize('accordionItemRequired',{method:'removeChild'}));}if(node.className==='jqx-resize-trigger-container'){babelHelpers.get(Accordion.prototype.__proto__||Object.getPrototypeOf(Accordion.prototype),'removeChild',this).call(this,node);return;}else if(!(node instanceof JQX.AccordionItem)){that.error(that.localize('accordionItemRequired',{method:'removeChild'}));}if(!that.contains(node)){that.error(that.localize('referenceNodeNotChild',{argument:'node'}));}that.remove(node);}/**
   * Sets tabIndex.
   */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');for(var _i293=0;_i293<that._items.length;_i293++){that._items[_i293].removeAttribute('tabindex');}return;}that.tabIndex=that._tabIndex;for(var _i294=0;_i294<that._items.length;_i294++){that._items[_i294].tabIndex=that._tabIndex;}}/**
    * Updates an item at a specific index. It has two parameters - index and item.
    */},{key:'update',value:function update(index,settings){var that=this;index=that._validateItemsIndex(index,'update');if(isNaN(index)){return;}var item=that._items[index];if(!settings){that.error(that.localize('invalidSettings',{elementType:that.nodeName.toLowerCase(),method:'update'}));}if(item){if(Array.isArray(settings)){if(settings.length===0){settings={'label':'','content':''};}else{settings=settings[0];}}if(typeof settings==='string'){item.content=settings;}else{for(var property in settings){item[property]=settings[property];}}}var height=that._getItemsHeights(index);that._updateExpanedContentLocalHeight(that._items[index],height);that._updateInlineHeight();that._storeItemsCoordinates();}/**
    * Calculates item container's height if items are with set margins
    */},{key:'_adjustHeightValue',value:function _adjustHeightValue(currentHeight){var that=this,itemsCount=that._items.length;var expandedItem=void 0,collapsedItem=void 0;for(var _i295=0;_i295<itemsCount;_i295++){that._items[_i295].expanded?expandedItem=that._items[_i295]:collapsedItem=that._items[_i295];if(expandedItem&&collapsedItem){break;}}if(!expandedItem){expandedItem=that._items[0];}if(!expandedItem&&!collapsedItem){return;}var expandedItemState=expandedItem.expanded;expandedItem.expanded=true;var expandedStyles=window.getComputedStyle(expandedItem,null),collapsedStyles=collapsedItem?window.getComputedStyle(collapsedItem,null):false,expandedOffset=parseInt(expandedStyles.getPropertyValue('margin-top'))+parseInt(expandedStyles.getPropertyValue('margin-bottom')),collapsedOffset=collapsedStyles?parseInt(collapsedStyles.getPropertyValue('margin-top'))+parseInt(collapsedStyles.getPropertyValue('margin-bottom')):0;expandedItem.expanded=expandedItemState;return currentHeight-((itemsCount-1)*collapsedOffset+expandedOffset);}/**
    * Collapses item with specific index.
    */},{key:'_collapseItem',value:function _collapseItem(index,programmaticUse){var that=this;var item=that._items[index];if(!item.expanded){return;}if(that.expandMode==='none'&&programmaticUse){return;}item.expanded=false;that.$.fireEvent('collapsing',{'index':index,'label':item.label,'content':item.content.innerHTML});if(that.expandedIndexes.indexOf(index)>-1){var positionInExpandedIndexes=that.expandedIndexes.indexOf(index),currentIndexes=that.expandedIndexes.slice();currentIndexes.splice(positionInExpandedIndexes,1);that.expandedIndexes=currentIndexes;}item.$.accordionItemContent.style.height='';that._handleAnimationsDuration(item,index,'collapsed');}/**
    * Compares arrays with old and new indexes. Returns which items have to be collapsed and which have to be expanded
    */},{key:'_compareExpandedIndexes',value:function _compareExpandedIndexes(oldIndexes,newIndexes){var indexesToBeCollapsed=[],commonIndexes=[],indexesToBeExpanded=[],oldIndexesCount=oldIndexes.length,newIndexesCount=newIndexes.length;for(var _i296=0;_i296<oldIndexesCount;_i296++){if(newIndexes.indexOf(oldIndexes[_i296])===-1){if(indexesToBeCollapsed.indexOf(oldIndexes[_i296])===-1){indexesToBeCollapsed.push(oldIndexes[_i296]);}}else{if(commonIndexes.indexOf(oldIndexes[_i296])===-1){commonIndexes.push(oldIndexes[_i296]);}}}for(var _i297=0;_i297<newIndexesCount;_i297++){if(commonIndexes.indexOf(newIndexes[_i297])===-1){indexesToBeExpanded.push(newIndexes[_i297]);}}return{collapse:indexesToBeCollapsed,expand:indexesToBeExpanded};}/**
    * Initializes the element. Used as a callback in ready().
    */},{key:'_createElement',value:function _createElement(){var that=this;that._reorderItemsByIndex();that._usedCSSVariables=Boolean(window.getComputedStyle(that.$.container).getPropertyValue('--jqx-accordion-animation-duration'));that._supportCSSVariables=JQX.Utilities.Core.CSSVariablesSupport();that._storeItems();that._enableDisableHandler();that._expandedIndexesHandler();that._updateExpanedContentHeight();that._tabIndex=that.tabIndex<=0?0:that.tabIndex;that._setFocusable();that._updateItemsIndexProperty();that._updateInlineHeight();for(var _i298=0;_i298<that._items.length;_i298++){that._items[_i298].$.arrow.classList.add('jqx-animate-trigger');}}/**
     * Creates single jqx-accordion-item
     */},{key:'_createItem',value:function _createItem(settings){var that=this,item=document.createElement('jqx-accordion-item');if(!settings){return;}item.disabled=that.disabled;if(that._tabIndex>-1){item.tabIndex=that._tabIndex;}if(typeof settings==='string'||typeof settings==='number'){item.label=settings+'';item.content=settings+'';return item;}item.label=settings.label||'';item.content=settings.content||'';return item;}/**
    * Down Handler
    */},{key:'_downHandler',value:function _downHandler(event){var that=this;if(that.disabled||that.readonly||that.expandMode==='none'||that._toggled){return;}var target=that.enableShadowDOM?that.shadowRoot.elementFromPoint(event.pageX,event.pageY):event.originalEvent.target,clickedHeader=target.closest('.jqx-accordion-item-header');var item=target.closest('jqx-accordion-item');if(!clickedHeader){if(item){item.focused=true;}return;}that._selectedItem=item;that._itemIsPressed=that._itemIsFocussed=true;that._reorderedIndex=that._selectedItemIndex=that._items.indexOf(item);that._storeItemsCoordinates();}/**
    * Changes disable state of the internal items.
    */},{key:'_enableDisableHandler',value:function _enableDisableHandler(){var that=this;if(that.disabled){for(var _i299=0;_i299<that._items.length;_i299++){that._items[_i299].disabled=true;}}else{for(var _i300=0;_i300<that._items.length;_i300++){that._items[_i300].disabled=false;}}}/**
    * Handles expanded indexes on initialization, according to the chosen 'expandMode'.
    */},{key:'_expandedIndexesHandler',value:function _expandedIndexesHandler(){var that=this;var initialExpandedIndexes=that._getExpandedIndexes('initial'),initialExpandedIndexesCount=initialExpandedIndexes.length,expandedIndexesCount=that.expandedIndexes.length;if(that._items.length===0){return;}if(expandedIndexesCount===0&&initialExpandedIndexesCount>0){that.expandedIndexes=initialExpandedIndexes;expandedIndexesCount=initialExpandedIndexesCount;}if(that._expandModeIs(['multiple','none'])||expandedIndexesCount===1){that._toggleItems('expand',that.expandedIndexes);return;}switch(that.expandMode){case'single':case'singleFitHeight':if(expandedIndexesCount===0){that._toggleItems('expand',[0]);}else if(expandedIndexesCount>1){that._toggleItems('collapse',that.expandedIndexes.splice(0,1));that._toggleItems('expand',that.expandedIndexes);}break;case'toggle':if(expandedIndexesCount>1){that._toggleItems('collapse',that.expandedIndexes.splice(0,1));that._toggleItems('expand',that.expandedIndexes);}break;default:break;}}/**
    * Expands item with specific index.
    */},{key:'_expandItem',value:function _expandItem(index,programmaticUse){var that=this;var item=that._items[index];if(item.expanded||that.expandMode==='none'&&programmaticUse){return;}if(!item.$.container.style.getPropertyValue('--jqx-accordion-expanded-content-local-height')){item.expanded=true;item.$.container.style.setProperty('--jqx-accordion-expanded-content-local-height',item.$.accordionItemContent.scrollHeight+'px');item.expanded=false;}item.expanded=true;that.$.fireEvent('expanding',{'index':index,'label':item.label,'content':item.content.innerHTML});if(that.expandedIndexes.indexOf(index)===-1){var currentIndexes=that.expandedIndexes.slice();currentIndexes.push(index);that.expandedIndexes=currentIndexes;}if((!that._supportCSSVariables||!that._usedCSSVariables)&&that.expandMode==='singleFitHeight'){item.$.accordionItemContent.style.height=that._expandedItemsContainerHeight-1+'px';}that._handleAnimationsDuration(item,index,'expanded');}/**
    * Check if current expand mode is one of the following.
    */},{key:'_expandModeIs',value:function _expandModeIs(modesArray){var that=this;return modesArray.indexOf(that.expandMode)>-1;}/**
     * Focus handler.  Sets the focused state of particular item
     */},{key:'_focusHandler',value:function _focusHandler(){var that=this;if(that.disabled||that._items.length===0){return;}if(that._itemIsFocussed){that._selectedItem.focused=false;}else{that._items[0].focused=false;}}/**
    * Gets the indexes of all expanded items.
    */},{key:'_getExpandedIndexes',value:function _getExpandedIndexes(type){var that=this,expandedIndexes=[];for(var _i301=0;_i301<that._items.length;_i301++){if(type==='initial'){if(that._items[_i301].hasAttribute('expanded')){expandedIndexes.push(_i301);that._items[_i301].removeAttribute('expanded');}}else{if(that._items[_i301].expanded){expandedIndexes.push(_i301);}}}return expandedIndexes.slice();}/**
   * Gets the height of each item. Calculates it via dummy element
   */},{key:'_getItemsHeights',value:function _getItemsHeights(itemIndex){var that=this,items=that._items,itemsCount=items.length;var itemsHeights=[];if(itemsCount===0){return;}if(!isNaN(itemIndex)&&itemIndex>=0&&itemIndex<itemsCount){var _item19=items[itemIndex];var height=0;if(_item19.expanded){height=_item19.$.accordionItemContent.scrollHeight;}else{_item19.expanded=true;height=_item19.$.accordionItemContent.scrollHeight;_item19.expanded=false;}return height+'px';}for(var _i302=0;_i302<itemsCount;_i302++){var _item20=items[_i302];var _height3=0;if(_item20.expanded){_height3=_item20.$.accordionItemContent.scrollHeight;}else{_item20.expanded=true;_height3=_item20.$.accordionItemContent.scrollHeight;_item20.expanded=false;}itemsHeights.push(_height3+'px');}that._heightCalcAfterInitialization=true;return itemsHeights;}/**
    * Adds jqx-toggle class for the period of the animation and fires an event at the end
    */},{key:'_handleAnimationsDuration',value:function _handleAnimationsDuration(item,index,type){var that=this,intervalOffset=50;if(!that._animationAfterInitialization){that._animationAfterInitialization=true;return;}if(that._items.length===1&&that.expandMode==='singleFitHeight'){that.$.fireEvent(type,{'index':index,'label':item.label,'content':item.content.innerHTML});return;}if(false===that.hasAnimation||!that._supportCSSVariables){that.$.fireEvent(type,{'index':index,'label':item.label,'content':item.content.innerHTML});return;}if(that._preventAnimation){that.$.fireEvent(type,{'index':index,'label':item.label,'content':item.content.innerHTML});that._preventAnimation=false;return;}that._toggled=true;var animationDuration=window.getComputedStyle(that).animationDuration,animationDurationInMs=void 0;if(animationDuration.indexOf('ms')>-1){animationDuration=parseFloat(animationDuration.substring(0,animationDuration.length-2));animationDurationInMs=isNaN(animationDuration)||animationDuration<0?0:animationDuration-intervalOffset;}else if(animationDuration.indexOf('s')>-1){animationDuration=parseFloat(animationDuration.substring(0,animationDuration.length-1));animationDurationInMs=isNaN(animationDuration)||animationDuration<0?0:animationDuration*1000-intervalOffset;}else{that.$.fireEvent(type,{'index':index,'label':item.label,'content':item.content.innerHTML});return;}if(item instanceof JQX.AccordionItem){item.$.addClass('jqx-toggled-item');that.$container.addClass('jqx-toggling');setTimeout(function(){item.$.removeClass('jqx-toggled-item');that.$container.removeClass('jqx-toggling');that.$.fireEvent(type,{'index':index});that._toggled=false;},animationDurationInMs);}}/**
    * Index change handler. Used when items are reordered via their indexes
    */},{key:'_indexChangeHandler',value:function _indexChangeHandler(event){var that=this,items=that._items,itemsCount=items.length,detail=event.detail;if(detail.newIndex>=itemsCount){that.$.container.appendChild(items[detail.oldIndex]);}else{detail.newIndex>detail.oldIndex?that.$.container.insertBefore(items[detail.oldIndex],items[detail.newIndex+1]):that.$.container.insertBefore(items[detail.oldIndex],items[detail.newIndex]);}var itemsReordered=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-accordion-item'):that.getElementsByTagName('jqx-accordion-item');that._items=Array.from(itemsReordered);that._updateItemsIndexProperty();}/**
    * KeyDown handler. Navigation between the items via arrows, home, end keys
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,keyCode=event.key;if(that.expandMode==='none'||that.disabled||that.readonly||that._toggled){return;}if(['ArrowLeft','ArrowDown','ArrowRight','ArrowUp','End','Home',' ','Enter','Tab'].indexOf(keyCode)===-1||!(document.activeElement instanceof JQX.AccordionItem)){return;}if(keyCode!=='Tab'){event.preventDefault();}var selectedItem=void 0,selectedIndex=void 0,itemsCount=that._items.length,lastItemPosition=itemsCount-1;for(var _i303=0;_i303<itemsCount;_i303++){var _item21=that._items[_i303];if(_item21.focused){selectedItem=_item21;selectedIndex=_i303;}}switch(keyCode){case'Tab':event.shiftKey?moveSelection('up'):moveSelection('down');break;case'ArrowLeft':that.collapse(selectedIndex);break;case'ArrowDown':moveSelection('down');break;case'ArrowRight':that.expand(selectedIndex);break;case'ArrowUp':moveSelection('up');break;case'End':updateSelectedItem(lastItemPosition);break;case'Home':updateSelectedItem(0);break;case' ':case'Enter':if(selectedItem.expanded){that.collapse(selectedIndex);return;}that.expand(selectedIndex);break;default:return;}function updateSelectedItem(index){if(index===selectedIndex||isNaN(index)){return;}selectedItem.focused=false;selectedIndex=index;selectedItem=that._items[selectedIndex];selectedItem.focused=true;}function moveSelection(direction){if(direction==='up'){selectedIndex-1<0?updateSelectedItem(0):updateSelectedItem(selectedIndex-1);return;}selectedIndex+1>lastItemPosition?updateSelectedItem(lastItemPosition):updateSelectedItem(selectedIndex+1);}}/**
    * Accordion's move handler. Used in reorder functionality
    */},{key:'_moveHandler',value:function _moveHandler(event){var that=this;if(!that._itemIsPressed||!that.reorder||that.readonly||that._items.length<2){return;}if(that._dragStart){that.$container.addClass('jqx-reordering');if(!that._dragging){var _item22=that._selectedItem;that.$.fireEvent('dragStart',{'position':{left:event.pageX,top:event.pageY},'target':event.originalEvent.target,'index':that._selectedItemIndex,'label':_item22.label,'content':_item22.content.innerHTML});that._selectedItem.dragged=that._dragging=true;}var mouseCoordinate=event.clientY;var inItem=false;for(var _i304=0;_i304<that._itemsCoordinates.length;_i304++){var currentCoordinateSet=that._itemsCoordinates[_i304];if(mouseCoordinate>=currentCoordinateSet.fromY&&mouseCoordinate<=currentCoordinateSet.toY){inItem=_i304;break;}}if(that._preventReorder!==true&&inItem!==false&&inItem!==that._reorderedIndex){if(Math.abs(that._reorderedIndex-inItem)>1){var indexOffset=that._reorderedIndex-inItem<0?-1:1;that._swapItems(that._reorderedIndex,inItem+indexOffset);}that._swapItems(that._reorderedIndex,inItem);that._reorderedIndex=inItem;that._storeItemsCoordinates();}if(mouseCoordinate<that._itemsCoordinates[that._reorderedIndex].fromY||mouseCoordinate>that._itemsCoordinates[that._reorderedIndex].toY){that._preventReorder=true;}else{that._preventReorder=false;}if(Math.abs(that._reorderedIndex-inItem)>1){that._preventReorder=false;}}else{that._dragStart=true;}}/**
    * Reorders the items by their indexes when the accordion is initialized.
    */},{key:'_reorderItemsByIndex',value:function _reorderItemsByIndex(){var that=this;var items=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-accordion-item'):that.getElementsByTagName('jqx-accordion-item'),itemsArray=Array.from(items),hasInitialIndexes=false,itemsIndexes=itemsArray.map(function(item){if(item.index!==null){hasInitialIndexes=true;}else{item.index=0;}return item.index;});if(!hasInitialIndexes){return;}var itemsCount=itemsArray.length;if(itemsCount<2){return;}var itemsIndexesSorted=itemsIndexes.slice();itemsIndexesSorted.sort(function(a,b){return parseInt(a)-parseInt(b);});if(itemsIndexes.toString()===itemsIndexesSorted.toString()){return;}for(var _i305=0;_i305<itemsCount;_i305++){var reorderedItem=void 0;for(var j=0;j<itemsCount;j++){if(items[j].index===itemsIndexesSorted[_i305]){reorderedItem=items[j];}}that.$.container.insertBefore(reorderedItem,items[_i305]);}}/**
    * Resize handler.
    */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;that._updateExpanedContentHeight();that._updateInlineHeight();that._storeItemsCoordinates();}/**
    * Stores all items in an Array and updates the animation variables.
    */},{key:'_storeItems',value:function _storeItems(){var that=this,items=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-accordion-item'):that.getElementsByTagName('jqx-accordion-item');that._items=Array.from(items);if(that._items.length===0){that.$container.addClass('jqx-empty');return;}that.$container.removeClass('jqx-empty');var heights=that._getItemsHeights();for(var _i306=0;_i306<that._items.length;_i306++){that._updateExpanedContentLocalHeight(that._items[_i306],heights[_i306]);}}/**
     * Stores the coordinates of all items in an Array.
     */},{key:'_storeItemsCoordinates',value:function _storeItemsCoordinates(){var that=this;if(that.disabled||!that.reorder){return;}var coordinates=[];for(var _i307=0;_i307<that._items.length;_i307++){var currentItemContainer=that._items[_i307],boundingClientRect=currentItemContainer.getBoundingClientRect();coordinates.push({fromY:boundingClientRect.top+(window.scrollY||window.pageYOffset),toY:boundingClientRect.bottom+(window.scrollY||window.pageYOffset)});}that._itemsCoordinates=coordinates;}/**
     * Switches the positions of two items.
     */},{key:'_swapItems',value:function _swapItems(firstItemIndex,secondItemIndex){function swap(list,x,y){var temp=list[y];list[y]=list[x];list[x]=temp;}var that=this,lesserIndex=Math.min(firstItemIndex,secondItemIndex),greaterIndex=Math.max(firstItemIndex,secondItemIndex),items=that._items;var expandedIndexes=that.expandedIndexes.slice();if(that._items[firstItemIndex].expanded&&!that._items[secondItemIndex].expanded){var indexPosition=expandedIndexes.indexOf(firstItemIndex);expandedIndexes[indexPosition]=secondItemIndex;that.expandedIndexes=expandedIndexes.slice();}else if(that._items[secondItemIndex].expanded&&!that._items[firstItemIndex].expanded){var _indexPosition=expandedIndexes.indexOf(secondItemIndex);expandedIndexes[_indexPosition]=firstItemIndex;that.expandedIndexes=expandedIndexes.slice();}that.selectedIndex=that.selectedIndex===firstItemIndex?secondItemIndex:firstItemIndex;that.$.container.insertBefore(items[greaterIndex],items[lesserIndex]);swap(items,firstItemIndex,secondItemIndex);that._items[firstItemIndex].$.removeClass('hovered');that._reorderedIndex=secondItemIndex;}/**
    * Expands/collapses multiple items with particular indexes.
    */},{key:'_toggleItems',value:function _toggleItems(action,indexes){var that=this,indexesCount=indexes.length;if(indexesCount>0){for(var _i308=0;_i308<indexesCount;_i308++){that['_'+action+'Item'](indexes[_i308]);}}}/**
    * Calculates item's content container height and apply it to the current expanded item. Used in singleFitHeight expandMode.
    */},{key:'_updateExpanedContentHeight',value:function _updateExpanedContentHeight(){var that=this;that.$.container.style.setProperty('--jqx-accordion-item-header-height','');var itemsCount=that._items.length,containersHeight=that.$.container.offsetHeight,expanedItem=that._items[that.expandedIndexes[0]];var collapsedItemHeight=0,collapsedItemHeaderHeight=0,expanedItemHeaderOffset=0,i=0;if(itemsCount===1){var _item23=that._items[0];_item23.expanded=false;collapsedItemHeight=_item23.offsetHeight;collapsedItemHeaderHeight=_item23.$.accordionItemHeader.offsetHeight;_item23.expanded=true;}else{while(collapsedItemHeight===0&&i<itemsCount){var _item24=that._items[i];if(_item24 instanceof JQX.AccordionItem&&!_item24.expanded){collapsedItemHeight=_item24.offsetHeight;collapsedItemHeaderHeight=_item24.$.accordionItemHeader.offsetHeight;}i++;}}if(itemsCount>1){if(expanedItem instanceof JQX.AccordionItem){var expandedItemHeaderHeight=expanedItem.$.accordionItemHeader.offsetHeight;expanedItemHeaderOffset=expandedItemHeaderHeight-collapsedItemHeaderHeight;}}var rootStyle=getComputedStyle(that.$.root);var collapsedItemsHeight=collapsedItemHeight*itemsCount;var expandedItemsContainerHeight=containersHeight-collapsedItemsHeight-expanedItemHeaderOffset-parseFloat(rootStyle.paddingBottom)-parseFloat(rootStyle.paddingTop);if(that.expandMode==='singleFitHeight'){expandedItemsContainerHeight=that._adjustHeightValue(expandedItemsContainerHeight);}expandedItemsContainerHeight=expandedItemsContainerHeight>=0?expandedItemsContainerHeight:0;that.$.container.style.setProperty('--jqx-accordion-expanded-content-height',expandedItemsContainerHeight+'px');that.$.container.style.setProperty('--jqx-accordion-item-header-height',collapsedItemHeaderHeight+'px');that._expandedItemsContainerHeight=expandedItemsContainerHeight;}/**
    * Updates the local CSS variable about single item.
    */},{key:'_updateExpanedContentLocalHeight',value:function _updateExpanedContentLocalHeight(item,height){var that=this;if(!that._supportCSSVariables||!that._usedCSSVariables){return;}item.$.container.style.setProperty('--jqx-accordion-expanded-content-local-height',height);}/**
     * Updates inline height in 'singleFitHeight' mode in older browsers
     */},{key:'_updateInlineHeight',value:function _updateInlineHeight(){var that=this;if(that._supportCSSVariables&&that._usedCSSVariables||that.expandMode!=='singleFitHeight'||that._items.length===0){return;}that._items[that.expandedIndexes[0]].$.accordionItemContent.style.height=that._expandedItemsContainerHeight-1+'px';}/**
     * Updates the index property of all accordion items
     */},{key:'_updateItemsIndexProperty',value:function _updateItemsIndexProperty(){var that=this;var newExpandedIndexes=[];for(var _i309=0;_i309<that._items.length;_i309++){that._items[_i309]._setIndex(_i309);if(that._items[_i309].expanded){newExpandedIndexes.push(_i309);}}that.expandedIndexes=newExpandedIndexes.slice();}/**
     * Up handler.
     */},{key:'_upHandler',value:function _upHandler(event){var that=this;if(!that._itemIsPressed||that.disabled||that.readonly){return;}for(var _i310=0;_i310<that._items.length;_i310++){if(_i310!==that._selectedItemIndex){that._items[_i310].focused=false;}}that._selectedItem.focused=true;if(!that._dragging){if(that._selectedItem.expanded){that.collapse(that._selectedItemIndex,true);}else{that.expand(that._selectedItemIndex,true);}}else{var _item25=that._selectedItem;that.$container.removeClass('jqx-reordering');that.$.fireEvent('dragEnd',{'position':{left:event.pageX,top:event.pageY},'target':event.originalEvent.target,'index':that._selectedItemIndex,'label':_item25.label,'content':_item25.content.innerHTML});}that._reorderedIndex=undefined;that._dragStart=false;that._dragging=false;that._itemIsPressed=false;that._selectedItem.dragged=false;that._updateItemsIndexProperty();}/**
    * Validates the values given to the expand and collapse methods.
    */},{key:'_validateItemsIndex',value:function _validateItemsIndex(index,method){var that=this;if(isNaN(parseInt(index))||index<0||index>that._items.length-1){that.log(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:method}));return;}return parseInt(index);}}],[{key:'properties',/** 
    * Accordion's properties 
    **/get:function get(){return{'expandedIndexes':{value:[],type:'array'},'expandMode':{allowedValues:['single','singleFitHeight','multiple','toggle','none'],value:'singleFitHeight',type:'string'},'messages':{extend:true,value:{'en':{'accordionItemRequired':'{{elementType}}: "{{method}}" requires an item from type "jqx-accordion-item".','indexOutOfBound':'{{elementType}}: Out of bound index/indexes in "{{method}}" method.','invalidSettings':'{{elementType}}: "{{method}}" method accepts a string or an object as it\'s second parameter.','missingReference':'{{elementType}}: Missing reference to {{files}}.','noItems':'{{elementType}}: No child elements found.','overridingProperties':'{{elementType}}: Overriding properties {{property1}} and {{property2}} applied. The "{{property1}}" property is used by default.'}},type:'object'},'reorder':{value:false,type:'boolean'}};}/**
     * Accordion's event listeners.
     */},{key:'listeners',get:function get(){return{'down':'_downHandler','focus':'_focusHandler','indexChange':'_indexChangeHandler','keydown':'_keyDownHandler','move':'_moveHandler','resize':'_resizeHandler','styleChanged':'_resizeHandler','document.up':'_upHandler'};}},{key:'styleUrls',get:function get(){return['jqx.accordion.css'];}}]);return Accordion;}(JQX.BaseElement));/**
 * Array custom element.
 */JQX('jqx-array',function(_JQX$BaseElement9){babelHelpers.inherits(DataArray,_JQX$BaseElement9);function DataArray(){babelHelpers.classCallCheck(this,DataArray);return babelHelpers.possibleConstructorReturn(this,(DataArray.__proto__||Object.getPrototypeOf(DataArray)).apply(this,arguments));}babelHelpers.createClass(DataArray,[{key:'template',/**
     * Array's HTML template.
     */value:function template(){return'<div>\n                    <div id="indexerContainer" class="jqx-indexer-container jqx-hidden"></div>\n                    <div id="bigContainer" class="jqx-big-container jqx-array-background">\n                        <div id="centralContainer">\n                            <div id="mainContainer" class="jqx-main-container"></div>\n                            <div id="horizontalScrollbarContainer" class="jqx-scrollbar-container-horizontal jqx-hidden">\n                                <jqx-scroll-bar id="horizontalScrollbar" animation="[[animation]]" min="0" max="0" value="0" step="1"></jqx-scroll-bar>\n                            </div>\n                        </div>\n                        <div id="verticalScrollbarContainer" class="jqx-scrollbar-container-vertical jqx-hidden">\n                            <jqx-scroll-bar id="verticalScrollbar" animation="[[animation]]" orientation="vertical" min="0" max="0" value="0" step="1"></jqx-scroll-bar>\n                        </div>\n                    </div>\n                </div>';}/**
     * Called when the element is ready. Used for one-time configuration of the Array.
     */},{key:'ready',value:function ready(){babelHelpers.get(DataArray.prototype.__proto__||Object.getPrototypeOf(DataArray.prototype),'ready',this).call(this);var that=this;that._id=that.getAttribute('id')||Math.round(Math.random()*10000);that._cachedWidth=that.offsetWidth;that._cachedHeight=that.offsetHeight;that._coordinates=[];that._getDefaultCellValue();that._validateProperties();that._addInitialDimensions();if(that.type!=='none'){that._addElementStructure();that._structureAdded=true;that._initializeElements(false);}that._getInitialFill();that._updateWidgetWidth();that._updateWidgetHeight();that._cachedWidth=that.offsetWidth;that._cachedHeight=that.offsetHeight;}/**
     * Adds a dimension to the array.
     */},{key:'addDimension',value:function addDimension(changeValueDimensions){var that=this;if(that._suppressDimensionChange!==true&&that.dimensions===32){return;}var indexer=document.createElement('jqx-numeric-text-box');indexer.className='jqx-array-indexer';indexer.style.height=that.indexerHeight+'px';indexer.inputFormat='integer';indexer.spinButtons=true;indexer.min=0;indexer.max=4294967295;indexer.disabled=that.disabled;indexer.animation=that.animation;indexer.validation='interaction';indexer.wordLength='uint64';indexer.onReady=function(){indexer.$upButton.addClass('jqx-array-indexer-increment');indexer.$downButton.addClass('jqx-array-indexer-decrement');};that.$.indexerContainer.insertBefore(indexer,that.$.indexerContainer.children?that.$.indexerContainer.children[0]:null);indexer.$.listen('change',that._indexerChangeHandler.bind(that));that._dimensions.push({index:that._dimensions.length,indexer:indexer});if(that.arrayIndexingMode==='LabVIEW'){that._indexers.unshift(indexer);that._coordinates.unshift(0);}else{that._indexers.push(indexer);that._coordinates.push(0);}indexer.dimension=that._indexers.length-1;if(that._suppressDimensionChange!==true){that.dimensions+=1;that.$.fireEvent('dimensionChange',{'type':'add'});}if(that._initialDimensions!==true&&changeValueDimensions!==false){that._validateValueArrayDimensions();if(that.arrayIndexingMode==='LabVIEW'){that._filledUpTo.unshift(0);}else{that._filledUpTo.push(0);}if(that._oneDimensionSpecialCase===true){that._oneDimensionSpecialCase=false;that.$.verticalScrollbar.value=0;that._scroll();}}if(that._absoluteSelectionStart!==undefined){if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionStart.unshift(0);}else{that._absoluteSelectionStart.push(0);}}if(that._absoluteSelectionEnd!==undefined){if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionEnd.unshift(0);}else{that._absoluteSelectionEnd.push(0);}}if(!that._initialDimensions){that._refreshSelection();}if(that._suppressDimensionChange===false&&that.showIndexDisplay===true&&that.dimensions*(that.indexerHeight+4)-2>that._cachedHeight){that._updateWidgetHeight('dimensions');}}/**
     * Clears the selection.
     */},{key:'clearSelection',value:function clearSelection(){var that=this;that._absoluteSelectionStart=undefined;that._absoluteSelectionEnd=undefined;if(that.showSelection){that._clearSelection();}}/**
     * Copies the value of an array element to the clipboard.
     *
     * @param {Number} rowVisibleIndex The visible index of the row (y coordinate) of the element.
     * @param {Number} columnVisibleIndex The visible index of the column (x coordinate) of the element.
     */},{key:'copyElementValueToClipboard',value:function copyElementValueToClipboard(rowVisibleIndex,columnVisibleIndex){var that=this,valueInCell=that._getValueInCell(rowVisibleIndex,columnVisibleIndex);if(valueInCell!==undefined){try{var dummyInput=document.createElement('input');dummyInput.type='text';dummyInput.style.position='absolute';dummyInput.value=valueInCell;that.appendChild(dummyInput);dummyInput.focus();dummyInput.setSelectionRange(0,dummyInput.value.length);document.execCommand('copy');that.removeChild(dummyInput);}catch(err){//
}}}/**
     * Deletes a column in the "value" array.
     *
     * @param {Number} index Index of the column to be deleted.
     */},{key:'deleteColumn',value:function deleteColumn(index){var that=this,lV=that.arrayIndexingMode==='LabVIEW';var filledColumns=void 0;index=Math.max(0,index);if(lV){filledColumns=that._filledUpTo[that._filledUpTo.length-1];}else{filledColumns=that._filledUpTo[0];}if(index>filledColumns){return;}if(filledColumns===0||that._oneDimensionSpecialCase&&index===0){that.emptyArray();return;}var oldValue=JSON.stringify(that.value);var targetLevel=void 0,boundColumnIndex=void 0;if(lV){targetLevel=that.dimensions-1;boundColumnIndex=index+that._coordinates[targetLevel];var recursion=function recursion(arr,level){if(targetLevel!==level){for(var _i311=0;_i311<arr.length;_i311++){recursion(arr[_i311],level+1);}}else{arr.splice(boundColumnIndex,1);}};recursion(that.value,0);}else{targetLevel=0;boundColumnIndex=index+that._coordinates[0];that.value.splice(boundColumnIndex,1);}if(JSON.stringify(that.value)!==oldValue){that._filledUpTo[targetLevel]--;that._scroll();that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue)});that._setMaxValuesOfScrollBars();}}/**
     * Deletes a row in the "value" array.
     *
     * @param {Number} index Index of the row to be deleted.
     */},{key:'deleteRow',value:function deleteRow(index){var that=this,oldValue=JSON.stringify(that.value),lV=that.arrayIndexingMode==='LabVIEW';var dimension=void 0,boundRowIndex=void 0,filledRows=void 0;index=Math.max(0,index);if(lV){filledRows=that._filledUpTo[that._filledUpTo.length-2];}else{filledRows=that._filledUpTo[1];}if(index>filledRows){return;}if(filledRows===0){that.emptyArray();return;}if(that.dimensions===1){if(!that._oneDimensionSpecialCase){if(index===0){that.emptyArray();}return;}else{that.value.splice(index+that._coordinates[0],1);that._filledUpTo[0]--;}}else{if(lV){dimension=that.dimensions-2;boundRowIndex=index+that._coordinates[dimension];var recursion=function recursion(arr,level){if(dimension!==level){for(var _i312=0;_i312<arr.length;_i312++){recursion(arr[_i312],level+1);}}else{arr.splice(boundRowIndex,1);}};recursion(that.value,0);}else{dimension=1;boundRowIndex=index+that._coordinates[1];for(var _i313=0;_i313<that.value.length;_i313++){var currentArray=that.value[_i313];currentArray.splice(boundRowIndex,1);}}that._filledUpTo[dimension]--;}if(oldValue!==JSON.stringify(that.value)){that._scroll();that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue)});that._setMaxValuesOfScrollBars();}}/**
     * Empties the "value" array.
     */},{key:'emptyArray',value:function emptyArray(){var that=this;if(that.type==='none'){return;}var cells=that._cells,oldValue=that.value;that.value=that._returnEmptyArray();if(JSON.stringify(oldValue)===JSON.stringify(that.value)){return;}for(var _i314=0;_i314<cells.length;_i314++){for(var j=0;j<cells[_i314].length;j++){var cellWidget=cells[_i314][j].widget,cellWidgetDimensions={x:j,y:_i314},defaultValue=that._getDefaultValue();cellWidget.classList.add('jqx-array-element-empty');if(that._areDifferent(that._getElementValue(cellWidget,cellWidgetDimensions),defaultValue)){cellWidget.supressChange=true;that._setElementValue(defaultValue,cellWidget,cellWidgetDimensions);}}}that._getInitialFill();that.clearSelection();that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}/**
     * Designates the end of a selection started with the method "startSelection".
     *
     * @param {Number} rowBoundIndex The bound index of the row (y coordinate) to end the selection to.
     * @param {Number} columnBoundIndex The bound index of the column (x coordinate) to end the selection to.
     */},{key:'endSelection',value:function endSelection(rowBoundIndex,columnBoundIndex){var that=this;if(that._absoluteSelectionStart===undefined){return;}that._absoluteSelectionEnd=that._coordinates.slice(0);var dimensions=that.dimensions;if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionEnd[dimensions-1]=Math.min(columnBoundIndex,that._filledUpTo[dimensions-1]);if(dimensions>1){that._absoluteSelectionEnd[dimensions-2]=Math.min(rowBoundIndex,that._filledUpTo[dimensions-2]);}}else{that._absoluteSelectionEnd[0]=Math.min(columnBoundIndex,that._filledUpTo[0]);if(dimensions>1){that._absoluteSelectionEnd[1]=Math.min(rowBoundIndex,that._filledUpTo[1]);}}var validation=true;for(var _i315=0;_i315<dimensions;_i315++){validation=validation&&that._absoluteSelectionStart[_i315]<=that._absoluteSelectionEnd[_i315];}if(validation){that._refreshSelection();}else{that._absoluteSelectionStart=undefined;that._absoluteSelectionEnd=undefined;}}/**
     * Returns the HTML element at the specified visible row and column coordinates of the array.
     *
     * @param {Number} rowVisibleIndex The visible index of the row (y coordinate) of the element.
     * @param {Number} columnVisibleIndex The visible index of the column (x coordinate) of the element.
     */},{key:'getElement',value:function getElement(rowVisibleIndex,columnVisibleIndex){var cells=this._cells;if(cells[rowVisibleIndex]===undefined||cells[rowVisibleIndex][columnVisibleIndex]===undefined){return undefined;}return cells[rowVisibleIndex][columnVisibleIndex].widget;}/**
     * Returns an object with the values of the array element width and height.
     */},{key:'getElementSize',value:function getElementSize(){var that=this;return{width:that.elementWidth,height:that.elementHeight};}/**
     * Gets an array with the values of all indexers.
     */},{key:'getIndexerValue',value:function getIndexerValue(){var indexers=this._indexers,result=[];for(var _i316=0;_i316<indexers.length;_i316++){result.push(indexers[_i316].val());}return result;}/**
     * Returns an HTML element from the array at the specified page coordinates and other information about this element.
     *
     * @param {Number} x Page x coordinate.
     * @param {Number} y Page y coordinate.
     */},{key:'hitTest',value:function hitTest(x,y){var that=this,topMostElement=document.elementFromPoint(x,y);if(!that.contains(topMostElement)){return undefined;}var closestArrayElement=topMostElement.closest('.jqx-array-element'),closestIndexer=topMostElement.closest('.jqx-array-indexer');if(closestArrayElement!==null){return{type:'element',htmlElement:closestArrayElement,row:closestArrayElement.row,column:closestArrayElement.col};}else if(closestIndexer!==null){var dimension=closestIndexer.dimension;if(that.arrayIndexingMode==='LabVIEW'){dimension=that.dimensions-dimension-1;}return{type:'indexer',htmlElement:closestIndexer,dimension:dimension};}else{return{type:'array',htmlElement:that};}}/**
     * Inserts a column in the "value" array before the specified column. The new column is filled with default values.
     *
     * @param {Number} index Index of the column to add a new column before.
     */},{key:'insertColumnBefore',value:function insertColumnBefore(index,redirect){var that=this,oldValue=JSON.stringify(that.value),lV=that.arrayIndexingMode==='LabVIEW';var boundColumnIndex=void 0;if(lV&&redirect!==true){that.insertRowBefore(index,true);return;}if(that.dimensions===1){if(lV===that._oneDimensionSpecialCase){that.value.splice(index+that._coordinates[0],0,that._getDefaultValue());that._scroll();that._filledUpTo[0]++;}else{return;}}else{var fillUpTo=that._filledUpTo.slice(0);if(lV){// inserts a row
boundColumnIndex=index+that._coordinates[that.dimensions-2];var targetLevel=that.dimensions-2,recursion=function recursion(arr,level){if(targetLevel!==level){for(var _i317=0;_i317<arr.length;_i317++){recursion(arr[_i317],level+1);}}else{arr.splice(boundColumnIndex,0,[]);}};recursion(that.value,0);fillUpTo[targetLevel]++;}else{// inserts a column
boundColumnIndex=index+that._coordinates[0];that.value.splice(boundColumnIndex,0,that._returnEmptyArray()[0]);fillUpTo[0]++;}that._fillValueArray(fillUpTo,true);}that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue)});that._setMaxValuesOfScrollBars();}/**
     * Inserts a row in the "value" array before the specified row. The new row is filled with default values.
     *
     * @param {Number} index Index of the row to add a new row before.
     */},{key:'insertRowBefore',value:function insertRowBefore(index,redirect){var that=this,oldValue=JSON.stringify(that.value),lV=that.arrayIndexingMode==='LabVIEW';if(lV&&redirect!==true){that.insertColumnBefore(index,true);return;}if(that.dimensions===1){if(lV&&!that._oneDimensionSpecialCase||!lV&&that._oneDimensionSpecialCase){that.value.splice(index+that._coordinates[0],0,that._getDefaultValue());that._scroll();that._filledUpTo[0]++;}else{return;}}else{var fillUpTo=that._filledUpTo.slice(0);var boundRowIndex=void 0;if(lV){// inserts a column
var targetLevel=that.dimensions-1;boundRowIndex=index+that._coordinates[targetLevel];var recursion=function recursion(arr,level){if(targetLevel!==level){for(var _i318=0;_i318<arr.length;_i318++){recursion(arr[_i318],level+1);}}else{arr.splice(boundRowIndex,0,that._getDefaultValue());}};recursion(that.value,0);fillUpTo[targetLevel]++;}else{// inserts a row
boundRowIndex=index+that._coordinates[1];for(var _i319=0;_i319<that.value.length;_i319++){var currentArray=that.value[_i319];currentArray.splice(boundRowIndex,0,undefined);}fillUpTo[1]++;}that._fillValueArray(fillUpTo,true);}that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue)});that._setMaxValuesOfScrollBars();}/**
     * Sets all array members to the default value.
     */},{key:'reinitializeArray',value:function reinitializeArray(){var that=this;if(that.type==='none'){return;}var dimensions=that.dimensions,oldValue=JSON.stringify(that.value);if(that.dimensions===1){that.value.fill(that._getDefaultValue());}else{var recursion=function recursion(arr,level){for(var _i320=0;_i320<arr.length;_i320++){if(level===dimensions){arr[_i320]=that._getDefaultValue();}else{recursion(arr[_i320],level+1);}}};recursion(that.value,1);}if(oldValue!==JSON.stringify(that.value)){that._scroll();that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue)});}}/**
     * Removes a dimension from the array.
     */},{key:'removeDimension',value:function removeDimension(propertyChangedHandler,changeValueDimensions){var that=this,index=that._dimensions.length-1;if(that._dimensions.length<2){return;}if(that._dimensions.length===2){var oldRowsCount=that.rows;that.rows=1;that._changeRowsColumns('rows',oldRowsCount,1,undefined,true);}that.$.indexerContainer.removeChild(that._dimensions[index].indexer);that._dimensions.pop();var indexerValue=void 0;if(that.arrayIndexingMode==='LabVIEW'){indexerValue=that._coordinates[0];that._indexers.splice(0,1);that._coordinates.splice(0,1);}else{indexerValue=that._coordinates[index];that._indexers.pop();that._coordinates.pop();}if(that._suppressDimensionChange!==true){that.dimensions-=1;that.$.fireEvent('dimensionChange',{'type':'remove'});}if(changeValueDimensions!==false){that._removeDimensionFromJSArray();if(that.arrayIndexingMode==='LabVIEW'){that._filledUpTo.splice(0,1);}else{that._filledUpTo.pop();}}if(that._absoluteSelectionStart!==undefined){if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionStart.splice(0,1);}else{that._absoluteSelectionStart.pop();}}if(that._absoluteSelectionEnd!==undefined){if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionEnd.splice(0,1);}else{that._absoluteSelectionEnd.pop();}}if(indexerValue>0){that._scroll();}if(that.dimensions>1&&that._suppressDimensionChange===false&&that.showIndexDisplay===true&&(that.dimensions+1)*(that.indexerHeight+4)-2>=that._cachedHeight||that.dimensions===1&&propertyChangedHandler!==true){that._updateWidgetHeight('dimensions');if(that.dimensions===1&&that.showVerticalScrollbar){that._showVerticalScrollbar(false);}}}/**
     * Sets the array's "type" to 'none'.
     */},{key:'reset',value:function reset(propertyChangedHandler){var that=this;if(that.type==='none'&&propertyChangedHandler!==true){return;}else{that.type='none';}var oldValue=that.rows;that.rows=1;that._changeRowsColumns('rows',oldValue,1,true);oldValue=that.columns;that.columns=1;that._changeRowsColumns('columns',oldValue,1);var remainingCell=that._cells[0][0];remainingCell.widget.$.unlisten('change');remainingCell.widget.$.unlisten('click');remainingCell.td.innerHTML='';that._table.classList.add('jqx-hidden');that._defaultValue=undefined;var oldValueArray=that.value;that.value=null;that.$.fireEvent('change',{'value':that.value,'oldValue':oldValueArray});that.$.horizontalScrollbar.max=0;that.$.horizontalScrollbar.value=0;that.$.verticalScrollbar.max=0;that.$.verticalScrollbar.value=0;}/**
     * Resizes array elements (changes both the column width and the row height).
     *
     * @param {Number} width The new element (column) width.
     * @param {Number} height The new element (row) height.
     */},{key:'resizeElement',value:function resizeElement(width,height){var that=this;width=parseInt(width,10);height=parseInt(height,10);if(width===that.elementWidth&&height===that.elementHeight){return;}if(width===that.elementWidth){that.setRowHeight(height);return;}if(height===that.elementHeight){that.setColumnWidth(width);return;}var cellWidgets=that.getElementsByClassName('jqx-array-element-'+that._id);that.elementWidth=width;that.elementHeight=height;if(that.type!=='none'){that._updateWidgetWidth();that._updateWidgetHeight();if(that.type!=='custom'){for(var _i321=0;_i321<cellWidgets.length;_i321++){cellWidgets[_i321].style.width=width+'px';cellWidgets[_i321].style.height=height+'px';}}else{if(that.changeProperty){that.changeProperty('width',width,cellWidgets);that.changeProperty('height',height,cellWidgets);}else{try{that.warn(that.localize('callbackFunctionRequired',{callback:'changeProperty'}));}catch(err){//
}}}that.$.fireEvent('sizeChange',{'width':width,'height':height});}}/**
     * Selects all members of the array.
     */},{key:'selectAll',value:function selectAll(){var that=this;if(that.arrayIndexingMode==='LabVIEW'&&that._filledUpTo[0]===-1||that.arrayIndexingMode==='JavaScript'&&that._filledUpTo[that._filledUpTo.length-1]===-1){return;}var start=new Array(that.dimensions);start.fill(0);that._absoluteSelectionStart=start;that._absoluteSelectionEnd=that._filledUpTo.slice(0);that._refreshSelection();}/**
     * Selects an element with the passed row and column bound indexes.
     *
     * @param {Number} rowBoundIndex Row bound index.
     * @param {Number} columnBoundIndex Column bound index.
     */},{key:'selectElement',value:function selectElement(rowBoundIndex,columnBoundIndex){var that=this;that.startSelection(rowBoundIndex,columnBoundIndex);that.endSelection(rowBoundIndex,columnBoundIndex);}/**
     * Sets the column (element) width.
     *
     * @param {Number} width The new column width.
     */},{key:'setColumnWidth',value:function setColumnWidth(width,propertyChangedHandler){var that=this;width=parseInt(width,10);if(width===that.elementWidth&&propertyChangedHandler!==true){return;}var cellWidgets=that.getElementsByClassName('jqx-array-element-'+that._id);that.elementWidth=width;if(that.type!=='none'){if(that.type!=='custom'){for(var _i322=0;_i322<cellWidgets.length;_i322++){cellWidgets[_i322].style.width=width+'px';}}else{if(that.changeProperty){that.changeProperty('width',width,cellWidgets);}else{try{that.warn(that.localize('callbackFunctionRequired',{callback:'changeProperty'}));}catch(err){//
}}}that._updateWidgetWidth();that.$.fireEvent('sizeChange',{'width':width,'height':that.elementHeight});}}/**
     * Sets the default value of array members.
     *
     * @param {any} newDefaultValue The new default value. Its data type should correspond to the type of the array.
     */},{key:'setDefaultValue',value:function setDefaultValue(newDefaultValue){var that=this;if(that._areDifferent(newDefaultValue,that._defaultValue)){that._defaultValue=newDefaultValue;that._scroll();}}/**
     * Sets the value of one or more array indexers.
     *
     * @param {Array} settings An array of objects with the fields index and value.
     */},{key:'setIndexerValue',value:function setIndexerValue(settings){var that=this;var changed=false;for(var _i323=0;_i323<settings.length;_i323++){var index=settings[_i323].index,absoluteIndex=that.arrayIndexingMode==='LabVIEW'?that.dimensions-index-1:index,_value22=settings[_i323].value,indexer=that._indexers[index];if(indexer!==undefined&&_value22!==that._coordinates[index]){changed=true;indexer.val(_value22);that._coordinates[index]=_value22;if(that.type!=='none'&&(absoluteIndex===0||absoluteIndex===1)){that._syncScrollbar(absoluteIndex,_value22);}}}if(changed===true){that._scroll();}}/**
     * Sets the row (element) height.
     *
     * @param {Number} height The new row height.
     */},{key:'setRowHeight',value:function setRowHeight(height,propertyChangedHandler){var that=this;height=parseInt(height,10);if(height===that.elementHeight&&propertyChangedHandler!==true){return;}var cellWidgets=that.getElementsByClassName('jqx-array-element-'+that._id);that.elementHeight=height;if(that.type!=='none'){if(that.type!=='custom'){for(var _i324=0;_i324<cellWidgets.length;_i324++){cellWidgets[_i324].style.height=height+'px';}}else{if(that.changeProperty){that.changeProperty('height',height,cellWidgets);}else{try{that.warn(that.localize('callbackFunctionRequired',{callback:'changeProperty'}));}catch(err){//
}}}that._updateWidgetHeight();that.$.fireEvent('sizeChange',{'width':that.elementWidth,'height':height});}}/**
     * Makes the last array member visible.
     */},{key:'showLastElement',value:function showLastElement(){var that=this,settings=[];var xDimension=void 0,yDimension=void 0;if(that.type==='none'){return;}if(that.dimensions===1){var indexerValue=parseFloat(that._indexers[0].value),cellsCount=that._oneDimensionSpecialCase?that.rows:that.columns,filledUpTo=that._filledUpTo[0];if(indexerValue+cellsCount<filledUpTo+1||indexerValue>filledUpTo){that.setIndexerValue([{index:0,value:filledUpTo}]);}return;}if(that.arrayIndexingMode==='LabVIEW'){xDimension=that.dimensions-1;yDimension=that.dimensions-2;}else{xDimension=0;yDimension=1;}for(var _i325=0;_i325<that.dimensions;_i325++){var currentValue=that._filledUpTo[_i325];if(_i325===xDimension){var _indexerValue=parseFloat(that._indexers[_i325].value);if(!(_indexerValue+that.columns<currentValue+1||_indexerValue>currentValue)){currentValue=_indexerValue;}}else if(_i325===yDimension){var _indexerValue2=parseFloat(that._indexers[_i325].value);if(!(_indexerValue2+that.rows<currentValue+1||_indexerValue2>currentValue)){currentValue=_indexerValue2;}}settings.push({index:_i325,value:currentValue});}that.setIndexerValue(settings);}/**
     * Designates the start of a selection.
     *
     * @param {Number} rowBoundIndex The bound index of the row (y coordinate) to start the selection from.
     * @param {Number} columnBoundIndex The bound index of the column (x coordinate) to start the selection from.
     */},{key:'startSelection',value:function startSelection(rowBoundIndex,columnBoundIndex){var that=this;that._absoluteSelectionStart=that._coordinates.slice(0);if(that.dimensions===1){that._absoluteSelectionStart[0]=columnBoundIndex;}else{if(that.arrayIndexingMode==='LabVIEW'){that._absoluteSelectionStart[that.dimensions-1]=columnBoundIndex;that._absoluteSelectionStart[that.dimensions-2]=rowBoundIndex;}else{that._absoluteSelectionStart[0]=columnBoundIndex;that._absoluteSelectionStart[1]=rowBoundIndex;}}that._absoluteSelectionEnd=undefined;}/**
     * Increases or decreases the visual gap between array elements.
     */},{key:'toggleElementGap',value:function toggleElementGap(){var that=this;if(that.type==='none'){return;}var fn=void 0;if(that._elementGap===undefined){that._elementGap=false;}if(that._elementGap){fn='remove';that._elementGap=false;}else{fn='add';that._elementGap=true;}for(var _i326=0;_i326<that.rows;_i326++){for(var j=0;j<that.columns;j++){that._cells[_i326][j].td.classList[fn]('jqx-array-table-data-gap');}}that._updateWidgetWidth();that._updateWidgetHeight();}/**
     * Transposes the array.
     */},{key:'transposeArray',value:function transposeArray(){var that=this;if(that.dimensions===2){var transposedValue=that.value[0].map(function(col,i){return that.value.map(function(row){return row[i];});}),oldValue=JSON.stringify(that.value);that.value=transposedValue;that._scroll();that.$.fireEvent('change',{'value':transposedValue,'oldValue':JSON.parse(oldValue)});that._filledUpTo.reverse();}}/**
     * Sets or gets the value of the whole array or sets the value of a member of the array.
     *
     * @param {Array/any} newValue Optional If the method is used for setting the value of the whole array, the expected value is an Array. If it is used for setting the value of an array member, the value can be of any applicable type.
     * @param {Array} elementIndexes Optional If this parameter is passed, only the value of the array member with the provided dimension indexes is set. Dimension indexes that are not passed are considered to be 0.
     */},{key:'val',value:function val(newValue,elementIndexes){var that=this;var oldValue=void 0;if(arguments.length===2){if(that.type==='none'){return;}oldValue=JSON.stringify(that.value);var tempArray=that.value,_i327=void 0;for(_i327=0;_i327<that.dimensions-1;_i327++){var index=elementIndexes[_i327];if(index===undefined){index=0;elementIndexes[_i327]=0;}if(tempArray[index]===undefined){tempArray[index]=[];}tempArray=tempArray[index];}var lastIndex=elementIndexes[_i327];if(lastIndex===undefined){lastIndex=0;elementIndexes[_i327]=0;}if(that._areDifferent(tempArray[lastIndex],newValue)){tempArray[lastIndex]=newValue;that._fillValueArray(elementIndexes.slice(0));that.$.fireEvent('change',{'value':that.value,'oldValue':JSON.parse(oldValue),'dimensionIndexes':elementIndexes});}}else{if(newValue!==undefined&&!((typeof newValue==='undefined'?'undefined':babelHelpers.typeof(newValue))==='object'&&Object.keys(newValue).length===0)){if(that.type==='none'){return;}var oldValueStringified=JSON.stringify(that.value);if(oldValueStringified!==JSON.stringify(newValue)){oldValue=that.value;that.value=newValue;that._validateValue();if(oldValueStringified!==JSON.stringify(that.value)){that._scroll();that._getInitialFill();that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}}}else{return that.value;}}}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(DataArray.prototype.__proto__||Object.getPrototypeOf(DataArray.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;if(newValue!==oldValue){switch(propertyName){case'arrayIndexingMode':that.arrayIndexingMode=oldValue;// arrayIndexingMode cannot be changed programmatically
break;case'columns':case'rows':that._changeRowsColumns(propertyName,oldValue,newValue);break;case'customWidgetDefaultValue':if(that.type==='custom'){that._defaultValue=newValue;that._scroll();}break;case'dimensions':that._addRemoveMultipleDimensions(oldValue,newValue);break;case'animation':case'disabled':for(var j=0;j<that._indexers.length;j++){that._indexers[j][propertyName]=newValue;}if(that.type!=='none'){var cellWidgets=that.getElementsByClassName('jqx-array-element-'+that._id);if(that.type!=='custom'){for(var _i328=0;_i328<cellWidgets.length;_i328++){cellWidgets[_i328][propertyName]=newValue;}}else{if(that.changeProperty){that.changeProperty(propertyName,newValue,cellWidgets);}else{try{that.warn(that.localize('callbackFunctionRequired',{callback:'changeProperty'}));}catch(err){//
}}}that._scroll();}break;case'elementHeight':that.setRowHeight(newValue,true);break;case'elementTemplate':if(that.type!=='none'){var _cellWidgets=that.getElementsByClassName('jqx-array-element-'+that._id);for(var k=0;k<_cellWidgets.length;k++){var currentWidget=_cellWidgets[k];that.elementTemplate(currentWidget,{x:currentWidget.col,y:currentWidget.row});}}break;case'elementWidth':that.setColumnWidth(newValue,true);break;case'indexerHeight':for(var _o=0;_o<that._indexers.length;_o++){that._indexers[_o].style.height=newValue+'px';}that._updateWidgetHeight();break;case'indexerWidth':that.$.indexerContainer.style.width=newValue+'px';that._updateWidgetWidth();break;case'showHorizontalScrollbar':if(that._oneDimensionSpecialCase===true){that.showHorizontalScrollbar=false;return;}that._showHorizontalScrollbar(newValue);break;case'showIndexDisplay':if(newValue){that.$indexerContainer.removeClass('jqx-hidden');}else{that.$indexerContainer.addClass('jqx-hidden');}that._updateWidgetWidth();that._updateWidgetHeight('showIndexDisplay');break;case'showSelection':if(newValue){that._refreshSelection();}else{that._clearSelection();}break;case'showVerticalScrollbar':if(that.dimensions===1&&that._oneDimensionSpecialCase===false){that.showVerticalScrollbar=false;return;}that._showVerticalScrollbar(newValue);break;case'type':that._getDefaultCellValue();if(oldValue!=='none'&&newValue!=='none'){that._initializeElements(true);that._updateWidgetWidth();that._updateWidgetHeight();}else if(oldValue==='none'){that.value=that._returnEmptyArray();if(that._structureAdded===true){that._initializeElements(false);that._table.classList.remove('jqx-hidden');}else{that._addElementStructure();that._structureAdded=true;that._initializeElements(false);}that.$.centralContainer.style.width='';that.$.bigContainer.style.width='';that.$.mainContainer.style.height='';that.$.bigContainer.style.height='';that._updateWidgetWidth();that._updateWidgetHeight();that._getInitialFill();}else if(newValue==='none'){that.reset(true);}break;case'value':if(JSON.stringify(oldValue)!==JSON.stringify(newValue)){that._validateValue();if(JSON.stringify(oldValue)!==JSON.stringify(that.value)){that._scroll();that._getInitialFill();that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}}break;}}}/**
     * Adds dimensions to "value" array.
     */},{key:'_addDimensionToJSArray',value:function _addDimensionToJSArray(dimensions){var that=this;if(that.arrayIndexingMode==='LabVIEW'){that.value=[that.value];}else{if(dimensions===undefined){dimensions=that.dimensions-1;}var recursion=function recursion(arr,level){for(var _i329=0;_i329<arr.length;_i329++){if(level!==dimensions){recursion(arr[_i329],level+1);}else{arr[_i329]=[arr[_i329]];}}};recursion(that.value,1);}}/**
     * Adds element event handlers.
     */},{key:'_addElementHandlers',value:function _addElementHandlers(element){var that=this;element.$.listen('change',function(event){if(element.supressChange!==true||element instanceof JQX.NumericTextBox){element.$.removeClass('jqx-array-element-empty');var x=element.col,y=element.row;that._updateValue(y,x,that._getElementValue(element,{x:x,y:y},true));}else{element.supressChange=false;}event.stopPropagation();});element.$.listen('click',function(){that.$.fireEvent('elementClick',{'element':element});});}/**
     * Adds tabular element structure.
     */},{key:'_addElementStructure',value:function _addElementStructure(){var that=this;that._cells=[];that._table=document.createElement('table');that._table.className='jqx-array-element-gap';var tableBody=document.createElement('tbody'),masterFragment=document.createDocumentFragment();for(var _i330=0;_i330<that.rows;_i330++){var currentRow=document.createElement('tr'),childFragment=document.createDocumentFragment();currentRow.classList.add('jqx-array-table-row');that._cells.push([]);for(var j=0;j<that.columns;j++){var currentCell=document.createElement('td');currentCell.classList.add('jqx-array-table-data');if(that._elementGap){currentCell.classList.add('jqx-array-table-data-gap');}that._cells[_i330].push({td:currentCell});childFragment.appendChild(currentCell);}currentRow.appendChild(childFragment);masterFragment.appendChild(currentRow);}tableBody.appendChild(masterFragment);that._table.appendChild(tableBody);that.$.mainContainer.appendChild(that._table);that._tableBody=tableBody;}/**
     * Adds initial dimensions.
     */},{key:'_addInitialDimensions',value:function _addInitialDimensions(){var that=this,numberOfInitialDimensions=that.dimensions;that._dimensions=[];that._indexers=[];that._suppressDimensionChange=true;that._initialDimensions=true;for(var _i331=0;_i331<numberOfInitialDimensions;_i331++){that.addDimension();}that._suppressDimensionChange=false;that._initialDimensions=false;}/**
     * Adds or removes a column.
     */},{key:'_addRemoveColumn',value:function _addRemoveColumn(action){var that=this;if(action==='add'){var rows=that._tableBody.children;for(var _i332=0;_i332<that._cells.length;_i332++){var addToRow=that._cells[_i332],newCell=document.createElement('td');newCell.classList.add('jqx-array-table-data');if(that._elementGap){newCell.classList.add('jqx-array-table-data-gap');}addToRow.push({td:newCell});rows[_i332].appendChild(newCell);that._initializeWidget(_i332,addToRow.length-1);}that.columns++;if(that._suppressScroll!==true){that._scroll();}}else if(action==='remove'&&that.columns>1){for(var j=0;j<that._cells.length;j++){var removeFromRow=that._cells[j],cellToRemove=removeFromRow[removeFromRow.length-1];cellToRemove.widget.$.unlisten('change');cellToRemove.widget.$.unlisten('click');cellToRemove.td.parentElement.removeChild(cellToRemove.td);removeFromRow.pop();}that.columns--;}}/**
     * Adds or removes multiple dimensions.
     */},{key:'_addRemoveMultipleDimensions',value:function _addRemoveMultipleDimensions(oldvalue,value,changeValueDimensions){var that=this;if(value<1||value>32){that.dimensions=1;if(that.dimensions===oldvalue){return;}}var difference=that.dimensions-oldvalue;that._suppressDimensionChange=true;if(difference>0){do{that.addDimension(changeValueDimensions);difference-=1;}while(difference>0);that.$.fireEvent('dimensionChange',{'type':'add'});}else if(difference<0){if(value===1){var oldRowsCount=that.rows;that.rows=1;that.dimensions=oldvalue;that._changeRowsColumns('rows',oldRowsCount,1,undefined,true);that.dimensions=value;}do{that.removeDimension(true,changeValueDimensions);difference+=1;}while(difference<0);that.$.fireEvent('dimensionChange',{'type':'remove'});if(value===1&&that.showVerticalScrollbar){that._showVerticalScrollbar(false);}}else{return;}that._suppressDimensionChange=false;if(that.showIndexDisplay===true&&!(value!==1&&(value-oldvalue>0&&value*(that.indexerHeight+4)-2<that._cachedHeight||value-oldvalue<0&&oldvalue*(that.indexerHeight+4)-2<that._cachedHeight))||value===1){that._updateWidgetHeight('dimensions');}}/**
     * Adds or removes a row.
     */},{key:'_addRemoveRow',value:function _addRemoveRow(action){var that=this;if(action==='add'&&(that.dimensions>1||that.dimensions===1&&that.columns===1)){that._cells.push([]);var newRow=document.createElement('tr'),fragment=document.createDocumentFragment(),newRowIndex=that._cells.length-1,newCells=[];newRow.classList.add('jqx-array-table-row');for(var j=0;j<that.columns;j++){var currentNewCell=document.createElement('td');currentNewCell.classList.add('jqx-array-table-data');if(that._elementGap){currentNewCell.classList.add('jqx-array-table-data-gap');}that._cells[newRowIndex].push({td:currentNewCell});newCells.push(currentNewCell);fragment.appendChild(currentNewCell);}newRow.appendChild(fragment);that._tableBody.appendChild(newRow);for(var _i333=0;_i333<newCells.length;_i333++){that._initializeWidget(newRowIndex,_i333);}that.rows++;if(that._suppressScroll!==true){that._scroll();}}else if(action==='remove'&&that.rows>1){var rowToRemove=that._tableBody.children[that._tableBody.children.length-1],cellsToRemove=that._cells[that._cells.length-1];for(var k=0;k<cellsToRemove.length;k++){cellsToRemove[k].widget.$.unlisten('change');cellsToRemove[k].widget.$.unlisten('click');}that._tableBody.removeChild(rowToRemove);that._cells.pop();that.rows--;}}/**
     * Adds selection class.
     */},{key:'_addSelectionClass',value:function _addSelectionClass(x,y,td,skipSelectionCheck){var that=this;if(that.showSelection&&that._absoluteSelectionStart!==undefined&&that._absoluteSelectionEnd!==undefined){if(skipSelectionCheck===false&&that._inSelection(x,y)){td.classList.add('jqx-array-element-selected');}else{td.classList.remove('jqx-array-element-selected');}}}/**
     * Checks if two objects are different.
     */},{key:'_areDifferent',value:function _areDifferent(a,b){if(a instanceof Date){if(b instanceof Date){return a.getTime()!==b.getTime();}else if(typeof b==='string'){try{return a.getTime()!==new Date(b).getTime();}catch(err){//
}}return true;}if(b instanceof Date){if(typeof a==='string'){try{return b.getTime()!==new Date(a).getTime();}catch(err){//
}}return true;}if((typeof a==='undefined'?'undefined':babelHelpers.typeof(a))!=='object'||(typeof a==='undefined'?'undefined':babelHelpers.typeof(a))!==(typeof b==='undefined'?'undefined':babelHelpers.typeof(b))){if(a!==b){return true;}else{return false;}}else{if(JSON.stringify(a)!==JSON.stringify(b)){return true;}else{return false;}}}/**
     * Changes rows or columns.
     */},{key:'_changeRowsColumns',value:function _changeRowsColumns(key,oldvalue,value,reset,suppressHeightUpdate){var that=this,functionName='_addRemove'+key.charAt(0).toUpperCase()+key.slice(1,key.length-1);if(value<1){that[key]=1;if(that[key]===oldvalue){return;}}if(that.dimensions===1){if(that._oneDimensionSpecialCase===true){if(key==='columns'&&that[key]>1){if(that.rows>1){that.columns=1;return;}that._oneDimensionSpecialCase=false;if(that.showVerticalScrollbar){that._showVerticalScrollbar(false);that._showHorizontalScrollbar(true);}}}else{if(key==='rows'){if(that.columns>1){that.rows=1;return;}else if(that.rows>1){that._oneDimensionSpecialCase=true;if(that.showHorizontalScrollbar===true){that._showHorizontalScrollbar(false);that._showVerticalScrollbar(true);}}}}}var difference=that[key]-oldvalue;that[key]=oldvalue;if(difference>0){that._suppressScroll=true;do{that[functionName]('add');difference-=1;}while(difference>0);that._suppressScroll=false;that._scroll();}else if(difference<0){do{that[functionName]('remove');difference+=1;}while(difference<0);}that.$.fireEvent('arraySizeChange',{'type':key,'number':that[key],'oldNumber':oldvalue});if(key==='columns'){that._updateWidgetWidth();that._setMaxValuesOfScrollBars('horizontal');}else if(key==='rows'&&suppressHeightUpdate!==true){that._updateWidgetHeight(reset===true?'dimensions':undefined);that._setMaxValuesOfScrollBars('vertical');}}/**
     * Clears the selection.
     */},{key:'_clearSelection',value:function _clearSelection(){var that=this;for(var _i334=0;_i334<that.rows;_i334++){for(var j=0;j<that.columns;j++){that._cells[_i334][j].td.classList.remove('jqx-array-element-selected');}}}/**
     * Clones a value.
     */},{key:'_cloneValue',value:function _cloneValue(value){if((typeof value==='undefined'?'undefined':babelHelpers.typeof(value))!=='object'){return value;}else{if(value instanceof Date){return new Date(value.getTime());}else if(Array.isArray(value)||value instanceof Object){return JSON.parse(JSON.stringify(value));}}}/**
     * Fills the value array.
     */},{key:'_fillValueArray',value:function _fillValueArray(changedValueDimensions,skipOverride){var that=this,dimensions=that.dimensions;if(that._filledUpTo!==undefined&&skipOverride!==true){var skipFill=true;for(var a=0;a<changedValueDimensions.length;a++){skipFill=skipFill&&that._filledUpTo[a]>=changedValueDimensions[a];changedValueDimensions[a]=Math.max(changedValueDimensions[a],that._filledUpTo[a]);}if(skipFill===true){that._scroll();return;}}that._filledUpTo=changedValueDimensions.slice(0);function recursion(arr,level){for(var _i335=0;_i335<=changedValueDimensions[level];_i335++){if(level!==dimensions-1){if(arr[_i335]===undefined){arr[_i335]=[];}recursion(arr[_i335],level+1);}else if(arr[_i335]===undefined){arr[_i335]=that._getDefaultValue();}}}recursion(that.value,0);that._scroll();that._setMaxValuesOfScrollBars();}/**
     * Gets default cell value.
     */},{key:'_getDefaultCellValue',value:function _getDefaultCellValue(){var that=this;switch(that.type){case'custom':that._defaultValue=that.customWidgetDefaultValue!==null?that.customWidgetDefaultValue:undefined;break;case'numeric':that._defaultValue=0;break;case'boolean':that._defaultValue=false;break;case'string':that._defaultValue='';break;}}/**
     * Gets the default element value.
     */},{key:'_getDefaultValue',value:function _getDefaultValue(){var that=this;return that._cloneValue(that._defaultValue);}/**
     * Gets element value.
     */},{key:'_getElementValue',value:function _getElementValue(element,dimensions,clone){var that=this;var value=void 0;if(that.getElementValue){value=that.getElementValue(element,dimensions);}else{value=that.type==='boolean'?element.checked:element.value;}if(clone!==true){return value;}else{return that._cloneValue(value);}}/**
     * Gets the initial fill of the value array.
     */},{key:'_getInitialFill',value:function _getInitialFill(){var that=this;that._filledUpTo=[];if(that.type!=='none'){var tempArray=that.value;for(var _i336=0;_i336<that.dimensions;_i336++){var lastIndex=tempArray.length-1;that._filledUpTo[_i336]=lastIndex;tempArray=tempArray[lastIndex];}that._setMaxValuesOfScrollBars();}}/**
     * Gets the max value of the horizontal or vertical scrollbar.
     */},{key:'_getMaxValuesOfScrollBars',value:function _getMaxValuesOfScrollBars(scrollbar){var that=this,length=that._filledUpTo.length;var max=0,filledUpTo=void 0,visibleCells=void 0,value=void 0;if(scrollbar==='horizontal'){value=that.$.horizontalScrollbar.value;if(that.arrayIndexingMode==='LabVIEW'){filledUpTo=that._filledUpTo[length-1];}else{filledUpTo=that._filledUpTo[0];}visibleCells=that.columns;}else{value=that.$.verticalScrollbar.value;if(!that._oneDimensionSpecialCase){if(that.arrayIndexingMode==='LabVIEW'){filledUpTo=that._filledUpTo[length-2];}else{filledUpTo=that._filledUpTo[1];}}else{if(that.arrayIndexingMode==='LabVIEW'){filledUpTo=that._filledUpTo[length-1];}else{filledUpTo=that._filledUpTo[0];}}visibleCells=that.rows;}if(filledUpTo===undefined){return 0;}max=filledUpTo-visibleCells+2;return Math.max(max,value);}/**
     * Gets value in cell.
     */},{key:'_getValueInCell',value:function _getValueInCell(row,column){var that=this,array=that.value,dimensionValues=that._coordinates,length=dimensionValues.length;var value=void 0;if(length===1){if(that._oneDimensionSpecialCase===false){value=array[column+dimensionValues[0]];}else{value=array[row+dimensionValues[0]];}}else{var actualIndexes=dimensionValues.slice(0);if(that.arrayIndexingMode==='LabVIEW'){actualIndexes[length-1]+=column;actualIndexes[length-2]+=row;}else{actualIndexes[0]+=column;actualIndexes[1]+=row;}var oneDimensionalArrayValue=array[actualIndexes[0]];if(oneDimensionalArrayValue!==undefined){var twoDimensionalArrayValue=oneDimensionalArrayValue[actualIndexes[1]];if(twoDimensionalArrayValue!==undefined){value=twoDimensionalArrayValue;if(length>2){for(var _i337=2;_i337<length;_i337++){if(value===undefined){break;}value=value[actualIndexes[_i337]];}}}}}return value;}/**
     * Indexer change handler.
     */},{key:'_indexerChangeHandler',value:function _indexerChangeHandler(event){var that=this,oldContext=that.context;that.context=that;var dimension=event.target.dimension,actualDimension=that.arrayIndexingMode==='LabVIEW'?that.dimensions-dimension-1:dimension,value=parseFloat(event.detail.value);that._coordinates[actualDimension]=value;that._scroll();if(that.type!=='none'&&(dimension===0||dimension===1)){that._syncScrollbar(dimension,value);}event.stopPropagation();that.context=oldContext;}/**
     * Initializes elements.
     */},{key:'_initializeElements',value:function _initializeElements(removeOldWidgets){var that=this,cells=that._cells;that._initializeElement=function(){};function setElementTemplate(widget){if(that.elementTemplate){that.elementTemplate(widget,{x:widget.col,y:widget.row});}}if(that.type!=='custom'){switch(that.type){case'numeric':that._initializeElement=function(widget,value){widget.style.width=that.elementWidth+'px';widget.style.height=that.elementHeight+'px';widget.disabled=that.disabled;widget.animation=that.animation;widget.inputFormat='floatingPoint';widget.spinButtons=true;widget.value=value;setElementTemplate(widget);};break;case'boolean':that._initializeElement=function(widget,value){widget.style.width=that.elementWidth+'px';widget.style.height=that.elementHeight+'px';widget.disabled=that.disabled;widget.animation=that.animation;widget.checked=value;setElementTemplate(widget);};break;case'string':that._initializeElement=function(widget,value){widget.style.width=that.elementWidth+'px';widget.style.height=that.elementHeight+'px';widget.disabled=that.disabled;widget.animation=that.animation;widget.value=value;setElementTemplate(widget);};break;}}else{that._initializeElement=function(widget,value){if(that.elementTemplate){var widgetDimensions={x:widget.col,y:widget.row};that.elementTemplate(widget,widgetDimensions);if(value!==undefined){that._setElementValue(value,widget,widgetDimensions);}}else{that.error(that.localize('callbackFunctionRequired',{callback:'elementTemplate'}));}};}for(var _i338=0;_i338<cells.length;_i338++){// rows
for(var j=0;j<cells[_i338].length;j++){// columns
if(removeOldWidgets===true){var cell=cells[_i338][j];cell.widget.$.unlisten('change');cell.widget.$.unlisten('click');cell.td.innerHTML='';}that._initializeWidget(_i338,j);}}}/**
     * Initializes custom elements.
     */},{key:'_initializeWidget',value:function _initializeWidget(i,j){var that=this,cell=that._cells[i][j],initialValue=that._getValueInCell(i,j);var widget=void 0;switch(that.type){case'boolean':widget=document.createElement('jqx-switch-button');break;case'numeric':widget=document.createElement('jqx-numeric-text-box');widget.validation='interaction';break;case'string':widget=document.createElement('jqx-text-box');break;case'custom':widget=document.createElement('div');widget.$=JQX.Utilities.Extend(widget);break;}widget.row=i;widget.col=j;cell.widget=widget;that._initializeElement(widget,initialValue===undefined?that._getDefaultValue():initialValue,cell);cell.td.appendChild(widget);widget.classList.add('jqx-array-element');widget.classList.add('jqx-array-element-'+that._id);if(initialValue===undefined){widget.classList.add('jqx-array-element-empty');}that._addElementHandlers(widget);}/**
     * Checks if a cell is in selection.
     */},{key:'_inSelection',value:function _inSelection(x,y){var that=this,dimensionValues=that._coordinates;var validation=true,xDimension=void 0,yDimension=void 0,boundX=void 0,boundY=void 0;if(that.arrayIndexingMode==='LabVIEW'){xDimension=that.dimensions-1;yDimension=that.dimensions-2;}else{xDimension=0;yDimension=1;}if(!that._oneDimensionSpecialCase){boundX=x+dimensionValues[xDimension];boundY=y+dimensionValues[yDimension];}else{boundX=y+dimensionValues[xDimension];}if(that.dimensions===1){if(boundX>=that._absoluteSelectionStart[xDimension]&&boundX<=that._absoluteSelectionEnd[xDimension]){return true;}else{return false;}}if(boundX>=that._absoluteSelectionStart[xDimension]&&boundX<=that._absoluteSelectionEnd[xDimension]&&boundY>=that._absoluteSelectionStart[yDimension]&&boundY<=that._absoluteSelectionEnd[yDimension]){validation=true;}else{validation=false;}if(that.arrayIndexingMode==='LabVIEW'){for(var _i339=0;_i339<yDimension;_i339++){validation=validation&&dimensionValues[_i339]>=that._absoluteSelectionStart[_i339]&&dimensionValues[_i339]<=that._absoluteSelectionEnd[_i339];}}else{for(var j=2;j<that.dimensions;j++){validation=validation&&dimensionValues[j]>=that._absoluteSelectionStart[j]&&dimensionValues[j]<=that._absoluteSelectionEnd[j];}}return validation;}/**
     * Moves scrollbar.
     */},{key:'_moveScrollbar',value:function _moveScrollbar(scrollbar,type,index,value){if(isNaN(value)){return;}var that=this,max=that._getMaxValuesOfScrollBars(type),currentMax=scrollbar.max;var actualIndex=void 0;if(that.arrayIndexingMode==='LabVIEW'){actualIndex=that.dimensions-index-1;}else{actualIndex=index;}that._indexers[actualIndex].val(value);that._coordinates[actualIndex]=value;if(value<=max){scrollbar.max=max;}else if(value<=currentMax){scrollbar.max=value;}that._scroll();that.$.fireEvent('scroll',{'direction':type});}/**
     * Refreshes selection.
     */},{key:'_refreshSelection',value:function _refreshSelection(){var that=this;if(that.showSelection){for(var _i340=0;_i340<that.rows;_i340++){for(var j=0;j<that.columns;j++){var _value23=that._getValueInCell(_i340,j),skipSelectionCheck=_value23===undefined?true:false;that._addSelectionClass(j,_i340,that._cells[_i340][j].td,skipSelectionCheck);}}}}/**
     * Removes a dimension from "value" array.
     */},{key:'_removeDimensionFromJSArray',value:function _removeDimensionFromJSArray(){var that=this;if(that.arrayIndexingMode==='LabVIEW'){that.value=that.value[0];}else{var dimensions=that.dimensions+1,recursion=function recursion(arr,level,parent,index){for(var _i341=0;_i341<arr.length;_i341++){if(level!==dimensions&&arr[_i341].length>0){recursion(arr[_i341],level+1,arr,_i341);}else{if(parent!==undefined){parent[index]=arr[0];}else{that.value=that.value[0];}}}};recursion(that.value,1);}}/**
     * Resize handler.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;if(that.offsetWidth!==that._cachedWidth){if(that.type!=='none'){var valueDifference=that.offsetWidth-that._cachedWidth,elementDimension=that.elementWidth;if(Math.abs(valueDifference)<elementDimension){that.style.width=that._cachedWidth+'px';return;}var rowsColumnsDifference=Math.round(valueDifference/elementDimension),oldValue=that.columns,newValue=oldValue+rowsColumnsDifference;that.columns=newValue;that._changeRowsColumns('columns',oldValue,newValue);}else{that._updateWidgetWidth();}}that._cachedWidth=that.offsetWidth;if(that.offsetHeight!==that._cachedHeight){if(that.type==='none'){that._updateWidgetHeight();}else{that.style.height=that._cachedHeight+'px';return;}}that._cachedHeight=that.offsetHeight;}/**
     * Returns an empty array with the necessary dimensions.
     */},{key:'_returnEmptyArray',value:function _returnEmptyArray(){var that=this,emptyArray=[];var current=emptyArray;if(that.dimensions>1){for(var _i342=1;_i342<that.dimensions;_i342++){current[0]=[];current=current[0];}}return emptyArray;}/**
     * Scrolls the Array.
     */},{key:'_scroll',value:function _scroll(){var that=this;if(that.type==='none'){return;}for(var _i343=0;_i343<that._cells.length;_i343++){for(var j=0;j<that._cells[_i343].length;j++){var _value24=that._getValueInCell(_i343,j),widget=that._cells[_i343][j].widget,widgetDimensions={x:j,y:_i343},widgetValue=that._getElementValue(widget,widgetDimensions);var skipSelectionCheck=void 0;if(_value24!==undefined){widget.classList.remove('jqx-array-element-empty');if(that._areDifferent(widgetValue,_value24)){widget.supressChange=true;that._setElementValue(_value24,widget,widgetDimensions);}else{widget.supressChange=false;}skipSelectionCheck=false;}else{widget.classList.add('jqx-array-element-empty');if(that._areDifferent(widgetValue,that._defaultValue)){widget.supressChange=true;that._setElementValue(that._getDefaultValue(),widget,widgetDimensions);}else{widget.supressChange=false;}skipSelectionCheck=true;}that._addSelectionClass(j,_i343,that._cells[_i343][j].td,skipSelectionCheck);}}}/**
     * Scrollbar change handler.
     */},{key:'_scrollbarChangeHandler',value:function _scrollbarChangeHandler(event){var that=this;var direction=void 0,index=void 0;event.stopPropagation();if(that.type==='none'){return;}if(event.target===that.$.horizontalScrollbar){direction='horizontal';index=0;}else{direction='vertical';index=that._oneDimensionSpecialCase?0:1;}if(that._suppressScrollbarEvent!==true){that._moveScrollbar(event.target,direction,index,Math.round(event.detail.value));}else{that._suppressScrollbarEvent=false;}if(!that._clickTriggered){that._changeTriggered=true;setTimeout(function(){that._changeTriggered=false;},50);}}/**
     * Scrollbar click handler.
     */},{key:'_scrollbarClickHandler',value:function _scrollbarClickHandler(event){var button=event.target.closest('.jqx-scroll-button');if(button===null){return;}var that=this,scrollbar=button.parentElement.parentElement;if(button===scrollbar.$.farButton){if(that._changeTriggered){return;}that._clickTriggered=true;setTimeout(function(){that._clickTriggered=false;},50);var scrollbarMax=scrollbar.max;var scrollbarValue=scrollbar.value;if(isNaN(scrollbarValue)===true){scrollbarValue=0;}if(scrollbarMax===scrollbarValue){scrollbar.max=scrollbarMax+1;scrollbar.value=scrollbarMax+1;}}}/**
     * Sets the value of an element.
     */},{key:'_setElementValue',value:function _setElementValue(value,element,dimensions){var that=this;value=that._cloneValue(value);if(that.setElementValue){that.setElementValue(value,element,dimensions);if(element.supressChange===true){element.supressChange=false;}}else{if(that.type==='boolean'){element.checked=value;}else{element.value=value;}}}/**
     * Sets the max value of the horizontal or vertical scrollbar.
     */},{key:'_setMaxValuesOfScrollBars',value:function _setMaxValuesOfScrollBars(which){var that=this;if(that.showHorizontalScrollbar&&(which===undefined||which==='horizontal')){that.$.horizontalScrollbar.max=that._getMaxValuesOfScrollBars('horizontal');}if(that.showVerticalScrollbar&&(which===undefined||which==='vertical')){that.$.verticalScrollbar.max=that._getMaxValuesOfScrollBars('vertical');}}/**
     * Shows the horizontal scrollbar.
     */},{key:'_showHorizontalScrollbar',value:function _showHorizontalScrollbar(show){var that=this;that.showHorizontalScrollbar=show;that._updateWidgetHeight('showHorizontalScrollbar');if(show===true){that.$horizontalScrollbarContainer.removeClass('jqx-hidden');if(that.type!=='none'){var xDimension=void 0;if(that.arrayIndexingMode==='LabVIEW'){xDimension=that.dimensions-1;}else{xDimension=0;}that._syncScrollbar(0,that._coordinates[xDimension]);}}else{that.$horizontalScrollbarContainer.addClass('jqx-hidden');}}/**
     * Shows the vertical scrollbar.
     */},{key:'_showVerticalScrollbar',value:function _showVerticalScrollbar(show){var that=this;that.showVerticalScrollbar=show;that._updateWidgetWidth(true);if(show===true){that.$verticalScrollbarContainer.removeClass('jqx-hidden');if(that.type!=='none'){var yDimension=void 0;if(that._oneDimensionSpecialCase){yDimension=0;}else if(that.arrayIndexingMode==='LabVIEW'){yDimension=that.dimensions-2;}else{yDimension=1;}that._syncScrollbar(1,that._coordinates[yDimension]);}}else{that.$verticalScrollbarContainer.addClass('jqx-hidden');}}/**
     * Synchronizes the corresponding scrollbar.
     */},{key:'_syncScrollbar',value:function _syncScrollbar(dimension,value){var that=this;var max=void 0,scrollbar=void 0;if(dimension===0&&that._oneDimensionSpecialCase===false){if(!that.showHorizontalScrollbar){return;}max=that._getMaxValuesOfScrollBars('horizontal');scrollbar=that.$.horizontalScrollbar;}else{if(!that.showVerticalScrollbar){return;}max=that._getMaxValuesOfScrollBars('vertical');scrollbar=that.$.verticalScrollbar;}if(value>max){max=value;}var currentMax=scrollbar.max;if(currentMax!==max){if(currentMax>max){that._suppressScrollbarEvent=true;}scrollbar.max=max;}if(scrollbar.value!==value){that._suppressScrollbarEvent=true;scrollbar.value=value;}}/**
     * Updates the value of the Array.
     */},{key:'_updateValue',value:function _updateValue(row,column,newValue){var that=this,oldValue=that._getValueInCell(row,column);if(!that._areDifferent(newValue,oldValue)){return;}var dimensionValues=that._coordinates,actualIndexes=dimensionValues.slice(0),changedValueDimensions=[];if(that.arrayIndexingMode==='LabVIEW'){actualIndexes[actualIndexes.length-1]+=column;actualIndexes[actualIndexes.length-2]+=row;}else{actualIndexes[0]+=column;actualIndexes[1]+=row;}for(var _i344=0;_i344<that.dimensions;_i344++){if(_i344===0){// x
if(that._oneDimensionSpecialCase===false){changedValueDimensions.push(actualIndexes[0]);}else{changedValueDimensions.push(row+dimensionValues[0]);}}else if(_i344===1){// y
changedValueDimensions.push(actualIndexes[1]);}else{// other dimensions
changedValueDimensions.push(actualIndexes[_i344]);}}var tempArr=that.value;for(var j=0;j<changedValueDimensions.length;j++){if(tempArr[changedValueDimensions[j]]===undefined||tempArr[changedValueDimensions[j]]===oldValue){if(j!==changedValueDimensions.length-1){tempArr[changedValueDimensions[j]]=[];}else{tempArr[changedValueDimensions[j]]=newValue;}}tempArr=tempArr[changedValueDimensions[j]];}that._fillValueArray(changedValueDimensions.slice(0));that.$.fireEvent('change',{'value':newValue,'oldValue':oldValue,'dimensionIndexes':changedValueDimensions});}/**
     * Updates element height.
     */},{key:'_updateWidgetHeight',value:function _updateWidgetHeight(propertyChangedHandler){var that=this,hScrollbarContainerSize=that.showHorizontalScrollbar?20:0;var mainHeight=void 0,indexerContaineHeight=void 0;if(that.showIndexDisplay){var marginBottom=parseInt(window.getComputedStyle(that._indexers[0]).marginBottom,10);indexerContaineHeight=that.dimensions*(that.indexerHeight+marginBottom)-marginBottom;}else{indexerContaineHeight=0;}if(that.type!=='none'){mainHeight=that.$.mainContainer.offsetHeight+hScrollbarContainerSize;}else{if(propertyChangedHandler==='showHorizontalScrollbar'){var currentBigContainerHeight=that.$.bigContainer.offsetHeight;if(that.showHorizontalScrollbar===true){mainHeight=currentBigContainerHeight+20;}else{mainHeight=currentBigContainerHeight-20;}}else if(propertyChangedHandler==='showIndexDisplay'&&that.showIndexDisplay===false||propertyChangedHandler==='dimensions'){mainHeight=that.$.bigContainer.offsetHeight;}else{mainHeight=that.offsetHeight;}var minHeight=18+hScrollbarContainerSize;if(mainHeight<minHeight){mainHeight=minHeight;}that.$.mainContainer.style.height=mainHeight-hScrollbarContainerSize+'px';}that.$.verticalScrollbarContainer.style.height=mainHeight-hScrollbarContainerSize+'px';that.$.bigContainer.style.height=mainHeight+'px';var style=window.getComputedStyle(that);that._cachedHeight=Math.max(indexerContaineHeight,mainHeight)+parseInt(style.borderTopWidth,10)+parseInt(style.borderBottomWidth,10);if(that.type!=='none'){that.style.minHeight=that._cachedHeight+'px';that.style.maxHeight=that._cachedHeight+'px';}that.style.height=that._cachedHeight+'px';}/**
     * Updates element width.
     */},{key:'_updateWidgetWidth',value:function _updateWidgetWidth(propertyChangedHandler){var that=this,vScrollbarContainerSize=that.showVerticalScrollbar?20:0,indexerWidth=that.showIndexDisplay?that.indexerWidth:0,marginLeft=parseInt(window.getComputedStyle(that.$.bigContainer).marginLeft,10);var centralContainerWidth=void 0,bigContainerWidth=void 0,width=void 0;if(that.type!=='none'){centralContainerWidth=that.$.centralContainer.offsetWidth;bigContainerWidth=centralContainerWidth+vScrollbarContainerSize;width=bigContainerWidth+indexerWidth+marginLeft;}else{width=that.offsetWidth;if(propertyChangedHandler===true){if(that.showVerticalScrollbar===true){width+=20;}else{width-=20;}}var minWidth=indexerWidth+18+vScrollbarContainerSize;if(width<minWidth){width=minWidth;}bigContainerWidth=width-indexerWidth-marginLeft;centralContainerWidth=bigContainerWidth-vScrollbarContainerSize;that.$.centralContainer.style.width=centralContainerWidth+'px';}that.$.bigContainer.style.width=bigContainerWidth+'px';var style=window.getComputedStyle(that);width+=parseInt(style.borderLeftWidth,10)+parseInt(style.borderRightWidth,10);that.style.width=width+'px';that._cachedWidth=width;}/**
     * Validates properties.
     */},{key:'_validateProperties',value:function _validateProperties(){var that=this;that._oneDimensionSpecialCase=false;if(that.type==='none'){that.rows=1;that.columns=1;}else{if(that.rows<1){that.rows=1;}if(that.columns<1){that.columns=1;}}if(that.dimensions<1||that.dimensions>32){that.dimensions=1;}if(that.dimensions===1){if(that.columns>1){that.rows=1;if(that.showVerticalScrollbar===true){that.showVerticalScrollbar=false;}}else if(that.rows!==1){that._oneDimensionSpecialCase=true;if(that.showHorizontalScrollbar===true){that.showHorizontalScrollbar=false;}}else if(that.columns===1&&that.rows===1){if(that.showVerticalScrollbar===true){that.showVerticalScrollbar=false;}}}that._validateValue();if(that.showIndexDisplay){that.$indexerContainer.removeClass('jqx-hidden');}that.$.indexerContainer.style.width=that.indexerWidth+'px';if(that.showHorizontalScrollbar){that.$horizontalScrollbarContainer.removeClass('jqx-hidden');}if(that.showVerticalScrollbar){that.$verticalScrollbarContainer.removeClass('jqx-hidden');}}/**
     * Validates value.
     */},{key:'_validateValue',value:function _validateValue(){var that=this;if(that.type==='none'){that.value=null;}else if(that.value===null||that.value===undefined){that.value=that._returnEmptyArray();}else{that._validateValueArrayDimensions();}}/**
     * Validates the dimensions of the value array.
     */},{key:'_validateValueArrayDimensions',value:function _validateValueArrayDimensions(){var that=this;var dimensions=0,tempArray=that.value,emptyArray=false;while(tempArray.constructor===Array){dimensions++;tempArray=tempArray[0];if(tempArray===undefined){emptyArray=true;break;}}if(that.dimensions>dimensions){if(emptyArray){that.value=that._returnEmptyArray();return;}while(that.dimensions>dimensions){that._addDimensionToJSArray(dimensions);dimensions++;}}}}],[{key:'properties',/**
     * Array's properties.
     */get:function get(){return{'arrayIndexingMode':{value:'LabVIEW',allowedValues:['LabVIEW','JavaScript'],type:'string'},'changeProperty':{value:null,type:'function?'},'columns':{value:1,type:'number'},'customWidgetDefaultValue':{value:null,type:'any?'},'dimensions':{value:1,type:'number'},'elementHeight':{value:25,type:'number'},'elementTemplate':{value:null,type:'function?'},'elementWidth':{value:75,type:'number'},'getElementValue':{value:null,type:'function?'},'indexerHeight':{value:25,type:'number'},'indexerWidth':{value:50,type:'number'},'messages':{value:{'en':{'callbackFunctionRequired':'jqx-array: When "type" is \'custom\', the {{callback}} callback function has to be implemented.'}},type:'object',extend:true},'rows':{value:1,type:'number'},'setElementValue':{value:null,type:'function?'},'showHorizontalScrollbar':{value:false,type:'boolean'},'showIndexDisplay':{value:false,type:'boolean'},'showSelection':{value:false,type:'boolean'},'showVerticalScrollbar':{value:false,type:'boolean'},'type':{value:'none',allowedValues:['none','boolean','numeric','string','custom'],type:'string'},'value':{value:null,type:'array?',reflectToAttribute:false}};}/**
     * Array's event listeners.
     */},{key:'listeners',get:function get(){return{'resize':'_resizeHandler','horizontalScrollbar.change':'_scrollbarChangeHandler','horizontalScrollbar.click':'_scrollbarClickHandler','verticalScrollbar.change':'_scrollbarChangeHandler','verticalScrollbar.click':'_scrollbarClickHandler'};}/**
     * Array's required files.
     */},{key:'requires',get:function get(){return{'JQX.NumericTextBox':'jqxnumerictextbox.js','JQX.ScrollBar':'jqxscrollbar.js','JQX.SwitchButton':'jqxswitchbutton.js','JQX.TextBox':'jqxtextbox.js'};}}]);return DataArray;}(JQX.BaseElement));/**
* Calendar custom element.
*/JQX('jqx-calendar',function(_JQX$BaseElement10){babelHelpers.inherits(Calendar,_JQX$BaseElement10);function Calendar(){babelHelpers.classCallCheck(this,Calendar);return babelHelpers.possibleConstructorReturn(this,(Calendar.__proto__||Object.getPrototypeOf(Calendar)).apply(this,arguments));}babelHelpers.createClass(Calendar,[{key:'template',/**
    * Calendar's HTML template.
    */value:function template(){return'<div id="container">\n                    <div id="title" class="jqx-calendar-title">\n                        <div id="yearContainer" class="jqx-calendar-year-container"></div>\n                        <div id="dateContainer" class="jqx-calendar-date-container jqx-calendar-selected"></div>\n                    </div>\n                    <div id="calendarContainer" class="jqx-calendar-container">\n                        <div id="header" class="jqx-calendar-header">\n                            <jqx-repeat-button prev-month class="jqx-calendar-button" id="previousMonthButton" animation="[[animation]]" initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" disabled="[[disabled]]" readonly="[[readonly]]">\n                                <div class="jqx-arrow">&#xe809</div>\n                            </jqx-repeat-button>\n                            <div id="dateElement" class="jqx-calendar-date-element">\n                                <div id="defaultHeaderDate"></div>\n                                <div id="classicHeaderDate">\n                                    <jqx-drop-down-list class="jqx-calendar-month-element" id="monthElement" drop-down-position="bottom" selection-mode="one" disabled="[[disabled]]" readonly="[[readonly]]" drop-down-width="[[dropDownWidth]]" drop-down-height="[[dropDownHeight]]" theme="[[theme]]">\n                                    </jqx-drop-down-list>\n                                    <input class="jqx-calendar-year-element" id="yearElement" disabled="[[disabled]]" readonly="[[readonly]]"/>\n                                    <span class="jqx-calendar-year-elements">\n                                        <jqx-repeat-button next-year class="jqx-calendar-button" id="nextYearButton" animation="[[animation]]" initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" disabled="[[disabled]]" readonly="[[readonly]]">\n                                            <span class="jqx-arrow">&#xe801</span>\n                                        </jqx-repeat-button>\n                                        <jqx-repeat-button prev-year class="jqx-calendar-button" id="previousYearButton" animation="[[animation]]" initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" disabled="[[disabled]]" readonly="[[readonly]]">\n                                            <span class="jqx-arrow">&#xe804</span>\n                                        </jqx-repeat-button>\n                                    </span>\n                                </div>\n                            </div>\n                            <jqx-repeat-button next-month class="jqx-calendar-button" id="nextMonthButton" animation="[[animation]]" initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" disabled="[[disabled]]" readonly="[[readonly]]">\n                                <div class="jqx-arrow">&#xe810</div>\n                            </jqx-repeat-button>\n                        </div>\n                        <div id="body" class="jqx-content jqx-calendar-body">\n                           <div id="monthsContainer" class="jqx-calendar-months-container">\n                              <div id="month" class="jqx-calendar-month">\n                                   <div id="monthName" class="jqx-calendar-month-name"></div>\n                                   <div id="weekTitles" class="jqx-calendar-week-titles">\n                                       <div class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                       <div  class="jqx-calendar-week-title"></div>\n                                   </div>\n                                   <div id="weeks" class="jqx-calendar-weeks">\n                                        <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                        </div>\n                                        <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                       </div>\n                                       <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                       </div>\n                                       <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                       </div>\n                                       <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                       </div>\n                                       <div class="jqx-calendar-week">\n                                           <div class="jqx-calendar-week-number"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"></div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                           <div class="jqx-calendar-cell"> </div>\n                                       </div>\n                                   </div>\n                                </div>\n                            </div>\n                            <div id="dateViewContainer" class="jqx-calendar-date-view-container jqx-hidden">\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                                    <div class="jqx-calendar-cell"></div>\n                            </div>\n                            <div id="monthsSeparator" class="jqx-calendar-month-separator"></div>\n                            <div id="nextMonthsContainer" class="jqx-calendar-next-months-container"></div>\n                            <jqx-list-box item-height="30" unfocusable id="listViewContainer" selection-mode="one" class="jqx-calendar-list-view jqx-hidden" animation="simple"></jqx-list-box>\n                            <div id="animationPanel" class="jqx-calendar-animation-panel jqx-hidden"></div>\n                        </div>\n                        <div id="footer" class="jqx-calendar-footer jqx-hidden">\n                            <div id="selectedDatesRange"></div>\n                        </div>\n                        <jqx-tooltip id="tooltip" open-mode="manual" arrow\n                                   tooltip-template="[[tooltipTemplate]]"\n                                   position="[[tooltipPosition]]"\n                                   delay="[[tooltipDelay]]"\n                                   disabled="[[disabled]]">\n                         </jqx-tooltip>\n                        <input id="hiddenInput" type="hidden" name="[[name]]">\n                    </div>\n                </div>';}/**
    * Updates the Calendar when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Calendar.prototype.__proto__||Object.getPrototypeOf(Calendar.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'animationSettings':that._applyAnimationSettings();break;case'disabled':case'unfocusable':that._setFocusable();break;case'calendarMode':that.displayMode='month';that._refreshCalendarMode();that._setDisplayModeContent();break;case'dayNameFormat':that._refreshDayOfWeekTitles(that.$.month);break;case'dateFormatFunction':{var months=that.$.monthsContainer.children;for(var m=0;m<months.length;m++){months[m].firstElementChild.innerHTML=newValue?newValue(months[m]._date):that._monthsNames[months[m]._date.getMonth()]+' '+months[m]._date.toLocaleDateString(that.locale,{year:that.yearFormat});}that._refreshHeaderTitle();break;}case'displayMode':that._setDisplayMode(oldValue,newValue);break;case'displayModeView':that._applyAnimationSettings(true);if(that.displayMode!=='month'){that._setDisplayModeContent();}break;case'firstDayOfWeek':that._handleMonths();that._refreshDayOfWeekTitles();break;case'hideTooltipArrow':that.$.tooltip.arrow=newValue?false:true;break;case'titleTemplate':case'headerTemplate':case'footerTemplate':that._handleLayoutTemplate(that.$[propertyName.split(/[T]/)[0]],newValue);if(propertyName==='titleTemplate'){that._refreshTitle();}else if(propertyName==='headerTemplate'){that._refreshHeaderTitle();}else{that._refreshFooter();}break;case'importantDates':that.importantDates=that._getValidDates(newValue);that._refreshImportantDates();break;case'importantDatesTemplate':that._handleImportantDateTemplate();that._refreshImportantDates();break;case'locale':that._refreshMonthNames();that._refreshDayOfWeekTitles();that._refreshHeaderTitle();that._refreshTitle();that._refreshFooter();if(that.displayMode&&that.displayMode!=='month'){that._setDisplayModeContent();}break;case'max':case'min':that._validateMinMax(propertyName,newValue,oldValue);that._validateSelectedDates();that._noFocusingRequired=false;that._refreshHeaderElements();break;case'months':that._handleMonths();break;case'monthNameFormat':that._refreshCalendarMode();that._refreshHeaderTitle();break;case'restrictedDates':that._setRestrictedDates(that.restrictedDates=that._getValidDates(newValue));break;case'rightToLeft':that._refreshDayOfWeekTitles();that._handleMonths();break;case'scrollButtonsNavigationMode':that._setScrollButtonsNavigationMode();break;case'selectedDates':that._clearSelection(true);that._validateSelectedDates(that._getValidDates(newValue));that._applySelectionMode(true);if(that._viewDates){var lastSelectedDate=that.selectedDates[that.selectedDates.length-1];!that._isDateInView(lastSelectedDate)?//true flags indicate eventPrevention and noPropertySynchronization
that._handleMonths(lastSelectedDate):that.selectedDates.map(function(date){return that._selectDate(date,true,true);});}that._refreshFooter();that._setWeeksVisibility(that.$.monthsContainer);//Update the hidden input
that.$.hiddenInput.value=that.selectedDates.toString();that.$.fireEvent('change',{'value':that.selectedDates});that._refreshTitle();break;case'selectionMode':that._applySelectionMode();that._refreshTitle();break;case'view':that._refreshTitle();break;case'viewSections':newValue.indexOf('title')>-1?that.$title.removeClass('jqx-hidden'):that.$title.addClass('jqx-hidden');that._refreshTitle();newValue.indexOf('header')>-1?that.$header.removeClass('jqx-hidden'):that.$header.addClass('jqx-hidden');that._refreshHeaderTitle();newValue.indexOf('footer')>-1?that.$footer.removeClass('jqx-hidden'):that.$footer.addClass('jqx-hidden');that._refreshFooter();that._setFocusable();break;case'weeks':that._setWeeksVisibility(that.$.monthsContainer);break;case'yearFormat':that._refreshCalendarMode();that._refreshFooter();//Set month name
if(that.months>1&&that.displayMode==='month'){var _months=that._animationStarted?that.$.nextMonthsContainer.children:that.$.monthsContainer.children;for(var _i345=0;_i345<_months.length;_i345++){_months[_i345].firstElementChild.innerHTML=that.dateFormatFunction?that.dateFormatFunction(_months[_i345]._date):that._monthsNames[_months[_i345]._date.getMonth()]+' '+_months[_i345]._date.toLocaleDateString(that.locale,{year:newValue});}}that._refreshTitle();that._refreshHeaderTitle();break;}}/**
    * Calendar ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(Calendar.prototype.__proto__||Object.getPrototypeOf(Calendar.prototype),'ready',this).call(this);var that=this;that._keysPressed={};that._applyAnimationSettings();that.importantDates=that._getValidDates(that.importantDates);that.restrictedDates=that._getValidDates(that.restrictedDates);that._refreshMonthNames();that._validateMinMax();that._validateSelectedDates(that._getValidDates(that.selectedDates));that._handleLayoutTemplate(that.$.title,that.titleTemplate);that._handleLayoutTemplate(that.$.header,that.headerTemplate);that._handleLayoutTemplate(that.$.footer,that.footerTemplate);that._handleImportantDateTemplate();that._setFocusable();that._refreshDayOfWeekTitles();that._applySelectionMode(true);that._handleMonths(that.selectedDates.length===0?new Date(new Date().setHours(0,0,0,0)):that.selectedDates[that.selectedDates.length-1]);that._updateViewSectionsVisibility();that._setScrollButtonsNavigationMode();that._refreshCalendarMode();that._setDisplayMode();that._refreshTitle();that._refreshFooter();that._refreshImportantDates();//Since jqxDropDownList uses CSS vars for the width/Height of the drop down list, 
// recalculation of the size of the drop down is needed since the layout has been changed by populating the Calendar with data.
if(that.$.monthElement){that.$.monthElement._setDropDownSize();}that._changeEventFired=0;}},{key:'_updateViewSectionsVisibility',value:function _updateViewSectionsVisibility(){var that=this;that.viewSections.indexOf('title')>-1?that.$title.removeClass('jqx-hidden'):that.$title.addClass('jqx-hidden');that.viewSections.indexOf('header')>-1?that.$header.removeClass('jqx-hidden'):that.$header.addClass('jqx-hidden');that.viewSections.indexOf('footer')>-1?that.$footer.removeClass('jqx-hidden'):that.$footer.addClass('jqx-hidden');}/**
    * Clears the currently selected dates. Public method
    */},{key:'clearSelection',value:function clearSelection(){this._clearSelection();}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;var index=that.tabIndex>0?that.tabIndex:0;//HeaderComponents
function setHeaderElement(component,componentType){if(!componentType){return;}if(component&&component instanceof componentType){if(typeof component._setFocusable==='function'&&component.isCompleted){//If a JQX element is added to the element and its not ready
component.unfocusable=index<=-1;}else{component.setAttribute('tabindex',index);}return component;}}if(that.disabled||that.unfocusable){index=-1;}that.$.previousMonthButton=setHeaderElement(that.$.previousMonthButton,JQX.Button);that.$.nextMonthButton=setHeaderElement(that.$.nextMonthButton,JQX.Button);that.$.nextYearButton=setHeaderElement(that.$.nextYearButton,JQX.Button);that.$.previousYearButton=setHeaderElement(that.$.previousYearButton,JQX.Button);that.$.monthElement=setHeaderElement(that.$.monthElement,JQX.DropDownList);that.$.yearElement=setHeaderElement(that.$.yearElement,HTMLInputElement);if(that.viewSections.indexOf('title')>-1){that.$.dateContainer.setAttribute('tabindex',index);that.$.yearContainer.setAttribute('tabindex',index);}that.$.body.setAttribute('tabindex',index);that.calendarMode==='default'?that.$.dateElement.setAttribute('tabindex',index):that.$.dateElement.removeAttribute('tabindex');that.tabIndex=that.readonly&&!that.disabled?that.tabIndex>0?that.tabIndex:0:index;}/**
    * Checks for missing modules.
    */},{key:'navigate',/**
    * Navigates to a month forwards or backwards.
    * @param {number} step The step that will determine which month to navigate to. Negative step means future month. Positive step means past month.
    */value:function navigate(step){var that=this;step=parseInt(step);if(isNaN(step)||step===0){return false;}var navigationDate=that._getNextDate(step);if(!navigationDate){return false;}if(that.displayMode!=='month'){if(that.hasAnimation){that.$nextMonthsContainer.addClass('jqx-calendar-date-view-container');if(that.displayModeView==='list'){that._setDisplayModeContent(navigationDate);}else{if(!that._navigationDate||that._navigationDate.getTime()!==navigationDate.getTime()){that._animateNavigation(navigationDate,step);}}}else{that._setDisplayModeContent(navigationDate);}return true;}if(that.hasAnimation){that._animateNavigation(navigationDate,step);if(that.$nextMonthsContainer.hasClass('jqx-date-view-container')){that.$nextMonthsContainer.removeClass('jqx-date-view-container');}}else{that._handleMonths(navigationDate);//Update Header elements
that._refreshHeaderElements();that._refreshHeaderTitle();}return true;}/**
     * Selects a single date.
     * @param {any} date - Date object or a string representing a date.
     */},{key:'select',value:function select(date){var that=this;if(typeof that._viewDates[0]==='undefined'||that.selectionMode==='none'||!date){return;}date=that._getValidDate(date);if(!(date instanceof Date)){return;}if(that.selectionMode==='one'&&that.selectedDates.map(Number).indexOf(date.getTime())>-1){return;}if(date.getTime()<that.min.getTime()||date.getTime()>that.max.getTime()){return;}if(that.selectionMode==='one'||that.selectionMode==='default'||that.selectionMode==='zeroOrOne'){that._clearSelection(true);}that._selectDate(date);if(that.selectedDates.length===1&&!that._isDateInView(that.selectedDates[0])){that._handleMonths(that.selectedDates[0]);}}/**
    * Selects the current date(today)
    */},{key:'today',value:function today(){var that=this;var today=new Date();today.setHours(0,0,0,0);if(today.getTime()<that.min.getTime()||today.getTime()>that.max.getTime()){today=new Date(that.max);}else{that.selectedDates=[today];}that._handleMonths(today);return today;}/**
     * Animates the navigation between months
     */},{key:'_animateNavigation',value:function _animateNavigation(navigationDate,step,completeAnimation){var that=this;that._navigationDate=navigationDate;function scroll(){var endCondition=step>0?that.$.body[that._animationSettings.scrollSize]>=scrollMax:that.$.body[that._animationSettings.scrollSize]===0,coefficient=that._scrollStep/2;//oldvalue = 20, used to slow down the animation after half of it has passed
if(endCondition){that._animateNavigationCompleted();return;}if(step>0&&that.$.body[that._animationSettings.scrollSize]>scrollMax*that._animationSettings.easeThreshold){coefficient=Math.max(that.$.body[that._animationSettings.scrollSize]/that._animationSettings.stepEaseSize,Math.abs(coefficient-(scrollMax-that.$.body[that._animationSettings.scrollSize])*that._animationSettings.step));that._scrollStep=that._scrollStep*that._animationSettings.step+coefficient;}else if(step<0&&that.$.body[that._animationSettings.scrollSize]<scrollMax*that._animationSettings.easeThreshold){coefficient=Math.max(that.$.body[that._animationSettings.scrollMax]/that._animationSettings.stepEaseSize,Math.abs(coefficient-that.$.body[that._animationSettings.scrollSize]*that._animationSettings.step));that._scrollStep=that._scrollStep*that._animationSettings.step+coefficient;}that.$.body[that._animationSettings.scrollSize]+=step>0?that._scrollStep:-that._scrollStep;that._animationId=requestAnimationFrame(scroll);}if(!that._animationSettings){that._applyAnimationSettings();}//If the other animation was running, reset the elements
that.$animationPanel.addClass('jqx-hidden');that.$.dateViewContainer.style.transform='';that.$.dateViewContainer.style.opacity='';that.$.monthsContainer.style.transform='';that.$.monthsContainer.style.opacity='';var animationTarget=that.displayMode!=='month'?that.$.dateViewContainer:that.$.monthsContainer,scrollMax=that.$.body[that._animationSettings.scrollMax]-that.$.body[that._animationSettings.size];//that.$.monthsSeparator[that._animationSettings.size];
that._scrollStep=that.$.body[that._animationSettings.size]*that._animationSettings.startSpeed;//Start speed
that._animationStarted=true;if(that.displayMode!=='month'){that._setCellState(that._focusedCell,'focus',false);that._setDisplayModeContent(navigationDate,that.$.nextMonthsContainer);}else{that._handleMonths(navigationDate,that.$.nextMonthsContainer);}if(!completeAnimation){if(step>0){animationTarget.style.order=1;that.$.nextMonthsContainer.style.order=3;if(!that._animationStarted||that._animationStarted&&that.$.body[that._animationSettings.scrollSize]>that.$.body[that._animationSettings.scrollMax]*that._animationSettings.resetThreshold*2){that.$.body[that._animationSettings.scrollSize]=0;}}else{animationTarget.style.order=3;that.$.nextMonthsContainer.style.order=1;if(!that._animationStarted||that._animationStarted&&that.$.body[that._animationSettings.scrollSize]<that.$.body[that._animationSettings.scrollMax]*that._animationSettings.resetThreshold){that.$.body[that._animationSettings.scrollSize]=that.$.body[that._animationSettings.scrollMax];}}}cancelAnimationFrame(that._animationId);that._animationId=requestAnimationFrame(scroll);}/**
     * Cancels an undergoing animation and resets everything to normal
     */},{key:'_animateNavigationCompleted',value:function _animateNavigationCompleted(){var that=this;var animationTarget=that.displayMode!=='month'?that.$.dateViewContainer:that.$.monthsContainer,focusedDate=void 0,newCells=void 0,oldCells=void 0;cancelAnimationFrame(that._animationId);if(that.displayMode!=='month'){var focusedItemIndex=[].slice.call(animationTarget.children).indexOf(that._focusedCell);animationTarget.innerHTML=that.$.nextMonthsContainer.innerHTML;var focusedItem=animationTarget.children[focusedItemIndex],lastFocusableItem=void 0;newCells=animationTarget.children;oldCells=that.$.nextMonthsContainer.children;for(var _i346=0;_i346<newCells.length;_i346++){newCells[_i346].value=oldCells[_i346].value;newCells[_i346].restricted=oldCells[_i346].restricted;newCells[_i346].important=oldCells[_i346].important;newCells[_i346].otherMonth=oldCells[_i346].otherMonth;if(newCells[_i346].value.getTime()<=that.max.getTime()){lastFocusableItem=newCells[_i346];}}if(focusedItem&&focusedItem.value.getTime()>=that.max.getTime()){focusedDate=lastFocusableItem.value;}else{focusedDate=that._focusedCell?that._focusedCell.value:undefined;}}else{var newMonths=animationTarget.children,months=that.$.nextMonthsContainer.children;for(var _i347=0;_i347<newMonths.length;_i347++){newMonths[_i347]._date=months[_i347]._date;newMonths[_i347].innerHTML=months[_i347].innerHTML;newCells=that._getMonthCells(newMonths[_i347]);oldCells=that._getMonthCells(months[_i347]);for(var _i348=0;_i348<newCells.length;_i348++){newCells[_i348].value=oldCells[_i348].value;newCells[_i348].restricted=oldCells[_i348].restricted;newCells[_i348].important=oldCells[_i348].important;newCells[_i348].otherMonth=oldCells[_i348].otherMonth;}}//Synch _selectedCells
if(that._selectedCells.length>0){that._selectedCells=that._selectedCells.map(function(date){return date=that._getCellByDate(date.value);}).filter(function(date){return typeof date!=='undefined';});}}that._focusCell(that._getCellByDate(focusedDate));animationTarget.style.order=1;that.$.nextMonthsContainer.style.order=3;that.$.body[that._animationSettings.scrollSize]=0;that._animationStarted=false;delete that._navigationDate;}/**
     * Prepares the settings used for the animation
     * @param {any} displayModeChangeOnly - flag indicating if the change is only in the displayModeView
     */},{key:'_applyAnimationSettings',value:function _applyAnimationSettings(displayModeChangeOnly){var that=this;if(!that.hasAnimation){delete that._animationSettings;return;}that._animationSettings=that.animationSettings?that.animationSettings:that._animationSettings?that._animationSettings:{};//Settings for the scrolling direction
if(that.scrollButtonsNavigationMode==='portrait'){that._animationSettings.scrollMax='scrollHeight';that._animationSettings.size='offsetHeight';that._animationSettings.scrollSize='scrollTop';}else{that._animationSettings.scrollMax='scrollWidth';that._animationSettings.size='offsetWidth';that._animationSettings.scrollSize='scrollLeft';}if(displayModeChangeOnly){return;}//Starting speed
that._animationSettings.startSpeed=that._animationSettings.startSpeed?that._animationSettings.startSpeed:0.2;//The threshold where the easing effect begins
that._animationSettings.easeThreshold=that._animationSettings.easeThreshold?that._animationSettings.easeThreshold:0.5;//Animation step - determines the scroll interval between animation frames in perecentages
that._animationSettings.step=that._animationSettings.step?that._animationSettings.step:0.25;//Animation step ease size - additional ease step coefficient that kicks in when the threshold is passed
that._animationSettings.stepEaseSize=that._animationSettings.stepEaseSize?that._animationSettings.stepEaseSize:200;//Threshold used to determine if the animation should start over or continue from it's current state
that._animationSettings.resetThreshold=that._animationSettings.resetThreshold?that._animationSettings.resetThreshold:0.2;}/**
    * Apply selectionMode to reflect on the current selection.
    */},{key:'_applySelectionMode',value:function _applySelectionMode(initial){var that=this;var newDate=[],preventEvent=initial?true:false;switch(that.selectionMode){case'none':that._clearSelection(preventEvent);return;case'many':case'default':case'oneOrMany':if(that.selectedDates.length===0){newDate.push(new Date(Math.min(Math.max(that.min.getTime(),new Date().setHours(0,0,0,0)),that.max.getTime())));break;}return;case'one':if(that.selectedDates.length===1){return;}if(that.selectedDates.length>1){newDate.push(that.selectedDates[that.selectedDates.length-1]);that._clearSelection(preventEvent);}else{newDate.push(new Date(Math.min(Math.max(that.min.getTime(),new Date().setHours(0,0,0,0)),that.max.getTime())));}break;case'zeroOrOne':if(that.selectedDates.length>1){newDate.push(that.selectedDates[that.selectedDates.length-1]);that._clearSelection(preventEvent);break;}return;case'zeroOrMany':return;case'week':if(that.selectedDates.length>=1){var date=that.selectedDates[that.selectedDates.length-1];for(var _i349=0;_i349<8;_i349++){newDate.push(new Date(date));date.setDate(date.getDate()+1);}that._clearSelection(preventEvent);}break;}that.selectedDates=[];if(initial){that.selectedDates=newDate;return;}var newDates=newDate.length;for(var d=0;d<newDates;d++){that._selectDate(newDate[d],d<newDates-1);}}/**
    * Clears the currently selected dates.
    */},{key:'_clearSelection',value:function _clearSelection(eventPrevented){var that=this;if(that._selectedCells){that._selectedCells.map(function(cell){that._setCellState(cell,'selected',false);});}that.selectedDates=[];that._selectedCells=[];if(that.selectionMode==='many'){var months=that.$.monthsContainer.children;for(var m=0;m<months.length;m++){that._getMonthCells(months[m]).map(function(cell){that._setCellState(cell,'hover',false);});}}that._refreshFooter();//Update the hidden input
that.$.hiddenInput.value=that.selectedDates.toString();if(!eventPrevented){that.$.fireEvent('change',{'value':[]});}that._refreshTitle();}},{key:'_bodyBlurStateHandler',value:function _bodyBlurStateHandler(event){var that=this;that._bodyStateHandler(event);}},{key:'_bodyFocusStateHandler',value:function _bodyFocusStateHandler(event){var that=this;that._bodyStateHandler(event);}/**
    * body focus event handler.
    */},{key:'_bodyStateHandler',value:function _bodyStateHandler(event){var that=this;if(that._focusedCell){if(event.type==='blur'||event.type==='focus'&&that._noFocusingRequired){that._noFocusingRequired=false;that._setCellState(that._focusedCell,'focus',false);return;}if(that.displayMode!=='month'){if(event.type==='focus'&&!that.$.dateViewContainer.querySelector('jqx-calendar-cell[focus]')){that._setCellState(that._focusedCell||that.$.dateViewContainer.querySelector('.jqx-calendar-cell'),'focus',true);}return;}}if(event.type==='focus'){that._focusCell();}}/**
    * Container mouse wheel event handler.
    */},{key:'_containerWheelHandler',value:function _containerWheelHandler(event){var that=this;if(that.disabled||that.readonly){return;}var step=void 0,host=void 0,activeElement=void 0;activeElement=host=document.activeElement;if(that.enableShadowDOM){activeElement=that.shadowRoot.activeElement;if(activeElement){host=activeElement?that.shadowRoot.getRootNode().host:undefined;}else{activeElement=function(){var container=that.shadowRoot;while(container&&container.host){if(container.activeElement){return container.activeElement;}container=container.host.getRootNode();}}();host=activeElement?activeElement.closest('jqx-calendar'):undefined;}}// Header component
if(that.$.yearElement===activeElement){step=12;}if(host&&host.closest('jqx-calendar')===that){step=event.target===that.$.yearElement?12:1;}if(!step){return;}//Prevent window scrolling
event.preventDefault();step=step===12?step:step*that.months;event.deltaY>0?that.navigate(-step):that.navigate(step);}/**
    * Calendar down event handler.
    */},{key:'_downHandler',value:function _downHandler(event){var that=this;var target=event.originalEvent.target;that._dragStartDetails=undefined;if(that.disabled||that.readonly){return;}if(that.hasRippleAnimation){if(target.value instanceof Date||target.parentElement&&target.parentElement.classList.contains('jqx-calendar-title')||target.parentElement===that.$.dateElement){JQX.Utilities.Animation.Ripple.animate(target,event.pageX,event.pageY);}}target=event.originalEvent.target.closest('.jqx-calendar-header');if(event.originalEvent.target.closest('.jqx-calendar-year-container')&&that.displayMode!=='decade'){if(that.calendarMode==='classic'){return;}that._showDateView('year');return;}if(event.originalEvent.target.closest('.jqx-calendar-date-container')&&that.displayMode!=='month'){if(that.calendarMode==='classic'){return;}that._displayModeHandler(that.displayModeView==='list'?that.$.listViewContainer.getItem(that.$.listViewContainer.selectedValues[0]):that._focusedCell,'month');return;}if(that._animationStarted){that._animateNavigationCompleted();}if(JQX.Utilities.Core.isMobile&&!(target&&target===that.$.header)){that._dragStartDetails={x:event.pageX,y:event.pageY,startTime:Date.now(),target:event.originalEvent.target};return;}target=event.originalEvent.target;if(target.closest('.jqx-calendar-week')||target.parentElement===that.$.dateViewContainer){while(target&&!(target.value instanceof Date)){target=target.parentElement;}if(target){that.displayMode!=='month'?that._displayModeHandler(target):that._weeksDownHandler(event,target);}return;}if(target.closest('.jqx-calendar-month-element')){return;}event.originalEvent.stopPropagation();if(that.displayModeView==='list'&&that.displayMode!=='month'){target=(that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target).closest('jqx-list-item');if(target){that._displayModeHandler(target);}return;}//Prevent window scrolling
var scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop;that.focus();//Prevent window scrolling
window.scrollTo(x,y);}/**
     * Handles the dateViewSelection panels on caledarItem click
     * @param {any} target
     */},{key:'_displayModeHandler',value:function _displayModeHandler(target,newDisplayMode){var that=this;if(that._animationStarted){that._animateNavigationCompleted();}if(target instanceof HTMLElement&&target.parentElement.classList.contains('jqx-calendar-week')&&target.otherMonth){if(that.displayMode==='decade'&&(target.value.getFullYear()<that.min.getFullYear()||target.value.getFullYear()>that.max.getFullYear())){return;}else if(that.displayMode==='year'&&(target.value.getFullYear()<that.min.getFullYear()||target.value.getFullYear()===that.min.getFullYear()&&target.value.getMonth()<that.min.getMonth()||target.value.getFullYear()>that.max.getFullYear()||target.value.getFullYear()===that.max.getFullYear()&&target.value.getMonth()>that.max.getMonth())){return;}}newDisplayMode=newDisplayMode?newDisplayMode:that.displayMode;switch(newDisplayMode){case'year':newDisplayMode='month';break;case'decade':newDisplayMode='year';break;}if(that.displayMode===newDisplayMode){return;}var isDisplayModeCHangeEventPrevented=that.$.fireEvent('displayModeChanging',{'oldDisplayMode':that.displayMode,'newDisplayMode':newDisplayMode}).defaultPrevented;if(isDisplayModeCHangeEventPrevented){return;}that.displayMode=newDisplayMode;that.$nextMonthsContainer.removeClass('jqx-calendar-date-view-container');if(target.parentElement===that.$.dateViewContainer&&!target.disabled&&!target.restricted){that._focusCell(target);}if(that.hasAnimation){if(target instanceof JQX.ListItem||target.ownerListBox===that.$.listViewContainer){if(target.offsetHeight){that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.dataItem.top>0?target.offsetTop-target.offsetHeight/2:target.offsetTop+target.offsetHeight/2)+'px';}else{that.$.animationPanel.style.transformOrigin=that.$.listViewContainer.offsetLeft+that.$.listViewContainer.offsetWidth/2+'px '+(that.$.listViewContainer.offsetTop+that.$.listViewContainer.offsetHeight/2)+'px';}}else{target=that._focusedCell;//there should always be a focused item
that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.offsetTop+target.offsetHeight/2)+'px';}that._animateView(1,target);}else{that._setDisplayModeContent(target.value instanceof Date?target.value:new Date(target.value));}}/**
     * Animate the dateViewContainer
     * @param {any} direction
     * @param {any} target
     */},{key:'_animateView',value:function _animateView(direction,target){var that=this;var date=target instanceof Date?target:new Date(target.value),endCondition=false,scale=1,opacity=1,animationTarget=void 0,backgroundContainer=void 0;if(that.displayModeView==='list'){animationTarget=target instanceof JQX.ListItem||target.ownerListBox===that.$.listViewContainer?that.$.listViewContainer:that.displayMode!=='month'?that.$.monthsContainer:that.$.listViewContainer;backgroundContainer=that.displayMode==='month'?that.$.monthsContainer:that.$.listViewContainer;}//else if (!(target instanceof JQX.cell)) {
else if(!(target.value instanceof Date)){target=that._focusedCell?that._focusedCell:that._selectedCells.length>0?that._selectedCells[that._selectedCells.length-1]:that._getCellByDate(new Date());}if(!animationTarget){animationTarget=target.parentElement===that.$.dateViewContainer?that.$.dateViewContainer:that.$.monthsContainer;}if(!backgroundContainer){backgroundContainer=that.displayMode==='month'?that.$.monthsContainer:that.$.dateViewContainer;}backgroundContainer.style.transformOrigin=that.$.animationPanel.style.transformOrigin;if(animationTarget instanceof JQX.ListBox){that.$.animationPanel.innerHTML='';that.$.animationPanel.appendChild(animationTarget.cloneNode(false));while(animationTarget.$.itemsInnerContainer.firstElementChild){that.$.animationPanel.children[0].appendChild(animationTarget.$.itemsInnerContainer.firstElementChild);}}else{that.$.animationPanel.innerHTML=animationTarget.innerHTML;}that._setDisplayModeContent(date);that.$.animationPanel.style.width=that.$.body.offsetWidth+'px';that.$.animationPanel.style.height=that.$.body.offsetHeight+'px';that.$.animationPanel.style.transform='scale(1)';that.$.animationPanel.style.opacity=1;that.$animationPanel.removeClass('jqx-hidden');backgroundContainer.style.opacity='0';backgroundContainer.style.transform='scale(3.5)';//Use the style of the dateViewContainer
if(animationTarget.$.hasClass('jqx-calendar-date-view-container')){that.$animationPanel.addClass('jqx-calendar-date-view-container');}else{that.$animationPanel.removeClass('jqx-calendar-date-view-container');}// Refresh the scrollBars and ensure item is visible after the new view has been loaded
if(animationTarget instanceof JQX.ListBox){var listBox=that.$.animationPanel.children[0];listBox.whenReady(function(){listBox._refreshLayout();listBox.ensureVisible(listBox.selectedValues[0]);});}function animate(){if(direction>0&&scale>=3.5||direction<0&&scale<=0){endCondition=true;}if(endCondition){cancelAnimationFrame(that._animationId);that.$animationPanel.addClass('jqx-hidden');that.$.animationPanel.style.transform='';that.$.animationPanel.style.opacity='';backgroundContainer.style.transform='';backgroundContainer.style.opacity='';//that._animationStarted = false;
if(that.displayMode==='month'){that.$.body.focus();}else if(that.displayModeView==='list'){that.focus();}return;}that.$.animationPanel.style.opacity=opacity;backgroundContainer.style.opacity=1-opacity;opacity-=0.05;if(direction>0){that.$.animationPanel.style.transform='scale('+scale+')';backgroundContainer.style.transform='scale('+Math.min((scale-1)/2,1)+')';scale+=0.125;}else{that.$.animationPanel.style.transform='scale('+Math.max(scale,0)+')';backgroundContainer.style.transform='scale('+Math.max(1+scale,1)+')';scale-=0.06;}that._animationId=requestAnimationFrame(animate);}cancelAnimationFrame(that._animationId);that._animationId=requestAnimationFrame(animate);//that._animationStarted = true;
}/**
     * Document up handler
     * @param {any} event
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;if(!JQX.Utilities.Core.isMobile||!that._dragStartDetails){return;}var timeNow=Date.now();var target=event.originalEvent.target,dragging={};if(that.scrollButtonsNavigationMode==='portrait'){dragging.coordinate='y';dragging.direction='pageY';}else{dragging.coordinate='x';dragging.direction='pageX';}if(Math.abs(that._dragStartDetails[dragging.coordinate]-event[dragging.direction])<=10){target=that.displayModeView==='list'&&that.displayMode!=='month'?target.closest('jqx-list-item'):target;if(!target){that._dragStartDetails=undefined;return;}if(that.displayMode!=='month'){that._displayModeHandler(target);//Reset scrolling if any occured
that.scrollButtonsNavigationMode==='portrait'?that.$.body.scrollTop=0:that.$.body.scrollLeft=0;that._dragStartDetails=undefined;return;}that._weeksDownHandler(event,target);if(!that.disableAutoNavigation&&target.otherMonth){return;}}else{var speed=Math.abs((event[dragging.direction]-that._dragStartDetails[dragging.coordinate])/(timeNow-that._dragStartDetails.startTime));if(speed>1){var steps=parseInt(speed);//Determine the animation iterations
for(var _i350=0;_i350<steps;_i350++){that.navigate(that._dragStartDetails.step);}that._dragStartDetails=undefined;return;}}if(!that.hasAnimation){that._dragStartDetails=undefined;return;}var scrollMax=(that.displayMode!=='month'?that.$.dateViewContainer[that._animationSettings.scrollMax]:that.$.monthsContainer[that._animationSettings.scrollMax])+that.$.monthsSeparator[that._animationSettings.size];if(that._dragStartDetails.step>0&&that.$.body[that._animationSettings.scrollSize]>scrollMax*that._animationSettings.easeThreshold||that._dragStartDetails.step<0&&that.$.body[that._animationSettings.scrollSize]<scrollMax*that._animationSettings.easeThreshold){that._animateNavigation(that._dragStartDetails.navigationDate,that._dragStartDetails.step,true);that._dragStartDetails=undefined;return;}//Resets the touch scrolling to normal
that._animateMonthRepositioning(undefined,that._dragStartDetails.step);that._dragStartDetails=undefined;}/**
     * Returns the month to its starting/ending position on touchUp.
     * @param {any} navigationDate - Date to navigate to
     * @param {any} step - animation step
     */},{key:'_animateMonthRepositioning',value:function _animateMonthRepositioning(navigationDate,step){var that=this,animationTarget=that.displayMode!=='month'?that.$.dateViewContainer:that.$.monthsContainer;function scroll(){var endCondition=step<0?that.$.body[that._animationSettings.scrollSize]>=scrollMax:that.$.body[that._animationSettings.scrollSize]===0,coefficient=that._scrollStep/2;//Used to slow down the animation after half of it has passed
if(endCondition){cancelAnimationFrame(that._animationId);animationTarget.style.order=1;that.$.nextMonthsContainer.style.order=3;that.$.body[that._animationSettings.scrollSize]=0;that._animationStarted=false;return;}if(step>0){coefficient=Math.max(that.$.body[that._animationSettings.scrollMax]/that._animationSettings.stepEaseSize,Math.abs(coefficient-that.$.body[that._animationSettings.scrollSize]*that._animationSettings.step));that._scrollStep=that._scrollStep*that._animationSettings.step+coefficient;}else{coefficient=Math.max(that.$.body[that._animationSettings.scrollMax]/that._animationSettings.stepEaseSize,Math.abs(coefficient-(scrollMax-that.$.body[that._animationSettings.scrollSize])*that._animationSettings.step));that._scrollStep=that._scrollStep*that._animationSettings.step+coefficient;}that.$.body[that._animationSettings.scrollSize]+=step<0?that._scrollStep:-that._scrollStep;that._animationId=requestAnimationFrame(scroll);}if(!that._animationSettings){that._applyAnimationSettings();}var scrollMax=animationTarget[that._animationSettings.scrollMax]+that.$.monthsSeparator[that._animationSettings.size];that._scrollStep=that.$.body[that._animationSettings.size]*that._animationSettings.startSpeed;//Start speed
cancelAnimationFrame(that._animationId);that._animationId=requestAnimationFrame(scroll);that._animationStarted=true;}/**
    * Focuses a Calendar day.
    */},{key:'_focusCell',value:function _focusCell(cell){var that=this;if(that._focusedCell){that._setCellState(that._focusedCell,'focus',false);}if(that.disabled||that.readonly){return;}if(cell){if(that.displayMode!=='month'){that._setCellState(cell,'focus',true);that._focusedCell=cell;return;}if(cell.disabled||cell.restricted){return;}that._setCellState(cell,'focus',true);that._focusedCell=cell;that._updateWeeksVisibility();return;}if(that.displayMode!=='month'&&that.$.monthsContainer.offsetHeight===0){return;}if(that._selectedCells.length>0){var lastSelectedCell=that._selectedCells[that._selectedCells.length-1];that._setCellState(lastSelectedCell,'focus',true);that._focusedCell=lastSelectedCell;}else{var months=that.$.monthsContainer.children;if(that.min.getTime<months[0]._date.getTime()){return;}var monthCells=that._getMonthCells(months[0],that.rightToLeft);for(var d=0;d<monthCells.length;d++){var _cell9=monthCells[d];if(!_cell9.otherMonth){if(_cell9.disabled||_cell9.restricted){continue;}that._focusedCell=_cell9;break;}}}if(that._focusedCell){that._setCellState(that._focusedCell,'focus',true);that._updateWeeksVisibility();}}/**
    * Returns the selected days for a given month.
    */},{key:'_getDays',value:function _getDays(date,datePool){var datesCount=datePool.length;var days=[];if(datesCount>0){for(var d=0;d<datesCount;d++){if(datePool[d].getFullYear()===date.getFullYear()&&datePool[d].getMonth()===date.getMonth()){days.push(datePool[d].getDate());}}}return days;}/**
    * Get the Calendar Date instance based on day number.
    */},{key:'_getCellByDate',value:function _getCellByDate(date,monthContainer){var that=this;if(!(date instanceof Date)){return;}if(!monthContainer){monthContainer=that.$.monthsContainer;}if(that.displayMode!=='month'){if(that.displayModeView==='list'){return;}var items=arguments[1]?that.$.nextMonthsContainer.children:that.$.dateViewContainer.children;for(var _i351=0;_i351<items.length;_i351++){if(that.displayMode==='year'){if(items[_i351].value.getMonth()===date.getMonth()){return items[_i351];}continue;}else if(items[_i351].value.getFullYear()===date.getFullYear()){return items[_i351];}}return;}var ownerMonth=void 0,monthCells=void 0,months=monthContainer.children;for(var _i352=0;_i352<months.length;_i352++){if(date.getFullYear()===months[_i352]._date.getFullYear()&&date.getMonth()===months[_i352]._date.getMonth()){ownerMonth=months[_i352];break;}}if(!ownerMonth){return;}monthCells=that._getMonthCells(ownerMonth);for(var _i353=0;_i353<monthCells.length;_i353++){if(monthCells[_i353].otherMonth&&!monthCells[_i353].hover){continue;}if(monthCells[_i353].value.getMonth()===date.getMonth()&&monthCells[_i353].value.getDate()===date.getDate()){return monthCells[_i353];}}}/**
    * Returns the HTML elements for the days in a month.
    */},{key:'_getMonthCells',value:function _getMonthCells(month,rightToLeft){var weeks=month.getElementsByClassName('jqx-calendar-week');var days=[];//Get days instances.
if(rightToLeft){for(var w=0;w<weeks.length;w++){var weekDays=weeks[w].children;for(var d=weekDays.length-1;d>0;d--){days.push(weekDays[d]);}}}else{for(var _w=0;_w<weeks.length;_w++){var _weekDays=weeks[_w].children;for(var _d=1;_d<_weekDays.length;_d++){days.push(_weekDays[_d]);}}}return days;}/**
    * Returns the number of the week.
    */},{key:'_getWeekNumber',value:function _getWeekNumber(date){//date = new Date(date.getTime());
var that=this;var newYear=new Date(date.getFullYear(),0,1),dayNumber=Math.round((date.getTime()-newYear.getTime()-(date.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000)+1,day=newYear.getDay()-that.firstDayOfWeek,//the day of week the year begins on
weeknum=void 0;day=day>=0?day:day+7;//if the year starts before the middle of a week
if(day<4){weeknum=Math.floor((dayNumber+day-1)/7)+1;if(weeknum>52){newYear=new Date(date.getFullYear()+1,0,1);day=newYear.getDay()-that.firstDayOfWeek;day=day>=0?day:day+7;//if the next year starts before the middle of the week, it is week #1 of that year
weeknum=day<4?1:53;}}else{weeknum=Math.round((dayNumber+day-1)/7);}return weeknum;}/**
     * Handle the date selection according to the selectionMode.
     */},{key:'_handleDateSelection',value:function _handleDateSelection(cell){var that=this;if(typeof cell==='undefined'||cell.disabled||cell.restricted){return;}function selectMultipleDates(firstSelectedDate,date){that._clearSelection(true);if(firstSelectedDate.getTime()<date.value.getTime()){while(firstSelectedDate.getTime()<=date.value.getTime()){that._selectDate(firstSelectedDate,true);firstSelectedDate.setDate(firstSelectedDate.getDate()+1);}}else if(firstSelectedDate.getTime()>date.value.getTime()){while(firstSelectedDate.getTime()>=date.value.getTime()){that._selectDate(firstSelectedDate,true);firstSelectedDate.setDate(firstSelectedDate.getDate()-1);}}else{that._selectDate(date,true);}//Update the hidden input
that.$.hiddenInput.value=that.selectedDates.toString();that._refreshFooter();that.$.fireEvent('change',{'value':that.selectedDates});that._refreshTitle();}switch(that.selectionMode){case'none':that._focusCell(cell);break;case'one':case'default':if(that._keysPressed['Control']){if(that.selectedDates.length>1||that.selectedDates.length===1&&!cell.selected){that._selectDate(cell.value);return;}that._focusCell(cell);return;}if(that._keysPressed['Shift']){selectMultipleDates(new Date(that.selectedDates[0]),cell);return;}that._clearSelection(true);that._selectDate(cell.value,that._selectedCells.indexOf(cell.value)>-1?true:false);break;case'many':{if(that.selectedDates.length===0){that._selectDate(cell.value);return;}var lastSelectedDate=that.selectedDates[that.selectedDates.length-1];var firstSelectedDate=new Date(that.selectedDates[0]);if(cell.value.getTime()===firstSelectedDate.getTime()||cell.value.getTime()===lastSelectedDate.getTime()){that._clearSelection();that._focusCell(cell);return;}if(that.selectedDates.length>0){selectMultipleDates(firstSelectedDate,cell);}break;}case'zeroOrMany':that._selectDate(cell.value);break;case'oneOrMany':if(that.selectedDates.length===1&&cell.selected){that._focusCell(cell);return;}that._selectDate(cell.value);break;case'zeroOrOne':if(that.selectedDates.length===1&&cell.selected){that._selectDate(cell.value);return;}that._clearSelection(true);that._selectDate(cell.value);break;case'week':{if(cell.selected&&(cell.value.getTime()===that.selectedDates[0].getTime()||cell.value.getTime()===that.selectedDates[that.selectedDates.length-1].getTime())){that._clearSelection();that._focusCell(cell);return;}that._clearSelection(true);var date=new Date(cell.value);that._selectDate(date);for(var _i354=1;_i354<8;_i354++){date.setDate(date.getDate()+1,_i354<7);that._selectDate(date);}if(!that._isDateInView(date)){that.navigate(1);}break;}}}/**
    * Set's the Template for Important days.
    */},{key:'_handleImportantDateTemplate',value:function _handleImportantDateTemplate(){var that=this;that._importantDatesTemplate=that._validateTemplate('importantDatesTemplate',that.importantDatesTemplate);if(!that._importantDatesTemplate||!that._importantDatesTemplate.content){return;}var content=that._importantDatesTemplate.content;var childrenCount=content.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0;that._bindingDetails=[];for(var _i355=0;_i355<childrenCount;_i355++){bindingString=regex.exec(content.childNodes[_i355].innerHTML);if(bindingString){that._bindingDetails.push({childNodeIndex:_i355,bindingString:bindingString[0]});return;}}}/**
    * Set's the Template for the footer/header.
    */},{key:'_handleLayoutTemplate',value:function _handleLayoutTemplate(selector,newTemplate){var that=this,template=that._validateTemplate(selector.$.hasClass('jqx-header')?'headerTemplate':selector.$.hasClass('jqx-calendar-footer')?'footerTemplate':'titleTemplate',newTemplate);if(!template||!template.content){if(typeof newTemplate==='function'){newTemplate(selector,{});}return;}if(!that._layoutTemplates){that._layoutTemplates=[];}var clone=document.importNode(template.content,true);selector.innerHTML='';var childrenCount=clone.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0,bindings=[];for(var _i356=0;_i356<childrenCount;_i356++){bindingString=regex.exec(clone.childNodes[_i356].innerHTML);if(bindingString){bindings.push({childNodeIndex:_i356,bindingString:bindingString[0]});}}that._layoutTemplates=that._layoutTemplates.filter(function(template){return template.selector!==selector;});that._layoutTemplates.push({selector:selector,template:template,bindings:bindings});if(that.enableShadowDOM){selector.innerHTML='<slot></slot>';that.appendChild(clone);return;}selector.appendChild(clone);}/**
    * Handles the hover state of the Calendar items
    */},{key:'_handleCalendarCellHover',value:function _handleCalendarCellHover(event,cell){var that=this;if(that._animationStarted){return;}if(that.displayMode==='month'){if(event.type==='mouseover'&&that.selectionMode==='many'&&that.selectedDates.length>0){var months=that.$.monthsContainer.children;for(var m=0;m<months.length;m++){that._getMonthCells(months[m]).map(function(cell){that._setCellState(cell,'hover',false);});}var firstSelectedDate=new Date(that.selectedDates[0]),targetDate=new Date(cell.value),targetCell=cell;var nextCoeff=firstSelectedDate.getTime()>targetDate.getTime()?-1:1,hoverCell=function hoverCell(){targetCell=that._getCellByDate(firstSelectedDate,that.$.monthsContainer);if(targetCell&&!targetCell.selected&&!targetCell.restricted){that._setCellState(targetCell,'hover',true);}};if(firstSelectedDate.getTime()!==targetDate.getTime()){firstSelectedDate.setDate(firstSelectedDate.getDate()+nextCoeff);while(firstSelectedDate.getTime()!==targetDate.getTime()){hoverCell();firstSelectedDate.setDate(firstSelectedDate.getDate()+nextCoeff);}hoverCell();}}else{that._setCellState(cell,'hover',false);}}if(event.type==='mouseover'&&!cell.otherMonth){that._setCellState(cell,'hover',true);}else{that._setCellState(cell,'hover',false);}}/**
     * Handles the number of months to be drawn.
     */},{key:'_handleMonths',value:function _handleMonths(date,monthsContainer){var that=this;var months=void 0;if(!date){date=that._viewDates&&that._viewDates.length>0?that._viewDates[0]:new Date();}date=new Date(Math.min(Math.max(that.min.getTime(),date.getTime()),that.max.getTime()));if(!monthsContainer){monthsContainer=that.$.monthsContainer;}function initializeMonths(monthsContainer){var nextMonth=void 0,count=monthsContainer.children.length,fragment=document.createDocumentFragment();for(count;count<that.months;count++){nextMonth=that.$.month.cloneNode(false);nextMonth.innerHTML=that.$.month.innerHTML;fragment.appendChild(nextMonth);}return fragment;}function populateMonths(monthsContainer){var months=monthsContainer.children;for(var _i357=0;_i357<months.length;_i357++){that._setMonth(date,months[_i357]);date.setMonth(date.getMonth()+1);}that._setWeeksVisibility(monthsContainer);//Update the Header elements
that._refreshHeaderElements();that._refreshHeaderTitle();if(that.tooltip){that.$.tooltip.close();}if(that.$.body===document.activeElement){that._focusCell();}}that._selectedCells=[];if(that.hasAnimation){months=that.$.nextMonthsContainer.children;if(months.length>0&&months[0].value instanceof Date){that.$.nextMonthsContainer.innerHTML='';}// FF v57/EDGE bug fix using that.$.monthsContainer.childElementCount. Scoping problem with FF and EDGE.
while(that.$.nextMonthsContainer.childElementCount<that.months){//if (months.length < that.months) {
that.$.nextMonthsContainer.appendChild(initializeMonths(that.$.nextMonthsContainer));}// FF v57/EDGE bug fix using that.$.monthsContainer.childElementCount. Scoping problem with FF and EDGE.
while(that.$.nextMonthsContainer.childElementCount>that.months){//while (months.length > that.months) {
that.$.nextMonthsContainer.removeChild(months[that.$.nextMonthsContainer.childElementCount-1]);}if(arguments[1]===that.$.nextMonthsContainer){populateMonths(that.$.nextMonthsContainer);return;}}months=that.$.monthsContainer.children;if(months.length>that.months){// FF v57/EDGE bug fix using that.$.monthsContainer.childElementCount. Scoping problem with FF and EDGE.
while(that.$.monthsContainer.childElementCount>that.months){that.$.monthsContainer.removeChild(months[that.$.monthsContainer.childElementCount-1]);that._viewDates.pop();}populateMonths(that.$.monthsContainer);return;}if(that.$.monthsContainer.children.length===that.months){populateMonths(that.$.monthsContainer);return;}that._viewDates=[];that.$.monthsContainer.appendChild(initializeMonths(that.$.monthsContainer));populateMonths(that.$.monthsContainer);}/**
    * Header change handler.
    */},{key:'_headerChangeHandler',value:function _headerChangeHandler(event){var that=this;event.stopPropagation();if(that.disabled||that.readonly){return;}if(event.target.ownerElement===that.$.monthElement&&that._changeEventFired!==0){that._changeEventFired--;return;}//Header elements
if(event.target===that.$.yearElement){that._viewDates[0].setFullYear(Math.min(Math.max(that.min.getFullYear(),isNaN(parseInt(that.$.yearElement.value))?0:parseInt(that.$.yearElement.value)),that.max.getFullYear()));that._handleMonths(that._viewDates[0]);}if(that.$.monthElement&&(event.target===that.$.monthElement||event.target.ownerElement===that.$.monthElement)){that._handleMonths(new Date(that.$.monthsContainer.children[0]._date.getFullYear(),that.$.monthElement.selectedIndexes[0],1));}}/**
    * Header click handler.
    */},{key:'_headerClickHandler',value:function _headerClickHandler(event){var that=this;if(that.disabled||that.readonly){return;}var target=event.target.closest('jqx-repeat-button');if(target&&target.disabled){return;}//Header elements
switch(target){case that.$.previousMonthButton:that._isInteractiveNavigation=true;that.navigate(-1*that.months);return;case that.$.nextMonthButton:that._isInteractiveNavigation=true;that.navigate(1*that.months);return;case that.$.previousYearButton:that.navigate(-12);return;case that.$.nextYearButton:that.navigate(12);return;}if(that.calendarMode==='classic'){that.displayMode='month';return;}if(event.target.closest('.jqx-calendar-date-element')){if(that._animationStarted){that._animateNavigationCompleted();}that._isInteractiveNavigation=true;that._showDateView();}}/**
     * Sets the displayMode
     */},{key:'_setDisplayMode',value:function _setDisplayMode(oldValue,newValue,animationTarget){var that=this;that.$nextMonthsContainer.removeClass('jqx-calendar-date-view-container');if(arguments.length===0||!that.hasAnimation){if(that.calendarMode==='classic'){that.displayMode='month';return;}if(that.displayMode!=='month'){that.$monthsContainer.addClass('jqx-hidden');if(that.$dateViewContainer.hasClass('jqx-hidden')){that.$dateViewContainer.removeClass('jqx-hidden');}}if(!that.isCompleted&&that.displayMode==='month'){return;}that._setDisplayModeContent();return;}if(that._animationStarted){that.displayMode=oldValue;that._animateNavigationCompleted();that.displayMode=newValue;}if(oldValue==='month'&&newValue==='year'||oldValue==='year'&&newValue==='decade'){that.displayMode=oldValue;that._showDateView(animationTarget?undefined:that.displayMode);}else if(oldValue==='month'&&newValue==='decade'){that._showDateView(that.displayMode='year');}else{var target=void 0;if(that.displayModeView==='list'){// used because _focusedItem is not a JQX.ListItem but a plain Object 
target=(that.$.listViewContainer.enableShadowDOM?that.$.listViewContainer.shadowRoot:that.$.listViewContainer).querySelector('jqx-list-item[selected]');that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.dataItem.top>0?target.offsetTop-target.offsetHeight/2:target.offsetTop+target.offsetHeight/2)+'px';}else{target=that._focusedCell;//there should always be a focused item
that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.offsetTop+target.offsetHeight/2)+'px';}that._animateView(1,target);}}/**
     * Set the content of the default dispalyMode date selection view
     * @param {any} newDate
     */},{key:'_setDisplayModeContent',value:function _setDisplayModeContent(newDate,nextDateViewContainer){var that=this;var selectedDate=!newDate||newDate.toString()==='Invalid Date'?that.selectedDates.length>0?that.selectedDates[that.selectedDates.length-1]:new Date():newDate;selectedDate.setTime(Math.min(Math.max(selectedDate.getTime(),that.min.getTime()),that.max.getTime()));selectedDate.setHours(0,0,0,0);var viewDetails=that._prepareView(selectedDate);if(!viewDetails){return;}var dateViewContainer=void 0;if(nextDateViewContainer){that.$.nextMonthsContainer.innerHTML=that.$.dateViewContainer.innerHTML;dateViewContainer=that.$.nextMonthsContainer;}else{dateViewContainer=that.$.dateViewContainer;}var cells=dateViewContainer.children;var selectedCell=void 0;for(var _i358=0;_i358<cells.length;_i358++){var cell=cells[_i358];cell.innerHTML=viewDetails.viewContent[_i358];cell.value=viewDetails.dates[_i358];if(that.displayMode==='year'){if(cell.value.getFullYear()<that.min.getFullYear()||cell.value.getFullYear()===that.min.getFullYear()&&cell.value.getMonth()<that.min.getMonth()||cell.value.getFullYear()>that.max.getFullYear()||cell.value.getFullYear()===that.max.getFullYear()&&cell.value.getMonth()>that.max.getMonth()){that._setCellState(cell,'otherMonth',true);}else{that._setCellState(cell,'otherMonth',false);}if(selectedDate.getFullYear()===cell.value.getFullYear()&&selectedDate.getMonth()===cell.value.getMonth()){selectedCell=cell;}}else if(that.displayMode==='decade'){if(_i358===0||_i358===cells.length-1||cell.value.getFullYear()<that.min.getFullYear()||cell.value.getFullYear()>that.max.getFullYear()){that._setCellState(cell,'otherMonth',true);}else{that._setCellState(cell,'otherMonth',false);}if(selectedDate.getFullYear()===cell.value.getFullYear()){selectedCell=cell;}}that._setCellState(cell,'hover',false);}if(selectedCell.otherMonth){for(var _i359=0;_i359<cells.length;_i359++){if(!cells[_i359].otherMonth){selectedCell=cells[_i359];break;}}}if(that._focusedCell){that._setCellState(that._focusedCell,'focus',false);}that._focusedCell=selectedCell;that._focusCell(that._focusedCell);that._refreshHeaderTitle();that._refreshHeaderElements();that.$.fireEvent('displayModeChange');if(that._isInteractiveNavigation){that._isInteractiveNavigation=undefined;return;}that._setCellState(selectedCell,'focus',true);//Need to be called after the new content is loaded completely
setTimeout(function(){that.$.body.focus();that._focusCell(that._focusedCell);},0);}/**
     * Prepare the data for table displayMode view
     * @param {any} selectedDate
     */},{key:'_prepareView',value:function _prepareView(selectedDate){var that=this;var viewContent=[],dates=[],startYear=void 0,offset=void 0;function getValidDate(year,month,day){var date=new Date(year,month+1,0),daysInMonth=date.getDate();day>daysInMonth?date.setDate(daysInMonth):date.setDate(day);return date;}if(that.displayMode==='month'){if(that.$nextMonthsContainer.hasClass('jqx-date-view-container')){that.$nextMonthsContainer.removeClass('jqx-date-view-container');}that.$listViewContainer.addClass('jqx-hidden');if(that.$dateViewContainer.hasClass('jqx-visibility-hidden')){that.$dateViewContainer.removeClass('jqx-visibility-hidden');}if(!that._isDateInView(selectedDate)){that._handleMonths(selectedDate);}if(that.$header.hasClass('jqx-hidden')){that.$header.removeClass('jqx-hidden');}if(that.$body.hasClass('jqx-calendar-list-view')){that.$body.removeClass('jqx-calendar-list-view');}that.$dateContainer.addClass('jqx-calendar-selected');that.$yearContainer.removeClass('jqx-calendar-selected');that.$dateViewContainer.addClass('jqx-hidden');that.$monthsContainer.removeClass('jqx-hidden');that._refreshHeaderTitle();that.$.body.setAttribute('tabindex',that.tabIndex>0?that.tabIndex:0);that._refreshHeaderElements();that.$.body.focus();that._focusCell(that._getCellByDate(selectedDate));that.$.fireEvent('displayModeChange');return;}if(that.displayModeView==='list'){that._setDisplayModeListContent(selectedDate);that.$.fireEvent('displayModeChange');return;}if(that.$header.hasClass('jqx-hidden')){that.$header.removeClass('jqx-hidden');}if(that.$dateViewContainer.hasClass('jqx-visibility-hidden')){that.$dateViewContainer.removeClass('jqx-visibility-hidden');}that.$listViewContainer.addClass('jqx-hidden');that.$.body.setAttribute('tabindex',that.tabIndex>0?that.tabIndex:0);if(that.displayMode==='year'){var tempDate=new Date();for(var _i360=0;_i360<12;_i360++){tempDate=getValidDate(tempDate.getFullYear(),_i360,tempDate.getDate());viewContent.push(tempDate.toLocaleDateString(that.locale,{month:'short'}));dates.push(getValidDate(selectedDate.getFullYear(),_i360,selectedDate.getDate()));}}else{startYear=selectedDate?selectedDate.getFullYear():that._viewDates[0].getFullYear(),offset=startYear%10;if(offset!==0){startYear-=offset;}startYear-=1;for(var _i361=0;_i361<12;_i361++){viewContent.push(startYear+'');dates.push(new Date(startYear,selectedDate.getMonth(),selectedDate.getDate()));++startYear;}}return{viewContent:viewContent,dates:dates};}/**
     * Prepare the list DisplayMode view with data
     * @param {any} selectedDate
     */},{key:'_setDisplayModeListContent',value:function _setDisplayModeListContent(selectedDate){var that=this;var dataSource=[];function getValidDate(year,month,day){var date=new Date(year,month+1,0),daysInMonth=date.getDate();day>daysInMonth?date.setDate(daysInMonth):date.setDate(day);return date;}that.$dateViewContainer.addClass('jqx-visibility-hidden');if(that.$listViewContainer.hasClass('jqx-hidden')){that.$body.addClass('jqx-calendar-list-view');that.$listViewContainer.removeClass('jqx-hidden');that.$.listViewContainer._setFocusable();that.$.body.removeAttribute('tabindex');}if(that.displayMode==='year'){var tempDate=new Date();for(var _i362=0;_i362<12;_i362++){tempDate=getValidDate(tempDate.getFullYear(),_i362,tempDate.getDate());dataSource.push({label:tempDate.toLocaleDateString(that.locale,{month:'short'}),value:getValidDate(selectedDate.getFullYear(),_i362,selectedDate.getDate()).toDateString()});}that.$yearContainer.removeClass('jqx-calendar-selected');that.$dateContainer.addClass('jqx-calendar-selected');}else{var startYear=that.min.getFullYear(),endYear=that.max.getFullYear();endYear=Math.min(that.max.getFullYear(),selectedDate.getFullYear()+10);startYear=Math.max(that.min.getFullYear(),endYear-10);for(var _i363=startYear;_i363<endYear;_i363++){dataSource.push({label:_i363.toString(),value:new Date(_i363,selectedDate.getMonth(),selectedDate.getDate()).toDateString()});}that.$yearContainer.addClass('jqx-calendar-selected');that.$dateContainer.removeClass('jqx-calendar-selected');}that.$.listViewContainer.dataSource=dataSource;that.$.listViewContainer.selectedValues=[selectedDate.toDateString()];that.$.listViewContainer.ensureVisible(that.$.listViewContainer.selectedValues[0]);that._refreshHeaderTitle();that._refreshHeaderElements();that.focus();}/**
    * Checks if date is in view.
    * @param {any} date - Date object
    */},{key:'_isDateInView',value:function _isDateInView(date){var that=this;if(!date){return false;}for(var d=0;d<that._viewDates.length;d++){if(date.getFullYear()===that._viewDates[d].getFullYear()&&date.getMonth()===that._viewDates[d].getMonth()){var cell=that._getCellByDate(date,that._animationStarted?that.$.nextMonthsContainer:that.$.monthsContainer);if(!cell){return;}return cell.otherMonth||cell.classList.contains('jqx-visibility-hidden')?false:true;}}return false;}/**
    * Calendar keyDown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;if(that.disabled||that.readonly){return;}//JQX.RepeatButton throws click event, so it's not necessary to handle them
switch(that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement){//Header elements
case that.$.yearElement:if(event.key==='Escape'){that._refreshHeaderElements();}break;case that.$.dateElement:if(that.calendarMode==='default'&&event.key===' '||event.key==='Enter'){event.preventDefault();that._isInteractiveNavigation=true;that._showDateView();return;}if(!that._focusedCell){that._focusCell();}if(event.key.indexOf('Arrow')>-1&&that.$.dateElement===document.activeElement){that.$.body.focus();}that._navigateDays(event);break;case that.$.body:if(event.key===' '/* || event.key === 'Enter'*/){event.preventDefault();}that._navigateDays(event);break;case that.$.yearContainer:if((event.key===' '||event.key==='Enter')&&that.displayMode!=='decade'){//Prevent window scrolling
event.preventDefault();that._isInteractiveNavigation=true;that._showDateView('year');}if(event.key.indexOf('Arrow')>-1){//Prevent window scrolling
event.preventDefault();if(!that._focusedCell){that._focusCell();}if(that.displayMode!=='month'&&that.displayModeView==='list'){that.focus();that.$.listViewContainer._handleKeyStrokes(event.key);return;}that._navigateDays(event);}break;case that.$.dateContainer:if((event.key===' '||event.key==='Enter')&&that.displayMode!=='month'){//Prevent window scrolling
event.preventDefault();that._displayModeHandler(that.displayModeView==='list'?that.$.listViewContainer.getItem(that.$.listViewContainer.selectedValues[0]):that._focusedCell,'month');}if(event.key.indexOf('Arrow')>-1){if(!that._focusedCell){that._focusCell();}if(that.displayMode!=='month'&&that.displayModeView==='list'){that.focus();that.$.listViewContainer._handleKeyStrokes(event.key);return;}that._navigateDays(event);}break;default:if(that.displayMode!=='month'&&that.displayModeView==='list'){if(['Arrow','End','Home','Page'].indexOf(event.key)){//Prevent window scrolling
event.preventDefault();}if(event.key===' '||event.key==='Enter'||event.ctrlKey&&(event.key==='ArrowUp'||event.key==='ArrowDown')){that._navigateDays(event);return;}that.$.listViewContainer._handleKeyStrokes(event.key);return;}if(event.key.indexOf('Arrow')>-1){if(!that._focusedCell){that._focusCell();}that._navigateDays(event);}break;}}/**
     * ListBox in the listViewContainer change event handler
     * @param {any} event
     */},{key:'_listViewContainerChangeEventHandler',value:function _listViewContainerChangeEventHandler(event){event.stopPropagation();}/**
     * ListBox (listView) Key down event handler
     * @param {any} event
     */},{key:'_listViewContainerKeyDownHandler',value:function _listViewContainerKeyDownHandler(event){var that=this;if(that.displayModeView!=='list'){return;}if(event.key===' '||event.key==='Enter'){that._navigateDays(event);}}/**
     * Show the month/year/decade selection view
     */},{key:'_showDateView',value:function _showDateView(newDisplayMode){var that=this;newDisplayMode=newDisplayMode?newDisplayMode:that.displayMode;switch(newDisplayMode){case'month':newDisplayMode='year';break;case'year':newDisplayMode='decade';break;}if(that.displayMode===newDisplayMode){return;}var isDisplayModeCHangeEventPrevented=that.$.fireEvent('displayModeChanging',{'oldDisplayMode':that.displayMode,'newDisplayMode':newDisplayMode}).defaultPrevented;if(isDisplayModeCHangeEventPrevented){return;}that.displayMode=newDisplayMode;//Needed for animation, even if its not enabled
var target=void 0;if(arguments[0]&&that.displayModeView==='list'&&that.displayMode!=='month'&&that.$.listViewContainer.items.length>0){target=that.$.listViewContainer.getItem(that.$.listViewContainer.selectedValues[0]);if(target.offsetHeight){that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.dataItem.top>0?target.offsetTop-target.offsetHeight/2:target.offsetTop+target.offsetHeight/2)+'px';}else{that.$.animationPanel.style.transformOrigin=that.$.listViewContainer.offsetLeft+that.$.listViewContainer.offsetWidth/2+'px '+(target.dataItem.top>0?target.offsetTop-target.offsetHeight/2:that.$.listViewContainer.offsetTop+that.$.listViewContainer.offsetHeight/2)+'px';}}else{if(!that._focusedCell){that._focusCell();}target=that._focusedCell;that.$.animationPanel.style.transformOrigin=target.offsetLeft+target.offsetWidth/2+'px '+(target.offsetTop+target.offsetHeight/2)+'px';}that.$monthsContainer.addClass('jqx-hidden');if(that.$dateViewContainer.hasClass('jqx-hidden')){that.$dateViewContainer.removeClass('jqx-hidden');}if(that.displayMode==='decade'){that.$yearContainer.addClass('jqx-calendar-selected');that.$dateContainer.removeClass('jqx-calendar-selected');}if(that.hasAnimation){that._animateView(-1,target);return;}that._setDisplayModeContent(that._focusedCell?that._focusedCell.value:that._viewDates[0]);}/**
     * KeyUp event handler.
     */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this;if(that.disabled||that.readonly){return;}if(that.selectionMode==='default'&&(event.key==='Shift'||event.key==='Control')){that._keysPressed[event.key]=false;}}/**
    * Calendar mouse over/out events handler.
    */},{key:'_mouseEventsHandler',value:function _mouseEventsHandler(event){var that=this;if(that.disabled||that.readonly){return;}if(event.type==='mouseenter'){that.$.setAttributeValue('hover',true);return;}else if(event.type==='mouseleave'){that.$.setAttributeValue('hover',false);if(that.tooltip){that.$.tooltip.close();}return;}var target=that.enableShadowDOM?event.composedPath()[0]:event.target;if(!target.closest('.jqx-calendar-week')){if(that.tooltip){that.$.tooltip.close();}return;}var cell=target,isItemChild=void 0;while(cell&&!(cell.value instanceof Date)){cell=cell.parentElement;isItemChild=true;}if(!cell){return;}if(!JQX.Utilities.Core.isMobile){that._handleCalendarCellHover(event,cell);}if(that.tooltip){if(cell.hasAttribute('important')){if(event.type==='mouseover'){that.$.tooltip.open();that.tooltipTemplate?that.$.tooltip.value=cell.value+'':that.$.tooltip.innerHTML=that.$.tooltip.innerHTML.trim().length===0?'Important day!':that.$.tooltip.innerHTML;that.$.tooltip.selector=cell;if(that.$.tooltip.selector!==cell){that.$.tooltip.close();}return;}}if(isItemChild||that.$.tooltip.selector===cell){return;}that.$.tooltip.close();}}/**
     * Calendar move event handler
     */},{key:'_moveHandler',value:function _moveHandler(event){var that=this;if(!JQX.Utilities.Core.isMobile||!that._dragStartDetails||that.displayModeView==='list'&&that.displayMode!=='month'){return;}event.originalEvent.preventDefault();event.preventDefault();event.stopPropagation();var details={x:Math.round(event.pageX),y:Math.round(event.pageY)};var step=void 0;if(that.scrollButtonsNavigationMode==='portrait'){step=details.y>that._dragStartDetails.y?-1*that.months:1*that.months;}else{step=details.x<that._dragStartDetails.x?1*that.months:-1*that.months;}var navigationDate=that._getNextDate(step);if(!navigationDate){return;}that._dragStartDetails.step=step;that._dragStartDetails.navigationDate=new Date(navigationDate);if(!that.hasAnimation){return;}var animationTarget=void 0;if(that.displayMode!=='month'){that.$nextMonthsContainer.addClass('jqx-calendar-date-view-container');animationTarget=that.$.dateViewContainer;if(!(that.$.nextMonthsContainer.children[0].value instanceof Date)||that.$.nextMonthsContainer.children[1].value.getFullYear()!==navigationDate.getFullYear()){that._setDisplayModeContent(navigationDate,that.$.nextMonthsContainer);}}else{if(that.$nextMonthsContainer.hasClass('jqx-calendar-date-view-container')){that.$nextMonthsContainer.removeClass('jqx-calendar-date-view-container');}animationTarget=that.$.monthsContainer;if(!that.$.nextMonthsContainer.children[0]._date||that.$.nextMonthsContainer.children[0]._date.getTime()!==navigationDate.getTime()){var nextMonths=that.$.nextMonthsContainer.children;for(var _i364=0;_i364<nextMonths.length;_i364++){navigationDate.setMonth(that._dragStartDetails.navigationDate.getMonth()+_i364);that._setMonth(navigationDate,nextMonths[_i364],true);}}}if(step<0){animationTarget.style.order=3;that.$.nextMonthsContainer.style.order=1;that.$.body[that._animationSettings.scrollSize]=that.$.body[that._animationSettings.scrollMax];}else{animationTarget.style.order=1;that.$.nextMonthsContainer.style.order=3;that.$.body[that._animationSettings.scrollSize]=0;}var direction=that.scrollButtonsNavigationMode==='portrait'?'y':'x';if(Math.abs(that._dragStartDetails[direction]-details[direction])>10){that.$.body[that._animationSettings.scrollSize]+=-(details[direction]-that._dragStartDetails[direction])*2;}}/**
     * Get next navigation date
     * @param {any} step
     */},{key:'_getNextDate',value:function _getNextDate(step){var that=this;var targetDate=void 0;if(that.displayMode!=='month'){var coefficient=void 0;var focusedDateYear=that._focusedCell&&that._focusedCell.value.getFullYear();if(that.displayModeView==='list'){targetDate=new Date(that.$.listViewContainer.items[0].value);}else{var container=that._animationStarted?that.$.nextMonthsContainer:that.$.dateViewContainer;targetDate=new Date(that.displayMode==='year'?container.children[0].value:container.children[1].value);}coefficient=that.displayMode==='year'?1:step!==0?10:1;targetDate.setFullYear(targetDate.getFullYear()+(step>0?coefficient:-coefficient));if(targetDate.getTime()<that.min.getTime()){targetDate=that.min;}if(targetDate.getTime()>that.max.getTime()){targetDate=that.max;}if(that.displayMode==='year'){if(targetDate.getFullYear()<that.min.getFullYear()||targetDate.getFullYear()>that.max.getFullYear()||focusedDateYear===targetDate.getFullYear()){return;}}else if(targetDate.getFullYear()<that.min.getFullYear()||targetDate.getFullYear()>that.max.getFullYear()||focusedDateYear===targetDate.getFullYear()){return;}}else{var dateInView=that._viewDates[0];targetDate=new Date(dateInView);targetDate.setDate(1);targetDate.setMonth(targetDate.getMonth()+step);targetDate.setTime(Math.min(Math.max(targetDate.getTime(),that.min.getTime()),that.max.getTime()));if(dateInView.getMonth()===targetDate.getMonth()&&dateInView.getFullYear()===targetDate.getFullYear()){return;}}return targetDate;}/**
    * Keyboard navigation between days in a month.
    */},{key:'_navigateDays',value:function _navigateDays(event){var that=this;var iterations=event.key==='ArrowUp'||event.key==='ArrowDown'?7:1,coefficient=event.key==='ArrowUp'||event.key==='ArrowLeft'||event.key==='PageUp'?-1:1;switch(event.key){case'ArrowUp':case'ArrowLeft':case'ArrowDown':case'ArrowRight':if(!that._handleArrowKeys(event,iterations,coefficient)){return;}break;case' ':case'Enter':if(that.displayMode!=='month'){that._displayModeHandler(that.displayModeView==='list'?that.$.listViewContainer.getItem(that.$.listViewContainer.selectedValues[0]):that._focusedCell);return;}break;case'Control':case'Shift':if(that.selectionMode==='default'){that._keysPressed[event.key]=true;}return;case'Home':case'End':{//Prevent window scrolling
event.preventDefault();var targetDate=void 0,getTargetMonthDay=function getTargetMonthDay(days){if(event.key==='Home'){for(var d=0;d<days.length;d++){if(!days[d].otherMonth&&(!days[d].disabled||!days[d].restricted)){return days[d];}}}else{for(var _d2=days.length-1;_d2>=0;_d2--){if(!days[_d2].otherMonth&&(!days[_d2].disabled||!days[_d2].restricted)){return days[_d2];}}}};if(that.displayMode!=='month'){targetDate=getTargetMonthDay(that.$.dateViewContainer.children);}else{targetDate=getTargetMonthDay(that._getMonthCells(that._focusedCell.closest('.jqx-calendar-month'),that.rightToLeft));}if(!targetDate){return;}that._focusCell(targetDate);if(that.displayMode!=='month'){return;}break;}case'PageUp':case'PageDown':{if(!that._handlePageUpDownKeys(event,coefficient)){return;}break;}default:return;}if(that._focusedCell){that._handleDateSelection(that._focusedCell);}}/**
     * Handles the arrow keys
     * @param {any} event 
     * @param {any} iterations - number of days to iterate over
     * @param {any} coefficient - a flag indicating if the next date is in the future or in the past
     */},{key:'_handleArrowKeys',value:function _handleArrowKeys(event,iterations,coefficient){var that=this;var targetDate=void 0;if(that.displayMode==='month'&&!that._animationStarted){that.$.body.focus();}if(!that._focusedCell){that._focusCell(that._getCellByDate(new Date()));}if(event.altKey){return;}if(event.ctrlKey){if(event.key==='ArrowDown'||event.key==='ArrowUp'){var displayMode=void 0;switch(that.displayMode){case'month':displayMode=event.key==='ArrowDown'?'month':'year';break;case'year':displayMode=event.key==='ArrowDown'?'month':'decade';break;case'decade':displayMode=event.key==='ArrowDown'?'year':'decade';break;}if(displayMode!==that.displayMode){var oldValue=that.displayMode;//Change displayMode 
that.displayMode=displayMode;that._setDisplayMode(oldValue,displayMode,oldValue==='month');//KeyUpHandle isn't being thrown when displayModeView is 'list'
if(that._keysPressed){delete that._keysPressed['Control'];}}}return;}//Prevent window scrolling
event.preventDefault();if(that.rightToLeft&&(event.key==='ArrowLeft'||event.key==='ArrowRight')){coefficient*=-1;}if(that.displayMode!=='month'){var items=that._animationStarted?that.$.nextMonthsContainer.children:that.$.dateViewContainer.children;iterations=event.key==='ArrowUp'||event.key==='ArrowDown'?4:1;if(that.displayMode==='year'){var targetMonth=that._focusedCell.value.getMonth()+coefficient*iterations;var lastDayOfMonth=new Date(that._focusedCell.value.getFullYear(),targetMonth+1,0);if(that._focusedCell.value.getDate()<=lastDayOfMonth.getDate()){lastDayOfMonth=that._focusedCell.value;}targetDate=new Date(that._focusedCell.value.getFullYear(),targetMonth,lastDayOfMonth.getDate());}else{targetDate=new Date(that._focusedCell.value.getFullYear()+coefficient*iterations,that._focusedCell.value.getMonth(),that._focusedCell.value.getDate());}if(that.displayMode==='year'){if(targetDate.getFullYear()<that.min.getFullYear()||targetDate.getFullYear()===that.min.getFullYear()&&targetDate.getMonth()<that.min.getMonth()||targetDate.getFullYear()>that.max.getFullYear()||targetDate.getFullYear()===that.max.getFullYear()&&targetDate.getMonth()>that.max.getMonth()){return;}if(targetDate.getTime()>items[items.length-1].value.getTime()){that.navigate(1);}else if(targetDate.getTime()<items[0].value.getTime()){that.navigate(-1);}}else{if(targetDate.getFullYear()<that.min.getFullYear()||targetDate.getFullYear()>that.max.getFullYear()){return;}if(targetDate.getFullYear()<items[1].value.getFullYear()||targetDate.getFullYear()>items[10].value.getFullYear()){var focusedDate=that._focusedCell;that.navigate(coefficient);if(event.key==='ArrowUp'||event.key==='ArrowDown'){if(focusedDate===items[3]||focusedDate===items[4]||focusedDate===items[7]||focusedDate===items[8]){targetDate.setFullYear(targetDate.getFullYear()+coefficient*2);}else{targetDate.setFullYear(targetDate.getFullYear()-coefficient*2);}}}}that._focusCell(that._getCellByDate(targetDate,that._animationStarted?that.$.nextMonthsContainer:undefined));return;}var restrictedDates=that.restrictedDates.map(Number);targetDate=new Date(that._focusedCell.value.getFullYear(),that._focusedCell.value.getMonth(),that._focusedCell.value.getDate()+coefficient*iterations,0,0,0,0);while(restrictedDates.indexOf(targetDate.getTime())>-1){targetDate.setDate(targetDate.getDate()+coefficient);}if(targetDate.getTime()<that.min.getTime()||targetDate.getTime()>that.max.getTime()){return;}if(!that._isDateInView(targetDate)){that.navigate(coefficient*that.months);}var cell=that._getCellByDate(targetDate,that._animationStarted?that.$.nextMonthsContainer:undefined);that._focusCell(cell);if(['zeroOrMany','oneOrMany','none','many','week'].indexOf(that.selectionMode)>-1){return;}return true;}},{key:'_handlePageUpDownKeys',value:function _handlePageUpDownKeys(event,coefficient){var that=this;//Prevent window scrolling
event.preventDefault();var targetDate=void 0;if(that.displayMode!=='month'){targetDate=that._focusedCell;if(!that.navigate(coefficient)){return;}while(targetDate&&targetDate.classList.contains('jqx-visibility-hidden')){targetDate=targetDate.previousElementSibling===null?targetDate.nextElementSibling:targetDate.previousElementSibling;}that._focusCell(targetDate);if(that.hasAnimation&&that.displayMode==='decade'){that._focusedCell.value.setFullYear(that._focusedCell.value.getFullYear()+10*coefficient);}return;}targetDate=new Date(that._focusedCell.value.getFullYear(),that._focusedCell.value.getMonth()+coefficient,1,0,0,0,0);var daysInMonth=new Date(targetDate.getFullYear(),targetDate.getMonth()+1,0).getDate();if(that._focusedCell.value.getDate()>daysInMonth){targetDate.setDate(daysInMonth);}else{targetDate.setDate(that._focusedCell.value.getDate());}if(!that._isDateInView(targetDate)){that.navigate(coefficient*that.months);}if(that._animationStarted){that._focusCell(that._getCellByDate(targetDate,that.$.nextMonthsContainer));}else{that._focusCell(that._getCellByDate(targetDate));}return true;}/**
    * Selects/Unselects a day. Accepts a JQX.cell/ Day number/ Date object.
    */},{key:'_selectDate',value:function _selectDate(date,eventPrevented,noPropSynch){var that=this;if(typeof that._viewDates==='undefined'||that.selectionMode==='none'){return;}var selectedDates=that.selectedDates.slice(0);var cell=that._getCellByDate(date,that._animationStarted?that.$.nextMonthsContainer:that.$.monthsContainer);if(cell){that._selectCell(cell);}var index=void 0;date=new Date(date);date.setHours(0,0,0,0);index=selectedDates.map(Number).indexOf(date.getTime());//Date selection
if(that.restrictedDates.map(Number).indexOf(date.getTime())>-1||date.getTime()<that.min.getTime()||date.getTime()>that.max.getTime()){return;}index>-1?selectedDates.splice(index,1):selectedDates.push(date);if(!noPropSynch){that.selectedDates=selectedDates;}that._refreshFooter();// Update the hidden input
that.$.hiddenInput.value=that.selectedDates.toString();if(!eventPrevented){that.$.fireEvent('change',{'value':[date]});}that._refreshTitle();}/**
     * Selects a day from the current month
     * @param {any} day - JQX.cell instance
     */},{key:'_selectCell',value:function _selectCell(cell){var that=this;if(!cell||that.restrictedDates.map(Number).indexOf(cell.value.getTime())>-1||that.disableAutoNavigation&&false===cell.otherMonth||cell.value.getTime()<that.min.getTime()||cell.value.getTime()>that.max.getTime()){return;}var index=that._selectedCells.indexOf(cell);if(index>-1){that._setCellState(cell,'selected',false);that._selectedCells.splice(index,1);}else{that._setCellState(cell,'selected',true);that._selectedCells.push(cell);}that._focusCell(cell);}/**
    * Sets the names of the weeks.
    */},{key:'_refreshDayOfWeekTitles',value:function _refreshDayOfWeekTitles(){var that=this;var days=[],date=new Date(),dayObject=void 0;function formatDayName(date){var result=void 0;if(that.dayNameFormat==='firstTwoLetters'){result=new Intl.DateTimeFormat(that.locale,{weekday:'long'}).format(date);result=result.charCodeAt(0)===8206?result.substring(1,3):result.substring(0,2);}else{result=new Intl.DateTimeFormat(that.locale,{weekday:that.dayNameFormat}).format(date);}return result;}for(var _i365=1;_i365<8;_i365++){date.setDate(_i365);dayObject={number:date.getDay(),name:formatDayName(date)};days.push(dayObject);}days.sort(function(a,b){return a.number>b.number?1:-1;});var months=that.$.monthsContainer.children;var dayNameHolders=void 0,counter=void 0;for(var m=0;m<months.length;m++){dayNameHolders=months[m].getElementsByClassName('jqx-calendar-week-titles')[0].children;counter=that.firstDayOfWeek>6?0:that.firstDayOfWeek;//Validates firstDayOfWeek
if(that.rightToLeft){for(var d=dayNameHolders.length-1;d>=0;d--){dayNameHolders[d].textContent=days[counter++].name;counter=counter>6?0:counter;}}else{for(var _d3=1;_d3<dayNameHolders.length;_d3++){dayNameHolders[_d3].textContent=days[counter++].name;counter=counter>6?0:counter;}}}//Update the weekTitles for nextMonths
if(that.hasAnimation){var weekTitles=that.$.monthsContainer.getElementsByClassName('jqx-calendar-week-titles')[0].innerHTML,nextMonthWeekTitleContainers=that.$.nextMonthsContainer.getElementsByClassName('jqx-calendar-week-titles');for(var _i366=0;_i366<nextMonthWeekTitleContainers.length;_i366++){nextMonthWeekTitleContainers[_i366].innerHTML=weekTitles;}}}/**
     * Sets the header mode
     */},{key:'_refreshCalendarMode',value:function _refreshCalendarMode(){var that=this;if(that.headerTemplate){return;}that._refreshMonthNames();if(that.calendarMode==='default'){that.$classicHeaderDate.addClass('jqx-hidden');that.$defaultHeaderDate.removeClass('jqx-hidden');var sortedDates=that._viewDates.slice(0).sort(function(a,b){return a.getTime()-b.getTime();}),firstDateInView=sortedDates[0],lastDateInView=sortedDates[sortedDates.length-1];firstDateInView.setDate(2);var date=firstDateInView.toLocaleDateString(that.locale,{year:that.yearFormat,month:that.monthNameFormat});if(that.months>1){lastDateInView.setDate(2);date+=' - '+lastDateInView.toLocaleDateString(that.locale,{year:that.yearFormat,month:that.monthNameFormat});}that.$.defaultHeaderDate.innerHTML=date;if(!that.unfocusable){that.$.dateElement.setAttribute('tabindex',that.tabIndex>0?that.tabIndex:0);}}else{that.$defaultHeaderDate.addClass('jqx-hidden');that.$classicHeaderDate.removeClass('jqx-hidden');that.$.dateElement.removeAttribute('tabindex');}}/**
    * Updates the footer with the latest date selection
    */},{key:'_refreshFooter',value:function _refreshFooter(){var that=this;if(that.viewSections.indexOf('footer')<0||that.$.footer.offsetHeight===0){return;}function preFormatDateOutput(){if(that.selectedDates.length===0){return'';}if(that.selectedDates.length===1){return that.selectedDates[0].toLocaleDateString(that.locale,{year:that.yearFormat,weekday:'short',month:'short',day:'numeric'});}else{var sortedDates=that.selectedDates.slice(0).sort(function(a,b){return a.getTime()-b.getTime();});return sortedDates[0].toLocaleDateString(that.locale,{year:that.yearFormat,weekday:'short',month:'short',day:'numeric'})+' - '+sortedDates[sortedDates.length-1].toLocaleDateString(that.locale,{year:that.yearFormat,weekday:'short',month:'short',day:'numeric'});}}if(that.footerTemplate){if(typeof that.footerTemplate==='function'){return;}var layoutTemplate=that._layoutTemplates.filter(function(template){return template.selector===that.$.footer;})[0],clone=document.importNode(layoutTemplate.template.content,true);if(layoutTemplate.bindings.length>0){var bindingHolderElement=clone.childNodes[layoutTemplate.bindings[0].childNodeIndex];layoutTemplate.selector.childNodes[layoutTemplate.bindings[0].childNodeIndex].innerHTML=bindingHolderElement.innerHTML.replace(layoutTemplate.bindings[0].bindingString,preFormatDateOutput());}return;}that.$.selectedDatesRange.innerHTML=preFormatDateOutput();}/**
    * Sets important days.
    */},{key:'_refreshImportantDates',value:function _refreshImportantDates(){var that=this;if(that.displayMode!=='month'){return;}that._clearImportantDates();for(var d=0;d<that.importantDates.length;d++){that._setImportantDate(that.importantDates[d]);}}},{key:'_clearImportantDates',value:function _clearImportantDates(){var that=this;var months=that.$.monthsContainer.children;for(var m=0;m<months.length;m++){that._getMonthCells(months[m]).map(function(cell){that._setCellState(cell,'important',false);});}}},{key:'_setImportantDate',value:function _setImportantDate(date,cell){var that=this;var cellByDate=that._getCellByDate(date);if(!cell){cell=cellByDate;}if(cell){that._setCellState(cell,'important',true);that._applyImportantDateTemplate(cell);}}},{key:'_applyImportantDateTemplate',value:function _applyImportantDateTemplate(cell){var that=this;if(!that._importantDatesTemplate){if(typeof that.importantDatesTemplate==='function'){that.importantDatesTemplate(cell,{value:cell.value});return;}cell.innerHTML=cell.value.getDate()+'';return;}var clone=document.importNode(that._importantDatesTemplate.content,true);if(that._bindingDetails&&that._bindingDetails.length>0){var bindingHolderElement=clone.childNodes[that._bindingDetails[0].childNodeIndex];bindingHolderElement.innerHTML=bindingHolderElement.innerHTML.replace(that._bindingDetails[0].bindingString,cell.value.getDate());}cell.innerHTML='';for(var _i367=0;_i367<clone.childNodes.length;_i367++){if(clone.childNodes[_i367].outerHTML){cell.innerHTML+=clone.childNodes[_i367].outerHTML;}}}/**
    *  Fill's the month with dates and weeknubers.
    */},{key:'_setMonth',value:function _setMonth(date,monthSelector,updateDatesOnly){var that=this,selectedDates=that._getDays(date,that.selectedDates),importantDates=that._getDays(date,that.importantDates),restrictedDates=that._getDays(date,that.restrictedDates);date.setDate(1);if(!monthSelector){monthSelector=that.$.month;}monthSelector._date=new Date(date);if(!updateDatesOnly){if(!that._viewDates||that._viewDates.length>=that.months){that._viewDates=[];}that._viewDates.push(new Date(date));}date=new Date(date);//Correct the start day according to firstDayOfWeek property
var firstDayOfWeek=(date.getDay()-that.firstDayOfWeek+7)%7;date.setDate(0);var previusMonthDays=date.getDate();date.setDate(32);// current month.
date.setDate(1);// set to first day of month.
date.setDate(32);// next month.
if(that._selectedCells){for(var _i368=0;_i368<that._selectedCells.length;_i368++){if(that._selectedCells[_i368].closest('.jqx-calendar-month')===monthSelector){that._setCellState(that._selectedCells[_i368],'selected',false);}}}that._setMonthContent(date,monthSelector,{previusMonthDays:previusMonthDays,firstDayOfWeek:firstDayOfWeek,selectedDates:selectedDates,importantDates:importantDates,restrictedDates:restrictedDates});}/**
    * Populates the Calendar with days for the corresponding month and calculates week numbers.
    */},{key:'_setMonthContent',value:function _setMonthContent(date,month,details){var that=this;var daysInMonth=32-date.getDate(),monthCells=that._getMonthCells(month,that.rightToLeft),monthNumber=month._date.getMonth(),monthYear=month._date.getFullYear(),today=new Date();var nextMonthDays=1,day=1,shouldItemBeHidden=void 0;today.setHours(0,0,0,0);//reset all item properties
monthCells.map(function(cell){that._setCellState(cell,'restricted',false);that._setCellState(cell,'selected',false);that._setCellState(cell,'otherMonth',false);that._setCellState(cell,'focus',false);that._setCellState(cell,'important',false);that._setCellState(cell,'today',false);that._setCellState(cell,'disabled',false);that._setCellState(cell,'hover',false);});for(var d=0;d<monthCells.length;d++){var cell=monthCells[d];if(d===details.firstDayOfWeek&&day<=daysInMonth){cell.className='jqx-calendar-cell';cell.value=new Date(monthYear,monthNumber,day);cell.innerHTML=cell.value.getDate().toString();if(details.restrictedDates.indexOf(day)>-1||cell.value.getTime()<that.min.getTime()||cell.value.getTime()>that.max.getTime()){that._setCellState(cell,'restricted',true);}else if(details.selectedDates.indexOf(day)>-1){that._setCellState(cell,'selected',true);if(that._selectedCells.indexOf(cell)<0){that._selectedCells.push(cell);}}if(details.importantDates.indexOf(day)>-1){that._setImportantDate(cell.value,cell);details.importantDates.splice(details.importantDates.indexOf(day),1);}if(cell.value.getTime()===today.getTime()){that._setCellState(cell,'today',true);}details.firstDayOfWeek++;day++;}else{if(day===1){cell.value=new Date(monthYear,monthNumber-1,++details.previusMonthDays-details.firstDayOfWeek);shouldItemBeHidden=cell.value.getTime()<that.min.getTime()||month.previousElementSibling?true:false;}else{cell.value=new Date(monthYear,monthNumber+1,nextMonthDays++);shouldItemBeHidden=cell.value.getTime()>that.max.getTime()||month.nextElementSibling?true:false;}cell.innerHTML=cell.value.getDate().toString();if(shouldItemBeHidden){cell.classList.add('jqx-visibility-hidden');}else{that._setCellState(cell,'otherMonth',true);cell.classList.remove('jqx-visibility-hidden');}}}//Set month name
if(that.months>1){month.firstElementChild.innerHTML=that.dateFormatFunction?that.dateFormatFunction(month._date):that._monthsNames[monthNumber]+' '+month._date.toLocaleDateString(that.locale,{year:that.yearFormat});}// Set week numbers
that._setMonthWeekNumbers(month);}/**
    * Sets the names of the months inside the dropDown, according to localization.
    */},{key:'_refreshMonthNames',value:function _refreshMonthNames(){var that=this;var date=new Date(),formatedMonth=void 0;date.setDate(1);that._monthsNames=[];function formatMonthName(date){var result=new Intl.DateTimeFormat(that.locale,{month:that.monthNameFormat}).format(date);if(that.monthNameFormat==='firstTwoLetters'){//EDGE bug fix
result=result.charCodeAt(0)===8206?result.substring(0,2):result.substring(1,3);}return result;}//get formated month names
for(var m=0;m<12;m++){date.setMonth(m);formatedMonth=formatMonthName(date);that._monthsNames.push(formatedMonth);}if(that.calendarMode==='classic'&&that.$.monthElement){var months=that.$.monthsContainer.children;if(that.$.monthElement.dataSource){that._changeEventFired=1;//ListBox change event fired
}//NOTE: when shadowDOM is Enabled, sometimes the context of the ListBox inside the DropDownList is not document and propertyChangeHandler is not fired on the ListBox
if(that.enableShadowDOM){that._setMonthElementPropertyInShadowDOM('dataSource',that._monthsNames);}else{that.$.monthElement.dataSource=that._monthsNames;}if(that._viewDates){for(var _m3=0;_m3<months.length;_m3++){months[_m3].firstElementChild.textContent=that._monthsNames[months[_m3]._date.getMonth()]+' '+months[_m3]._date.getFullYear();}that._changeEventFired=1;//ListBox change event fired, again
if(that.enableShadowDOM){that._setMonthElementPropertyInShadowDOM('selectedIndexes',that._viewDates.map(function(date){return date.getMonth();}));}else{that.$.monthElement.selectedIndexes=that._viewDates.map(function(date){return date.getMonth();});}}}}/**
    * Set weeks numbers.
    */},{key:'_setMonthWeekNumbers',value:function _setMonthWeekNumbers(month){var that=this,isWeekVisible=function isWeekVisible(week){for(var d=1;d<week.children.length;d++){if(!week.children[d].classList.contains('jqx-visibility-hidden')){return true;}}};var weeks=month.getElementsByClassName('jqx-calendar-week');weeks=[].slice.call(weeks);// Set week numbers
for(var w=0;w<weeks.length;w++){if(!isWeekVisible(weeks[w])){weeks[w].children[0].innerHTML='';continue;}var cell=weeks[w].children[1];var monthOffset=cell.otherMonth?cell.value.getTime()>month._date.getTime()?1:-1:0;weeks[w].children[0].innerHTML=that._getWeekNumber(new Date(month._date.getFullYear(),month._date.getMonth()+monthOffset,cell.value.getDate()));}}/**
    * Sets restricted dates.
    */},{key:'_setRestrictedDates',value:function _setRestrictedDates(restrictedDates){var that=this;var months=that.$.monthsContainer.children;for(var m=0;m<months.length;m++){that._getMonthCells(months[m]).map(function(cell){that._setCellState(cell,'restricted',false);});}if(that._viewDates){var isDateRestricted=function isDateRestricted(date){for(var _i369=0;_i369<that._viewDates.length;_i369++){if(that._viewDates[_i369].getFullYear()===date.getFullYear()&&that._viewDates[_i369].getMonth()===date.getMonth()){return true;}}};for(var _i370=0;_i370<restrictedDates.length;_i370++){if(isDateRestricted(restrictedDates[_i370])){var cell=that._getCellByDate(restrictedDates[_i370]);that._setCellState(cell,'restricted',true);}}}}/**
     * Sets the arrow direction of the scrollButtons
     */},{key:'_setScrollButtonsNavigationMode',value:function _setScrollButtonsNavigationMode(){var that=this;if(that.scrollButtonsNavigationMode==='landscape'){if(that.$.previousMonthButton){that.$.previousMonthButton.$.button.firstElementChild.innerHTML='&#xe809';}if(that.$.nextMonthButton){that.$.nextMonthButton.$.button.firstElementChild.innerHTML='&#xe810';}}else{if(that.$.previousMonthButton){that.$.previousMonthButton.$.button.firstElementChild.innerHTML='&#xe80b';}if(that.$.nextMonthButton){that.$.nextMonthButton.$.button.firstElementChild.innerHTML='&#xe80d';}}that._applyAnimationSettings(true);}/**
     * Fires Tooltip's events when shadowDOM is enabled, because it cant bubble out of Calendar's shadowDOM
     * @param {any} event
     */},{key:'_tooltipEventHandler',value:function _tooltipEventHandler(event){var that=this;if(that.enableShadowDOM){that.$.fireEvent(event.type,event.detail);}}/**
     * Updates Calendar's title
     */},{key:'_refreshTitle',value:function _refreshTitle(){var that=this;var date=that.selectedDates.length>0?that.selectedDates[that.selectedDates.length-1]:new Date();if(that.titleTemplate){if(typeof that.titleTemplate==='function'){return;}var layoutTemplate=that._layoutTemplates.filter(function(template){return template.selector===that.$.title;})[0],clone=document.importNode(layoutTemplate.template.content,true);if(layoutTemplate.bindings.length>0){var bindingHolderElement=clone.childNodes[layoutTemplate.bindings[0].childNodeIndex];date=date.toLocaleDateString(that.locale,{year:that.yearFormat,weekday:'short',month:'short',day:'numeric'});layoutTemplate.selector.childNodes[layoutTemplate.bindings[0].childNodeIndex].innerHTML=bindingHolderElement.innerHTML.replace(layoutTemplate.bindings[0].bindingString,date);return;}}that.$.title.children[0].innerHTML=date.toLocaleDateString(that.locale,{year:that.yearFormat});that.$.title.children[1].innerHTML=that.view==='landscape'?date.toLocaleDateString(that.locale,{weekday:'short'})+','+'</br>'+date.toLocaleDateString(that.locale,{month:'short',day:'numeric'}):date.toLocaleDateString(that.locale,{weekday:'short'})+', '+date.toLocaleDateString(that.locale,{month:'short',day:'numeric'});}/**
    * Set how many weeks will be visible.
    */},{key:'_setWeeksVisibility',value:function _setWeeksVisibility(monthContainer){var that=this,months=monthContainer.children;var counter=void 0;//NOTE: classlist is used because when months > 1(or animation is ON) all weeks need to extend JQX
function setVisibility(week){var shouldWeekBeHidden=function shouldWeekBeHidden(week){for(var d=1;d<week.children.length;d++){if(!week.children[d].classList.contains('jqx-visibility-hidden')){return false;}}return true;};if(shouldWeekBeHidden(week)||counter>=that.weeks){week.classList.add('jqx-hidden');return;}if(counter<that.weeks){week.classList.remove('jqx-hidden');counter++;}}var _loop11=function _loop11(m){var month=months[m];var weeks=month.getElementsByClassName('jqx-calendar-week');weeks=[].slice.call(weeks);var selectedDates=that._selectedCells.filter(function(date){return date.closest('.jqx-calendar-month')===months[m];});if(that.weeks===6){weeks.map(function(week){return week.classList.remove('jqx-hidden');});return'continue';}counter=0;if(selectedDates.length>0){var selectedDay=selectedDates[selectedDates.length-1],selectedDayWeekIndex=weeks.indexOf(selectedDay.parentElement);// Weeks after the one with the last selectedDay.
for(var _i371=selectedDayWeekIndex;_i371<weeks.length;_i371++){setVisibility(weeks[_i371]);}// Weeks before the one with the last selectedDay.
for(var _i372=selectedDayWeekIndex-1;_i372>=0;_i372--){setVisibility(weeks[_i372]);}}else{//No selectedDay, start from 1st week
for(var _i373=0;_i373<weeks.length;_i373++){setVisibility(weeks[_i373]);}}};for(var m=0;m<months.length;m++){var _ret14=_loop11(m);if(_ret14==='continue')continue;}}/**
    * Updates the header elements if they haven't been changed.
    */},{key:'_refreshHeaderElements',value:function _refreshHeaderElements(){var that=this,isCalendarFocused=document.activeElement.closest('jqx-calendar')===that,target=that._animationStarted?that.$.nextMonthsContainer:that.$.dateViewContainer;var lastDateInView=that._viewDates[that._viewDates.length-1],yearsInView=that._viewDates.map(function(date){return date.getFullYear();}),nextDate=void 0,nextYear=void 0;if(that.displayMode!=='month'&&that.displayModeView==='list'){return;}//Previous month navigation element
if(that.$.previousMonthButton&&!that.disabled){if(that.displayMode!=='month'&&that.$.dateViewContainer.children[0].value){nextYear=that.displayMode==='year'?target.children[0].value.getFullYear()-1:target.children[1].value.getFullYear()-1;}else if(that._viewDates[0].getMonth()-1<0){nextDate=11;nextYear=that._viewDates[0].getFullYear()-1;}else{nextDate=that._viewDates[0].getMonth()-1;nextYear=that._viewDates[0].getFullYear();}that.$.previousMonthButton.disabled=nextYear<that.min.getFullYear()||nextYear===that.min.getFullYear()&&nextDate<that.min.getMonth()?true:false;if(that.$.previousMonthButton.disabled&&isCalendarFocused){that.$.body.focus();}}//Next month navigation element
if(that.$.nextMonthButton&&!that.disabled){if(that.displayMode!=='month'&&that.$.dateViewContainer.children[0].value){nextYear=that.displayMode==='year'?target.children[0].value.getFullYear()+1:target.children[1].value.getFullYear()+11;}else if(lastDateInView.getMonth()+1>11){nextDate=0;nextYear=lastDateInView.getFullYear()+1;}else{nextDate=lastDateInView.getMonth()+1;nextYear=lastDateInView.getFullYear();}that.$.nextMonthButton.disabled=nextYear>that.max.getFullYear()||nextYear===that.max.getFullYear()&&nextDate>that.max.getMonth()?true:false;if(that.$.nextMonthButton.disabled&&isCalendarFocused){that.$.body.focus();}}//Month selection element
if(that.calendarMode==='classic'&&that.$.monthElement){var items=that.$.monthElement.items;items.map(function(item){return item.disabled=false;});if(yearsInView.indexOf(that.min.getFullYear())>-1){for(var _i374=0;_i374<that.min.getMonth();_i374++){items[_i374].disabled=true;}}if(yearsInView.indexOf(that.max.getFullYear())>-1){for(var _i375=that.max.getMonth()+1;_i375<items.length;_i375++){items[_i375].disabled=true;}}that._changeEventFired=that.$.monthElement.selectedIndexes.length;if(that.enableShadowDOM){that._setMonthElementPropertyInShadowDOM('selectedIndexes',[that._viewDates[0].getMonth()]);}else{that.$.monthElement.selectedIndexes=[that._viewDates[0].getMonth()];}that._changeEventFired=0;}//Previous year navigation element
if(that.$.previousYearButton&&!that.disabled){nextYear=that._viewDates[0].getFullYear()-1;that.$.previousYearButton.disabled=nextYear<that.min.getFullYear()?true:false;if(that.$.previousYearButton.disabled&&isCalendarFocused){that.$.body.focus();}}//Next year navigation element
if(that.$.nextYearButton&&!that.disabled){nextYear=lastDateInView.getFullYear()+1;that.$.nextYearButton.disabled=nextYear>that.max.getFullYear()?true:false;if(that.$.nextYearButton.disabled&&isCalendarFocused){that.$.body.focus();}}//Year element
if(that.$.yearElement){that.$.yearElement.value=yearsInView[0];that.$.yearElement.disabled=lastDateInView.getFullYear()+1>that.max.getFullYear()&&that._viewDates[0].getFullYear()-1<that.min.getFullYear()?true:false;}}/**
     * Fixes ShadowDOM Context issue
     * Note:
     * Since in ShadowDOM the context of the monthElement and it's listBox during element initializaion is not document this method is the solution
     * @param {any} propertyname
     * @param {any} value
     */},{key:'_setMonthElementPropertyInShadowDOM',value:function _setMonthElementPropertyInShadowDOM(propertyname,value){var that=this,monthElement=that.$.monthElement,monthElementListBox=that.$.monthElement.$?that.$.monthElement.$.listBox:undefined;var monthElementContext=monthElement.context;var monthElementListboxContext=void 0;monthElement.context=document;if(monthElementListBox){monthElementListboxContext=monthElementListBox.context;monthElementListBox.context=document;}that.$.monthElement[propertyname]=value;monthElement.context=monthElementContext;if(monthElementListBox){monthElementListBox.context=monthElementListboxContext;}}/**
    * Updates the header/footer section with the appropriate date
    */},{key:'_refreshHeaderTitle',value:function _refreshHeaderTitle(){var that=this;var date=void 0;function preFormatDate(){if(that.displayMode!=='month'){if(that.displayModeView==='list'&&that.$.listViewContainer.selectedValues[0]){var items=that.$.listViewContainer.items;date=that.displayMode==='year'?new Date(that.$.listViewContainer.getItem(that.$.listViewContainer.selectedValues[0]).value).getFullYear():new Date(items[0].value).getFullYear()+' - '+new Date(items[items.length-1].value).getFullYear();}else if(that.$.dateViewContainer.children[0].value){var dateViewItems=that._animationStarted?that.$.nextMonthsContainer.children:that.$.dateViewContainer.children;date=that.displayMode==='year'?dateViewItems[0].value.getFullYear():dateViewItems[1].value.getFullYear()+' - '+dateViewItems[dateViewItems.length-2].value.getFullYear();}if(date){return date;}}var sortedDates=that._viewDates.slice(0).sort(function(a,b){return a.getTime()-b.getTime();}),firstDateInView=sortedDates[0],lastDateInView=sortedDates[sortedDates.length-1];firstDateInView.setDate(2);date=firstDateInView.toLocaleDateString(that.locale,{year:that.yearFormat,month:that.monthNameFormat});if(that.months>1){lastDateInView.setDate(2);date+=' - '+lastDateInView.toLocaleDateString(that.locale,{year:that.yearFormat,month:that.monthNameFormat});}return date;}if(that.calendarMode==='default'){that.$.defaultHeaderDate.innerHTML=preFormatDate();}if(typeof that.headerTemplate==='function'||!that._layoutTemplates){return;}var layoutTemplate=that._layoutTemplates.filter(function(template){return template.selector===that.$.header;})[0];if(!layoutTemplate){return;}var clone=document.importNode(layoutTemplate.template.content,true);if(layoutTemplate.bindings.length>0){var bindingHolderElement=clone.childNodes[layoutTemplate.bindings[0].childNodeIndex];layoutTemplate.selector.childNodes[layoutTemplate.bindings[0].childNodeIndex].innerHTML=bindingHolderElement.innerHTML.replace(layoutTemplate.bindings[0].bindingString,that.dateFormatFunction?that.dateFormatFunction(that._viewDates):preFormatDate());}}/**
    * Shows/hides the target week
    */},{key:'_updateWeeksVisibility',value:function _updateWeeksVisibility(){var that=this;var focusedWeek=that._focusedCell.parentElement;//NOTE: classlist is used because when months > 1(or animation is ON) all weeks need to extend JQX
if(!focusedWeek.classList.contains('jqx-hidden')){return;}var monthWeeks=[].slice.call(focusedWeek.parentElement.children),weekIndex=monthWeeks.indexOf(focusedWeek),shouldWeekBeHidden=function shouldWeekBeHidden(week){for(var d=1;d<week.children.length;d++){if(!week.children[d].classList.contains('jqx-visibility-hidden')){return false;}}return true;};var counter=0;monthWeeks.map(function(week){return week.classList.add('jqx-hidden');});for(var _i376=weekIndex;_i376<monthWeeks.length;_i376++){if(shouldWeekBeHidden(monthWeeks[_i376])){continue;}monthWeeks[_i376].classList.remove('jqx-hidden');counter++;if(counter===that.weeks){return;}}if(counter<that.weeks){for(var _i377=weekIndex-1;_i377>=0;--_i377){monthWeeks[_i377].classList.remove('jqx-hidden');counter++;if(counter===that.weeks){return;}}}}/**
     * Validates potential date input and returns an Array of Date Objects.
    */},{key:'_getValidDates',value:function _getValidDates(dateOrDates){var result=[];function validate(date){if(date instanceof Date){return date;}else if(JQX.Utilities.DateTime&&date instanceof JQX.Utilities.DateTime){return date.toDate();}else if(typeof date==='string'){if(date.trim()==='new Date()'||date.trim()==='new JQX.Utilities.DateTime()'){return new Date();}var regex=/(\d+[,-.\/]{1}\s*\d+[,-.\/]{1}\s*\d+)/;var parseDateString=function parseDateString(){date=date.replace(/[,-.\/]/g,',').split(',');if(date.length>2){date=new Date(parseInt(date[0]),parseInt(date[1])-1,parseInt(date[2]));}else{return new Date();}return date;};if(regex.test(date)){date=regex.exec(date)[0].replace(/[,-.\/]/g,',').split(',');if(date){return new Date(parseInt(date[0]),parseInt(date[1])-1,parseInt(date[2]));}else{return parseDateString();}}else{return parseDateString();}}}if(dateOrDates===undefined){return null;}if(Array.isArray(dateOrDates)){for(var _i378=0;_i378<dateOrDates.length;_i378++){result.push(validate(dateOrDates[_i378]));}}else{result.push(validate(dateOrDates));}result=result.filter(function(date){return date&&date.toDateString()!=='Invalid Date';});//remove invalid dates
result.map(function(date){return date.setHours(0,0,0,0);});//reset time, important for date comparing
return result;}},{key:'_getValidDate',value:function _getValidDate(date){var that=this;var validDates=that._getValidDates(date);if(validDates.length>0){return validDates[0];}return null;}/**
     * Validates the selectedDates to be in range min>date<max.
     */},{key:'_validateSelectedDates',value:function _validateSelectedDates(dates){var that=this;var outOfRangeDates=[];if(!dates){dates=that.selectedDates;}var selectedDates=dates.slice(0),filter=function filter(date){if(date.getTime()>=that.min.getTime()&&date.getTime()<=that.max.getTime()&&!isRestrictedDate(date)){return true;}outOfRangeDates.push(date);return;},isRestrictedDate=function isRestrictedDate(date){for(var d=0;d<that.restrictedDates.length;d++){if(that.restrictedDates[d].getTime()===date.getTime()){return true;}}};//Synchronize the attribute.
that.selectedDates=selectedDates.filter(filter);//Unselects dates that are out of range.
if(that._viewDates){outOfRangeDates.map(function(date){return that._selectDate(date);});that._focusCell();}}/**
    * min property validator
    */},{key:'_validateMinMax',value:function _validateMinMax(propertyName,newValue,oldValue){var that=this;switch(propertyName){case'min':newValue=that._getValidDate(that[propertyName]);that.min=newValue?newValue:oldValue?oldValue:that.properties.min.defaultValue;break;case'max':newValue=that._getValidDate(that[propertyName]);that.max=newValue?newValue:oldValue?oldValue:that.properties.max.defaultValue;break;default:newValue=that._getValidDate(that.min);that.min=newValue?newValue:oldValue?oldValue:that.properties.min.defaultValue;newValue=that._getValidDate(that.max);that.max=newValue?newValue:oldValue?oldValue:that.properties.max.defaultValue;break;}that.min=that.min.getTime()>that.max.getTime()?that.max:that.min;//reset time, important when comparing dates.
that.min.setHours(0,0,0,0);that.max.setHours(0,0,0,0);var months=that.$.monthsContainer.children,days=void 0;if(that._viewDates){if(that._viewDates[0].getTime()>that.max.getTime()||that._viewDates[0].getTime()<that.min.getTime()){that._handleMonths();return;}for(var _i379=0;_i379<months.length;_i379++){days=that._getMonthCells(months[_i379]);for(var d=0;d<days.length;d++){var cell=days[d];if(cell.value.getTime()>=that.min.getTime()&&cell.value.getTime()<=that.max.getTime()){that._setCellState(cell,'restricted',false);if(cell.value.getMonth()===months[_i379]._date.getMonth()){cell.classList.remove('jqx-visibility-hidden');}else if(!that.hideOtherMonthDays){that._setCellState(cell,'otherMonth',true);cell.classList.remove('jqx-visibility-hidden');}if(that.displayMode!=='month'){that._setCellState(cell,'otherMonth',false);}}else{if(!cell.otherMonth){that._setCellState(cell,'restricted',true);}else if(cell.classList.contains('jqx-visibility-hidden')){that._setCellState(cell,'restricted',false);continue;}if(that.displayMode!=='month'){cell.classList.remove('jqx-visibility-hidden');that._setCellState(cell,'otherMonth',true);}}}}}}},{key:'_setCellState',value:function _setCellState(cell,propertyName,value){cell[propertyName]=value;var attributeName=JQX.Utilities.Core.toDash(propertyName);if(value){cell.setAttribute(attributeName,'');}else{cell.removeAttribute(attributeName);}}/**
    * Checks for HTMLTemplate support and returns it's content.
    */},{key:'_validateTemplate',value:function _validateTemplate(propertyName,template){if(template===null||!template){return;}if(typeof template==='function'){return;}var that=this;if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(typeof template==='string'){template=document.getElementById(template);}if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:propertyName}));return;}return template;}/**
    * Navigates to next/previous month when clicked on other month day.
    */},{key:'_weeksDownHandler',value:function _weeksDownHandler(event,cell){var that=this,date=cell.value;var neighbourMonth=void 0;if(cell.otherMonth){neighbourMonth=cell.value.getTime()>cell.closest('.jqx-calendar-month')._date.getTime()?1:-1;}if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(cell,event.pageX,event.pageY);}if(neighbourMonth){if(that._isDateInView(cell.value)){return;}if(!that.disableAutoNavigation){that.navigate(neighbourMonth*that.months);}return;}cell=that._getCellByDate(date);if(cell&&(cell.disabled||cell.restricted)){return;}that._handleDateSelection(cell);}/**
    * firstDayOfweek property validator
    */},{key:'_firstDayOfWeekValidator',value:function _firstDayOfWeekValidator(oldValue,newValue){return Math.min(Math.max(0,isNaN(newValue)?6:newValue),6);}/**
    * Weeks property validator.
    */},{key:'_weeksValidator',value:function _weeksValidator(oldValue,newValue){return Math.min(Math.max(1,isNaN(newValue)?6:newValue),6);}/**
    * Months property validator.
    */},{key:'_monthsValidator',value:function _monthsValidator(oldValue,newValue){return Math.min(Math.max(1,isNaN(newValue)?1:newValue),12);}}],[{key:'properties',/** 
    * Calendar's properties 
    */get:function get(){return{'animationSettings':{value:null,type:'object'},'calendarMode':{value:'default',allowedValues:['default','classic'],type:'string'},'dayNameFormat':{value:'firstTwoLetters',allowedValues:['narrow','firstTwoLetters','long','short'],type:'string'},'dateFormatFunction':{value:null,type:'function'},'disableAutoNavigation':{value:false,type:'boolean'},'displayMode':{value:'month',allowedValues:['month','year','decade'],type:'string'},'displayModeView':{value:'table',allowedValues:['table','list'],type:'string'},'dropDownHeight':{value:'200',type:'string'},'dropDownWidth':{value:'initial',type:'string'},'firstDayOfWeek':{value:0,type:'number',defaultValue:0,validator:'_firstDayOfWeekValidator'},'footerTemplate':{value:null,type:'any'},'headerTemplate':{value:null,type:'any'},'hideDayNames':{value:false,type:'boolean'},'hideOtherMonthDays':{value:false,type:'boolean'},'hideTooltipArrow':{value:false,type:'boolean'},'importantDates':{value:[],type:'array',defaultValue:[]},'importantDatesTemplate':{value:null,type:'any'},'max':{value:new Date(2100,1,1),type:'any',defaultValue:new Date(2100,1,1)},'min':{value:new Date(1900,1,1),type:'any',defaultValue:new Date(1900,1,1)},'months':{value:1,type:'number',defaultValue:1,validator:'_monthsValidator'},'monthNameFormat':{value:'long',allowedValues:['narrow','firstTwoLetters','long','short','2-digit','numeric'],type:'string'},'name':{value:'',type:'string'},'restrictedDates':{value:[],type:'array',defaultValue:[]},'scrollButtonsNavigationMode':{value:'landscape',allowedValues:['portrait','landscape'],type:'string'},'scrollButtonsPosition':{value:'both',allowedValues:['near','far','both'],type:'string'},'selectedDates':{value:[],type:'array'},'selectionMode':{value:'default',allowedValues:['none','default','one','many','zeroOrMany','oneOrMany','zeroOrOne','week'],type:'string'},'spinButtonsDelay':{value:80,type:'number'},'spinButtonsInitialDelay':{value:0,type:'number'},'titleTemplate':{value:null,type:'any'},'tooltip':{value:false,type:'boolean'},'tooltipDelay':{value:100,type:'number'},'tooltipPosition':{value:'top',allowedValues:['bottom','top','left','right','absolute'],type:'string'},'tooltipTemplate':{value:null,type:'any'},'view':{value:'portrait',allowedValues:['landscape','portrait'],type:'string'},'viewSections':{value:['header'],type:'array'},'weekNumbers':{value:false,type:'boolean'},'weeks':{value:6,type:'number',defaultValue:6,validator:'_weeksValidator'},'yearFormat':{value:'numeric',allowedValues:['2-digit','numeric'],type:'string'}};}/**
    * Calendar's event listeners.
    */},{key:'listeners',get:function get(){return{'container.down':'_downHandler','document.up':'_documentUpHandler','container.move':'_moveHandler','container.wheel':'_containerWheelHandler','body.focus':'_bodyFocusStateHandler','body.blur':'_bodyBlurStateHandler','header.click':'_headerClickHandler','header.change':'_headerChangeHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','listViewContainer.keydown':'_listViewContainerKeyDownHandler','listViewContainer.change':'_listViewContainerChangeEventHandler','mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','container.mouseover':'_mouseEventsHandler','container.mouseout':'_mouseEventsHandler','tooltip.open':'_tooltipEventHandler','tooltip.close':'_tooltipEventHandler'};}},{key:'methods',get:function get(){return{'select':'select(date=new Date(): date|string): void','clearSelection':'clearSelection(): void','today':'today(): date','navigate':'navigate(step: int): bool'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.dropdownlist.css','jqx.dropdown.css','jqx.tooltip.css','jqx.calendar.css'];}},{key:'requires',get:function get(){return{'JQX.DropDownList':'jqxdropdownlist.js','JQX.ListBox':'jqxlistbox.js','JQX.RepeatButton':'jqxbutton.js','JQX.Tooltip':'jqxtooltip.js'};}}]);return Calendar;}(JQX.BaseElement));/**
 * Card item custom element.
 */JQX('jqx-card',function(_JQX$ContentElement5){babelHelpers.inherits(Card,_JQX$ContentElement5);function Card(){babelHelpers.classCallCheck(this,Card);return babelHelpers.possibleConstructorReturn(this,(Card.__proto__||Object.getPrototypeOf(Card)).apply(this,arguments));}babelHelpers.createClass(Card,[{key:'template',/**
     * Card's HTML template.
     */value:function template(){return'<div id="container" inner-h-t-m-l="[[innerHTML]]">\n                <content></content>\n            </div>';}/**
    * Updates the Card when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Card.prototype.__proto__||Object.getPrototypeOf(Card.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'itemTemplate':that._template=that._handleTemplate();that.innerHTML=that._processTemplate();if(that.contentHandler){that.contentHandler(that);}break;case'dataSource':that.innerHTML=that._processTemplate();if(that.contentHandler){that.contentHandler(that);}break;case'contentHandler':if(that.contentHandler){that.contentHandler(that);}break;}}/**
    * Called when the element is ready. Used for one-time configuration of the Accordion.
    */},{key:'ready',value:function ready(){babelHelpers.get(Card.prototype.__proto__||Object.getPrototypeOf(Card.prototype),'ready',this).call(this);var that=this;that._template=that._handleTemplate();if(that._template.hasBindings){that.innerHTML=that._processTemplate();}else if(that.itemTemplate){that.innerHTML=that._template.content;}if(that.contentHandler){that.contentHandler(that);}}},{key:'_handleTemplate',value:function _handleTemplate(){var that=this;var template=that.itemTemplate,templateContent='',hasBindings=false,regex=/{{\w+}}/g;if(that.itemTemplate){if(template instanceof HTMLElement){templateContent=template.innerHTML;}else{template=document.getElementById(template);templateContent=template?template.innerHTML:'';}}else{templateContent=that.innerHTML;}if(regex.exec(templateContent)){hasBindings=true;}return{content:templateContent,hasBindings:hasBindings};}},{key:'_processTemplate',value:function _processTemplate(){var that=this,regex=/{{\w+}}/g,bindings=that._template.content.match(regex),dataSource=that.dataSource||{};var processedTemplate=that._template.content;if(!bindings||bindings.length===0){return processedTemplate;}bindings.forEach(function(binding){var propertyName=binding.replace('{{','').replace('}}','');var data=dataSource[propertyName];if(data===undefined){data='';}processedTemplate=processedTemplate.replace(binding,data);});return processedTemplate;}/**
    * Swipe events handler.
    **/},{key:'_swipeHandler',value:function _swipeHandler(){}}],[{key:'properties',// Card item's properties.
get:function get(){return{'dataSource':{value:null,type:'object?',reflectToAttribute:false},'itemTemplate':{value:null,type:'any?',reflectToAttribute:false},'contentHandler':{value:null,type:'function?',reflectToAttribute:false}};}/**
     * Card item's event listeners.
     */},{key:'listeners',get:function get(){return{'mouseenter':'_mouseEnterHandler','mouseleave':'_mouseLeaveHandler','container.swipeleft':'_swipeHandler','container.swiperight':'_swipeHandler','container.swipetop':'_swipeHandler','container.swipebottom':'_swipeHandler'};}},{key:'styleUrls',get:function get(){return['jqx.card.css'];}}]);return Card;}(JQX.ContentElement));/**
* jqxCarousel custom element.
*/JQX('jqx-carousel',function(_JQX$ContentElement6){babelHelpers.inherits(Carousel,_JQX$ContentElement6);function Carousel(){babelHelpers.classCallCheck(this,Carousel);return babelHelpers.possibleConstructorReturn(this,(Carousel.__proto__||Object.getPrototypeOf(Carousel)).apply(this,arguments));}babelHelpers.createClass(Carousel,[{key:'template',/**
    * Element's HTML template.
    */value:function template(){return'<div id="container">\n                    <div id="itemsContainer" inner-h-t-m-l="[[innerHTML]]" class="jqx-items-container"><content></content></div>\n                    <jqx-repeat-button initial-delay="0" delay="[[delay]]" id="arrowLeft" animation="[[animation]]" unfocusable class="jqx-arrow jqx-arrow-left"></jqx-repeat-button>\n                    <jqx-repeat-button initial-delay="0" delay="[[delay]]" id="arrowRight" animation="[[animation]]" unfocusable class="jqx-arrow jqx-arrow-right"></jqx-repeat-button>\n                    <div id="indicatorsContainer" class="jqx-indicators-container"></div>\n                </div>';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;babelHelpers.get(Carousel.prototype.__proto__||Object.getPrototypeOf(Carousel.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);switch(propertyName){case'disabled':that._setFocusable();break;case'dataSource':that._generateIndicators();that._generateItems();that._handleIndicatorsState(0,0);that._handleItemsState(0,0);that._handle3dMode(0);if(that.autoPlay!==false){var interval=parseInt(that.autoPlay);if(interval){setTimeout(function(){that.play();},interval);}else{that.play();}}that._animationTrigger(that._currentIndex);break;case'itemTemplate':that._generateItems();that._handleItemsState(that._currentIndex,that._currentIndex+1);break;case'indicatorTemplate':that._generateIndicators();that._handleIndicatorsState(that._currentIndex,that._currentIndex+1);break;case'interval':that.pause();that.play();break;case'loop':that._handleArrowsActiveState(that._currentIndex,that._currentIndex);break;case'hideArrows':if(!newValue){that._handleArrowsActiveState(that._currentIndex,that._currentIndex);}break;case'displayMode':if(oldValue==='multiple'){that.$.itemsContainer.removeAttribute('style');}break;}}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(Carousel.prototype.__proto__||Object.getPrototypeOf(Carousel.prototype),'ready',this).call(this);var that=this;that._setInitialState();that._generateIndicators();that._generateItems();that._handleIndicatorsState(0,0);that._handleItemsState(0,0);that._handle3dMode(0);if(that.autoPlay!==false){var interval=parseInt(that.autoPlay);interval?setTimeout(function(){that.play();},interval):that.play();}that._setFocusable();that._animationTrigger(that._currentIndex);}/**
    * Moves to the slide with the next index. 
    * In loop mode if current is last index, carousel moves to the first slide.
    */},{key:'next',value:function next(){var that=this,availableItems=that.dataSource.length;if(that.disabled||availableItems===0){return;}var nextItem=that._currentIndex;if(that.loop){nextItem=nextItem>=availableItems-1?0:nextItem+1;}else{nextItem=nextItem>=availableItems-1?nextItem:nextItem+1;}that._goToItem(nextItem);}/**
    * Pauses slideShow.
    */},{key:'pause',value:function pause(){var that=this;that._handleRotation();that._rotate=false;}/**
    * Slides to the element with the given index.
    */},{key:'slideTo',value:function slideTo(index){var that=this;index=index?parseInt(index):0;if(that.disabled||index<0||index>that._items.length){return;}that._goToItem(index);}/**
    * Moves to the slide with the previous index. 
    * In loop mode if current is first index, carousel moves to the last slide.
    */},{key:'prev',value:function prev(){var that=this,availableItems=that.dataSource.length;if(that.disabled||availableItems===0){return;}var previousItem=that._currentIndex;if(that.loop){previousItem=previousItem<=0?availableItems-1:previousItem-1;}else{previousItem=previousItem<=0?0:previousItem-1;}that._goToItem(previousItem);}/**
    * Starts slideShow.
    */},{key:'play',value:function play(){var that=this;if(that.disabled||!that.slideShow){return;}if(that._rotationInterval){clearInterval(that._rotationInterval);}that._handleRotation(true);that._rotate=true;}/**
    * Prevents animation on the selected animation slide immediately after items initialization
    */},{key:'_animationTrigger',value:function _animationTrigger(skip){var that=this;for(var _i380=0;_i380<that._items.length;_i380++){if(_i380===skip){continue;}that._items[_i380].classList.add('jqx-animate-trigger');}}/**
    * In "3d" mode sets positions of carousel items in relation to the active slide.
    */},{key:'_handle3dMode',value:function _handle3dMode(newIndex){var that=this,itemsCount=that.dataSource.length;if(that.disabled||!itemsCount||that.displayMode!=='3d'){return;}newIndex=newIndex||0;for(var _i381=0;_i381<itemsCount;_i381++){var currentPosition=_i381-newIndex;currentPosition?that._items[_i381].setAttribute('position',currentPosition):that._items[_i381].removeAttribute('position');}}/**
    * Enables/disables arrows
    */},{key:'_handleArrowsActiveState',value:function _handleArrowsActiveState(newIndex,oldIndex){var that=this,itemsCount=that.dataSource.length;if(!that.loop){oldIndex===0&&(that.$.arrowLeft.disabled=false);oldIndex===itemsCount-1&&(that.$.arrowRight.disabled=false);newIndex===0&&(that.$.arrowLeft.disabled=true);newIndex===itemsCount-1&&(that.$.arrowRight.disabled=true);}else{that.$.arrowLeft.disabled=that.$.arrowRight.disabled=false;}}/**
    * Handles click on carousel's arrows.
    */},{key:'_handleArrowClick',value:function _handleArrowClick(event){var that=this,previousIndex=that._currentIndex;if(that.disabled){return;}that.$.arrowLeft.contains(event.target)?that.prev():that.next();that._changeEvent(previousIndex,that._currentIndex);}/**
    * Handles slides, set via inner HTML as LI elements.
    */},{key:'_handleDefaultInnerHTML',value:function _handleDefaultInnerHTML(){var that=this;if(that.dataSource&&that.dataSource.length>0){return;}if(that.$.itemsContainer.innerHTML.indexOf('<ul')>=0){var firstUl=that.$.itemsContainer.getElementsByTagName('ul')[0],items=firstUl.getElementsByTagName('li');for(var _i382=0;_i382<items.length;_i382++){var slide={HTMLcontent:items[_i382].innerHTML};that.dataSource.push(slide);}}}/**
    * Handles indicator's state.
    */},{key:'_handleIndicatorsState',value:function _handleIndicatorsState(from,to){var that=this;if(that.disabled||that._indicators.length===0||!from&&from!==0||!to&&to!==0){return;}if(from!==to){that._indicators[from].classList.remove('jqx-active');}that._indicators[to].classList.add('jqx-active');}/**
    * On '3d' mode makes clicked item active
    */},{key:'_handleItemClick',value:function _handleItemClick(event){var that=this,clickedItem=event.target.closest('.jqx-carousel-item');if(that.disabled||!clickedItem||that.displayMode!=='3d'||that.disableItemClick){return;}var itemId=parseInt(clickedItem.getAttribute('item-id')),itemPosition=parseInt(clickedItem.getAttribute('position'));if(Math.abs(itemPosition)>3){return;}that._goToItem(itemId);}/**
    * Handles items's state.
    */},{key:'_handleItemsState',value:function _handleItemsState(from,to){var that=this;if(that.disabled||that._items.length===0||!from&&from!==0||!to&&to!==0){return;}if(from!==to){that._items[from].classList.remove('jqx-active');that._items[from].classList.add('jqx-out');}that._items[to].classList.add('jqx-active');}/**
    * Handles click on indicators.
    */},{key:'_handleIndicatorsContainerClick',value:function _handleIndicatorsContainerClick(event){var that=this,clickedItem=event.target.closest('.jqx-indicator'),previousIndex=that._currentIndex;if(that.disabled||!clickedItem){return;}var itemId=parseInt(clickedItem.getAttribute('indicator-id'));if(previousIndex===itemId){return;}that._goToItem(itemId);that._changeEvent(previousIndex,that._currentIndex);}/**
    * In "multiple" mode sets positions of carousel items in relation to the active slide.
    */},{key:'_handleMultipleMode',value:function _handleMultipleMode(newIndex){var that=this;if(that.displayMode!=='multiple'){return;}var item=that._items[newIndex],itemWidth=item.offsetWidth,containerWidth=that.$.container.offsetWidth,itemsContainerWidth=that.$.itemsContainer.offsetWidth;var itemOffset=0;if(newIndex===0){that.$.itemsContainer.style.marginLeft='0px';return;}else if(newIndex===that._items.length-1){that.$.itemsContainer.style.marginLeft='-'+(itemsContainerWidth-containerWidth)+'px';return;}for(var _i383=0;_i383<newIndex;_i383++){itemOffset=itemOffset+that._items[newIndex].offsetWidth;}if(itemOffset+itemWidth/2>=containerWidth/2&&itemOffset+itemWidth<itemsContainerWidth){that.$.itemsContainer.style.marginLeft='-'+(itemOffset+itemWidth/2-containerWidth/2)+'px';}}/**
    * Fires change/changing events.
    */},{key:'_changeEvent',value:function _changeEvent(from,to){if(from===to){return;}var that=this;that.$.fireEvent('changing',{'index':to,'previousIndex':from});if(!that.hasAnimation){that.$.fireEvent('change',{'index':to,'previousIndex':from});}}/**
    * Handles keyboard navigation.
    */},{key:'_handleKeyDown',value:function _handleKeyDown(event){var that=this,key=event.key,previousIndex=that._currentIndex,allowedKeys=['ArrowLeft','ArrowDown','ArrowRight','ArrowUp','Home','End',' ','Enter'];if(that.disabled||!that.keyboard||allowedKeys.indexOf(key)===-1){return;}switch(key){case'ArrowLeft':case'ArrowDown':that.prev();break;case'ArrowUp':case'ArrowRight':that.next();break;case'Home':that._goToItem(0);break;case'End':that._goToItem(that.dataSource.length-1);break;case' ':that._rotate?that.pause():that.play();break;case'Enter':that.play();break;}that._changeEvent(previousIndex,that._currentIndex);}/**
    * Allows navigation between slides via mouse wheel.
    */},{key:'_handleMouseWheel',value:function _handleMouseWheel(event){var that=this,previousIndex=that._currentIndex;if(that.disabled||!that.wheel||document.activeElement!==that){return;}event.stopPropagation();event.preventDefault();event.deltaY>0?that.next():that.prev();that._changeEvent(previousIndex,that._currentIndex);}/**
    * Start/stop slideShow.
    */},{key:'_handleRotation',value:function _handleRotation(on){var that=this;if(on){that._rotationInterval=setInterval(function(){if(!that.slideShow){return;}that.next();},that.interval);}else{clearInterval(that._rotationInterval);}}/**
    * Slides to next/prev slide on swipeRight/swipeLeft.
    */},{key:'_handleSwipe',value:function _handleSwipe(event){var that=this;if(that.disabled||!that.swipe){return;}event.stopPropagation();event.preventDefault();event.type==='swipeleft'?that.prev():that.next();}/**
    * Generates single indicator item
    */},{key:'_generateIndicator',value:function _generateIndicator(id){var that=this,indicatorContainer=document.createElement('span'),indicatorId=id?id:0;if(that.indicatorTemplate){var template=that._validateTemplate(that.indicatorTemplate);indicatorContainer.innerHTML=that._processItemTemplate(template.content,that.dataSource[indicatorId]);}indicatorContainer.classList.add('jqx-indicator');indicatorContainer.setAttribute('indicator-id',indicatorId);return indicatorContainer;}/**
    * Fills indicators container by generating multiple indicators.
    */},{key:'_generateIndicators',value:function _generateIndicators(){var that=this,itemsCount=that.dataSource.length;var indicators=[],fragment=document.createDocumentFragment();for(var _i384=0;_i384<itemsCount;_i384++){var _item26=that._generateIndicator(_i384);indicators.push(_item26);fragment.appendChild(_item26);}that._indicators=indicators;var indicatorsContainer=that.$.indicatorsContainer;while(indicatorsContainer.firstChild){indicatorsContainer.removeChild(indicatorsContainer.firstChild);}indicatorsContainer.appendChild(fragment);}/**
    * Generates single slide
    */},{key:'_generateItem',value:function _generateItem(id){var that=this,itemContainer=document.createElement('div'),itemId=id?id:0;if(that.itemTemplate){var template=that._validateTemplate(that.itemTemplate);itemContainer.innerHTML=that._processItemTemplate(template.content,that.dataSource[itemId]);}else{var _item27=that.dataSource[itemId];if(typeof _item27==='string'){itemContainer.style.backgroundImage='url("'+_item27+'")';}else{itemContainer.innerHTML='<div class="jqx-carousel-item-container" style="background-image:url(\''+(_item27.image||'')+'\')">\n                        <h2 class="jqx-carousel-item-label">'+(_item27.label||'')+'</h2>\n                        <p class="jqx-carousel-item-content">'+(_item27.content||'')+'</p>\n                    </div>\n                    <div class="jqx-carousel-html-content">'+(_item27.HTMLcontent||'')+'</div>\n                </div>';}}itemContainer.classList.add('jqx-carousel-item');itemContainer.setAttribute('item-id',itemId);return itemContainer;}/**
    * Binds template and data source item
    */},{key:'_processItemTemplate',value:function _processItemTemplate(template,dataSource){var regex=/{{\w+}}/g,bindings=template.match(regex);var processedTemplate=template;if(!bindings||bindings.length===0){return processedTemplate;}bindings.forEach(function(binding){var propertyName=binding.replace('{{','').replace('}}','');processedTemplate=processedTemplate.replace(binding,dataSource[propertyName]||'');});return processedTemplate;}/**
    * Fills slides container by generating multiple items.
    */},{key:'_generateItems',value:function _generateItems(){var that=this,itemsCount=that.dataSource.length;var items=[],fragment=document.createDocumentFragment();for(var _i385=0;_i385<itemsCount;_i385++){var _item28=that._generateItem(_i385);items.push(_item28);fragment.appendChild(_item28);}that._items=items;var itemsContainer=that.$.itemsContainer;while(itemsContainer.firstChild){itemsContainer.removeChild(itemsContainer.firstChild);}itemsContainer.appendChild(fragment);}/**
    * Moves slides to an item with particular index.
    */},{key:'_goToItem',value:function _goToItem(index,fireEvent){var that=this,itemsCount=that.dataSource.length,oldIndex=that._currentIndex;var newIndex=index;if(index<0){newIndex=0;}else if(index>itemsCount-1){newIndex=itemsCount-1;}that._removeFadeOut();that._animationTrigger();that._handleIndicatorsState(oldIndex,newIndex);that._handleItemsState(oldIndex,newIndex);that._currentIndex=newIndex;fireEvent&&that._changeEvent(oldIndex,newIndex);that._handle3dMode(newIndex);that._handleMultipleMode(newIndex);that._handleArrowsActiveState(newIndex,oldIndex);}/**
    * Sets tab index 
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');that.tabIndex=-1;return;}var index=that.tabIndex>0?that.tabIndex:0;that.setAttribute('tabindex',index);that.tabIndex=index;}/**
    * Sets initial values to inner variables, used in latest stage.
    */},{key:'_setInitialState',value:function _setInitialState(){var that=this;that._currentIndex=0;that._indicators=[];that._items=[];that._rotate=false;that._handleDefaultInnerHTML();}/**
    * Sets initial values to inner variables, used in latest stage.
    */},{key:'_validateTemplate',value:function _validateTemplate(template){var that=this;var templateContent='',hasBindings=false,regex=/{{\w+}}/g;if(typeof template==='function'){templateContent=template();}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));that.itemTemplate=null;return;}if(template instanceof HTMLElement){templateContent=template.innerHTML;}else{template=document.getElementById(template);templateContent=template?template.innerHTML:'';}if(regex.exec(templateContent)){hasBindings=true;}return{content:templateContent,hasBindings:hasBindings};}/**
    * Detect animation end and updates animated item's class list
    */},{key:'_handleTransitionEnd',value:function _handleTransitionEnd(event){if(!event.target.classList.contains('jqx-carousel-item')||event.target.getAttribute('position')){return;}var that=this,currentTransitionEndId=event.target.getAttribute('item-id');if(that._lastTransitionEndId===currentTransitionEndId){return;}that._removeFadeOut();this.$.fireEvent('change',{'index':currentTransitionEndId,'previousIndex':that._lastTransitionEndId});that._lastTransitionEndId=currentTransitionEndId;}/**
    * Removes the class related to items fade out effect 
    */},{key:'_removeFadeOut',value:function _removeFadeOut(){var that=this,fadeOutItems=that.$.itemsContainer.getElementsByClassName('jqx-out');if(fadeOutItems.length){for(var _i386=0;_i386<fadeOutItems.length;_i386++){fadeOutItems[_i386].classList.remove('jqx-out');}}}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'autoPlay':{value:false,type:'any'},'dataSource':{value:[],type:'array',reflectToAttribute:false},'delay':{value:200,type:'number'},'displayMode':{allowedValues:['default','multiple','3d'],value:'default',type:'string'},'disableItemClick':{value:false,type:'boolean'},'hideArrows':{value:false,type:'boolean'},'hideIndicators':{value:false,type:'boolean'},'indicatorTemplate':{value:null,type:'any'},'interval':{value:5000,type:'number'},'itemTemplate':{value:null,type:'any'},'keyboard':{value:false,type:'boolean'},'loop':{value:false,type:'boolean'},'messages':{value:{'en':{'htmlTemplateNotSuported':'{{elementType}}:  Browser doesn\'t support HTMLTemplate elements.'}},type:'object',extend:true},'slideShow':{value:false,type:'boolean'},'swipe':{value:false,type:'boolean'},'wheel':{value:false,type:'boolean'}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'arrowLeft.click':'_handleArrowClick','arrowRight.click':'_handleArrowClick','indicatorsContainer.click':'_handleIndicatorsContainerClick','keydown':'_handleKeyDown','swipeleft':'_handleSwipe','swiperight':'_handleSwipe','wheel':'_handleMouseWheel','itemsContainer.click':'_handleItemClick','itemsContainer.transitionend':'_handleTransitionEnd'};}/*
    * Checks for missing modules.
    */},{key:'requires',get:function get(){return{'JQX.RepeatButton':'jqxbutton.js'};}},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.carousel.css'];}}]);return Carousel;}(JQX.ContentElement));/**
 * Chip item custom element.
 */JQX('jqx-chip',function(_JQX$ContentElement7){babelHelpers.inherits(Chip,_JQX$ContentElement7);function Chip(){babelHelpers.classCallCheck(this,Chip);return babelHelpers.possibleConstructorReturn(this,(Chip.__proto__||Object.getPrototypeOf(Chip)).apply(this,arguments));}babelHelpers.createClass(Chip,[{key:'template',/**
     * Chip's HTML template.
     */value:function template(){return'<div id="container">\n                    <span id="avatar" class ="jqx-avatar">[[avatar]]</span><!--\n                --><span id="value" class ="jqx-value" inner-h-t-m-l="[[innerHTML]]"><content></content></span><!--\n                --><span id="closeButton" class ="jqx-close-button"></span>\n            </div>';}/**
    * Updates the Chip when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Chip.prototype.__proto__||Object.getPrototypeOf(Chip.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'disabled':case'unfocusable':that._setFocusable();break;case'avatar':that.itemTemplate?that._setAvatar(that._customAvatar):that._setAvatar(that.$.avatar);break;case'itemTemplate':that._applyTemplate();break;case'value':if(that.itemTemplate){that._applyTemplate();}else{that.$.value.innerHTML=newValue||'';}break;}}},{key:'ready',value:function ready(){babelHelpers.get(Chip.prototype.__proto__||Object.getPrototypeOf(Chip.prototype),'ready',this).call(this);var that=this;that.value=that.value?that.value:that.innerHTML;that._applyTemplate();that._setFocusable();}},{key:'close',value:function close(){var that=this;that.$.fireEvent('close',{'value':that.value});that.parentElement.removeChild(that);}},{key:'_applyTemplate',value:function _applyTemplate(){var that=this;var template=that.itemTemplate;if(!template){that.$.value.innerHTML=that.value;that._setAvatar(that.$.avatar);return;}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(!(template instanceof HTMLTemplateElement)){template=document.getElementById(template);}if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase()}));return;}var templateContent=template.innerHTML;that.$.container.innerHTML=templateContent.replace(/{{\s*value\s*}}/g,that.value);that._customAvatar=that.$.container.querySelector('.jqx-avatar');that._setAvatar(that._customAvatar);}},{key:'_clickHandler',value:function _clickHandler(event){var that=this;if(that.disabled){return;}var target=that.enableShadowDOM?that.shadowRoot.elementFromPoint(event.pageX,event.pageY):event.target;if(!target.closest||!target.closest('.jqx-close-button')){return;}that.close();}/**
     * KeyDown handler.
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;var key=event.key;if(that.disabled||that.readonly||key!=='Delete'){return;}that.close();}},{key:'_setAvatar',value:function _setAvatar(element){if(!element){return;}var that=this,isAvatarImage=/\.(gif|jpg|jpeg|tiff|png)$/i.test(that.avatar);element.innerHTML=isAvatarImage?'<img src="'+that.avatar+'" />':that.avatar||'';}/**
    * Set tabIndex.
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}that.tabIndex=that.tabIndex>0?that.tabIndex:0;}}],[{key:'properties',// Chip item's properties.
get:function get(){return{'avatar':{value:null,type:'string?'},'closeButton':{value:false,type:'boolean'},'itemTemplate':{value:null,type:'any?',reflectToAttribute:false},'value':{value:'',type:'string'}};}/**
     * Chip item's event listeners.
     */},{key:'listeners',get:function get(){return{'click':'_clickHandler','keydown':'_keyDownHandler'};}/**
   * CSS files needed for the element (ShadowDOM)
   */},{key:'styleUrls',get:function get(){return['jqx.chip.css'];}}]);return Chip;}(JQX.ContentElement));/**
 * DateTimePicker custom element.
 */JQX('jqx-date-time-picker',function(_JQX$BaseElement11){babelHelpers.inherits(DateTimePicker,_JQX$BaseElement11);function DateTimePicker(){babelHelpers.classCallCheck(this,DateTimePicker);return babelHelpers.possibleConstructorReturn(this,(DateTimePicker.__proto__||Object.getPrototypeOf(DateTimePicker)).apply(this,arguments));}babelHelpers.createClass(DateTimePicker,[{key:'template',/**
     * DateTimePicker's HTML template.
     */value:function template(){return'<div id="container">\n                    <span id="label" class="jqx-label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                        <input id="input" class="jqx-input jqx-date-time-input" type="text" readonly="[[readonly]]" disabled="[[disabled]]" placeholder="[[placeholder]]" name="[[name]]">\n                        <div id="spinButtonsContainer" class="jqx-spin-buttons-container">\n                            <jqx-repeat-button initial-delay="[[spinButtonsInitialDelay]]" animation="[[animation]]" delay="[[spinButtonsDelay]]" readonly="[[readonly]]" unfocusable id="upButton" class="jqx-spin-button">\n                                <div class="jqx-arrow jqx-arrow-up"></div>\n                            </jqx-repeat-button>\n                            <jqx-repeat-button initial-delay="[[spinButtonsInitialDelay]]" animation="[[animation]]" delay="[[spinButtonsDelay]]" readonly="[[readonly]]" unfocusable id="downButton" class="jqx-spin-button">\n                                <div class="jqx-arrow jqx-arrow-down"></div>\n                            </jqx-repeat-button>\n                        </div>\n                        <div id="calendarButton" class="jqx-drop-down-button jqx-calendar-button"></div>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-date-time-drop-down jqx-visibility-hidden">\n                            <div id="dropDownHeader" class="jqx-drop-down-header jqx-hidden">\n                                <div id="selectDate" class="jqx-selected"></div>\n                                <div id="selectTime"></div>\n                            </div>\n                            <div id="dropDownContent" class="jqx-drop-down-content">\n                                <jqx-calendar id="calendarDropDown" class="jqx-hidden"\n                                              animation="[[animation]]"\n                                              animation-settings="[[animationSettings]]"\n                                              calendar-mode="[[calendarMode]]"\n                                              day-name-format="[[dayNameFormat]]"\n                                              disable-auto-navigation="[[disableAutoNavigation]]"\n                                              display-mode-view="[[displayModeView]]"\n                                              first-day-of-week="[[firstDayOfWeek]]"\n                                              header-template="[[headerTemplate]]"\n                                              hide-day-names="[[hideDayNames]]"\n                                              hide-other-month-days="[[hideOtherMonthDays]]"\n                                              hide-tooltip-arrow="[[hideTooltipArrow]]"\n                                              important-dates="[[importantDates]]"\n                                              important-dates-template="[[importantDatesTemplate]]"\n                                              locale="[[locale]]"\n                                              selection-mode="one"\n                                              spin-buttons-delay="[[spinButtonsDelay]]"\n                                              spin-buttons-initial-delay="[[spinButtonsInitialDelay]]"\n                                              theme="[[theme]]"\n                                              tooltip="[[tooltip]]"\n                                              tooltip-delay="[[tooltipDelay]]"\n                                              tooltip-position="[[tooltipPosition]]"\n                                              tooltip-template="[[tooltipTemplate]]"\n                                              unfocusable="[[unfocusable]]"\n                                              view-sections=\'["header", "footer"]\'\n                                              week-numbers="[[weekNumbers]]"\n                                              weeks="[[weeks]]"></jqx-calendar>\n                            </div>\n                        </div>\n                    </div>\n                    <span id="hint" class="jqx-hint">[[hint]]</span>\n                </div>';}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(DateTimePicker.prototype.__proto__||Object.getPrototypeOf(DateTimePicker.prototype),'attached',this).call(this);if(!that.isCompleted){return;}if(that._defaultFooterTemplateApplied){that._addCalendarFooterListeners();}if(that.$.timePickerDropDown){that._addTimePickerListener();}that._positionDetection.dropDownAttached();}/**
     * Called when the element is detached from the DOM.
     */},{key:'detached',value:function detached(){var that=this;babelHelpers.get(DateTimePicker.prototype.__proto__||Object.getPrototypeOf(DateTimePicker.prototype),'detached',this).call(this);that.close();if(that._defaultFooterTemplateApplied){var footer=that.$.calendarDropDown.$footer;footer.unlisten('change');footer.unlisten('click');footer.unlisten('wheel');}if(that.$.timePickerDropDown){that.$.timePickerDropDown.$.unlisten('change');}that._positionDetection.dropDownDetached();}/**
     * Called when the element is ready. Used for one-time configuration of the DateTimePicker.
     */},{key:'ready',value:function ready(){babelHelpers.get(DateTimePicker.prototype.__proto__||Object.getPrototypeOf(DateTimePicker.prototype),'ready',this).call(this);var that=this;that._edgeMacFF=JQX.Utilities.Core.Browser.Edge||JQX.Utilities.Core.Browser.Firefox&&navigator.platform.toLowerCase().indexOf('mac')!==-1;that._iOS=!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform);if(that._edgeMacFF){that.$dropDownContainer.addClass('not-in-view');}that._defaultFooterTemplate=document.createElement('template');that._defaultFooterTemplate.innerHTML='<div class="jqx-date-time-picker-footer">\n                <div class="jqx-footer-component jqx-footer-component-hour">\n                    <input type="text" class="jqx-hour-element" />\n                    <span>\n                        <jqx-repeat-button initial-delay="0" delay="75">\n                            <span class="jqx-arrow jqx-arrow-up"></span>\n                        </jqx-repeat-button>\n                        <jqx-repeat-button  initial-delay="0" delay="75">\n                            <span class="jqx-arrow jqx-arrow-down"></span>\n                        </jqx-repeat-button>\n                    </span>\n                </div>\n                <div class="jqx-footer-component jqx-footer-component-minute">\n                    <input class="jqx-minute-element" />\n                    <span>\n                        <jqx-repeat-button initial-delay="0" delay="75">\n                            <span class="jqx-arrow jqx-arrow-up"></span>\n                        </jqx-repeat-button>\n                        <jqx-repeat-button initial-delay="0" delay="75">\n                            <span class="jqx-arrow jqx-arrow-down"></span>\n                        </jqx-repeat-button>\n                    </span>\n                </div>\n                <div class="jqx-footer-component jqx-footer-component-ampm">\n                    <input type="text" class="jqx-am-pm-element" />\n                </div>\n                <div class="jqx-footer-component jqx-footer-component-today">\n                    <div tabindex="-1" class="jqx-today-element" title="Now"></div>\n                </div>\n            </div>';that._codeToMethod={'y':'addYears','yy':'addYears','yyyy':'addYears','yyyyy':'addYears','M':'addMonths','MM':'addMonths','MMM':'addMonths','MMMM':'addMonths','d':'addDays','dd':'addDays','ddd':'addDays','dddd':'addDays','H':'addHours','HH':'addHours','h':'addHours','hh':'addHours','m':'addMinutes','mm':'addMinutes','s':'addSeconds','ss':'addSeconds','f':'addDeciseconds','ff':'addCentiseconds','fff':'addMilliseconds','u':'addMicroseconds','uu':'addMicroseconds','n':'addNanoseconds','nn':'addNanoseconds','p':'addPicoseconds','pp':'addPicoseconds','e':'addFemtoseconds','ee':'addFemtoseconds','a':'addAttoseconds','aa':'addAttoseconds','x':'addZeptoseconds','xx':'addZeptoseconds','o':'addYoctoseconds','oo':'addYoctoseconds'};that._codeToIndex={'y':0,'yy':0,'yyyy':0,'yyyyy':0,'M':1,'MM':1,'MMM':1,'MMMM':1,'d':2,'dd':2,'ddd':2,'dddd':2,'H':3,'HH':3,'h':3,'hh':3,'m':4,'mm':4,'s':5,'ss':5,'f':6,'ff':6,'fff':6,'u':7,'uu':7,'n':8,'nn':8,'p':9,'pp':9,'e':10,'ee':10,'a':11,'aa':11,'x':12,'xx':12,'o':13,'oo':13};that._getLocalizedNames();that._validateInitialPropertyValues();that._setFocusable();that._positionDetection=new JQX.Utilities.PositionDetection(that,that.$.dropDownContainer,that.$.content,'close');that._positionDetection.customPositionDropDown=that._positionExternalDropDown;that._positionDetection.getDropDownParent(true);that._positionDetection.setDropDownPosition();that._positionDetection.handleAutoPositioning();that.$.dropDownContainer.setAttribute('animation',that.animation);that.$.dropDownContainer.setAttribute('drop-down-display-mode',that.dropDownDisplayMode);}/**
     * Closes the calendar dropdown.
     */},{key:'close',value:function close(){var that=this;if(!that.opened){return;}that._close();}/**
     * Focuses the input.
     */},{key:'focus',value:function focus(){this.$.input.focus();}},{key:'select',value:function select(){this.$.input.select();}/**
     * Opens the calendar dropdown.
     */},{key:'open',value:function open(){var that=this;if(that.opened){return;}that._open();}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(DateTimePicker.prototype.__proto__||Object.getPrototypeOf(DateTimePicker.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'animation':case'theme':if(that.$.timePickerDropDown){that.$.timePickerDropDown[propertyName]=newValue;}if(propertyName==='animation'){that.$.dropDownContainer.setAttribute('animation',that.animation);if(that._defaultFooterTemplateApplied){Array.from(that.$.calendarDropDown.$.footer.getElementsByTagName('jqx-repeat-button')).forEach(function(button){button.animation=newValue;});}}break;case'calendarButton':that.$.dropDownContainer.style.transition='none';if(!newValue){that.close();}break;case'calendarButtonPosition':that.$.dropDownContainer.style.transition='none';that.close();if(newValue==='left'){that.$.content.insertBefore(that.$.calendarButton,that.$.content.firstElementChild);}else if(that._dropDownParent===null){that.$.content.insertBefore(that.$.calendarButton,that.$.dropDownContainer);}else{that.$.content.appendChild(that.$.calendarButton);}break;case'disabled':if(newValue){that.close();that.$.upButton.disabled=true;that.$.downButton.disabled=true;}else{that._disableSpinButtons();}that._setFocusable();that._positionDetection.handleAutoPositioning();break;case'displayKind':{var oldOutputTimeZone=that._outputTimeZone;switch(newValue){case'unspecified':that._outputTimeZone=that._inputTimeZone;break;case'UTC':that._outputTimeZone='UTC';break;case'local':that._outputTimeZone='Local';break;}if(that._outputTimeZone===oldOutputTimeZone){return;}if(that._value!==null){that.close();that._toSync=true;that._value=that._value.toTimeZone(that._outputTimeZone);that._applyFormatString();}that.min=that.min.toTimeZone(that._outputTimeZone);that.max=that.max.toTimeZone(that._outputTimeZone);for(var _i387=0;_i387<that.restrictedDates.length;_i387++){var currentRestrictedDate=that.restrictedDates[_i387];currentRestrictedDate=currentRestrictedDate.toTimeZone(that._outputTimeZone);}break;}case'dropDownAppendTo':that._positionDetection.dropDownAppendToChangedHandler();break;case'dropDownDisplayMode':that._changeDropDownDisplayMode();break;case'dropDownOverlay':if(!newValue){that._positionDetection.removeOverlay();}break;case'dropDownPosition':that._positionDetection.dropDownPositionChangedHandler();break;case'footerTemplate':if(newValue!==null){that._defaultFooterTemplateApplied=false;var footer=that.$.calendarDropDown.$footer;footer.unlisten('change');footer.unlisten('click');footer.unlisten('wheel');that.$.calendarDropDown.footerTemplate=newValue;}else{that._setDefaultFooterTemplate();var _value25=that._value;that._hourElement.value=_value25.toString('hh');that._minuteElement.value=_value25.toString('mm');that._ampmElement.value=_value25.toString('tt');}break;case'formatString':if(newValue===''){that.formatString='dd-MMM-yy HH:mm:ss.fff';}that._getFormatStringRegExp();that._applyFormatString();if(that.dropDownDisplayMode==='auto'){that._changeDropDownDisplayMode();}break;case'interval':that._validateInterval(oldValue);break;case'locale':case'messages':that.$.selectDate.innerHTML=that.localize('dateTabLabel');that.$.selectTime.innerHTML=that.localize('timeTabLabel');if(that._defaultFooterTemplateApplied){that._todayElement.title=that.localize('now');}if(propertyName==='messages'){return;}that._getLocalizedNames();that.min.calendar.days=that._localizedDays;that.min.calendar.months=that._localizedMonths;that.min.calendar.locale=that.locale;that.max.calendar.days=that._localizedDays;that.max.calendar.months=that._localizedMonths;that.max.calendar.locale=that.locale;if(that.value!==null){that._value.calendar.days=that._localizedDays;that._value.calendar.months=that._localizedMonths;that._value.calendar.locale=that.locale;that.value.calendar.days=that._localizedDays;that.value.calendar.months=that._localizedMonths;that.value.calendar.locale=that.locale;}JQX.Utilities.DateTime.cache=[];that._applyFormatString();break;case'max':case'min':that._validateMinMax(propertyName,oldValue);if(that.validation==='strict'){that._validateValue();}else{that._minMaxChanged=true;}break;case'nullable':if(oldValue===true&&that._value===null){that._validateValue(that._now(),null);}break;case'opened':if(newValue){that._open();}else{that._close();}break;case'readonly':case'unfocusable':if(newValue){that.close();}if(propertyName==='unfocusable'){that._setFocusable();}break;case'restrictedDates':that._validateRestrictedDates();that._validateValue();break;case'spinButtonsPosition':if(newValue==='right'){that.$.content.insertBefore(that.$.spinButtonsContainer,that.$.input.nextElementSibling);}else{that.$.content.insertBefore(that.$.spinButtonsContainer,that.$.input);}break;case'validation':if(newValue==='strict'){delete that._minMaxChanged;that._validateValue();}break;case'value':{var parsedValue=void 0;if(newValue!==null){parsedValue=JQX.Utilities.DateTime.validateDate(newValue,that._now(),that.formatString);parsedValue=parsedValue.toTimeZone(that._outputTimeZone);}else{parsedValue=null;}that._validateValue(parsedValue,that._value,undefined,true);break;}}}/**
     * Adds calendar footer listeners.
     */},{key:'_addCalendarFooterListeners',value:function _addCalendarFooterListeners(){var that=this,footer=that.$.calendarDropDown.$footer;footer.listen('change',that._footerChangeHandler.bind(that));footer.listen('click',that._footerClickHandler.bind(that));footer.listen('wheel',that._footerWheelHandler.bind(that));}/**
     * Adds time picker change event listener.
     */},{key:'_addTimePickerListener',value:function _addTimePickerListener(){var that=this;that.$.timePickerDropDown.$.listen('change',function(event){var oldContext=that.context,newTimePickerValue=event.detail.value,updatedValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(that._value!==null?that._value:that._now());that.context=that;updatedValueConstructorParameters[3]=newTimePickerValue.getHours();updatedValueConstructorParameters[4]=newTimePickerValue.getMinutes();that._timePickerInitiatedChange=true;updatedValueConstructorParameters.unshift(null);that._validateValue(new(Function.prototype.bind.apply(JQX.Utilities.DateTime,updatedValueConstructorParameters))());that._timePickerInitiatedChange=false;that.context=oldContext;});}/**
     * Applies format string.
     */},{key:'_applyFormatString',value:function _applyFormatString(){var that=this;if(that.value!==null){that.$.input.value=that._value.toString(that.formatString);}}},{key:'_calendarButtonMouseEnterHandler',value:function _calendarButtonMouseEnterHandler(){var that=this;that.$.calendarButton.setAttribute('hover','');}},{key:'_calendarButtonMouseLeaveHandler',value:function _calendarButtonMouseLeaveHandler(){var that=this;that.$.calendarButton.removeAttribute('hover');}/**
     * Calendar button click handler.
     */},{key:'_calendarButtonClickHandler',value:function _calendarButtonClickHandler(event){var that=this;that._highlightedTimePart=undefined;if(that.disabled||that.readonly){return;}if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(that.$.calendarButton,event.pageX,event.pageY);}if(that.opened){that._close();}else{that._open();}}/**
     * Calendar dropdown change handler.
     */},{key:'_calendarDropDownChangeHandler',value:function _calendarDropDownChangeHandler(event){var that=this;event.stopPropagation();if(that._disregardCalendarChangeEvent){that._disregardCalendarChangeEvent=false;return;}if(this.$.calendarDropDown.selectedDates.length>0){var newCalendarValue=event.detail.value[0],oldValue=that._value!==null?that._value:that._now(),updatedValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(oldValue);updatedValueConstructorParameters[0]=newCalendarValue.getFullYear();updatedValueConstructorParameters[1]=newCalendarValue.getMonth()+1;updatedValueConstructorParameters[2]=newCalendarValue.getDate();that._calendarInitiatedChange=true;updatedValueConstructorParameters.unshift(null);that._validateValue(new(Function.prototype.bind.apply(JQX.Utilities.DateTime,updatedValueConstructorParameters))());if(that._defaultFooterTemplateApplied){var _value26=that._value;if(that._hourElement.value===''){that._hourElement.value=_value26.toString('hh');}if(that._ampmElement.value===''){that._ampmElement.value=_value26.toString('tt');}if(that._minuteElement.value===''){that._minuteElement.value=_value26.toString('mm');}}that._calendarInitiatedChange=false;}else{that._setNullValue();}}/**
     * Calendar dropdown click handler.
     */},{key:'_calendarDropDownClickHandler',value:function _calendarDropDownClickHandler(event){var that=this;if(that.autoClose&&event.target.closest('.jqx-calendar-cell')){clearTimeout(that._autoCloseTimeout);that._autoCloseTimeout=setTimeout(function(){that.close();},that.autoCloseDelay);}}/**
     * Changes dropdown display mode.
     */},{key:'_changeDropDownDisplayMode',value:function _changeDropDownDisplayMode(){function toggleVisibility(dropDownHeader,calendarDropDown,timePickerDropDown,sync){that.$dropDownHeader[dropDownHeader]('jqx-hidden');that.$calendarDropDown[calendarDropDown]('jqx-hidden');if(that._timePickerInitialized){that.$.timePickerDropDown.$[timePickerDropDown]('jqx-hidden');}if(sync){if(that.opened){that.$.calendarDropDown._refreshTitle();}else{that._toSync=true;}}}var that=this,oldDropDownDisplayMode=that._dropDownDisplayMode;that._detectDisplayMode();if(that._dropDownDisplayMode===oldDropDownDisplayMode){return;}if(that._dropDownDisplayMode==='default'){that.$.calendarDropDown.viewSections=['title','header'];that.$selectDate.addClass('jqx-selected');that.$selectTime.removeClass('jqx-selected');toggleVisibility('removeClass','removeClass','addClass',true);}else if(that._dropDownDisplayMode==='classic'){that.$.calendarDropDown.viewSections=['header','footer'];toggleVisibility('addClass','removeClass','addClass');}else if(that._dropDownDisplayMode==='calendar'){that.$.calendarDropDown.viewSections=['title','header'];toggleVisibility('addClass','removeClass','addClass',true);}else{toggleVisibility('addClass','addClass','removeClass');if(!that._timePickerInitialized){that._initializeTimePicker();}}that.$.dropDownContainer.setAttribute('drop-down-display-mode',that.dropDownDisplayMode);}/**
     * Clones the value object.
     */},{key:'_cloneValue',value:function _cloneValue(){var that=this;if(that._value!==null){return that._value.clone();}else{return null;}}/**
     * Closes the calendar dropdown.
     */},{key:'_close',value:function _close(){var that=this,closingEvent=that.$.fireEvent('closing');if(!closingEvent.defaultPrevented){that.$.calendarDropDown.disabled=true;that.$calendarButton.removeClass('jqx-calendar-button-pressed');that.$.calendarButton.removeAttribute('active');that.$dropDownContainer.addClass('jqx-visibility-hidden');that.opened=false;that._positionDetection.removeOverlay(true);that.$.fireEvent('close');if(that._edgeMacFF&&!that.hasAnimation){that.$.dropDownContainer.style.top=null;that.$.dropDownContainer.style.left=null;that.$dropDownContainer.addClass('not-in-view');}}else{that.opened=true;}}/**
     * Detects dropdown display mode.
     */},{key:'_detectDisplayMode',value:function _detectDisplayMode(){var that=this;if(that.dropDownDisplayMode!=='auto'){that._dropDownDisplayMode=that.dropDownDisplayMode;}else{that._dropDownDisplayMode=JQX.Utilities.DateTime.detectDisplayMode(that.value||that.min,that.formatString,that._formatStringRegExp);}if(that._dropDownDisplayMode==='timePicker'){that.$calendarButton.addClass('time');if(that.placeholder==='Enter date'){that.placeholder='Enter time';}}else{that.$calendarButton.removeClass('time');if(that.placeholder==='Enter time'){that.placeholder='Enter date';}}if(that._dropDownDisplayMode==='default'){that.$dropDownContent.removeClass('partial');}else{that.$dropDownContent.addClass('partial');}}/**
     * Disables or enables spin buttons.
     */},{key:'_disableSpinButtons',value:function _disableSpinButtons(){var that=this;if(that.disabled){return;}var disabled=that._value===null;that.$.upButton.disabled=disabled;that.$.downButton.disabled=disabled;}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement,target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;if(!JQX.Utilities.Core.isMobile&&activeElement===that.$.input&&that.editMode==='partial'&&that._value!==null&&(target!==that.$.input||that.$.input.selectionStart===that.$.input.selectionEnd)){that._highlightedTimePartEdit=false;that._validateValue(that.$.input.value,that._cloneValue(),false);that._highlightTimePartBasedOnCursor();}else{if(target!==that.$.calendarButton&&!that.$.dropDownContainer.contains(target)&&!that.$.dropDownContainer.contains(that._getRootShadowHost(target))){that.close();if(activeElement!==that.$.input&&!that.contains(target)){that._highlightedTimePart=undefined;}}}that._mouseFocus=false;}/**
     * Returns the root node of an element inside the shadowDOM of a child element
     * @param {any} target
     */},{key:'_getRootShadowHost',value:function _getRootShadowHost(target){var that=this;if(!that.enableShadowDOM){return;}var host=target.getRootNode().host,rootHost=void 0;while(host&&host!==that&&host!==document){rootHost=host;host=host.getRootNode().host;}return rootHost;}/**
     * Dropdown header click handler
     */},{key:'_dropDownHeaderClickHandler',value:function _dropDownHeaderClickHandler(event){var that=this;if(event.target===that.$.selectDate){if(that.$selectDate.hasClass('jqx-selected')){return;}that.$selectDate.addClass('jqx-selected');that.$selectTime.removeClass('jqx-selected');that.$.timePickerDropDown.$.addClass('jqx-hidden');that.$calendarDropDown.removeClass('jqx-hidden');}else{if(that.$selectTime.hasClass('jqx-selected')){return;}that.$selectDate.removeClass('jqx-selected');that.$selectTime.addClass('jqx-selected');that.$calendarDropDown.addClass('jqx-hidden');if(that._timePickerInitialized){that.$.timePickerDropDown.$.removeClass('jqx-hidden');}else{that._initializeTimePicker();}}}/**
     * Dropdown keydown handler.
     */},{key:'_dropDownKeydownHandler',value:function _dropDownKeydownHandler(event){var that=this,key=event.key,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(that.$.dropDownHeader.contains(activeElement)&&(key==='Enter'||key===' ')){event.preventDefault();that._dropDownHeaderClickHandler({target:activeElement});}else if(key==='Escape'||event.altKey&&key==='ArrowUp'){event.preventDefault();that.close();that.$.input.focus();}else if((key==='Enter'||key===' ')&&activeElement.classList.contains('jqx-footer-component-today')){event.preventDefault();that._validateValue(that._now());that.close();}else if(key==='Enter'&&(activeElement===that.$.calendarDropDown.$.body&&that.$.calendarDropDown.querySelectorAll('.jqx-calendar-cell[selected][focus]').length>0||that._timePickerInitialized&&activeElement===that.$.timePickerDropDown.$.picker)){event.preventDefault();that.close();}}/**
     * Dropdown transitionend handler.
     */},{key:'_dropDownTransitionendHandler',value:function _dropDownTransitionendHandler(){var that=this;if(!that.hasAnimation){return;}if(that.opened&&that._toFocus){that._toFocus.focus();delete that._toFocus;if(that._timePickerInitialized&&!that.$.timePickerDropDown.classList.contains('jqx-hidden')){requestAnimationFrame(function(){return that.$.timePickerDropDown._highlightLabel();});}return;}if(that._edgeMacFF&&!that.opened){that.$.dropDownContainer.style.top=null;that.$.dropDownContainer.style.left=null;that.$dropDownContainer.addClass('not-in-view');return;}}/**
     * Footer change handler.
     */},{key:'_footerChangeHandler',value:function _footerChangeHandler(event){var that=this,oldContext=that.context,target=event.target,dateTimePickerValue=that._value!==null?that._value:that._now();var value=target.value,timePartCode=void 0;that.context=that;event.stopPropagation();if(target.classList.contains('jqx-hour-element')){value=parseInt(value,10);if(isNaN(value)||value<0||value>12){target.value=dateTimePickerValue.toString('hh');return;}if(value>0&&value<12&&dateTimePickerValue.toString('tt')==='PM'){value+=12;}timePartCode='hh';}else if(target.classList.contains('jqx-minute-element')){value=parseInt(value,10);if(isNaN(value)||value<0||value>59){target.value=dateTimePickerValue.toString('mm');return;}timePartCode='mm';}else{if(that._value===null){target.value='';return;}var oldValue=dateTimePickerValue.toString('tt');value=value.toLowerCase();if(oldValue==='PM'&&(value==='a'||value==='am')||oldValue==='AM'&&(value==='p'||value==='pm')){that._incrementDecrement(undefined,'tt');target.value=that._value.toString('tt');}else{target.value=oldValue;}return;}var newValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(dateTimePickerValue);newValueConstructorParameters[that._codeToIndex[timePartCode]]=value;newValueConstructorParameters.unshift(null);that._validateValue(new(Function.prototype.bind.apply(JQX.Utilities.DateTime,newValueConstructorParameters))());target.value=that._value.toString(timePartCode);that.context=oldContext;}/**
     * Footer click handler.
     */},{key:'_footerClickHandler',value:function _footerClickHandler(event){var that=this,oldContext=that.context,target=event.target;that.context=that;if(target.classList.contains('jqx-today-element')){// "Now" icon is clicked
that._validateValue(that._now());if(that.autoClose){clearTimeout(that._autoCloseTimeout);that._autoCloseTimeout=setTimeout(function(){that.close();},that.autoCloseDelay);}}else{var closestRepeatButton=target.closest('jqx-repeat-button');if(closestRepeatButton!==null){var decrement=closestRepeatButton===closestRepeatButton.parentElement.children[1],timePartCode=closestRepeatButton.closest('.jqx-footer-component').classList.contains('jqx-footer-component-hour')?'hh':'mm';that._incrementDecrement(decrement,timePartCode);}}that.context=oldContext;}/**
     * Footer wheel handler.
     */},{key:'_footerWheelHandler',value:function _footerWheelHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(that.enableMouseWheelAction&&event.target instanceof HTMLInputElement&&activeElement===event.target){var oldContext=that.context,target=event.target;that.context=that;if(target.classList.contains('jqx-hour-element')){that._incrementDecrement(event.deltaY>0,'hh');}else if(target.classList.contains('jqx-minute-element')){that._incrementDecrement(event.deltaY>0,'mm');}else{that._incrementDecrement(undefined,'tt');}that.context=oldContext;event.stopPropagation();}}/**
     * Gets and highlights a time part.
     */},{key:'_getAndHighlightTimePart',value:function _getAndHighlightTimePart(matchIndex,regExpIndex,index){var that=this;that._programmaticSelection=true;if(that.$.input.selectionStart!==matchIndex||that.$.input.selectionEnd!==regExpIndex){that.$.input.setSelectionRange(matchIndex,regExpIndex);}else{setTimeout(function(){that.$.input.setSelectionRange(matchIndex,regExpIndex);},200);}that._highlightedTimePart={code:that._formatStringRegExp.groups[index],index:index,from:matchIndex,to:regExpIndex};}/**
     * Gets format string regular expression.
     */},{key:'_getFormatStringRegExp',value:function _getFormatStringRegExp(){var that=this;that._formatStringRegExp=that.min.getParseRegExp(that.min.calendar,that.formatString.replace(/y+/g,'yyyyy'));that._formatStringRegExp.regExp=new RegExp(that._formatStringRegExp.regExp);}/**
     * Gets and stores month and day names based on locale.
     */},{key:'_getLocalizedNames',value:function _getLocalizedNames(){var that=this,localizedNames=JQX.Utilities.DateTime.getLocalizedNames(that.locale);that._localizedDays=localizedNames.days;that._localizedMonths=localizedNames.months;that.$.selectDate.innerHTML=that.localize('dateTabLabel');that.$.selectTime.innerHTML=that.localize('timeTabLabel');}/**
     * Handles manual time part edit.
     */},{key:'_handleManualTimePartEdit',value:function _handleManualTimePartEdit(newTimePartValue){var that=this,newValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(that._value);newTimePartValue=newTimePartValue[that._highlightedTimePart.index+1];if(!isNaN(newTimePartValue)){if(that._highlightedTimePart.code==='f'){newTimePartValue=parseInt(newTimePartValue,10)*100;}else if(that._highlightedTimePart.code==='ff'){newTimePartValue=parseInt(newTimePartValue,10)*10;}else if(that._highlightedTimePart.code.indexOf('y')!==-1&&newTimePartValue.length<3){var yearCutoff=that.yearCutoff.toString(),threshold=parseInt(yearCutoff.slice(2),10);var decade=parseInt(yearCutoff.slice(0,2),10);newTimePartValue=parseInt(newTimePartValue,10);if(newTimePartValue<threshold){decade++;}newTimePartValue=newTimePartValue.toString();newTimePartValue=decade+''+'0'.repeat(2-newTimePartValue.length)+newTimePartValue;}else if(that._highlightedTimePart.code.indexOf('h')!==-1){var previousHours=that._value.hour();newTimePartValue=parseInt(newTimePartValue,10);if(previousHours>11&&newTimePartValue<=11){newTimePartValue+=12;}}newValueConstructorParameters[that._codeToIndex[that._highlightedTimePart.code]]=parseInt(newTimePartValue,10);}else if(that._codeToIndex[that._highlightedTimePart.code]===1){// month name has been entered
var index=-1;if(newTimePartValue.length>1){that._localizedMonths.names.some(function(element,i){if(element.toLowerCase().indexOf(newTimePartValue.toLowerCase())!==-1){index=i;return true;}});}if(index!==-1){newValueConstructorParameters[1]=index+1;}else{that._applyFormatString();return;}}try{newValueConstructorParameters.unshift(null);that._validateValue(new(Function.prototype.bind.apply(JQX.Utilities.DateTime,newValueConstructorParameters))());}catch(error){that._applyFormatString();}}/**
     * Highlights a time part based on the cursor's position in the input.
     */},{key:'_highlightTimePartBasedOnCursor',value:function _highlightTimePartBasedOnCursor(caretPosition){var that=this,inputValue=that.$.input.value,matches=that._formatStringRegExp.regExp.exec(inputValue);function getCaretPosition(){if(caretPosition===undefined){return that.$.input.selectionStart;}return caretPosition;}if(matches===null){that._highlightedTimePart=undefined;return;}if(!that._iOS&&caretPosition===undefined){caretPosition=that.$.input.selectionStart;}var regExpIndex=matches.index,matchIndex=void 0;for(var _i388=1;_i388<matches.length;_i388++){var match=matches[_i388];matchIndex=inputValue.indexOf(match,regExpIndex);regExpIndex=matchIndex+match.length;if(_i388===1&&getCaretPosition()<matchIndex){that._getAndHighlightTimePart(matchIndex,regExpIndex,0);break;}if(getCaretPosition()>=matchIndex&&getCaretPosition()<=regExpIndex){that._getAndHighlightTimePart(matchIndex,regExpIndex,_i388-1);break;}var nextMatch=matches[_i388+1];if(nextMatch){var indexOfNextMatch=inputValue.indexOf(nextMatch,regExpIndex);if(getCaretPosition()>regExpIndex&&getCaretPosition()<indexOfNextMatch){if(getCaretPosition()-regExpIndex<=indexOfNextMatch-getCaretPosition()){that._getAndHighlightTimePart(matchIndex,regExpIndex,_i388-1);}else{that._formatStringRegExp.groups[_i388];that._programmaticSelection=true;that.$.input.setSelectionRange(indexOfNextMatch,indexOfNextMatch+nextMatch.length);}break;}}else{that._programmaticSelection=true;that.$.input.setSelectionRange(matchIndex,regExpIndex);that._highlightedTimePart={code:that._formatStringRegExp.groups[_i388-1],index:_i388-1,from:matchIndex,to:regExpIndex};break;}}}/**
     * Highlights a time part based on its index in the format string.
     */},{key:'_highlightTimePartBasedOnIndex',value:function _highlightTimePartBasedOnIndex(index){var that=this,inputValue=that.$.input.value,matches=that._formatStringRegExp.regExp.exec(inputValue);if(matches===null){that._validateValue(undefined,that._cloneValue(),false);that._highlightTimePartBasedOnIndex(index);return;}var regExpIndex=matches.index,matchIndex=void 0;var activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(index<0||index>=matches.length){return;}if(that.$.input!==activeElement){that.$.input.focus();}for(var _i389=1;_i389<matches.length;_i389++){var match=matches[_i389];matchIndex=inputValue.indexOf(match,regExpIndex);regExpIndex=matchIndex+match.length;if(index===_i389-1){that._getAndHighlightTimePart(matchIndex,regExpIndex,index);break;}}}/**
     * Increments or decrements the value.
     */},{key:'_incrementDecrement',value:function _incrementDecrement(decrement,timePartCode){var that=this,oldValue=that._cloneValue();if(that._minMaxChanged){that._value=that._rangeValidation(that._value);delete that._minMaxChanged;}if(timePartCode===undefined&&that._highlightedTimePart){timePartCode=that._highlightedTimePart.code;}if(timePartCode!==undefined){if(timePartCode==='z'||timePartCode==='zz'||timePartCode==='zzz'){that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index);return;}if(timePartCode==='t'||timePartCode==='tt'){that._value=that._value.addHours(that._value.hour()<12?12:-12,true);}else{that._value=that._value[that._codeToMethod[timePartCode]](decrement?-1:1,true);}that._validateValue(undefined,oldValue,false);if(that._highlightedTimePart){that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index);}}else{that._value=that._value.add(decrement?that.interval.negate():that.interval,undefined,true);that._validateValue(undefined,oldValue,false);}if(oldValue.compare(that._value)!==0){that.$.fireEvent('change',{'oldValue':oldValue.toTimeZone(that._inputTimeZone),'value':that.value});}}/**
     * Initializes TimePicker instance.
     */},{key:'_initializeTimePicker',value:function _initializeTimePicker(){var that=this;var timePickerDropDown=document.createElement('jqx-time-picker');timePickerDropDown.animation=that.animation;timePickerDropDown.theme=that.theme;timePickerDropDown.value=that._value!==null?that._value.toDate():that._now();that.$.timePickerDropDown=timePickerDropDown;timePickerDropDown.$=JQX.Utilities.Extend(timePickerDropDown);that.$.dropDownContent.appendChild(timePickerDropDown);that._timePickerInitialized=true;that._addTimePickerListener();}/**
     * Input blur handler.
     */},{key:'_inputBlurHandler',value:function _inputBlurHandler(){var that=this;that.removeAttribute('focus');that._fullEdit=false;that._highlightedTimePartEdit=false;}/**
     * Input change handler.
     */},{key:'_inputChangeHandler',value:function _inputChangeHandler(event){var that=this;if(event){event.stopPropagation();}if(that.$.input.value===''){that._setNullValue();return;}if(that._fullEdit||that._value===null){that._fullEdit=false;that._validateValue(that.$.input.value);that._highlightTimePartBasedOnCursor();}else if(that._highlightedTimePartEdit){that._highlightedTimePartEdit=false;var newTimePartValue=that._formatStringRegExp.regExp.exec(that.$.input.value);if(newTimePartValue!==null){that._handleManualTimePartEdit(newTimePartValue);}else{that._applyFormatString();}}}/**
     * Input dragstart handler.
     */},{key:'_inputDragstartHandler',value:function _inputDragstartHandler(event){event.preventDefault();}/**
     * Input focus handler.
     */},{key:'_inputFocusHandler',value:function _inputFocusHandler(){var that=this;that.setAttribute('focus','');if(that.editMode!=='full'){var timeout=JQX.Utilities.Core.isMobile?10:0;// Timeout is necessary due to an issue in Chrome (https://bugs.chromium.org/p/chromium/issues/detail?id=526516)
setTimeout(function(){if(that._iOS){that._highlightTimePartBasedOnCursor();}else if(that._mouseFocus!==true){if(that._highlightedTimePart===undefined){that._highlightTimePartBasedOnCursor(that._iOS?undefined:0);}else{that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index);}}},timeout);}}/**
     * Input keydown handler.
     */},{key:'_inputKeydownHandler',value:function _inputKeydownHandler(event){var that=this,editMode=that.editMode,key=event.key;if(key==='Tab'){return;}if(event.altKey&&key==='ArrowDown'){event.preventDefault();that.open();return;}if(key==='Escape'||event.altKey&&key==='ArrowUp'){event.preventDefault();that.close();return;}if(editMode==='full'){that._fullEdit=true;return;}else if(editMode==='partial'){if(key==='Delete'){if(that._value!==null){that._setNullValue();event.preventDefault();}return;}if(that._value===null){that._validateValue(that._now(),null,false);that._highlightTimePartBasedOnIndex(0);}if(['/','.','-',',',' '].indexOf(key)!==-1){that._inputChangeHandler();that._navigateToNextTimePart();event.preventDefault();return;}else if(key==='Backspace'){that._resetTimePart();if(that._highlightedTimePart.index>0){that._navigateToPreviousTimePart();}else{that._highlightTimePartBasedOnIndex(0);}event.preventDefault();return;}}else if(that._fullEdit||that._highlightedTimePartEdit||that.readonly||['Alt','Control','Shift'].indexOf(key)!==-1||event.altKey||event.ctrlKey){return;}if(['End','Home','ArrowLeft','ArrowUp','ArrowRight','ArrowDown'].indexOf(key)===-1){if(that._highlightedTimePart){if(editMode!=='partial'&&that._highlightedTimePart.to-that._highlightedTimePart.from!==that.$.input.selectionEnd-that.$.input.selectionStart){that._fullEdit=true;return;}var code=that._highlightedTimePart.code;if(code==='ddd'||code==='dddd'||code==='z'||code==='zz'||code==='zzz'||code==='t'||code==='tt'){// weekday name, time zone offset and a.m./p.m. cannot be edited
event.preventDefault();return;}else if(editMode==='partial'&&code!=='MMM'&&code!=='MMMM'&&new RegExp(/^\d+$/).test(key)===false){if(key.length<2||key.charAt(0)!=='F'){event.preventDefault();}return;}that._highlightedTimePartEdit=true;}return;}event.preventDefault();if(editMode==='partial'&&that._highlightedTimePartEdit){that._inputChangeHandler();}if(that._value===null){return;}switch(key){case'End':that._highlightTimePartBasedOnIndex(that._formatStringRegExp.groups.length-1);break;case'Home':that._highlightTimePartBasedOnIndex(0);break;case'ArrowLeft':that._navigateToPreviousTimePart();break;case'ArrowUp':that._incrementDecrement();break;case'ArrowRight':that._navigateToNextTimePart();break;case'ArrowDown':that._incrementDecrement(true);break;}}/**
     * Input mousedown handler.
     */},{key:'_inputDownHandler',value:function _inputDownHandler(){var that=this;if(that._fullEdit||that._highlightedTimePartEdit||that.editMode==='full'||JQX.Utilities.Core.isMobile){return;}// Timeout is necessary due to an issue in Chrome (https://bugs.chromium.org/p/chromium/issues/detail?id=526516)
setTimeout(function(){that._mouseFocus=true;that._highlightTimePartBasedOnCursor();},0);}/**
     * Input paste handler.
     */},{key:'_inputPasteHandler',value:function _inputPasteHandler(event){var that=this;if(that.editMode==='partial'){event.preventDefault();}else{this._fullEdit=true;}}/**
     * Input select handler.
     */},{key:'_inputSelectHandler',value:function _inputSelectHandler(){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(that.editMode!=='partial'||activeElement!==that.$.input){return;}if(that._programmaticSelection===true){that._programmaticSelection=false;}else{if(that._highlightedTimePart){that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index);}else{that._highlightTimePartBasedOnIndex(0);}}}/**
     * Input up handler.
     */},{key:'_inputUpHandler',value:function _inputUpHandler(){var that=this;if(JQX.Utilities.Core.isMobile){if(that._iOS){that._mouseFocus=true;setTimeout(function(){if(document.activeElement===that.$.input){that._highlightTimePartBasedOnCursor();}},50);}else{// Timeout is necessary due to an issue in Chrome (https://bugs.chromium.org/p/chromium/issues/detail?id=526516)
setTimeout(function(){that._mouseFocus=true;that._highlightTimePartBasedOnCursor();},10);}}}/**
     * Input wheel handler.
     */},{key:'_inputWheelHandler',value:function _inputWheelHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(activeElement===that.$.input&&that.enableMouseWheelAction&&!that.disabled&&!that.readonly){event.preventDefault();that._incrementDecrement(event.deltaY>0);}}/**
     * Checks if a date is restricted.
     */},{key:'_isRestricted',value:function _isRestricted(date){var restrictedDates=this.restrictedDates;var isRestricted=false;for(var _i390=0;_i390<restrictedDates.length;_i390++){if(date.equalDateParts(restrictedDates[_i390])){isRestricted=true;break;}}return isRestricted;}/**
     * Mouseout handler.
     */},{key:'_mouseoutHandler',value:function _mouseoutHandler(event){var that=this,target=event.target;if(!that.disabled&&(target===that.$.input||target===that.$.calendarButton)){target.removeAttribute('hover');that.removeAttribute('hover');}}/**
     * Mouseover handler.
     */},{key:'_mouseoverHandler',value:function _mouseoverHandler(event){var that=this,target=event.target;if(!that.disabled&&(target===that.$.input||target===that.$.calendarButton)){target.setAttribute('hover','');that.setAttribute('hover','');}}/**
     * Navigates to next time part (if any).
     */},{key:'_navigateToNextTimePart',value:function _navigateToNextTimePart(){var that=this;that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index+1);}/**
     * Navigates to previous time part (if any).
     */},{key:'_navigateToPreviousTimePart',value:function _navigateToPreviousTimePart(){var that=this;that._highlightTimePartBasedOnIndex(that._highlightedTimePart.index-1);}/**
     * Returns a new DateTime object with the current time.
     */},{key:'_now',value:function _now(){var that=this,now=new JQX.Utilities.DateTime('today','Local');if(that._outputTimeZone!=='Local'){return now.toTimeZone(that._outputTimeZone);}return now;}/**
     * Opens the calendar dropdown.
     */},{key:'_open',value:function _open(){var that=this;if(that.disabled||that.readonly){that.opened=false;return;}var openingEvent=that.$.fireEvent('opening');if(openingEvent.defaultPrevented){that.opened=false;return;}if(that._edgeMacFF){that.$dropDownContainer.removeClass('not-in-view');}that.$.dropDownContainer.style.transition='';that.$.calendarDropDown.disabled=false;that.$calendarButton.addClass('jqx-calendar-button-pressed');that.$.calendarButton.setAttribute('active','');if(that._dropDownDisplayMode!=='default'&&that._dropDownDisplayMode!=='timePicker'||!that._timePickerInitialized||that._timePickerInitialized&&that.$.timePickerDropDown.$.hasClass('jqx-hidden')){that.$calendarDropDown.removeClass('jqx-hidden');}that.opened=true;that._positionDetection.placeOverlay();that._positionDetection.checkBrowserBounds('vertically');that._positionDetection.positionDropDown();that._positionDetection.checkBrowserBounds('horizontally');that.$dropDownContainer.removeClass('jqx-visibility-hidden');that.$.fireEvent('open');if(that._toSync){var _value27=that._value;if(_value27!==null){that._disregardCalendarChangeEvent=true;that.$.calendarDropDown.selectedDates=[_value27.toDate()];if(that._defaultFooterTemplateApplied){that._hourElement.value=_value27.toString('hh');that._minuteElement.value=_value27.toString('mm');that._ampmElement.value=_value27.toString('tt');}if(that._timePickerInitialized){that.$.timePickerDropDown.value=_value27.toDate();}}else{var oldContext=that.$.calendarDropDown.context;that.$.calendarDropDown.context=that.$.calendarDropDown;that.$.calendarDropDown._clearSelection(true);that.$.calendarDropDown.context=oldContext;if(that._defaultFooterTemplateApplied){that._hourElement.value='';that._minuteElement.value='';that._ampmElement.value='';}}that._toSync=false;}var toFocus=void 0;switch(that._dropDownDisplayMode){case'default':if(that.$selectDate.hasClass('jqx-selected')){toFocus=that.$.calendarDropDown;}else{toFocus=that.$.timePickerDropDown.$.picker;}break;case'classic':case'calendar':toFocus=that.$.calendarDropDown;break;case'timePicker':toFocus=that.$.timePickerDropDown.$.picker;break;}if(that.hasAnimation){that._toFocus=toFocus;}else{toFocus.focus();}}/**
     * Positions external dropdown.
     */},{key:'_positionExternalDropDown',value:function _positionExternalDropDown(elementRect){var that=this.context,buttonOnTheRight=!that.calendarButton||that.calendarButtonPosition==='right',dropDownPosition=that._dropDownListPosition,dropDown=that.$.dropDownContainer;var left=buttonOnTheRight?elementRect.right-dropDown.offsetWidth:elementRect.left,top=void 0;switch(dropDownPosition){case'bottom':top=elementRect.bottom;break;case'overlay-top':top=elementRect.bottom-dropDown.offsetHeight;break;case'overlay-center':top=elementRect.top+elementRect.height/2-dropDown.offsetHeight/2;break;case'overlay-bottom':top=elementRect.top;break;case'top':top=elementRect.top-dropDown.offsetHeight;break;case'center-bottom':case'center-top':if(dropDownPosition==='center-bottom'){top=elementRect.bottom+5;}else{top=elementRect.top-5-dropDown.offsetHeight;}if(buttonOnTheRight){left=elementRect.right-dropDown.offsetWidth/2-that.$.calendarButton.offsetWidth/2;}else{left=elementRect.left-dropDown.offsetWidth/2+that.$.calendarButton.offsetWidth/2;}break;}return{left:left,top:top};}/**
     * Returns a date in the range between "min" and "max"
     */},{key:'_rangeValidation',value:function _rangeValidation(initialDate){var that=this;if(initialDate.compare(that.min)===-1){return that.min.clone();}else if(initialDate.compare(that.max)===1){return that.max.clone();}else{return initialDate;}}/**
     * Resets a time part
     */},{key:'_resetTimePart',value:function _resetTimePart(){var that=this,code=that._highlightedTimePart.code,index=that._codeToIndex[code],newValueConstructorParameters=JQX.Utilities.DateTime.getConstructorParameters(that._value);var value=void 0;if(index>2){value=0;}else if(index>0){value=1;}else{value=that.min.year();}newValueConstructorParameters[index]=value;newValueConstructorParameters.unshift(null);that._validateValue(new(Function.prototype.bind.apply(JQX.Utilities.DateTime,newValueConstructorParameters))());}/**
     * Sets default footer template
     */},{key:'_setDefaultFooterTemplate',value:function _setDefaultFooterTemplate(initialization){var that=this;that.$.calendarDropDown.footerTemplate=that._defaultFooterTemplate;if(initialization){that.$.calendarDropDown._handleLayoutTemplate(that.$.calendarDropDown.$.footer,that._defaultFooterTemplate);}that._hourElement=that.$.calendarDropDown.getElementsByClassName('jqx-hour-element')[0];that._minuteElement=that.$.calendarDropDown.getElementsByClassName('jqx-minute-element')[0];that._ampmElement=that.$.calendarDropDown.getElementsByClassName('jqx-am-pm-element')[0];that._todayElement=that.$.calendarDropDown.getElementsByClassName('jqx-today-element')[0];that._todayElement.title=that.localize('now');Array.from(that.$.calendarDropDown.$.footer.getElementsByTagName('jqx-repeat-button')).forEach(function(button){button.animation=that.animation;});that._addCalendarFooterListeners();that._defaultFooterTemplateApplied=true;}/**
     * Sets whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.$.input.tabIndex=-1;that.$.selectDate.removeAttribute('tabindex');that.$.selectTime.removeAttribute('tabindex');if(that._defaultFooterTemplateApplied){that._hourElement.tabIndex=-1;that._ampmElement.tabIndex=-1;that._minuteElement.tabIndex=-1;}return;}var index=that.tabIndex>0?that.tabIndex:0;that.$.input.removeAttribute('tabindex');that.$.selectDate.tabIndex=index;that.$.selectTime.tabIndex=index;if(that._defaultFooterTemplateApplied){that._hourElement.removeAttribute('tabindex');that._ampmElement.removeAttribute('tabindex');that._minuteElement.removeAttribute('tabindex');that.$.calendarDropDown.getElementsByClassName('jqx-footer-component-today')[0].tabIndex=index;}}/**
     * Sets the value to null and updates the input.
     */},{key:'_setNullValue',value:function _setNullValue(oldValue){var that=this;if(oldValue===undefined){oldValue=that._cloneValue();}if(that.nullable){that._value=null;that.value=null;that._highlightedTimePart=undefined;that.$.input.value='';if(oldValue!==null){if(that.opened){if(!that._calendarInitiatedChange){var oldContext=that.$.calendarDropDown.context;that.$.calendarDropDown.context=that.$.calendarDropDown;that.$.calendarDropDown._clearSelection(true);that.$.calendarDropDown.context=oldContext;}if(that._defaultFooterTemplateApplied){that._hourElement.value='';that._ampmElement.value='';that._minuteElement.value='';}that._toSync=false;}else{that._toSync=true;}that.$.fireEvent('change',{'oldValue':oldValue.toTimeZone(that._inputTimeZone),'value':null});}that._disableSpinButtons();}else{that._validateValue(that._now(),oldValue);}}/**
     * Spin buttons click handler.
     */},{key:'_spinButtonsClickHandler',value:function _spinButtonsClickHandler(event){var that=this;if(that._value!==null&&!that.disabled&&!that.readonly){that._incrementDecrement(that.$.downButton.contains(event.target));}}/**
     * Validates initial property values.
     */},{key:'_validateInitialPropertyValues',value:function _validateInitialPropertyValues(){var that=this,calendar=that.$.calendarDropDown;if(that.calendarButtonPosition==='left'){that.$.content.insertBefore(that.$.calendarButton,that.$.input);}if(that.spinButtonsPosition==='left'){that.$.content.insertBefore(that.$.spinButtonsContainer,that.$.input);}if(that.disabled){that.$.upButton.disabled=true;that.$.downButton.disabled=true;}if(that.opened){if(!that.disabled&&!that.readonly){calendar.disabled=false;that.$calendarButton.addClass('jqx-calendar-button-pressed');that.$.calendarButton.setAttribute('active','');that.$calendarDropDown.removeClass('jqx-hidden');that.$dropDownContainer.removeClass('jqx-visibility-hidden');}else{that.opened=false;}}if(that.footerTemplate===null){that._setDefaultFooterTemplate(true);}else{calendar.footerTemplate=that.footerTemplate;calendar._handleLayoutTemplate(calendar.$.footer,that.footerTemplate);}if(that.formatString===''){that.formatString='dd-MMM-yy HH:mm:ss.fff';}var displayKind=that.displayKind;if(displayKind==='UTC'){that._outputTimeZone='UTC';}else if(displayKind==='local'){that._outputTimeZone='Local';}var parsedValue=void 0;if(that.value!==null){parsedValue=JQX.Utilities.DateTime.validateDate(that.value,new JQX.Utilities.DateTime(),that.formatString);that._inputTimeZone=parsedValue.timeZone;if(displayKind!=='unspecified'&&that._inputTimeZone!==that._outputTimeZone){parsedValue=parsedValue.toTimeZone(that._outputTimeZone);}else if(displayKind==='unspecified'){that._outputTimeZone=that._inputTimeZone;}}else{parsedValue=null;that._inputTimeZone='Local';}that._validateRestrictedDates();that._validateMinMax('both');that._validateValue(parsedValue,that._now(),false,true);that._validateInterval(new JQX.Utilities.TimeSpan(0,0,1));that._getFormatStringRegExp();if(that._defaultFooterTemplateApplied&&that._hourElement.value===''&&that.value!==null){var _value28=that.value;that._hourElement.value=_value28.toString('hh');that._ampmElement.value=_value28.toString('tt');that._minuteElement.value=_value28.toString('mm');}that._detectDisplayMode();var dropDownDisplayMode=that._dropDownDisplayMode;if(dropDownDisplayMode==='default'||dropDownDisplayMode==='calendar'){calendar.viewSections=['title','header'];if(calendar.$title.hasClass('jqx-hidden')){calendar.propertyChangedHandler('viewSections',['header','footer'],['title','header']);}if(dropDownDisplayMode==='default'){that.$dropDownHeader.removeClass('jqx-hidden');}}else if(dropDownDisplayMode==='timePicker'){that.$calendarDropDown.addClass('jqx-hidden');that._initializeTimePicker();}}/**
     * Validates "interval"
     */},{key:'_validateInterval',value:function _validateInterval(referenceValue){var that=this,interval=that.interval;var validValue=interval;if(interval instanceof JQX.Utilities.TimeSpan){validValue=interval;}else if(typeof interval==='string'){var indexOfTimeSpan=interval.indexOf('TimeSpan('),indexOfBracket=interval.indexOf(')');if(indexOfTimeSpan!==-1&&indexOfBracket!==-1){validValue=interval.slice(indexOfTimeSpan+9,indexOfBracket);validValue=validValue.replace(/'/g,'').replace(/"/g,'').replace(/^\s+|\s+$|\s+(?=\s)/g,'');if(new RegExp(/(^(\d+)(,\s*\d+)*$)/g).test(validValue)){validValue=validValue.replace(/\s/g,'');validValue=validValue.split(',');validValue.map(function(argument,index){validValue[index]=parseInt(argument);});validValue.unshift(null);validValue=new(Function.prototype.bind.apply(JQX.Utilities.TimeSpan,validValue))();}}if(validValue instanceof JQX.Utilities.TimeSpan===false){if(validValue.trim()===''){that.interval=referenceValue;return;}if(!isNaN(validValue)){validValue=parseInt(validValue,10)*10000;}try{validValue=new JQX.Utilities.TimeSpan(validValue);}catch(error){that.interval=referenceValue;return;}}}else if(typeof interval==='number'){validValue=new JQX.Utilities.TimeSpan(interval);}else{that.interval=referenceValue;return;}if(validValue._ticks===0){that.interval=referenceValue;}else{that.interval=validValue;}}/**
     * Validates "min" and "max"
     */},{key:'_validateMinMax',value:function _validateMinMax(which,referenceValue){var that=this;var minChanged=false;if(which!=='max'){that.min=JQX.Utilities.DateTime.validateDate(that.min,referenceValue||new JQX.Utilities.DateTime(1600,1,1),that.formatString);that.min=that.min.toTimeZone(that._outputTimeZone);minChanged=true;}if(which!=='min'){that.max=JQX.Utilities.DateTime.validateDate(that.max,referenceValue||new JQX.Utilities.DateTime(3001,1,1),that.formatString);that.max=that.max.toTimeZone(that._outputTimeZone);that.max.calendar.days=that._localizedDays;that.max.calendar.months=that._localizedMonths;that.max.calendar.locale=that.locale;that.$.calendarDropDown.max=that.max.toDate();}if(that.min.compare(that.max)>0){that.min=that.max.clone();minChanged=true;}if(minChanged){that.min.calendar.days=that._localizedDays;that.min.calendar.months=that._localizedMonths;that.min.calendar.locale=that.locale;that.$.calendarDropDown.min=that.min.toDate();}}/**
     * Validates "restrictedDates".
     */},{key:'_validateRestrictedDates',value:function _validateRestrictedDates(){var that=this,dateTimeInputRestrictedDates=[],calendarRestrictedDates=[];for(var _i391=0;_i391<that.restrictedDates.length;_i391++){var currentRestrictedDate=that.restrictedDates[_i391];var validRestrictedDate=JQX.Utilities.DateTime.validateDate(currentRestrictedDate,'invalid',that.formatString);if(validRestrictedDate!=='invalid'){validRestrictedDate=validRestrictedDate.toTimeZone(that._outputTimeZone);dateTimeInputRestrictedDates.push(validRestrictedDate);calendarRestrictedDates.push(validRestrictedDate.toDate());}}that.restrictedDates=dateTimeInputRestrictedDates;that.$.calendarDropDown.restrictedDates=calendarRestrictedDates;}/**
     * Validates the value and updates the input.
     */},{key:'_validateValue',value:function _validateValue(value,referenceValue,fireEvent,programmatic){var that=this,oldValue=referenceValue!==undefined?referenceValue:that._cloneValue();if(value===null||value===''){that._setNullValue(oldValue);return;}if(value!==undefined){that._value=JQX.Utilities.DateTime.validateDate(value,oldValue,that.formatString);}if(that._value===null){that._setNullValue(oldValue);return;}var valueNotRestricted=that._value;while(that._isRestricted(valueNotRestricted)===true){valueNotRestricted.addDays(1,false);}var valueInRange=that._rangeValidation(valueNotRestricted);if(!programmatic||that.validation==='strict'){that._value=valueInRange;delete that._minMaxChanged;}else if(valueNotRestricted.equals(valueInRange)===false){that._minMaxChanged=true;}that.value=that._value.toTimeZone(that._inputTimeZone);var validValue=that._value;validValue.calendar.days=that._localizedDays;validValue.calendar.months=that._localizedMonths;validValue.calendar.locale=that.locale;that._applyFormatString();that._disableSpinButtons();if((oldValue===null||validValue===null)&&oldValue!==validValue||oldValue!==null&&validValue!==null&&oldValue.compare(validValue)!==0){if(fireEvent!==false){that.$.fireEvent('change',{'oldValue':oldValue!==null?oldValue.toTimeZone(that._inputTimeZone):null,'value':that.value});}if(that._calendarInitiatedChange){return;}if(that.opened){if(oldValue===null||that.$.calendarDropDown.selectedDates.length===0||oldValue.year()!==validValue.year()||oldValue.month()!==validValue.month()||oldValue.day()!==validValue.day()||!that.$.calendarDropDown._isDateInView(validValue.toDate())){that._disregardCalendarChangeEvent=true;that.$.calendarDropDown.selectedDates=[validValue.toDate()];}if(that._defaultFooterTemplateApplied){if(oldValue===null||oldValue.hour()!==validValue.hour()){that._hourElement.value=validValue.toString('hh');that._ampmElement.value=validValue.toString('tt');}if(oldValue===null||oldValue.minute()!==validValue.minute()){that._minuteElement.value=validValue.toString('mm');}}if(that._timePickerInitialized&&!that._timePickerInitiatedChange){that.$.timePickerDropDown.value=validValue.toDate();}that._toSync=false;}else{that._toSync=true;}}}}],[{key:'properties',/**
     * DateTimePicker's properties.
     */get:function get(){return{'animationSettings':{value:null,type:'object'},'autoClose':{value:false,type:'boolean'},'autoCloseDelay':{value:0,type:'number'},'calendarButton':{value:false,type:'boolean'},'calendarButtonPosition':{value:'right',allowedValues:['left','right'],type:'string'},'calendarMode':{value:'default',allowedValues:['default','classic'],type:'string'},'dayNameFormat':{value:'firstTwoLetters',allowedValues:['narrow','firstTwoLetters','long','short'],type:'string'},'disableAutoNavigation':{value:false,type:'boolean'},'displayKind':{value:'unspecified',allowedValues:['UTC','local','unspecified'],type:'string'},'displayModeView':{value:'table',allowedValues:['table','list'],type:'string'},'dropDownAppendTo':{value:null,type:'any'},'dropDownDisplayMode':{value:'default',allowedValues:['default','classic','calendar','timePicker','auto'],type:'string'},'dropDownOverlay':{value:false,type:'boolean'},'dropDownPosition':{value:'auto',allowedValues:['auto','bottom','overlay-top','overlay-center','overlay-bottom','top','center-bottom','center-top'],type:'string'},'editMode':{value:'default',allowedValues:['default','full','partial'],type:'string'},'enableMouseWheelAction':{value:false,type:'boolean'},'firstDayOfWeek':{value:0,type:'number'},'footerTemplate':{value:null,type:'any'},'formatString':{value:'dd-MMM-yy HH:mm:ss.fff',type:'string'},'headerTemplate':{value:null,type:'any'},'hideDayNames':{value:false,type:'boolean'},'hideOtherMonthDays':{value:false,type:'boolean'},'hideTooltipArrow':{value:false,type:'boolean'},'hint':{value:'',type:'string'},'importantDates':{value:[],type:'array'},'importantDatesTemplate':{value:null,type:'any'},'interval':{value:new JQX.Utilities.TimeSpan(0,0,1),type:'any'},'label':{value:'',type:'string'},'max':{value:new JQX.Utilities.DateTime(3001,1,1),type:'any'},'messages':{value:{'en':{'now':'Now','dateTabLabel':'DATE','timeTabLabel':'TIME'}},type:'object',extend:true},'min':{value:new JQX.Utilities.DateTime(1600,1,1),type:'any'},'name':{value:'',type:'string'},'nullable':{value:false,type:'boolean'},'opened':{value:false,type:'boolean'},'placeholder':{value:'Enter date',type:'string'},'renderMode':{allowedValues:['outlined','filled','underlined'],value:'outlined',type:'string'},'restrictedDates':{value:[],type:'array'},'spinButtons':{value:false,type:'boolean'},'spinButtonsDelay':{value:75,type:'number'},'spinButtonsInitialDelay':{value:0,type:'number'},'spinButtonsPosition':{value:'right',allowedValues:['left','right'],type:'string'},'tooltip':{value:false,type:'boolean'},'tooltipDelay':{value:100,type:'number'},'tooltipPosition':{value:'top',allowedValues:['bottom','top','left','right','absolute'],type:'string'},'tooltipTemplate':{value:null,type:'any'},'validation':{value:'strict',allowedValues:['strict','interaction'],type:'string'},'value':{defaultReflectToAttribute:true,value:new JQX.Utilities.DateTime(),type:'any'},'weekNumbers':{value:false,type:'boolean'},'weeks':{value:6,type:'number'},'yearCutoff':{value:1926,type:'number'}};}/**
     * DateTimePicker's event listeners.
     */},{key:'listeners',get:function get(){return{'container.mouseout':'_mouseoutHandler','container.mouseover':'_mouseoverHandler','calendarButton.click':'_calendarButtonClickHandler','calendarDropDown.change':'_calendarDropDownChangeHandler','calendarDropDown.click':'_calendarDropDownClickHandler','downButton.click':'_spinButtonsClickHandler','input.blur':'_inputBlurHandler','input.change':'_inputChangeHandler','input.dragstart':'_inputDragstartHandler','input.focus':'_inputFocusHandler','input.keydown':'_inputKeydownHandler','input.down':'_inputDownHandler','input.paste':'_inputPasteHandler','input.select':'_inputSelectHandler','input.up':'_inputUpHandler','input.wheel':'_inputWheelHandler','dropDownContainer.keydown':'_dropDownKeydownHandler','dropDownContainer.transitionend':'_dropDownTransitionendHandler','dropDownHeader.click':'_dropDownHeaderClickHandler','upButton.click':'_spinButtonsClickHandler','document.up':'_documentUpHandler'};}/**
     * DateTimePicker's required files.
     */},{key:'requires',get:function get(){return{'JQX.Utilities.DateTime':'jqxdate.js','JQX.Utilities.Draw':'jqxdraw.js','JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.NumericProcessor':'jqxnumeric.js','JQX.RepeatButton':'jqxbutton.js','JQX.Calendar':'jqxcalendar.js','JQX.TimePicker':'jqxtimepicker.js'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.timepicker.css','jqx.dropdown.css','jqx.calendar.css','jqx.datetimepicker.css'];}}]);return DateTimePicker;}(JQX.BaseElement));/**
* jqxDockingLayout custom element.
*/JQX('jqx-docking-layout',function(_JQX$ContentElement8){babelHelpers.inherits(DockingLayout,_JQX$ContentElement8);function DockingLayout(){babelHelpers.classCallCheck(this,DockingLayout);return babelHelpers.possibleConstructorReturn(this,(DockingLayout.__proto__||Object.getPrototypeOf(DockingLayout)).apply(this,arguments));}babelHelpers.createClass(DockingLayout,[{key:'_moveHandler',/**
    * iOS Safari bug fix. (iOS Safari doesn't support 'touch-action: none')
    */value:function _moveHandler(){if(this.hasAttribute('dragged')&&event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
    * Element's HTML template.
    */},{key:'template',value:function template(){return'<div id="container">\n                    <jqx-splitter id="horizontalHiddenItemsContainer" class="jqx-horizontal-hidden-items-container" orientation="horizontal">\n                        <jqx-splitter-item class="jqx-docking-layout-item-holder">\n                            <jqx-splitter id="verticalHiddenItemsContainer" class="jqx-vertical-hidden-items-container">\n                                <jqx-splitter-item class="jqx-docking-layout-item-holder">\n                                    <jqx-splitter id="itemsContainer" class="jqx-items-container">\n                                        <content></content>\n                                        <jqx-splitter-item id="placeholderItem" class="jqx-placeholder" pinned>\n                                            <jqx-tabs-window tab-position="hidden" opened header-buttons=\'[]\'>\n                                                <jqx-tab-item></jqx-tab-item>\n                                            </jqx-tabs-window>\n                                        </jqx-splitter-item>\n                                    </jqx-splitter>\n                                </jqx-splitter-item>\n                            </jqx-splitter>\n                        </jqx-splitter-item>\n                    </jqx-splitter>\n                    <jqx-tabs-window id="tabsWindowFeedback" class="jqx-tabs-window-feedback jqx-hidden"></jqx-tabs-window>\n                    <jqx-tabs-window id="autoHideWindow" class="jqx-docking-layout-auto-hide-window" pinned header-buttons=\'["close", "dock"]\' tab-position="hidden">\n                        <jqx-tab-item></jqx-tab-item>\n                    </jqx-tabs-window>\n                </div>';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'autoSaveState':that._handleAutoSave();break;case'layout':that._handleLayout();break;case'liveResize':case'resizeStep':{var allSplitters=that.getElementsByTagName('jqx-splitter');for(var _i392=0;_i392<allSplitters.length;_i392++){allSplitters[_i392][propertyName]=newValue;}if(propertyName==='liveResize'){that.$.autoHideWindow[propertyName]=newValue;}break;}case'snapMode':that._handleSnapping();that._snapFeedback=undefined;break;case'hideSplitterBars':that._setSplitterBarVisibility();break;default:babelHelpers.get(DockingLayout.prototype.__proto__||Object.getPrototypeOf(DockingLayout.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(DockingLayout.prototype.__proto__||Object.getPrototypeOf(DockingLayout.prototype),'ready',this).call(this);var that=this;//AutoLoadState
if(that.autoLoadState){var previousState=that.loadState();if(previousState){that.layout=previousState;}}that.$.itemsContainer.liveResize=that.liveResize;that.$.itemsContainer.resizeStep=that.resizeStep;that._handleLayout();//Prevents visual redraw on element initialization
that.$tabsWindowFeedback.removeClass('jqx-hidden');that._setFocusable();}/**
    * Checks for missing modules.
    */},{key:'appendChild',/**
    * Appends an HTML element content section of the Window.
    */value:function appendChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild'}));return;}if(!(node instanceof JQX.TabsWindow)){that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'appendChild'}));return;}that.insertBefore(node,null);}/**
     * AutoHides and item to the bottom side
     * @param {any} item
     */},{key:'autoHideBottom',value:function autoHideBottom(item){this._autoHide(item,'bottom');}/**
     * AutoHides and item to the left side
     * @param {any} item
     */},{key:'autoHideLeft',value:function autoHideLeft(item){this._autoHide(item,'left');}/**
     * AutoHides and item to the right side
     * @param {any} item
     */},{key:'autoHideRight',value:function autoHideRight(item){this._autoHide(item,'right');}/**
     * AutoHides and item to the top side
     * @param {any} item
     */},{key:'autoHideTop',value:function autoHideTop(item){this._autoHide(item,'top');}/**
     * Clears the previously saved state
     */},{key:'clearState',value:function clearState(){var that=this;if(!that.id){that.warn(that.localize('noId'));return;}window.localStorage.removeItem('jqxDockingLayout'+that.id);}/**
     * Docks an autoHidden item/ Inserts an external window into the Layout
     * @param {any} item
     */},{key:'dock',value:function dock(item){this._dock(item);}/**
     * Undocks a tabsWindow or TabItem if it was docked( inside the Layout )
     */},{key:'undock',value:function undock(tabsWindow){var that=this;if(typeof tabsWindow==='number'){tabsWindow=that._items[tabsWindow];}else if(typeof tabsWindow==='string'){tabsWindow=document.getElementById(tabsWindow);}if(!tabsWindow){return;}if(!that.contains(tabsWindow)){return;}var splitterItem=tabsWindow.closest('jqx-splitter-item');if(!splitterItem){return;}var splitterItemRect=splitterItem.getBoundingClientRect();var targetWindow=void 0;if(tabsWindow instanceof JQX.TabsWindow){if(tabsWindow.autoHide){//Close the autoHideWindow
that.$.autoHideWindow.close();if(tabsWindow._autoHideWindow){tabsWindow.style.width=tabsWindow._autoHideWindow.offsetWidth+'px';tabsWindow.style.height=tabsWindow._autoHideWindow.offsetHeight+'px';}if(tabsWindow.tabPosition==='left'||tabsWindow.tabPosition==='right'){tabsWindow.style.height=that.offsetHeight+'px';}else{tabsWindow.style.width=that.offsetWidth+'px';}}else{tabsWindow.style.width=tabsWindow.offsetWidth+'px';tabsWindow.style.height=tabsWindow.offsetHeight+'px';}tabsWindow.windowParent='body';//Reset window properties
tabsWindow.opened=true;if(tabsWindow.autoHide){tabsWindow.tabPosition='top';}//Reset the proeprties of the Window
tabsWindow.autoHide=tabsWindow.allowToggle=tabsWindow.pinned=false;tabsWindow.style.maxWidth=tabsWindow.style.maxHeight='';targetWindow=tabsWindow;var splitterParent=splitterItem.closest('jqx-splitter');splitterParent.removeChild(splitterItem);that._removeUnneccessaryItems(splitterParent);}else if(tabsWindow instanceof JQX.TabItem){var parentTabsWindow=tabsWindow.closest('jqx-tabs-window');var newTabsWindow=void 0;if(parentTabsWindow.items.length===1){newTabsWindow=parentTabsWindow;splitterItem.closest('jqx-splitter').removeChild(splitterItem);}else{newTabsWindow=that._createTabsWindowFromObject({label:tabsWindow.label});newTabsWindow.appendChild(tabsWindow);}if(newTabsWindow.windowParent!=='body'){newTabsWindow.windowParent='body';}else if(newTabsWindow.parentElement!==document.body){document.body.appendChild(newTabsWindow);}newTabsWindow.allowToggle=newTabsWindow.autoHide=newTabsWindow.pinned=false;newTabsWindow.label=tabsWindow.label;newTabsWindow.opened=true;//Remember the previous item
newTabsWindow._parentInfo={closestItem:parentTabsWindow,position:tabsWindow.index};targetWindow=newTabsWindow;tabsWindow=parentTabsWindow;}else{return;}if(tabsWindow._originalTabPosition){targetWindow.tabPosition=tabsWindow._originalTabPosition;}else if(tabsWindow.autoHide){targetWindow.tabPosition='top';}targetWindow.tabTextOrientation=tabsWindow._originalTextOrientation||'horizontal';if(targetWindow===tabsWindow){delete targetWindow._originalTabPosition;delete targetWindow._originalTextOrientation;}that._setFloatingItemsHeaderButtons(targetWindow);//Position on the same place
targetWindow.style.left=splitterItemRect.left+'px';targetWindow.style.top=splitterItemRect.top+'px';targetWindow.resizeMode='both';var itemIndex=that._items.indexOf(tabsWindow);targetWindow.layout=that;if(itemIndex>-1){that._items.splice(itemIndex,1);if(targetWindow.position){targetWindow.style.top=targetWindow.position.top;targetWindow.style.left=targetWindow.position.left;delete targetWindow.position;}}if(that._items.filter(function(item){return item.opened;}).length===0&&!that.$.placeholderItem.parentElement){that.$.itemsContainer.appendChild(that.$.placeholderItem);}that._validateWindowPosition(targetWindow);that._setAutoHidePaddings();if(!that._noStateChangeFiring){that._handleAutoSave();that.$.fireEvent('stateChange',{type:'float',item:targetWindow});}if(document.activeElement!==targetWindow){var scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop;targetWindow.focus();targetWindow.bringToFront();window.scrollTo(x,y);}}/**
     * Inserts a TabsWindow element before another inside the Layout
     */},{key:'insertBefore',value:function insertBefore(newNode,node,topLevelInsert){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}var newTabsWindow=newNode;if(newTabsWindow instanceof JQX.TabsWindow){newNode=document.createElement('jqx-splitter-item');newNode.size=newTabsWindow.size||'';newNode.max=newTabsWindow.max||'';newNode.min=newTabsWindow.min||'';newNode.locked=newTabsWindow.locked||false;newNode.collapsible=newTabsWindow.collapsible||false;newNode.collapsed=newTabsWindow.collapsed||false;newNode.appendChild(newTabsWindow);}else if(newTabsWindow instanceof JQX.SplitterItem){newTabsWindow=newTabsWindow.querySelector('jqx-tabs-window');}else{that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'insertBefore'}));}newTabsWindow.opened=newTabsWindow.pinned=true;newTabsWindow.style.width=newTabsWindow.style.height='';newTabsWindow.style.top=newTabsWindow.style.left='';newTabsWindow.style.paddingTop=newTabsWindow.style.paddingBottom='';newTabsWindow.style.paddingLeft=newTabsWindow.style.paddingRight='';newNode.style.top=newNode.style.left='';var parentSplitter=void 0;if(node){parentSplitter=node.closest('jqx-splitter');if(parentSplitter===that.$.verticalHiddenItemsContainer||parentSplitter===that.$.horizontalHiddenItemsContainer){parentSplitter=that.$.itemsContainer;if(that._items.length===0){node=null;}else if(node.tabPosition==='top'||node.tabPosition==='left'){node=that._items[0];}else{node=that._items[that._items.length-1];}}else if(topLevelInsert){parentSplitter=that.$.itemsContainer;}if(!(node instanceof JQX.TabsWindow)){that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'insertBefore'}));return;}parentSplitter.autoFitMode='end';parentSplitter.insertBefore(newNode,parentSplitter._items.filter(function(item){return item.contains(node);})[0]);that._items.splice(that._items.indexOf(node),0,newTabsWindow);}else{parentSplitter=that.$.itemsContainer;if(that._dockingAutoHideTabItem){parentSplitter.autoFitMode='end';}that._items.push(newTabsWindow);that.$.itemsContainer.insertBefore(newNode);}parentSplitter.autoFitMode='proportional';if(newTabsWindow.autoHide){that._autoHide(newTabsWindow,newTabsWindow.autoHidePosition);}else{//Reset the TabsWindow if it's been an autoHidden one
newTabsWindow.autoHide=newTabsWindow.allowToggle=false;if(newTabsWindow._originalTabPosition){newTabsWindow.tabPosition=newTabsWindow._originalTabPosition;delete newTabsWindow._originalTabPosition;}if(newTabsWindow._originalTextOrientation){newTabsWindow.tabTextOrientation=newTabsWindow._originalTextOrientation;delete newTabsWindow._originalTextOrientation;}that._setDockedItemsHeaderButtons(newTabsWindow);var scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop;newTabsWindow.focus();window.scrollTo(x,y);}if(that._items.filter(function(item){return item.opened;}).length>0&&that.$.placeholderItem.parentElement){that.$.itemsContainer.removeChild(that.$.placeholderItem);}newTabsWindow.layout=that;newTabsWindow.minimized=false;newTabsWindow.maximized=false;newTabsWindow.locked=false;newTabsWindow.resizeMode='none';that._handleAutoHiddenSplitterBars();that._setSplitterBarVisibility();that._handleAutoSave();that.$.fireEvent('stateChange',{type:'dock',item:newTabsWindow});}/**
     * Inserts a new item before the targetItem that corresponds to the index
     * @param {any} index - the index of the target item
     * @param {any} item - the new item to be inserted
     */},{key:'insertBeforeItem',value:function insertBeforeItem(index,item){this._insert(index,item,'top','insertBeforeItem');}/**
     * Inserts a new item after the targetItem that corresponds to the index
     * @param {any} index - the index of the target item
     * @param {any} item - the new item to be inserted
     */},{key:'insertAfterItem',value:function insertAfterItem(index,item){this._insert(index,item,'bottom','insertAfterItem');}/**
     * Inserts a new item inside the target item at it's left side
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertIntoLeft',value:function insertIntoLeft(index,item){this._insert(index,item,'inside-left','insertIntoLeft');}/**
     * Inserts a new item inside the target item at it's right side
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertIntoRight',value:function insertIntoRight(index,item){this._insert(index,item,'inside-right','insertIntoRight');}/**
     * Inserts a new item inside the target item at it's top side
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertIntoTop',value:function insertIntoTop(index,item){this._insert(index,item,'inside-top','insertIntoTop');}/**
     * Inserts a new item inside the target item at it's top side
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertIntoBottom',value:function insertIntoBottom(index,item){this._insert(index,item,'inside-bottom','insertIntoBottom');}/**
     * Inserts a new item at top level of hierarchy inside the layout at position top
     */},{key:'insertLayoutTop',value:function insertLayoutTop(item){this._insert(0,item,'layout-top','insertLayoutTop');}/**
     * Inserts a new item at top level of hierarchy inside the layout at position bottom
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertLayoutBottom',value:function insertLayoutBottom(item){this._insert(0,item,'layout-bottom','insertLayoutBottom');}/**
     * Inserts a new item at top level of hierarchy inside the layout at position left
     */},{key:'insertLayoutLeft',value:function insertLayoutLeft(item){this._insert(0,item,'layout-left','insertLayoutLeft');}/**
     * Inserts a new item at top level of hierarchy inside the layout at position left
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertLayoutRight',value:function insertLayoutRight(item){this._insert(0,item,'layout-right','insertLayoutRight');}/**
     * Inserts a new item at position top by creating a new splitter with two items. One is the new item and the other is the Splitter parent of the target item.
     * @param {any} index - the index of the target Layout item
     * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
     */},{key:'insertOutsideTargetGroupTop',value:function insertOutsideTargetGroupTop(index,item){this._insert(index,item,'outside-top','insertOutsideTargetGroupTop');}/**
    * Inserts a new item at position bottom by creating a new splitter with two items. One is the new item and the other is the Splitter parent of the target item.
    * @param {any} index - the index of the target Layout item
    * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
    */},{key:'insertOutsideTargetGroupBottom',value:function insertOutsideTargetGroupBottom(index,item){this._insert(index,item,'outside-bottom','insertOutsideTargetGroupBottom');}/**
    * Inserts a new item at position left by creating a new splitter with two items. One is the new item and the other is the Splitter parent of the target item.
    * @param {any} index - the index of the target Layout item
    * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
    */},{key:'insertOutsideTargetGroupLeft',value:function insertOutsideTargetGroupLeft(index,item){this._insert(index,item,'outside-left','insertOutsideTargetGroupLeft');}/**
    * Inserts a new item at position right by creating a new splitter with two items. One is the new item and the other is the Splitter parent of the target item.
    * @param {any} index - the index of the target Layout item
    * @param {any} item - an instance of JQX.TabsWindow or an object defining a TabsWindow.
    */},{key:'insertOutsideTargetGroupRight',value:function insertOutsideTargetGroupRight(index,item){this._insert(index,item,'outside-right','insertOutsideTargetGroupRight');}/**
    * Returns an array of auto-hide items that are available inside the Layout
    * @param {any} orientation
    */},{key:'getAutoHideItems',value:function getAutoHideItems(orientation){var that=this;function getItems(splitter){var items=[];if(!splitter._items){return items;}for(var _i393=0;_i393<splitter._items.length;_i393++){if(!splitter._items[_i393].$.hasClass('jqx-docking-layout-item-holder')){items.push(splitter._items[_i393].getElementsByTagName('jqx-tabs-window')[0]);}}return items;}if(!orientation){return getItems(that.$.horizontalHiddenItemsContainer).concat(getItems(that.$.verticalHiddenItemsContainer));}if(orientation==='horizontal'){return getItems(that.$.horizontalHiddenItemsContainer);}return getItems(that.$.verticalHiddenItemsContainer);}/**
     * Returns the index of the item
     * @param {any} item
     */},{key:'getIndex',value:function getIndex(item){var that=this;if(!that.isReady){return;}if(!that._items.length){return;}return that._items.indexOf(item);}/**
    * Returns an array of Splitter items that are auto hidden inside the element
    */},{key:'getItemGroupElement',/**
     * Returns the Splitter parent of a Layout item
     */value:function getItemGroupElement(item){var that=this;if(!that.isReady||!item||!(item instanceof JQX.TabsWindow)||!that.contains(item)){return;}return item.closest('jqx-splitter');}/**
    * Returns the current Layout structure as an array of objects. Contains HTML references.
    */},{key:'getState',value:function getState(noInstances){var that=this,autoHideItems=that.getAutoHideItems(),undockedItems=that.undockedItems,structure=[];for(var _i394=0;_i394<autoHideItems.length;_i394++){structure.push(that._createTabsWindowStructure(autoHideItems[_i394],noInstances));}for(var _i395=0;_i395<undockedItems.length;_i395++){structure.push(that._createTabsWindowStructure(undockedItems[_i395],noInstances));}return[{type:'LayoutGroup',items:structure.concat(that._createLayoutStructure(that.$.itemsContainer,noInstances)),orientation:that.$.itemsContainer.orientation}];}/**
    * Returns the nearest splitter bars of an item
    * @param {any} item - a jqxTabsWindow item or it's index or id
    */},{key:'getClosestSplitterBars',value:function getClosestSplitterBars(item){var that=this;if(!that._items||!that._items.length){return;}if(typeof item==='string'){item=document.getElementById(item);}else if(typeof item==='number'){item=that._items[parseInt(item)];}if(!(item instanceof JQX.TabsWindow)||!that._items.find(function(i){return i===item;})){return;}var closestSplitter=item.closest('jqx-splitter');while(closestSplitter){if(closestSplitter.bars.length){break;}closestSplitter=closestSplitter.closest('jqx-splitter');}if(closestSplitter){return closestSplitter.bars;}}/**
     * Returns a JSON structure of the current Layout state. Does not contain any HTML references. Used for local storaging.
     */},{key:'getJSONStructure',value:function getJSONStructure(){return this.getState(true);}/**
     * Load the previously saved state of the Layout
     */},{key:'loadState',value:function loadState(previousState){var that=this;if(!previousState){if(!that.id){that.warn(that.localize('noId'));return;}previousState=JSON.parse(window.localStorage.getItem('jqxDockingLayout'+that.id));}if(previousState){that._loadState(previousState);return previousState;}}/**
   * Removes a TabsWindow element from the Layout.
   */},{key:'remove',value:function remove(item){var that=this;if(typeof item==='number'){item=that._items[item];}else if(typeof item==='string'){item=document.getElementById(item);}if(!(item instanceof JQX.TabsWindow)){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'remove'}));return;}if(item.closest('jqx-docking-layout')!==that){that.error(that.localize('invalidNodeRemove',{elementType:that.nodeName.toLowerCase(),method:'remove'}));return;}that.removeChild(item);}/**
     * Removes all items from the Layout
     */},{key:'removeAll',value:function removeAll(){this._removeAll();}/**
    * Removes a jqxTabsWindow item from the Layout
    */},{key:'removeChild',value:function removeChild(node){var that=this;if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild'}));return;}if(!(node instanceof JQX.TabsWindow)){that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'removeChild'}));return;}if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}var splitterItem=node.closest('jqx-splitter-item');if(!splitterItem){return;}var splitter=splitterItem.closest('jqx-splitter');if(!splitter){return;}splitterItem.closest('jqx-splitter').removeChild(splitterItem);that._items.splice(that._items.indexOf(node),1);that._removeUnneccessaryItems(splitter);if(that._items.filter(function(item){return item.opened;}).length===0&&!that.$.placeholderItem.parentElement){that.$.itemsContainer.appendChild(that.$.placeholderItem);}node.layout=that;that._handleAutoSave();that.$.fireEvent('stateChange',{type:'remove',item:node});}/**
    * Saves the current state of the Layout
    */},{key:'saveState',value:function saveState(){var that=this;if(!that.id){that.warn(that.localize('noId'));return;}//Save to LocalStorage
window.localStorage.setItem('jqxDockingLayout'+that.id,JSON.stringify(that.getJSONStructure()));}/**
     * Updates the content of a TabsWindow item
     * @param {any} index
     * @param {any} item
     * @param {any} position
     */},{key:'update',value:function update(item,settings){var that=this;if(typeof item==='number'){item=that._items[parseInt(item)];}else if(typeof item==='string'){item=document.getElementById(item);}if(!item||!(item instanceof JQX.TabsWindow)){that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'update'}));return;}if(!that.contains(item)){return;}if(!settings||(typeof settings==='undefined'?'undefined':babelHelpers.typeof(settings))!=='object'){return;}if(settings.items){for(var _i396=0;_i396<settings.items.length;_i396++){item.update(settings.items[_i396].index,settings.items[_i396].label,settings.items[_i396].content);}}if(settings.id){item.id=settings.id;}if(settings.label){item.label=settings.label;}item.tabCloseButtons=settings.tabCloseButtons||false;if(settings.headerButtons&&Array.isArray(settings.headerButtons)){item.headerButtons=settings.headerButtons.length===0?['close','autoHide']:settings.headerButtons;}var parentSplitterItem=item.closest('jqx-splitter-item');if(!parentSplitterItem){return;}if(item.autoHide){that._autoHide(item);}else{parentSplitterItem.size=settings.size!==undefined?settings.size:parentSplitterItem.size;parentSplitterItem.min=settings.min!==undefined?settings.min:parentSplitterItem.min;parentSplitterItem.max=settings.max!==undefined?settings.max:parentSplitterItem.max;parentSplitterItem.locked=settings.locked!==undefined?settings.locked:parentSplitterItem.locked;parentSplitterItem.collapsible=settings.collapsible!==undefined?settings.collapsible:parentSplitterItem.collapsible;parentSplitterItem.collapsed=settings.collapsed!==undefined?settings.collapsed:parentSplitterItem.collapsed;}}/**
    * Autohides a TabsWindow
    */},{key:'_autoHide',value:function _autoHide(tabsWindow,position){var that=this;if(typeof tabsWindow==='number'){tabsWindow=that._items[tabsWindow];}else if(typeof tabsWindow==='string'){tabsWindow=document.getElementById(tabsWindow);}if(!tabsWindow){return;}if(tabsWindow instanceof JQX.TabItem){var parentTabsWindow=tabsWindow.closest('jqx-tabs-window');if(parentTabsWindow&&parentTabsWindow.items.length<2){tabsWindow=parentTabsWindow;}else{var tabItem=tabsWindow;if(parentTabsWindow){if(parentTabsWindow.autoHide&&parentTabsWindow.tabPosition===position){return;}parentTabsWindow.removeChild(tabsWindow);}tabsWindow=that._createTabsWindowFromObject({label:tabsWindow.label});tabsWindow.appendChild(tabItem);}}if(!(tabsWindow instanceof JQX.TabsWindow)){that.error(that.localize('invalidNodeType',{elementType:that.nodeName.toLowerCase(),method:'appendChild'}));return;}var splitterItem=tabsWindow.closest('jqx-splitter-item'),tabsWindowSize=void 0;var splitterContainer=tabsWindow.closest('jqx-splitter')||that.$.itemsContainer,positionDetails=that._getAutoHidePositionDetails(position,tabsWindow,splitterItem),autoHideSplitter=positionDetails.autoHideSplitter;position=positionDetails.position;if(tabsWindow.offsetHeight){tabsWindowSize=position==='left'||position==='right'?tabsWindow.offsetWidth:tabsWindow.offsetHeight;}if(!splitterItem){splitterItem=document.createElement('jqx-splitter-item');splitterItem.appendChild(tabsWindow);}splitterItem.min=30;var autoHideName='auto-hide-'+position;//Check if it's already autoHidden
if(tabsWindow.autoHide&&splitterItem.$.hasClass(autoHideName)){return;}var tabsWindowIndex=that._items.indexOf(tabsWindow);that._items.splice(tabsWindowIndex,tabsWindowIndex>-1?1:0);if(that._items.filter(function(item){return item.opened;}).length===0&&!that.$.placeholderItem.parentElement){position==='left'?that.$.itemsContainer.insert(1,that.$.placeholderItem):that.$.itemsContainer.appendChild(that.$.placeholderItem);}that._handleAutoHideWindow({position:position,tabsWindow:tabsWindow,splitterItem:splitterItem,autoHideName:autoHideName,splitterContainer:splitterContainer,autoHideSplitter:autoHideSplitter});autoHideSplitter.bars.map(function(bar){return bar.hide();});that._setAutoHidePaddings();var tabsWindowItems=tabsWindow.items;if(tabsWindowItems){for(var _i397=0;_i397<tabsWindowItems.length;_i397++){if(!tabsWindowItems[_i397]._autoHideWindowSize){tabsWindowItems[_i397]._autoHideWindowSize=tabsWindowSize;}}}if(that.$.autoHideWindow.opened&&that.$.autoHideWindow._tabsWindow){that.$.autoHideWindow._tabsWindow._setAutoHideWindowSize(that.$.autoHideWindow._tabsWindow.selectedIndex);}if(that.isCompleted){that._handleAutoSave();that.$.fireEvent('stateChange',{type:'autoHide',item:tabsWindow});}}/**
     * Returns the position and the autoHideSplitter according to the position
     * @param {any} position
     */},{key:'_getAutoHidePositionDetails',value:function _getAutoHidePositionDetails(position,tabsWindow,splitterItem){var that=this,splitterContainer=tabsWindow.closest('jqx-splitter')||that.$.itemsContainer,index=splitterContainer?splitterContainer._items.indexOf(splitterItem):0;var autoHideSplitter=void 0;switch(position){case'top':case'bottom':autoHideSplitter=that.$.horizontalHiddenItemsContainer;break;case'left':case'right':autoHideSplitter=that.$.verticalHiddenItemsContainer;break;default:if(splitterContainer.orientation==='vertical'){autoHideSplitter=that.$.verticalHiddenItemsContainer;var autoHiddenItems=autoHideSplitter.items.filter(function(item){return item.className.indexOf('auto-hide-')>-1;});if(autoHiddenItems.length===1&&that._items.length===1){position=autoHiddenItems[0].$.hasClass('auto-hide-right')?'right':'left';}else{position=index>=splitterContainer.items.length/2?'right':'left';}}else{autoHideSplitter=that.$.horizontalHiddenItemsContainer;var _autoHiddenItems=autoHideSplitter.items.filter(function(item){return item.className.indexOf('auto-hide-')>-1;});if(_autoHiddenItems.length===1&&that._items.length===1){position=_autoHiddenItems[0].$.hasClass('auto-hide-bottom')?'bottom':'top';}else{position=index>=splitterContainer.items.length/2?'bottom':'top';}}break;}return{autoHideSplitter:autoHideSplitter,position:position};}/**
     * Places the target Window in a new AutoHideWindow or an already existing one
     * @param {any} details
     */},{key:'_handleAutoHideWindow',value:function _handleAutoHideWindow(details){var that=this,autoHideName=details.autoHideName,splitterItem=details.splitterItem,splitterContainer=details.splitterContainer,position=details.position,autoHideSplitter=details.autoHideSplitter;var tabsWindow=details.tabsWindow,autoHiddenItem=that.getElementsByClassName(autoHideName)[0],size='offset'+(position==='left'||position==='right'?'Width':'Height');splitterItem.locked=false;if(autoHiddenItem){var tabItems=[].slice.call(tabsWindow.isCompleted?tabsWindow.items:tabsWindow.children),autoHideTabsWindow=autoHiddenItem.querySelector('jqx-tabs-window'),autoHiddenItemsCount=autoHideTabsWindow.items.length;for(var _i398=0;_i398<tabItems.length;_i398++){autoHideTabsWindow.insert(autoHiddenItemsCount,{node:tabItems[_i398]});tabItems[_i398]._autoHideWindowSize=tabsWindow[size];}if(splitterItem.parentElement){splitterContainer.removeChild(splitterItem);}that._removeUnneccessaryItems(splitterContainer);tabsWindow=autoHideTabsWindow;}else{if(splitterContainer&&splitterContainer.contains(splitterItem)){splitterContainer.removeChild(splitterItem);}//Remembers the tabPosition before autoHidding
if(that._initializingItems||!tabsWindow.autoHide){tabsWindow._originalTabPosition=tabsWindow.tabPosition;tabsWindow._originalTextOrientation=tabsWindow.tabTextOrientation;tabsWindow._originalLocked=tabsWindow.locked;}tabsWindow.autoHideWindow=that.$.autoHideWindow;tabsWindow.autoHide=tabsWindow.allowToggle=true;tabsWindow.selectedIndex=null;if(tabsWindow.$.tabsElement&&tabsWindow.$.tabsElement.selectedIndex!==tabsWindow.selectedIndex){tabsWindow.$.tabsElement.selectedIndex=tabsWindow.selectedIndex;}tabsWindow.tabTextOrientation=position==='right'||position==='left'?'vertical':'horizontal';tabsWindow.tabPosition=position;tabsWindow.style.top=tabsWindow.style.left='';tabsWindow.style.width=tabsWindow.style.height='';tabsWindow.opened=true;tabsWindow.resizeMode='none';//Make sure no other auto-hide classes are added
for(var c=0;c<splitterItem.classList.length;c++){if(splitterItem.classList[c].indexOf('auto-hide-')>-1){splitterItem.$.removeClass(splitterItem.classList[c]);}}splitterItem.$.addClass(autoHideName);splitterItem.style.paddingLeft=splitterItem.style.paddingRight=splitterItem.style.paddingTop=splitterItem.style.paddingBottom='';if(splitterItem.min){splitterItem.min='';}that._removeUnneccessaryItems(splitterContainer);if(position==='top'||position==='left'){autoHideSplitter.insert(0,splitterItem);}else{autoHideSplitter.appendChild(splitterItem);}autoHideSplitter.autoFitMode='proportional';//Specific browser bug fixes with height: auto and textOrientation: vertical
if(JQX.Utilities.Core.Browser.Safari&&(position==='left'||position==='right')){var tabStrip=tabsWindow.querySelector('.jqx-tab-strip');tabsWindow.size=tabStrip.offsetWidth;}else{if(JQX.Utilities.Core.Browser.Firefox&&(position==='top'||position==='bottom')){var _tabStrip=tabsWindow.querySelector('.jqx-tab-strip');tabsWindow.size=_tabStrip.offsetHeight;}tabsWindow.size='auto';}//Refreshes the min property
if(tabsWindow.min){tabsWindow.min='';}tabsWindow.min=30;tabsWindow.locked=true;autoHideSplitter.autoFitMode='end';}}/**
    * AutoHideContainer Close event handler
    */},{key:'_autoHideWindowCloseHandler',value:function _autoHideWindowCloseHandler(){var that=this,targetTabsWindow=that.$.autoHideWindow._tabsWindow,scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop;targetTabsWindow._moveContent(targetTabsWindow._autoHideWindow.items[0],targetTabsWindow._autoHideWindow._tab);if(!that.$.autoHideWindow.opened){targetTabsWindow.selectedIndex=null;if(document.activeElement!==targetTabsWindow.$.tabsElement){targetTabsWindow.$.tabsElement.focus();window.scrollTo(x,y);}return;}if(!targetTabsWindow.allowToggle){return;}if(targetTabsWindow.$.tabsElement.selectedIndex!==null){targetTabsWindow.select(targetTabsWindow.$.tabsElement.selectedIndex);if(document.activeElement!==targetTabsWindow.$.tabsElement){targetTabsWindow.$.tabsElement.focus();window.scrollTo(x,y);}}}/**
     * AutoHideWindow ResizeEnd event handler
     */},{key:'_autoHideWindowResizeEndHandler',value:function _autoHideWindowResizeEndHandler(event){var autoHideWindow=event.target,dimension=autoHideWindow.resizeMode==='left'||autoHideWindow.resizeMode==='right'?'width':'height';if(autoHideWindow._tab){autoHideWindow._tab._autoHideWindowSize=event.detail[dimension];}}/**
     * Cancels a drag operation and returns the item ot it's initial position. Used when dragging operation is interupted
     */},{key:'_cancelDragOperation',value:function _cancelDragOperation(noEndDrag){var that=this;that.removeAttribute('dragged');that._dragDetails.windowFeedback.removeAttribute('tabs-window-dragged');that._dragDetails.windowFeedback.removeAttribute('ontop');that._returnItemToOrigin(that._dragDetails.windowFeedback);that._noStateChangeFiring=true;if(!noEndDrag){that._endDrag();}}/**
    * Creates a new TabsWindow from an Object
    */},{key:'_createTabsWindowFromObject',value:function _createTabsWindowFromObject(settings,retrieveContent){var tabsWindow=document.createElement('jqx-tabs-window');var item=void 0,headerButtons=['close','autoHide'];tabsWindow.layout=this;if(settings.id){tabsWindow.id=settings.id;}if(settings.disabled){tabsWindow.disabled=settings.disabled;}if(settings.label){tabsWindow.label=settings.label;}if(settings.headerPosition){tabsWindow.headerPosition=settings.headerPosition;}if(settings.tabCloseButtons){tabsWindow.tabCloseButtons=settings.tabCloseButtons;}if(settings.dropPosition){tabsWindow.dropPosition=settings.dropPosition;}if(settings.resizeMode){tabsWindow.resizeMode=settings.resizeMode;}if(!this.hasAnimation){tabsWindow.animation='none';}tabsWindow.draggable=settings.draggable!==undefined?settings.draggable:true;tabsWindow.floatable=settings.floatable!==undefined?settings.floatable:true;tabsWindow.tabCloseButtons=settings.tabCloseButtons?settings.tabCloseButtons:tabsWindow.tabCloseButtons;if(settings.autoHide){tabsWindow.autoHideWindow=this.$.autoHideWindow;tabsWindow.autoHide=tabsWindow.allowToggle=settings.autoHide;tabsWindow.autoHidePosition=settings.autoHidePosition;}else if(settings.undocked){headerButtons=['close','maximize','minimize'];tabsWindow.undocked=settings.undocked;tabsWindow.position={top:settings.top?(settings.top+'').indexOf('%')>-1?settings.top:parseFloat(settings.top)+'px':undefined,left:settings.left?(settings.left+'').indexOf('%')>-1?settings.left:parseFloat(settings.left)+'px':undefined,width:settings.width,height:settings.height};}tabsWindow.tabPosition=settings.tabPosition||tabsWindow.tabPosition;tabsWindow.opened=tabsWindow.pinned=true;if(settings.headerButtons){headerButtons=settings.headerButtons;}if(!settings.headerButtons||Array.isArray(settings.headerButtons)&&settings.headerButtons.length===0){headerButtons=['close','autoHide'];}tabsWindow.headerButtons=headerButtons;tabsWindow.size=settings.size||'';tabsWindow.max=settings.max||'';tabsWindow.min=settings.min?settings.min:30;tabsWindow.locked=settings.locked||false;tabsWindow.collapsible=settings.collapsible||false;tabsWindow.collapsed=settings.collapsed||false;if(settings.items&&Array.isArray(settings.items)){for(var _i399=0;_i399<settings.items.length;_i399++){if(retrieveContent&&settings.items[_i399].instance){item=settings.items[_i399].instance;item.index=null;item.id=settings.items[_i399].id||'';}else{item=document.createElement('jqx-tab-item');item.label=settings.items[_i399].label?settings.items[_i399].label:'';item.id=settings.items[_i399].id||'';//Get Content from that.layout property
item.content=settings.items[_i399].content?settings.items[_i399].content:'';item.selected=settings.items[_i399].selected?settings.items[_i399].selected:false;tabsWindow._isItemSelected=true;}item.draggable=settings.items[_i399].draggable!==undefined?settings.items[_i399].draggable:true;item.floatable=settings.items[_i399].floatable!==undefined?settings.items[_i399].floatable:true;if(settings.items[_i399].id){item.id=settings.items[_i399].id;}tabsWindow.appendChild(item);}}return tabsWindow;}/**
     * Creates Layout items from Array
     * @param {any} source
     * @param {any} retrieveContenent
     */},{key:'_createItemsFromArray',value:function _createItemsFromArray(source,retrieveContenent){var that=this;var layoutConfig=source;var layoutLength=layoutConfig.length;that._removeAll(true);that._initializingItems=true;//Remove all undocked windows
var undockedItems=that.undockedItems;for(var _i400=0;_i400<undockedItems.length;_i400++){undockedItems[_i400].layout=null;undockedItems[_i400].parentElement.removeChild(undockedItems[_i400]);}//Check if itemContainer settings are applied
if(layoutLength===1&&layoutConfig[0].type&&layoutConfig[0].type.toLowerCase()==='layoutgroup'){that.$.itemsContainer.orientation=layoutConfig[0].orientation||that.$.itemsContainer.orientation;that.$.itemsContainer.liveResize=layoutConfig[0].liveResize||that.$.itemsContainer.liveResize;that.$.itemsContainer.resizeMode=layoutConfig[0].resizeMode||that.$.itemsContainer.resizeMode;layoutConfig=layoutConfig[0].items;}var item=void 0;//Allows to style the items through CSS on element initialization
that.$.itemsContainer.autoFitMode='end';for(var _i401=0;_i401<layoutConfig.length;_i401++){item=that._createLayoutItem(layoutConfig[_i401],retrieveContenent);if(item){if(that.$.placeholderItem.parentElement){that.$.itemsContainer.removeChild(that.$.placeholderItem);}that.$.itemsContainer.appendChild(item);}}if(that._items.filter(function(item){return item.opened;}).length===0){if(!that.$.placeholderItem.parentElement){that.$.itemsContainer.appendChild(that.$.placeholderItem);}}else if(that.$.placeholderItem.parentElement){that.$.itemsContainer.removeChild(that.$.placeholderItem);}//Restore the desired autoFitMode
that.$.itemsContainer.autoFitMode='proportional';delete that._initializingItems;}/**
     * Creates the Layout items
     * @param {any} settings
     * @param {any} retrieveContent
     */},{key:'_createLayoutItem',value:function _createLayoutItem(settings,retrieveContent){if(!settings){return;}var that=this,splitteritem=document.createElement('jqx-splitter-item');var item=void 0;if(settings.type&&settings.type.toLowerCase()==='layoutgroup'){//Create a splitter
item=document.createElement('jqx-splitter');item.autoFitMode='proportional';if(settings.id){item.id=settings.id;}if(settings.orientation){item.orientation=settings.orientation;}if(settings.resizeMode){item.resizeMode=settings.resizeMode;}item.liveResize=that.liveResize;item.resizeStep=that.resizeStep;var newItem=void 0;for(var _i402=0;_i402<settings.items.length;_i402++){newItem=that._createLayoutItem(settings.items[_i402],retrieveContent);if(newItem){item.appendChild(newItem);}}if(!item.querySelector('jqx-splitter-item')){return;}}else{//Create a TabsWindow item
item=that._createTabsWindowFromObject(settings.type&&settings.type.toLowerCase()==='layoutgroup'?settings.items[0]:settings,retrieveContent);if(item.autoHide){that._autoHide(item,item.autoHidePosition);delete item.autoHidePosition;return;}else if(item.undocked){that.undock(item);document.body.appendChild(item);item.opened=true;item.pinned=false;item.layout=that;if(item.position){item.style.left=item.position.left;item.style.top=item.position.top;item.style.width=item.position.width;item.style.height=item.position.height;delete item.position;}if(item.size){item.style.left=item.position.left;item.style.top=item.position.top;}return;}that._items.push(item);}splitteritem.size=settings.size||'';splitteritem.max=settings.max||'';splitteritem.min=settings.min||30;splitteritem.locked=settings.locked||false;splitteritem.collapsible=settings.collapsible||false;splitteritem.collapsed=settings.collapsed||false;splitteritem.appendChild(item);return splitteritem;}/**
     * Creates a JSON Array with the item structure of the Layout
     * @param {any} splitter
     */},{key:'_createLayoutStructure',value:function _createLayoutStructure(splitter,noInstance){var that=this,structure=[];var items=splitter._items,item=void 0,splitterItem=void 0;var firstItemChild=items[0].$.content.children[0];function getItem(container){var item=container.firstElementChild;while(item){if(item instanceof JQX.Splitter){return item;}else if(item instanceof JQX.TabsWindow){return item;}item=item.nextElementSibling;}}if(items.length===1&&firstItemChild instanceof JQX.Splitter){items=firstItemChild._items;if(splitter===that.$.itemsContainer){that.$.itemsContainer.orientation=firstItemChild.orientation;}}for(var _i403=0;_i403<items.length;_i403++){if(items[_i403]===that.$.placeholderItem){continue;}splitterItem=getItem(items[_i403].$.content);if(splitterItem instanceof JQX.TabsWindow){item=that._createTabsWindowStructure(splitterItem,noInstance);}else if(splitterItem instanceof JQX.Splitter){//Avoids unneccessarly complex structures like a single splitter in a splitter parent
while(splitterItem._items.length===1&&splitterItem._items[0].$.content.children[0]instanceof JQX.Splitter){splitterItem=splitterItem._items[0].$.content.children[0];}//Avoids unnecesssary splitter creations with only 1 item inside
if(splitterItem._items.length===1){item=that._createTabsWindowStructure(splitterItem._items[0].$.content.children[0],noInstance);}else{item={type:'LayoutGroup',items:that._createLayoutStructure(splitterItem,noInstance),orientation:splitterItem.orientation};}if(splitterItem.id){item.id=splitterItem.id;}//Splitter settings
if(splitterItem.resizeMode!=='adjacent'){item.resizeMode=splitterItem.resizeMode;}if(splitterItem.resizeStep!==5){item.resizeStep=splitterItem.resizeStep;}if(splitterItem.liveResize){item.resizeStep=splitterItem.liveResize;}}//SplitterItem settings
item.size=items[_i403][splitter._measurements.size];if(items[_i403].locked){item.locked=true;}if(items[_i403].min){item.min=items[_i403].min;}if(items[_i403].max){item.max=items[_i403].max;}structure.push(item);}return structure;}/**
     * Cretes the JSON structure for a TabsWindow
     * @param {any} tabsWindow
     */},{key:'_createTabsWindowStructure',value:function _createTabsWindowStructure(tabsWindow,noInstance){function createTabItemStructure(tabItem){var tabItemStructure={};tabItemStructure.type='LayoutPanelItem';tabItemStructure.label=tabItem.label||'';if(tabItem.selected){tabItemStructure.selected=tabItem.selected;}if(tabItem.disabled){tabItemStructure.disabled=tabItem.disabled;}tabItemStructure.draggable=tabItem.draggable!==undefined?tabItem.draggable:true;tabItemStructure.floatable=tabItem.floatable!==undefined?tabItem.floatable:true;if(!noInstance){tabItemStructure.instance=tabItem;}if(tabItem.id){tabItemStructure.id=tabItem.id;}return tabItemStructure;}var item={type:'LayoutPanel'};if(tabsWindow.id){item.id=tabsWindow.id;}if(tabsWindow.disabled){item.disabled=tabsWindow.disabled;}if(tabsWindow.label){item.label=tabsWindow.label;}if(tabsWindow.autoHide){item.autoHide=tabsWindow.autoHide;item.autoHidePosition=tabsWindow.tabPosition;}else if(tabsWindow.tabPosition!=='top'){item.tabPosition=tabsWindow.tabPosition;}if(!tabsWindow.closest('jqx-docking-layout')){item.undocked=true;item.top=tabsWindow.style.top;item.left=tabsWindow.style.left;item.width=tabsWindow.style.width;item.height=tabsWindow.style.height;}if(tabsWindow.dropPosition&&tabsWindow.dropPosition[0]!=='all'){item.dropPosition=tabsWindow.dropPosition;}item.draggable=tabsWindow.draggable!==undefined?tabsWindow.draggable:true;item.floatable=tabsWindow.floatable!==undefined?tabsWindow.floatable:true;if(tabsWindow.floatable!==undefined){item.floatable=tabsWindow.floatable;}if(tabsWindow.resizeMode!=='none'){item.resizeMode=tabsWindow.resizeMode;}if(tabsWindow.items){item.items=[];for(var _i404=0;_i404<tabsWindow.items.length;_i404++){item.items.push(createTabItemStructure(tabsWindow.items[_i404]));}}return item;}/**
    * Called when the tab strip of the Tab has been resized via inline JS. Check function called _fixTabStripNotChrome() in jqxtabs.js
    */},{key:'_containerTabStripResizeHandler',value:function _containerTabStripResizeHandler(event){var that=this,splitter=event.target.closest('jqx-splitter');if(splitter===that.$.horizontalHiddenItemsContainer||splitter===that.$.verticalHiddenItemsContainer){splitter._resizeEventHandler();that._setAutoHidePaddings();}}/**
    * Docks a TabsWindow
    */},{key:'_dock',value:function _dock(tabsWindow,position){var that=this;if(typeof tabsWindow==='number'){tabsWindow=that._items[tabsWindow];}else if(typeof tabsWindow==='string'){tabsWindow=document.getElementById(tabsWindow);}if(!tabsWindow){return;}var newTabsWindow=void 0;if(tabsWindow instanceof JQX.TabItem){var tabItemDockingDetails=that._handleTabItemDocking(tabsWindow);tabsWindow=tabItemDockingDetails.tabsWindow;newTabsWindow=tabItemDockingDetails.newTabsWindow;}else if((typeof tabsWindow==='undefined'?'undefined':babelHelpers.typeof(tabsWindow))==='object'&&!(tabsWindow instanceof HTMLElement)){tabsWindow=that._createTabsWindowFromObject(tabsWindow);}if(!(tabsWindow instanceof JQX.TabsWindow)||!tabsWindow.autoHide){if(that._items.indexOf(tabsWindow)<0){newTabsWindow.autoHide=false;//TODO: Check if lastItem and if it is used the tabsWindow instead
if(tabsWindow.items.length===0&&that.snapMode==='simple'){tabsWindow.parentElement.removeChild(tabsWindow);}//Dock inside the Layout
if(!position){that.appendChild(newTabsWindow);}else{that._insert(-1,newTabsWindow,position?'layout-'+position:undefined);}}return;}if(!that.contains(tabsWindow)){return;}var splitterItem=tabsWindow.closest('jqx-splitter-item'),splitter=tabsWindow.closest('jqx-splitter'),isLastItem=splitterItem.nextElementSibling?false:true;if(!position){if(splitter.orientation==='horizontal'){position=isLastItem?'bottom':'top';}else{position=isLastItem?'right':'left';}}if(tabsWindow.items.length===0){splitterItem.closest('jqx-splitter').removeChild(splitterItem);}if(newTabsWindow){tabsWindow=newTabsWindow;}if(tabsWindow.autoHide){if(that.$.verticalHiddenItemsContainer.contains(tabsWindow)){that.$.verticalHiddenItemsContainer.removeChild(tabsWindow.closest('jqx-splitter-item'));}else if(that.$.horizontalHiddenItemsContainer.contains(tabsWindow)){that.$.horizontalHiddenItemsContainer.removeChild(tabsWindow.closest('jqx-splitter-item'));}tabsWindow.tabPosition=tabsWindow._originalTabPosition||'top';delete tabsWindow._originalTabPosition;}that._setDockedItemsHeaderButtons(tabsWindow);//Reset the proeprties of the Window
tabsWindow.autoHide=tabsWindow.allowToggle=tabsWindow.maximized=tabsWindow.minimized=tabsWindow.collapsed=tabsWindow.locked=false;tabsWindow.tabTextOrientation='horizontal';that.$.autoHideWindow.close();that._insert(-1,tabsWindow,'layout-'+position);that._setAutoHidePaddings();delete that._dockingAutoHideTabItem;}/**
     * Handles the dokcing of TabItems. Called in _dock method.
     * @param {any} tabsWindow
     */},{key:'_handleTabItemDocking',value:function _handleTabItemDocking(tabsWindow){var that=this,parentTabsWindow=tabsWindow.closest('jqx-tabs-window');var newTabsWindow=void 0;if(parentTabsWindow){var autoHideWindow=that.$.autoHideWindow;if(!parentTabsWindow.autoHide){return{tabsWindow:parentTabsWindow,newTabsWindow:parentTabsWindow};}that._dockingAutoHideTabItem=true;newTabsWindow=parentTabsWindow.items.length===1?parentTabsWindow:document.createElement('jqx-tabs-window');delete tabsWindow._autoHideWindowSize;newTabsWindow.size=autoHideWindow.resizeMode==='left'||autoHideWindow.resizeMode==='right'?autoHideWindow.offsetWidth:autoHideWindow.offsetHeight;parentTabsWindow.removeChild(tabsWindow);if(parentTabsWindow.items.length===0&&!newTabsWindow.id){if(!that.contains(parentTabsWindow)){parentTabsWindow.parentElement.removeChild(parentTabsWindow);}}//Copy settings to the new Window
newTabsWindow.tabCloseButtons=parentTabsWindow.tabCloseButtons;newTabsWindow.dropPosition=parentTabsWindow.dropPosition;newTabsWindow.draggable=newTabsWindow.draggable;newTabsWindow.floatable=newTabsWindow.floatable;}if(!newTabsWindow){newTabsWindow=document.createElement('jqx-tabs-window');}if(!that.hasAnimation){newTabsWindow.animation='none';}newTabsWindow.min=30;newTabsWindow.opened=newTabsWindow.pinned=newTabsWindow.autoHide=true;newTabsWindow.style.maxWidth=newTabsWindow.style.maxHeight='';newTabsWindow._originalTabPosition=parentTabsWindow._originalTabPosition||undefined;newTabsWindow._originalTextOrientation=parentTabsWindow._originalTextOrientation||undefined;if(newTabsWindow!==parentTabsWindow){delete parentTabsWindow._originalTabPosition;delete parentTabsWindow._originalTextOrientation;}newTabsWindow.label=tabsWindow.label;newTabsWindow.appendChild(tabsWindow);tabsWindow=parentTabsWindow;return{tabsWindow:tabsWindow,newTabsWindow:newTabsWindow};}/**
    * jqxTabsWindow Dock event handler
    * @param {any} event
    */},{key:'_dockEventHandler',value:function _dockEventHandler(event){var that=this;var tabsWindow=event.target;if(tabsWindow._tabsWindow){tabsWindow=tabsWindow._tabsWindow;}if(tabsWindow.autoHide){that._dock(tabsWindow.items[tabsWindow.selectedIndex]);}else{that._autoHide(tabsWindow,that._items.indexOf(tabsWindow)<(that._items.length-1)/2);}}/**
     * Down Event Handler
     * @param {any} event
     */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this;var target=void 0;target=event.originalEvent.target.closest('.jqx-window');if(that.$.autoHideWindow._tabsWindow&&(!target||target!==that.$.autoHideWindow&&target!==that.$.autoHideWindow._tabsWindow)){that.$.autoHideWindow._tabsWindow.selectedIndex=null;}if(that._dragDetails){that._cancelDragOperation();return;}//Check for TabsWindow because all TabsWindows should be abble to be inserted into the Layout
if(!(target instanceof JQX.TabsWindow)||!that.draggable||that.disabled){return;}if(that._dragDetails||target.maximized||target.minimized||!JQX.Utilities.Core.isMobile&&event.which!==1||target._dragDetails&&target._dragDetails.type==='resize'&&target._dragDetails.started){return;}that._dragDetails={};target=event.originalEvent.target.closest('.jqx-header-section')||event.originalEvent.target.closest('.jqx-tab-label-container');if(target&&that.snapMode==='simple'&&target.classList.contains('jqx-header-section')){target=undefined;}that._dragDetails.windowFeedback=that.$.tabsWindowFeedback;if(target){that._dragDetails.selectedTabsWindow=target.closest('jqx-tabs-window');if(that._dragDetails.selectedTabsWindow===that.$.autoHideWindow){that._dragDetails.selectedItem=that.$.autoHideWindow._tabsWindow.closest('jqx-splitter-item');}else{that._dragDetails.selectedItem=target.closest('jqx-splitter-item');}if(!that._dragDetails.selectedTabsWindow||!that._dragDetails.selectedTabsWindow.draggable||that._dragDetails.selectedTabsWindow.layout!==that){that._dragDetails=undefined;return;}that._dragDetails.offset={x:0,y:0};that._dragDetails.selectedTabLabel=target;that._dragDetails.x=event.pageX;that._dragDetails.y=event.pageY;if(that._dragDetails.selectedTabLabel.$.hasClass('jqx-header-section')){if(!that._dragDetails.selectedItem&&that._dragDetails.selectedTabsWindow.pinned){that._dragDetails=undefined;return;}that._dragDetails.windowFeedback=that._dragDetails.selectedTabsWindow;var targetRect=target.getBoundingClientRect();that._dragDetails.offset.x=event.clientX-targetRect.left;that._dragDetails.offset.y=event.clientY-targetRect.top;}else{if(!that._dragDetails.selectedTabLabel.tab||that._dragDetails.selectedTabLabel.tab.draggable!==undefined&&!that._dragDetails.selectedTabLabel.tab.draggable){that._dragDetails=undefined;return;}if(that._dragDetails.selectedTabsWindow.items.length===1){that._dragDetails.windowFeedback=that._dragDetails.selectedTabsWindow;that._dragDetails.windowFeedback.floatable=that._dragDetails.selectedTabsWindow.items[0].floatable;}}}that._items.map(function(item){return item.removeAttribute('ontop');});if(that._dragDetails.windowFeedback!==that.$.autoHideWindow){that._dragDetails.windowFeedback.setAttribute('ontop','');}}/**
    * Document Move Event Handler
    * @param {any} event
    */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this,target=JQX.Utilities.Core.isMobile?document.elementFromPoint(event.pageX-window.pageXOffset,event.pageY-window.pageYOffset):event.originalEvent.target;if(that.disabled||!that._dragDetails||that._dragDetails&&!that._dragDetails.selectedTabsWindow||!target){return;}if(Math.abs(event.pageX-that._dragDetails.x)<=5&&Math.abs(event.pageY-that._dragDetails.y)<=5){return;}//Keep starting x,y scoll cordinates
var scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop,selectedTabsWindow=that._dragDetails.selectedTabsWindow;that._dragDetails.isInsideTheLayout=target.closest&&target.closest('jqx-docking-layout')===that;that._dragDetails.started=true;if(that._dragDetails.windowFeedback===that.$.autoHideWindow){var selectedTabsWindowRect=that._dragDetails.selectedTabsWindow.getBoundingClientRect();var newTabsWindow=void 0;if(that.$.autoHideWindow._tabsWindow.items.length===1){newTabsWindow=that.$.autoHideWindow._tabsWindow;}else{newTabsWindow=document.createElement('jqx-tabs-window');newTabsWindow.min=30;newTabsWindow.layout=that;}newTabsWindow.style.width=selectedTabsWindowRect.width+'px';newTabsWindow.style.height=selectedTabsWindowRect.height+'px';newTabsWindow.style.left=selectedTabsWindowRect.left+'px';newTabsWindow.style.top=selectedTabsWindowRect.top+'px';newTabsWindow.setAttribute('ontop','');that._dragDetails.windowFeedback=newTabsWindow;that.$.autoHideWindow.$.addClass('no-transition');that.$.autoHideWindow.close();that.$.autoHideWindow.$.removeClass('no-transition');}that._setDragDetailsOnMove(target);that.$.autoHideWindow.close();if(!that._dragDetails.windowFeedback.classList.contains('jqx-tabs-window-feedback')){that._handleWindowOnDrag();}else{if(!that._dragDetails._parentInfo){that._dragDetails._parentInfo={closestItem:selectedTabsWindow,position:that._originalTabIndex||that._dragDetails.selectedTabLabel.tab.index};that._originalTabIndex=undefined;}if(that._dragDetails.windowFeedback.parentElement!==document.body){document.body.appendChild(that._dragDetails.windowFeedback);}if(that._dragDetails.selectedItem){var closestSplitter=that._dragDetails.selectedItem.closest('jqx-splitter');if(!that._dragDetails.windowFeedback.size&&closestSplitter){that._dragDetails.windowFeedback.size=that._dragDetails.selectedTabsWindow[closestSplitter._measurements.size];}}}if(!that._dragDetails.selectedTabLabel.classList.contains('jqx-header-section')){that._dragDetails.windowFeedback.setAttribute('tabs-window-dragged','');}if(that._dragDetails.windowFeedback.hasAttribute('tabs-window-dragged')||that._dragDetails.selectedTabsWindow===that.$.autoHideWindow||that._dragDetails._parentInfo&&typeof that._dragDetails._parentInfo.position==='string'){that._dragDetails.windowFeedback.style.left=event.pageX-that._dragDetails.offset.x+'px';that._dragDetails.windowFeedback.style.top=event.pageY-that._dragDetails.offset.y+'px';that._setWindowFeedbackSize();}that._dragDetails.windowFeedback.opened=true;if(document.activeElement!==that){that.focus();window.scrollTo(x,y);}var tabHeader=that._dragDetails.hoveredTabsWindow?target.closest('.jqx-tabs-header-section'):undefined;if(tabHeader){that._dragDetails.hoveredTabArea=tabHeader;}else{that._dragDetails.hoveredTabArea=that._dragDetails.hoveredTabsWindow&&target.closest('.jqx-tabs-content-section')?that._dragDetails.hoveredTabsWindow.$.tabsElement.$.tabContentSection:that._dragDetails.hoveredTabsWindow;}//Snapping handler
that._setSnappingMarkers(event,tabHeader);}/**
     * Sets additional dragDetails on DocumentMove. Used in _documentMoveHandler
     * @param {any} target
     */},{key:'_setDragDetailsOnMove',value:function _setDragDetailsOnMove(target){var that=this;if(!that.hasAttribute('dragged')){//Avoid page scrollbar appearing
that._originalBodyOverflow={overflowX:document.body.style.overflowX,overflowY:document.body.style.overflowY,overflow:document.body.style.overflow};var isVerticalScrollable=(document.scrollingElement||document.documentElement).scrollHeight>document.documentElement.clientHeight,isHorizontalScrollable=(document.scrollingElement||document.documentElement).scrollWidth>document.documentElement.clientWidth;var selectedTabsWindow=that._dragDetails.selectedTabsWindow;document.body.style.overflow=document.body.style.overflowX=document.body.style.overflowY='';if(isVerticalScrollable&&!isHorizontalScrollable){document.body.style.overflowX='hidden';}else if(isHorizontalScrollable&&!isVerticalScrollable){document.body.style.overflowY='hidden';}else if(!isHorizontalScrollable&&!isVerticalScrollable){document.body.style.overflow='hidden';}if(that._dragDetails.windowFeedback.$.hasClass('jqx-tabs-window-feedback')||selectedTabsWindow===that.$.autoHideWindow){var tabItem=that._dragDetails.selectedTabLabel.tab||that.$.autoHideWindow._tab;var feedbackWindow=that.$.tabsWindowFeedback;if(selectedTabsWindow===that.$.autoHideWindow){selectedTabsWindow=that.$.autoHideWindow._tabsWindow;feedbackWindow=that._dragDetails.windowFeedback;feedbackWindow.label=tabItem.label;feedbackWindow.floatable=tabItem.floatable;}//Prevents touchmove event from braking on iOS
if(JQX.Utilities.Core.isMobile&&!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)){that._dragDetails.selectedTabLabel._lazyRemove=true;}if(tabItem.parentElement){selectedTabsWindow.removeChild(tabItem);}that._originalTabIndex=tabItem.index;feedbackWindow.appendChild(tabItem);var draggedWindow=that._dragDetails.selectedTabsWindow;if(draggedWindow===that.$.autoHideWindow){if(draggedWindow._tabsWindow.items.length>1){feedbackWindow.tabPosition=draggedWindow.tabPosition;feedbackWindow.tabTextOrientation=draggedWindow._originalTextOrientation||draggedWindow.tabTextOrientation;}}else{var isAutoHide=draggedWindow.autoHide;feedbackWindow.tabPosition=draggedWindow._originalTabPosition||(isAutoHide?'top':draggedWindow.tabPosition);feedbackWindow.tabTextOrientation=draggedWindow._originalTextOrientation||(isAutoHide?'horizontal':draggedWindow.tabTextOrientation);}if(tabItem._autoHideWindowSize){feedbackWindow.size=tabItem._autoHideWindowSize;}else if(selectedTabsWindow.autoHide){var sizeName='offset'+(selectedTabsWindow.tabPosition==='top'||selectedTabsWindow.tabPosition==='bottom'?'Height':'Width');feedbackWindow.size=(selectedTabsWindow._autoHideWindow||selectedTabsWindow)[sizeName];}}if(!that._dragDetails.selectedTabsWindow.closest('jqx-docking-layout')&&!that._dragDetails.windowFeedback._originalPinnedState){that._dragDetails.windowFeedback._originalPinnedState=that._dragDetails.windowFeedback.pinned;}that._dragDetails.windowFeedback.pinned=false;that.setAttribute('dragged','');}that._dragDetails.hoveredItem=target.closest('jqx-splitter-item');if(that._dragDetails.hoveredItem){var closestLayout=that._dragDetails.hoveredItem.closest('jqx-docking-layout');if(closestLayout&&closestLayout===that){that._dragDetails.hoveredTabsWindow=that._dragDetails.hoveredItem.getElementsByTagName('jqx-tabs-window')[0];}else{that._dragDetails.hoveredItem=that._dragDetails.hoveredTabsWindow=undefined;}}else{that._dragDetails.hoveredTabsWindow=target.closest('jqx-tabs-window');}if(that._dragDetails.hoveredTabsWindow){var _closestLayout=that._dragDetails.hoveredTabsWindow.closest('jqx-docking-layout');if(_closestLayout&&_closestLayout!==that){that._dragDetails.hoveredTabsWindow=undefined;}else{that._dragDetails.hoveredTabsWindow.bringToFront();}}}/**
     * Document Drag Start event handler
     * @param {any} event
     */},{key:'_documentDragStartHandler',value:function _documentDragStartHandler(event){var that=this;if(that._dragDetails){event.preventDefault();}}/**
     * Document Select Start event handler
     */},{key:'_documentSelectStartHandler',value:function _documentSelectStartHandler(event){var that=this;if(that._dragDetails&&that._dragDetails.started){event.preventDefault();}}/**
     * Document Up Event Handler
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=(event.originalEvent||event).target;if(!that._dragDetails||that._dragDetails&&!that._dragDetails.started||that.disabled){delete that._dragDetails;return;}that._noStateChangeFiring=true;that.removeAttribute('dragged');that._dragDetails.windowFeedback.removeAttribute('tabs-window-dragged');that._dragDetails.windowFeedback.removeAttribute('ontop');var isInsideTheLayout=target.closest&&target.closest('jqx-docking-layout');if(event.ctrlKey){that._snapFeedback._position=isInsideTheLayout=undefined;}var snapFeedbackPosition=that._snapFeedback?that._snapFeedback._position:undefined;if(!isInsideTheLayout&&!snapFeedbackPosition||isInsideTheLayout&&!that._dragDetails.hoveredTabArea&&!snapFeedbackPosition){that._dropWindowOutsideLayout(event,snapFeedbackPosition,isInsideTheLayout);}else if(that._dragDetails.hoveredTabsWindow&&snapFeedbackPosition){if(that._dragDetails.hoveredTabArea&&that._dragDetails.hoveredTabArea.classList.contains('jqx-tabs-header-section')){var tabLabelCount=that._dragDetails.hoveredTabsWindow.itemLabels.length;var hoveredTabLabel=target.closest('.jqx-tab-label-container'),addToEnd=void 0;if(!hoveredTabLabel||hoveredTabLabel.$.hasClass('jqx-add-new-tab')||!hoveredTabLabel.tab){hoveredTabLabel=that._dragDetails.hoveredTabsWindow.itemLabels[tabLabelCount-1];addToEnd=true;}var items=void 0;if(that._dragDetails.selectedTabLabel.$.hasClass('jqx-tab-label-container')&&that._dragDetails.windowFeedback.$.hasClass('jqx-tabs-window-feedback')){items=[that._dragDetails.selectedTabLabel.tab];}else{items=[].slice.call(that._dragDetails.windowFeedback.items);}var size=void 0;if(that._dragDetails.hoveredTabsWindow.autoHide){var autoHidePosition=that._dragDetails.hoveredTabsWindow.tabPosition;size=that._dragDetails.windowFeedback['offset'+(autoHidePosition==='top'||autoHidePosition==='bottom'?'Height':'Width')];}for(var _i405=0;_i405<items.length;_i405++){items[_i405]._autoHideWindowSize=size||that._dragDetails.windowFeedback.size;that._dragDetails.windowFeedback.removeChild(items[_i405]);that._dragDetails.hoveredTabsWindow.insert(addToEnd?tabLabelCount:hoveredTabLabel.tab.index,{node:items[_i405]});tabLabelCount=that._dragDetails.hoveredTabsWindow.items.length;}that._dragDetails.targetWindow=that._dragDetails.hoveredTabsWindow;}else{that._dragDetails.targetWindow=that._handleItemNesting();that._eventAlreadyFired=true;}//Close the autoHideWindow
that.$.autoHideWindow.close();that._noStateChangeFiring=false;}that._endDrag();}/**
     * Drops a dragged window outside of the Layout. A possible outcome from _documentUpHandler
     * @param {any} event
     * @param {any} snapFeedbackPosition
     */},{key:'_dropWindowOutsideLayout',value:function _dropWindowOutsideLayout(event,snapFeedbackPosition,isInsideTheLayout){var that=this;var targetWindow=void 0;if(!that.floatable||that._dragDetails.windowFeedback.floatable!==undefined&&!that._dragDetails.windowFeedback.floatable){that._cancelDragOperation(true);return;}if(that._dragDetails.windowFeedback.classList.contains('jqx-tabs-window-feedback')){var tabItem=that._dragDetails.windowFeedback.items[0];if(tabItem&&tabItem.floatable!==undefined&&!tabItem.floatable){that._cancelDragOperation(true);return;}//Leave outside the Layout
var selectedTabItem=that._dragDetails.selectedTabLabel.tab;var newWindow=document.createElement('jqx-tabs-window');if(!that.hasAnimation){newWindow.animation='none';}newWindow.opened=true;newWindow.label=selectedTabItem.label;that._dragDetails.windowFeedback.removeChild(selectedTabItem);that._dragDetails.selectedTabLabel.tab.$.removeClass('jqx-visibility-hidden');newWindow.appendChild(that._dragDetails.selectedTabLabel.tab);newWindow.style.left=event.pageX+'px';newWindow.style.top=event.pageY+'px';newWindow.style.maxWidth=newWindow.style.maxHeight='';newWindow.resizeMode=that._dragDetails.selectedTabsWindow.resizeMode;newWindow.tabTextOrientation=that._dragDetails.windowFeedback.tabTextOrientation;newWindow.tabPosition=that._dragDetails.windowFeedback.tabPosition;newWindow.min=30;newWindow.style.width=that._dragDetails.windowFeedback.style.width;newWindow.style.height=that._dragDetails.windowFeedback.style.height;newWindow.draggable=selectedTabItem.draggable!==undefined?selectedTabItem.draggable:true;newWindow.floatable=selectedTabItem.floatable!==undefined?selectedTabItem.floatable:true;document.body.appendChild(newWindow);newWindow.pinned=newWindow.autoHide=newWindow.allowToggle=false;that._noStateChangeFiring=false;targetWindow=newWindow;}else{if(that._dragDetails._parentInfo&&that._dragDetails._parentInfo.closestItem){if(that._dragDetails.windowFeedback.parentElement!==document.body){that._dragDetails.windowFeedback.windowParent='body';document.body.appendChild(that._dragDetails.windowFeedback);}//Reset window properties
that._dragDetails.windowFeedback.style.maxWidth=that._dragDetails.windowFeedback.style.maxHeight='';that._dragDetails.windowFeedback.pinned=that._dragDetails.windowFeedback.allowToggle=that._dragDetails.windowFeedback.autoHide=false;if(that._dragDetails.selectedTabLabel.$.hasClass('jqx-tab-label-container')){that._dragDetails.windowFeedback.label=that._dragDetails.selectedTabLabel.tab.label;}}else if(!snapFeedbackPosition&&!(that._dragDetails.selectedItem instanceof JQX.SplitterItem)&&that._dragDetails.selectedTabLabel.$.hasClass('jqx-tab-label-container')){that._returnItemToOrigin(that._dragDetails.windowFeedback);}targetWindow=that._dragDetails.windowFeedback;targetWindow.locked=false;if(that._dragDetails.selectedItem){that._noStateChangeFiring=false;}}//Close the autoHideWindow
that.$.autoHideWindow.close();if(!isInsideTheLayout){that._dragDetails.windowFeedback.pinned=false;}that._validateWindowPosition(targetWindow);//Remember the previous item
if(that._dragDetails._parentInfo){targetWindow._parentInfo={closestItem:that._dragDetails._parentInfo.closestItem,position:that._dragDetails._parentInfo.position};}targetWindow.layout=that;that._dragDetails.targetWindow=targetWindow;//Reset the tabPosition of floating windows
targetWindow.resizeMode='both';that._setFloatingItemsHeaderButtons(targetWindow);}/**
    * Resets the position of a dragged item if the destination is invalid
    */},{key:'_endDrag',value:function _endDrag(){var that=this,windowFeedback=that._dragDetails.windowFeedback;that.$.tabsWindowFeedback.close();if(windowFeedback.$.tabsElement._tabs.length===0&&windowFeedback.parentElement&&!windowFeedback.$.hasClass('jqx-tabs-window-feedback')){windowFeedback.parentElement.removeChild(windowFeedback);}if(!that.contains(that._dragDetails.windowFeedback)&&that._dragDetails.windowFeedback._originalPinnedState!==undefined){that._dragDetails.windowFeedback.pinned=that._dragDetails.windowFeedback._originalPinnedState;delete that._dragDetails.windowFeedback._originalPinnedState;}if(that._originalBodyOverflow){document.body.style.overflow=that._originalBodyOverflow.overflow;document.body.style.eoverflowX=that._originalBodyOverflow.overflowX;document.body.style.overflowY=that._originalBodyOverflow.overflowY;delete that._originalBodyOverflow;}if(that._dragDetails.targetWindow){that._dragDetails.targetWindow.focus();that._dragDetails.selectedTabsWindow.removeAttribute('active');}else{that._dragDetails.windowFeedback.bringToFront();}//Ends the dragging
that._dragDetails.started=false;that._dragDetails.hoveredItem=that._dragDetails.hoveredTabsWindow=that._dragDetails.isInsideTheLayout=undefined;windowFeedback.removeAttribute('dragged');that._handleSnapping();delete that._dragDetails.selectedTabsWindow._ownerLayout;if(windowFeedback.items.length===0){if(that.contains(windowFeedback)){windowFeedback.opened=false;}if(windowFeedback.$.hasClass('jqx-tabs-window-feedback')){that.$.container.appendChild(windowFeedback);}}if(!that._eventAlreadyFired&&!that._noStateChangeFiring){that._handleAutoSave();var eventDetail={item:that._dragDetails.targetWindow};eventDetail.type=that._items.indexOf(that._dragDetails.targetWindow)>-1?'dock':'float';that.$.fireEvent('stateChange',eventDetail);}that._noStateChangeFiring=that._eventAlreadyFired=undefined;if(that._dragDetails._parentInfo&&that._dragDetails._parentInfo.closestItem){that._removeUnneccessaryItems(that._dragDetails._parentInfo.closestItem.closest('jqx-splitter'));}if(windowFeedback.closest('jqx-docking-layout')){windowFeedback.style.top=windowFeedback.style.left='';delete that._dragDetails;return;}if(windowFeedback.top){windowFeedback.style.top=windowFeedback.top;}if(windowFeedback.left){windowFeedback.style.left=windowFeedback.left;}//iOS Safari bug. Can't remove the HTMLElement that is being dragged on 'move' event
if(that._dragDetails.selectedTabLabel&&that._dragDetails.selectedTabLabel._lazyRemove){if(that._dragDetails.selectedTabLabel.parentElement){that._dragDetails.selectedTabLabel.parentElement.removeChild(that._dragDetails.selectedTabLabel);}delete that._dragDetails.selectedTabLabel._lazyRemove;}windowFeedback._cancelDragging();delete that._dragDetails;}/**
     * Returns the contents of a TabItem as a DocumentFragment
     * @param {any} tabItem
     */},{key:'_getTabItemContent',value:function _getTabItemContent(tabItem){var content=tabItem.isCompleted?tabItem.$.content:tabItem,fragment=document.createDocumentFragment();while(content.firstChild){fragment.appendChild(content.firstChild);}return fragment;}/**
     * Returns the dimension of the header label that hovered 
     */},{key:'_getHeaderLabelDimensions',value:function _getHeaderLabelDimensions(){var that=this;if(!that._dragDetails||!that._dragDetails.hoveredTabsWindow){return;}var tabsElement=that._dragDetails.hoveredTabsWindow.$.tabsElement,isTabPositionVertical=tabsElement.tabPosition==='left'||tabsElement.tabPosition==='right';var lastTabItemOffsetLeft=0,lastTabItemOffsetTop=0,width=void 0,height=void 0;//Tab header item
if(that._dragDetails.hoveredTabArea){width=that._dragDetails.hoveredTabArea.offsetWidth;height=that._dragDetails.hoveredTabArea.offsetHeight;lastTabItemOffsetLeft=that._dragDetails.hoveredTabArea.offsetLeft;lastTabItemOffsetTop=that._dragDetails.hoveredTabArea.offsetTop;}else{if(tabsElement.$.tabStrip.children.length>0){var lastTabItem=tabsElement.$.tabStrip.children[tabsElement.$.tabStrip.children.length-1];lastTabItemOffsetLeft=lastTabItem.offsetLeft+(!isTabPositionVertical?lastTabItem.offsetWidth:0);lastTabItemOffsetTop=lastTabItem.offsetTop+(isTabPositionVertical?lastTabItem.offsetHeight:0);width=lastTabItem.offsetWidth;height=lastTabItem.offsetHeight;}}//In case no item is hovered, use the whole tabHeaderSection offsets
that._dragDetails.hoveredTabArea=tabsElement.$.tabsHeaderSection;var nearTabStripScrollButtonOffsetLeft=0,nearTabStripScrollButtonOffsetTop=0;if(tabsElement.tabTextOrientation==='horizontal'){nearTabStripScrollButtonOffsetLeft=tabsElement.$.scrollButtonNear.offsetWidth;}else{nearTabStripScrollButtonOffsetTop=tabsElement.$.scrollButtonNear.offsetHeight;}var hoveredAreaRect=that._dragDetails.hoveredTabArea.getBoundingClientRect(),tabStrip=that._dragDetails.hoveredTabsWindow.$.tabsElement.$.tabStrip,tabStripRect=tabStrip.getBoundingClientRect(),left=tabStripRect.left-hoveredAreaRect.left+hoveredAreaRect.left+lastTabItemOffsetLeft-tabStrip.scrollLeft-nearTabStripScrollButtonOffsetLeft,top=tabStripRect.top-hoveredAreaRect.top+hoveredAreaRect.top+lastTabItemOffsetTop-tabStrip.scrollTop-nearTabStripScrollButtonOffsetTop,leftHiddenSize=Math.min(lastTabItemOffsetLeft-tabStrip.scrollLeft-nearTabStripScrollButtonOffsetLeft,0),topHiddenSize=Math.min(lastTabItemOffsetTop-tabStrip.scrollTop-nearTabStripScrollButtonOffsetTop,0);return{width:Math.min(tabStripRect.width,Math.max(0,width+leftHiddenSize),Math.max(0,tabStripRect.left+tabStripRect.width-left)),height:Math.min(tabStripRect.height,Math.max(0,height+topHiddenSize),Math.max(0,tabStripRect.top+tabStripRect.height-top)),top:top+window.pageYOffset-topHiddenSize,left:left+window.pageXOffset-leftHiddenSize};}/**
    * Handles AutoSaveState property
    */},{key:'_handleAutoSave',value:function _handleAutoSave(){var that=this;if(!that.autoSaveState){return;}that.saveState();}/**
     * Hides the Splitter Bars that are before or after a locked auto-hidden item
     */},{key:'_handleAutoHiddenSplitterBars',value:function _handleAutoHiddenSplitterBars(){var that=this,autoHiddenItems=that.$.itemsContainer.querySelectorAll('.auto-hide-left,.auto-hide-right, .auto-hide-top, .auto-hide-bottom');for(var _i406=0;_i406<autoHiddenItems.length;_i406++){if(autoHiddenItems[_i406].previousElementSibling instanceof JQX.SplitterBar){autoHiddenItems[_i406].previousElementSibling.hide();}else if(autoHiddenItems[_i406].nextElementSibling instanceof JQX.SplitterBar){autoHiddenItems[_i406].nextElementSibling.hide();}}}/**
     * Handle item insertion with position
     */},{key:'_handleItemPositionInserting',value:function _handleItemPositionInserting(item,targetItem,position){var that=this;if(item.autoHide||position.indexOf('layout')>-1){that._handleLayoutItemInserting(targetItem,item,position);}else if(position.indexOf('outside-')>-1){that._handleOutsideItemInserting(targetItem,item,position);}else{if(position.indexOf('inside-')>-1){that._handleInsideItemInserting(targetItem,item,position);}else{that._handleNormalItemInserting(targetItem,item,position);}that._handleAutoSave();that.$.fireEvent('stateChange',{type:'dock',item:item});that._setSplitterBarVisibility();}}/**
    * Creates a new Splitter when nesting items
    * @param {any} targetItem
    */},{key:'_handleInsideItemInserting',value:function _handleInsideItemInserting(targetItem,item,position){var that=this,newItem=document.createElement('jqx-splitter-item'),newHostItem=document.createElement('jqx-splitter-item');var targetSplitterItem=targetItem.closest('jqx-splitter-item'),targetSplitter=targetItem.closest('jqx-splitter'),targetItemIndex=that._items.indexOf(targetItem),newSplitter=void 0;if(targetSplitter&&targetSplitter._items.length===1){newSplitter=targetSplitter;}else{newSplitter=document.createElement('jqx-splitter');}newSplitter.autoFitMode='proportional';newSplitter.liveResize=that.liveResize;newSplitter.resizeStep=that.resizeStep;item.windowParent=null;newItem.appendChild(item);targetItem.windowParent=null;position=position.replace('inside-','');newSplitter.orientation=position==='top'||position==='bottom'?'horizontal':'vertical';var newItemMaxSize=targetSplitterItem[newSplitter.orientation==='horizontal'?'offsetHeight':'offsetWidth']/2;if(newSplitter.parentElement){newSplitter.insertBefore(newItem,position==='top'||position==='left'?targetSplitterItem:null);}else{newHostItem.appendChild(targetItem);if(targetItem.min){newHostItem.min=targetItem.min;}if(position==='top'||position==='left'){newSplitter.appendChild(newItem);newSplitter.appendChild(newHostItem);}else{newSplitter.appendChild(newHostItem);newSplitter.appendChild(newItem);}targetSplitterItem.appendChild(newSplitter);}if(item.size){var isInPercentages=typeof item.size==='string'&&item.size.indexOf('%')>-1;newItem.size=isInPercentages?item.size:Math.min(newItemMaxSize,parseFloat(item.size));}newItem.max=item.max||'';newItem.min=item.min?item.min:30;newItem.locked=item.locked||false;newItem.collapsible=item.collapsible||false;newItem.collapsed=item.collapsed||false;if(position==='bottom'||position==='right'){targetItemIndex=Math.min(targetItemIndex+1,that._items.length);}item.pinned=true;item.autoHide=item.allowToggle=item.maximized=item.minimized=item.collapsed=false;if(item._originalTabPosition){item.tabPosition=item._originalTabPosition;delete item._originalTabPosition;}else{item.tabPosition='top';}if(item._originalTextOrientation){item.tabTextOrientation=item._originalTextOrientation;delete item._originalTextOrientation;}else{item.tabTextOrientation='horizontal';}that._items.splice(targetItemIndex,0,item);that._handleAutoHiddenSplitterBars();}/**
     * Creates a new Splitter inside the main layout
     * @param {any} targetItem
     */},{key:'_handleLayoutItemInserting',value:function _handleLayoutItemInserting(targetItem,item,position){var that=this,newSplitterItem=document.createElement('jqx-splitter-item'),size=position==='bottom'||position==='top'?'offsetHeight':'offsetWidth';if(!item.size){item.size=item[size];}position=position.replace('layout-','');newSplitterItem.size=item.size||'';newSplitterItem.max=item.max||'';newSplitterItem.min=item.min||'';newSplitterItem.locked=item.locked||false;newSplitterItem.collapsible=item.collapsible||false;newSplitterItem.collapsed=item.collapsed||false;if(newSplitterItem.size&&!that._dockingAutoHideTabItem){newSplitterItem.size=Math.min(that[size]/2,parseFloat(item.size));}if(that.$.itemsContainer.orientation==='horizontal'&&(position==='right'||position==='left')||that.$.itemsContainer.orientation==='vertical'&&(position==='top'||position==='bottom')){var newSplitterItemWithCurrentItems=void 0,currentItemsContainerOrientation=that.$.itemsContainer.orientation;var mainSplitter=that.$.itemsContainer,currentItems=[].slice.call(mainSplitter._items),appendItemsToMainSplitter=function appendItemsToMainSplitter(currentItem,newItem){mainSplitter.appendChild(currentItem);mainSplitter.insertBefore(newItem,position==='right'||position==='bottom'?null:currentItem);};item.windowParent=null;newSplitterItem.appendChild(item);currentItems.map(function(item){return item.size=item[mainSplitter._measurements.size];});var isLastItem=position==='right'||position==='bottom';isLastItem?that._items.push(item):that._items.splice(0,0,item);mainSplitter.removeAll();mainSplitter.orientation=position==='top'||position==='bottom'?'horizontal':'vertical';var newSplitterItemWithCurrentItemsSize=mainSplitter[mainSplitter._measurements.size]-newSplitterItem.size;if(currentItems.length>1){var currentItemsSplitter=document.createElement('jqx-splitter');//The insert item logic of 'end' mode is needed
currentItemsSplitter.autoFitMode='end';currentItemsSplitter.orientation=currentItemsContainerOrientation;currentItemsSplitter.liveResize=that.liveResize;currentItemsSplitter.resizeStep=that.resizeStep;newSplitterItemWithCurrentItems=document.createElement('jqx-splitter-item');//Setting a default min 
newSplitterItemWithCurrentItems.min=30;newSplitterItemWithCurrentItems.appendChild(currentItemsSplitter);newSplitterItemWithCurrentItems.size=newSplitterItemWithCurrentItemsSize;appendItemsToMainSplitter(newSplitterItemWithCurrentItems,newSplitterItem);//Append the items in the approriate order so their size can be calculated properly
for(var _i407=0;_i407<currentItems.length;_i407++){currentItemsSplitter.appendChild(currentItems[_i407]);}currentItemsSplitter.autoFitMode='proportional';}else{currentItems[0].size=newSplitterItemWithCurrentItemsSize;if(that._dockingAutoHideTabItem){mainSplitter.autoFitMode='end';}appendItemsToMainSplitter(currentItems[0],newSplitterItem);mainSplitter.autoFitMode='proportional';}that._handleAutoHiddenSplitterBars();that._handleAutoSave();that.$.fireEvent('stateChange',{type:'dock',item:item});that._setSplitterBarVisibility();}else{var itemToBeInsertedBefore=position.indexOf('left')>-1||position.indexOf('top')>-1?that._items.filter(function(item){return item.opened;})[0]:undefined;item.windowParent=null;newSplitterItem.appendChild(item);that.insertBefore(newSplitterItem,itemToBeInsertedBefore,that.$.itemsContainer);return true;}}/**
    * Inserts a new item in the same splitter as the target item at a specified position
    * @param {any} targetItem
    * @param {any} item
    * @param {any} position
    */},{key:'_handleNormalItemInserting',value:function _handleNormalItemInserting(targetItem,item,position){var targetSplitterItem=targetItem.closest('jqx-splitter-item');var that=this,targetSplitter=targetItem.closest('jqx-splitter'),newItem=document.createElement('jqx-splitter-item'),targetSplitterItemIndex=position==='right'||position==='bottom'?targetSplitter._items.indexOf(targetSplitterItem)+1:targetSplitter._items.indexOf(targetSplitterItem);var targetItemIndex=that._items.indexOf(targetItem);item.windowParent=null;newItem.appendChild(item);newItem.size=item.size||'';newItem.min=item.min||'';targetSplitter.insert(targetSplitterItemIndex,newItem);if(position==='bottom'||position==='right'){targetItemIndex=Math.min(targetItemIndex+1,that._items.length);}item.pinned=true;item.locked=false;item.autoHide=item.allowToggle=item.maximized=item.minimized=item.collapsed=false;if(item._originalTabPosition){item.tabPosition=item._originalTabPosition;delete that._originalTabPosition;}else{item.tabPosition='top';}if(item._originalTextOrientation){item.tabTextOrientation=item._originalTextOrientation;delete item._originalTextOrientation;}else{item.tabTextOrientation='horizontal';}that._items.splice(targetItemIndex,0,item);that._handleAutoHiddenSplitterBars();}/**
     * Inserts the new item outside of the target by nesting the target and it's splitter ( if possible) inside a new splitter item
     * @param {any} targetItem
     * @param {any} item
     * @param {any} position
     */},{key:'_handleOutsideItemInserting',value:function _handleOutsideItemInserting(targetItem,item,position){var that=this,newSplitterItem=document.createElement('jqx-splitter-item');var targetSplitter=targetItem.closest('jqx-splitter');if(!targetSplitter){targetSplitter=that.$.itemsContainer;}newSplitterItem.size=item.size||'';newSplitterItem.max=item.max||'';newSplitterItem.min=item.min||'';newSplitterItem.locked=item.locked||false;newSplitterItem.collapsible=item.collapsible||false;newSplitterItem.collapsed=item.collapsed||false;if(targetSplitter!==that.$.itemsContainer){var targetSplitterItem=targetSplitter.closest('jqx-splitter-item');var newSplitter=document.createElement('jqx-splitter'),newSplitterItemWithCurrentItems=document.createElement('jqx-splitter-item');position=position.replace('outside-','');newSplitter.autoFitMode='proportional';newSplitter.liveResize=that.liveResize;newSplitter.resizeStep=that.resizeStep;item.windowParent=null;newSplitterItem.appendChild(item);//Setting a default min for the item
newSplitterItemWithCurrentItems.min=30;newSplitterItemWithCurrentItems.appendChild(targetSplitter);newSplitter.orientation=position==='top'||position==='bottom'?'horizontal':'vertical';targetSplitterItem.appendChild(newSplitter);if(position==='right'||position==='bottom'){newSplitter.appendChild(newSplitterItemWithCurrentItems);newSplitter.appendChild(newSplitterItem);that._items.splice(that._items.indexOf(targetItem)+1,0,item);}else{newSplitter.appendChild(newSplitterItem);newSplitter.appendChild(newSplitterItemWithCurrentItems);that._items.splice(that._items.indexOf(targetItem),0,item);}if(!newSplitterItem.size){newSplitterItem.size=newSplitter[newSplitter._measurements.size]/2;}else{var newSize=newSplitterItem.size;newSplitterItem.size='';newSplitterItem.size=newSize;}that._handleAutoHiddenSplitterBars();that._handleAutoSave();that.$.fireEvent('stateChange',{type:'dock',item:item});that._setSplitterBarVisibility();}else{item.windowParent=null;newSplitterItem.appendChild(item);that.insertBefore(newSplitterItem,position.indexOf('left')>-1||position.indexOf('top')>-1?that._items[0]:undefined,that.$.itemsContainer);return true;}}/**
     * Apply the layout
     */},{key:'_handleLayout',value:function _handleLayout(){var that=this;that._items=[];if(typeof that.layout==='string'){that.layout=JSON.parse(that.layout);}if(that.layout!==null&&Array.isArray(that.layout)){that._createItemsFromArray(that.layout);return;}var initialItems=Array.from(that.$.itemsContainer.children);that.$.itemsContainer.innerHTML='';for(var _i408=0;_i408<initialItems.length;_i408++){if(initialItems[_i408].tagName!=='JQX-TABS-WINDOW'){initialItems[_i408].parentElement.removeChild(initialItems[_i408]);}initialItems[_i408].layout=that;var splitterItem=document.createElement('jqx-splitter-item');splitterItem.appendChild(initialItems[_i408]);that.$.itemsContainer.appendChild(splitterItem);that._items.push(initialItems[_i408]);}}/**
    * Handles the snapping feedback
    * @param {any} position
    */},{key:'_handleSnapping',value:function _handleSnapping(position){var that=this;if(that.snapMode==='simple'){that._handleSimpleSnapping(position);}else{that._handleAdvancedSnapping();}}/**
     * Handles Advanced snapping mode
     */},{key:'_handleAdvancedSnapping',value:function _handleAdvancedSnapping(){var that=this;if(!that._dragDetails){return;}if(that._snapFeedback&&!that._dragDetails.hoveredTabsWindow){that._snapFeedback._position=undefined;if(that._snapFeedback.areaHighlighter&&that._snapFeedback.areaHighlighter.parentElement){that._snapFeedback.areaHighlighter.parentElement.removeChild(that._snapFeedback.areaHighlighter);}if(that._snapFeedback.headerHighlighter&&that._snapFeedback.headerHighlighter.parentElement){that._snapFeedback.headerHighlighter.parentElement.removeChild(that._snapFeedback.headerHighlighter);}if(!that._dragDetails.hoveredItem){if(that._snapFeedback.innerSnapElement&&that._snapFeedback.innerSnapElement.parentElement){that._snapFeedback.innerSnapElement.parentElement.removeChild(that._snapFeedback.innerSnapElement);}if(that._snapFeedback.outherSnapElement&&!that._dragDetails.isInsideTheLayout){var outherElements=[].slice.call(that.$.container.children);for(var _i409=0;_i409<outherElements.length;_i409++){if(outherElements[_i409].className.indexOf('jqx-docking-layout-snap')>-1){that._snapFeedback.outherSnapElement.appendChild(outherElements[_i409]);}}}return;}}if(!that._snapFeedback){that._snapFeedback={innerSnapElement:document.createElement('div'),outherSnapElement:document.createElement('div'),areaHighlighter:document.createElement('div'),headerHighlighter:document.createElement('div')};that._snapFeedback.innerSnapElement.classList.add('jqx-docking-layout-snap');that._snapFeedback.areaHighlighter.classList.add('jqx-docking-layout-snap-highlighter');that._snapFeedback.headerHighlighter.classList.add('jqx-docking-layout-snap-highlighter-header');that._snapFeedback.innerSnapElement.innerHTML='\n                            <div>\n                                <div class="top">\n                                    <div><div></div></div>\n                                </div>\n                            </div>\n                            <div>\n                                <div class="left">\n                                    <div><div></div></div>\n                                </div>\n                                <div class="center">\n                                    <div><div></div></div>\n                                </div>\n                                <div class="right">\n                                    <div><div></div></div>\n                                </div>\n                            </div>\n                            <div>\n                                <div class="bottom">\n                                    <div><div></div></div>\n                                </div>\n                            </div>';that._snapFeedback.outherSnapElement.innerHTML='\n                            <div class="jqx-docking-layout-snap layout-top">\n                                <div><div></div></div>\n                            </div>\n                            <div class="jqx-docking-layout-snap layout-left">\n                                <div><div></div></div>\n                            </div>\n                            <div class="jqx-docking-layout-snap layout-right">\n                                <div><div></div></div>\n                            </div>\n                            <div class="jqx-docking-layout-snap layout-bottom">\n                                <div><div></div></div>\n                            </div>';}if(that._snapFeedback.areaHighlighter.parentElement){that._snapFeedback.areaHighlighter.removeAttribute('position');that._snapFeedback.areaHighlighter.classList.remove('jqx-hidden');}that._snapFeedback.areaHighlighter.style.width='';that._snapFeedback.areaHighlighter.style.height='';that._snapFeedback._position=that._dragDetails.hoveredItem&&!(that._dragDetails.hoveredItem instanceof JQX.SplitterItem)?that._dragDetails.hoveredItem.className:'';if(that._dragDetails.hoveredItem&&that._dragDetails.hoveredItem.className.indexOf('layout-')>-1){that._snapFeedback._position=that._snapFeedback._position.replace('jqx-docking-layout-snap ','');that._snapFeedback.areaHighlighter.setAttribute('position',that._snapFeedback._position);var selectedTabsWindow=that._dragDetails.selectedTabsWindow;if(selectedTabsWindow.dropPosition.indexOf('all')>-1||selectedTabsWindow.dropPosition.indexOf(that._snapFeedback._position)>-1){that._dragDetails.hoveredItem.setAttribute('show','');that.$.container.appendChild(that._snapFeedback.areaHighlighter);that._dragDetails.hoveredTabsWindow=true;//Sets the size of the outher(layout) highlighters
if(['layout-left','layout-right'].indexOf(that._snapFeedback._position)>-1){that._snapFeedback.areaHighlighter.style.width=that._dragDetails.windowFeedback.style.width||that._dragDetails.windowFeedback.offsetWidth+'px';}else if(['layout-top','layout-bottom'].indexOf(that._snapFeedback._position)>-1){that._snapFeedback.areaHighlighter.style.height=that._dragDetails.windowFeedback.style.height||that._dragDetails.windowFeedback.offsetHeight+'px';}}else{that._dragDetails.hoveredItem.removeAttribute('show');that._snapFeedback._position=undefined;}return;}var dropPosition=that._dragDetails.hoveredTabsWindow?that._dragDetails.hoveredTabsWindow.dropPosition:['all'];if(dropPosition.length===0){dropPosition=['all'];}if(that._dragDetails.hoveredTabsWindow instanceof JQX.TabsWindow&&that._dragDetails.hoveredTabArea&&that._dragDetails.hoveredTabArea.closest('.jqx-tabs-header-section')&&(dropPosition.indexOf('all')>-1||dropPosition.indexOf('header')>-1)){that._dragDetails.hoveredTabArea=that._dragDetails.hoveredTabArea.classList.contains('jqx-tab-label-container')?that._dragDetails.hoveredTabArea:undefined;var dimensions=that._getHeaderLabelDimensions(),headerHighLighter=that._snapFeedback.headerHighlighter;headerHighLighter.style.width=dimensions.width+'px';headerHighLighter.style.height=dimensions.height+'px';headerHighLighter.style.top=dimensions.top+'px';headerHighLighter.style.left=dimensions.left+'px';headerHighLighter.classList.remove('jqx-hidden');if(headerHighLighter.parentElement!==document.body){document.body.appendChild(headerHighLighter);}that._snapFeedback._position='header';}else{that._snapFeedback.headerHighlighter.style.width=that._snapFeedback.headerHighlighter.style.height=0;}var innerSnapElementParent=that._snapFeedback.innerSnapElement.closest('jqx-splitter-item');if(that._dragDetails.hoveredItem instanceof JQX.SplitterItem){if(innerSnapElementParent&&that._dragDetails.hoveredItem!==innerSnapElementParent){innerSnapElementParent.removeChild(that._snapFeedback.innerSnapElement);}if(that._dragDetails.hoveredItem.className.indexOf('auto-hide')<0){var highlighSections=that._snapFeedback.innerSnapElement.querySelectorAll('.top, .bottom, .left, .right, .center');for(var _i410=0;_i410<highlighSections.length;_i410++){if(dropPosition.indexOf(highlighSections[_i410].className)>-1||dropPosition.indexOf('all')===0){highlighSections[_i410].setAttribute('show','');}else{highlighSections[_i410].removeAttribute('show');}}that._snapFeedback.innerSnapElement.classList.remove('jqx-hidden');that._dragDetails.hoveredItem.appendChild(that._snapFeedback.innerSnapElement);}var _outherElements=[].slice.call(that._snapFeedback.outherSnapElement.children),_selectedTabsWindow=that._dragDetails.selectedTabsWindow;var position=void 0;for(var _i411=0;_i411<_outherElements.length;_i411++){position=_outherElements[_i411].className.replace('jqx-docking-layout-snap ','');_outherElements[_i411].classList.remove('jqx-hidden');if(_selectedTabsWindow.dropPosition.indexOf('all')>-1||_selectedTabsWindow.dropPosition.indexOf(position)>-1){_outherElements[_i411].setAttribute('show','');}else{_outherElements[_i411].removeAttribute('show');}that.$.container.appendChild(_outherElements[_i411]);}}if(!that._snapFeedback._position||dropPosition.indexOf('all')<0&&dropPosition.indexOf(that._snapFeedback._position)<0){that._snapFeedback._position=that._dragDetails.hoveredTabArea=undefined;return;}if(that._snapFeedback._position==='center'&&that._items.filter(function(item){return item.opened;}).length>0){that._dragDetails.hoveredTabArea=that._dragDetails.hoveredTabsWindow.$.tabsElement.$.tabsHeaderSection;}//Sets the size of the inner highlighters
if(['left','right'].indexOf(that._snapFeedback._position)>-1){that._snapFeedback.areaHighlighter.style.width=that._dragDetails.windowFeedback.style.width||that._dragDetails.windowFeedback.offsetWidth+'px';}else if(['top','bottom'].indexOf(that._snapFeedback._position)>-1){that._snapFeedback.areaHighlighter.style.height=that._dragDetails.windowFeedback.style.height||that._dragDetails.windowFeedback.offsetHeight+'px';}that._snapFeedback.areaHighlighter.setAttribute('position',that._snapFeedback._position);if(that._snapFeedback._position==='header'){that._dragDetails.hoveredTabsWindow.$.tabsElement.$.tabContentSection.appendChild(that._snapFeedback.areaHighlighter);}else{var orientation=that._dragDetails.hoveredTabsWindow.closest('jqx-splitter').orientation;if((that._snapFeedback._position==='left'||that._snapFeedback._position==='right')&&orientation==='horizontal'||(that._snapFeedback._position==='top'||that._snapFeedback._position==='bottom')&&orientation==='vertical'){that._snapFeedback._position='inside-'+that._snapFeedback._position;}that._dragDetails.hoveredItem.closest('jqx-splitter-item').appendChild(that._snapFeedback.areaHighlighter);}}/**
     * Handles Simple snapping mode
     * @param {any} position
     */},{key:'_handleSimpleSnapping',value:function _handleSimpleSnapping(position){var that=this;function transitionEndHandler(){if(that._snapFeedback.classList.contains('jqx-visibility-hidden')&&that._snapFeedback.parentElement){that._snapFeedback.parentElement.removeChild(that._snapFeedback);}}if(!position){if(that._dragDetails){that._dragDetails.hoveredTabsWindow=that._dragDetails.hoveredTabArea=undefined;}if(that._snapFeedback){that._snapFeedback._position=undefined;if(that._snapFeedback.parentElement){that._snapFeedback.classList.add('jqx-visibility-hidden');}}return;}if(!that._snapFeedback){that._snapFeedback=document.createElement('div');that._snapFeedback.addEventListener('transitionend',transitionEndHandler);}for(var _i412=0;_i412<that._snapFeedback.classList.length;_i412++){if(that._snapFeedback.classList[_i412].indexOf('jqx-docking-snap-')>-1){that._snapFeedback.classList.remove(that._snapFeedback.classList[_i412]);}}that._snapFeedback._position=position;position=position.replace('inside-','');that._snapFeedback.classList.add('jqx-docking-snap-'+position+'-feedback');that._snapFeedback.classList.remove('jqx-visibility-hidden');var dropPosition=position.indexOf('layout')===0?that._dragDetails.selectedTabsWindow.dropPosition:that._dragDetails.hoveredTabsWindow.dropPosition;if(dropPosition.length===0){dropPosition=['all'];}if(dropPosition.indexOf('all')>-1||dropPosition.indexOf(position)>-1){that._snapFeedback.removeAttribute('disabled');}else{that._snapFeedback.setAttribute('disabled','');that._snapFeedback._position=undefined;}var width=void 0,height=void 0,top=void 0,left=void 0,hoveredAreaRect=void 0;var layoutRect=that.getBoundingClientRect(),tabsWindowStyles=getComputedStyle(that._dragDetails.hoveredTabsWindow.$.contentSection),paddingLeft=parseFloat(tabsWindowStyles.getPropertyValue('padding-left')||0),paddingRight=parseFloat(tabsWindowStyles.getPropertyValue('padding-right')||0),paddingTop=parseFloat(tabsWindowStyles.getPropertyValue('padding-top')||0),paddingBottom=parseFloat(tabsWindowStyles.getPropertyValue('padding-bottom')||0),leftHiddenItem=that.$.verticalHiddenItemsContainer.getElementsByClassName('auto-hide-left')[0],topHiddenItem=that.$.horizontalHiddenItemsContainer.getElementsByClassName('auto-hide-top')[0];//Resets the highlighter
that._snapFeedback.style.display='';switch(position){case'header':{var dimensions=that._getHeaderLabelDimensions();width=dimensions.width;height=dimensions.height;top=dimensions.top;left=dimensions.left;//Hides the highlighter if it's overflowing
if(!width||!height){that._snapFeedback.style.display='none';}break;}case'left':case'right':hoveredAreaRect=that._dragDetails.hoveredTabArea.getBoundingClientRect();height=that._dragDetails.hoveredTabArea.offsetHeight;width=that._dragDetails.hoveredTabArea.offsetWidth/2;top=hoveredAreaRect.top+window.pageYOffset;left=hoveredAreaRect.left+(position==='right'?that._dragDetails.hoveredTabArea.offsetWidth/2:0)+window.pageXOffset;break;case'top':case'bottom':hoveredAreaRect=that._dragDetails.hoveredTabArea.getBoundingClientRect();height=that._dragDetails.hoveredTabArea.offsetHeight/2;width=that._dragDetails.hoveredTabArea.offsetWidth;top=hoveredAreaRect.top+window.pageYOffset+(position==='bottom'?that._dragDetails.hoveredTabArea.offsetHeight/2:0);left=hoveredAreaRect.left+window.pageXOffset;break;case'layout-left':case'layout-right':{if(that._snapFeedback.parentElement&&that._snapFeedback.maxWidth===undefined){that._snapFeedback.maxWidth=parseFloat(getComputedStyle(that._snapFeedback).getPropertyValue('max-width'))||0;}width=that.$.itemsContainer.offsetWidth*0.07-(paddingLeft+paddingRight);if(that._snapFeedback.maxWidth){width=Math.min(that._snapFeedback.maxWidth,width);}height=that.$.itemsContainer.offsetHeight-(paddingTop+paddingBottom);top=layoutRect.top+window.pageYOffset+paddingTop+(topHiddenItem?topHiddenItem.offsetHeight:0);left=layoutRect.left+window.pageXOffset+(position==='layout-left'?paddingLeft:0)+(leftHiddenItem?leftHiddenItem.offsetWidth:0)+(position==='layout-right'?that.$.itemsContainer.offsetWidth-width-paddingRight:0);break;}case'layout-top':case'layout-bottom':if(that._snapFeedback.parentElement&&that._snapFeedback.maxHeight===undefined){that._snapFeedback.maxHeight=parseFloat(getComputedStyle(that._snapFeedback).getPropertyValue('max-height'))||0;}height=that.$.itemsContainer.offsetHeight*0.07-(paddingTop+paddingBottom);if(that._snapFeedback.maxHeight){height=Math.min(that._snapFeedback.maxHeight,height);}width=that.$.itemsContainer.offsetWidth-(paddingLeft+paddingRight);top=layoutRect.top+window.pageYOffset+(topHiddenItem?topHiddenItem.offsetHeight:0)+(position==='layout-bottom'?that.$.itemsContainer.offsetHeight-height+paddingTop:paddingTop);left=layoutRect.left+window.pageXOffset+paddingLeft+(leftHiddenItem?leftHiddenItem.offsetWidth:0);break;}that._snapFeedback.style.height=height+'px';that._snapFeedback.style.width=width+'px';that._snapFeedback.style.left=left+'px';that._snapFeedback.style.top=top+'px';if(!that._snapFeedback._position){that._dragDetails.hoveredTabArea=undefined;}if(!that._snapFeedback.parentElement){document.body.appendChild(that._snapFeedback);}}/**
    * Nest item inside another item.
    **/},{key:'_handleItemNesting',value:function _handleItemNesting(){var that=this;var targetWindow=that._dragDetails.windowFeedback;if(targetWindow.classList.contains('jqx-tabs-window-feedback')){var newWindow=document.createElement('jqx-tabs-window');var selectedTabItem=that._dragDetails.selectedTabLabel.tab;newWindow.min=30;newWindow.opened=newWindow.pinned=true;newWindow.headerPosition=that._dragDetails.selectedTabsWindow.headerPosition;if(that._dragDetails.selectedTabsWindow.autoHide){newWindow.tabTextOrientation=that._dragDetails.selectedTabsWindow._originalTextOrientation||'horizontal';newWindow.tabPosition=that._dragDetails.selectedTabsWindow._originalTabPosition||'top';}else{newWindow.tabPosition=that._dragDetails.selectedTabsWindow.tabPosition;newWindow.tabTextOrientation=that._dragDetails.selectedTabsWindow.tabTextOrientation;}if(!that.hasAnimation){newWindow.animation='none';}if(that._snapFeedback._position.indexOf('top')>-1||that._snapFeedback._position.indexOf('bottom')>-1){newWindow.size=parseFloat(targetWindow.style.height)||targetWindow.offsetHeight;}else{newWindow.size=parseFloat(targetWindow.style.width)||targetWindow.offsetWidth;}newWindow.label=selectedTabItem.label;newWindow.id='';that._dragDetails.windowFeedback.removeChild(selectedTabItem);newWindow.appendChild(selectedTabItem);newWindow.style.left=newWindow.style.top='';newWindow.draggable=selectedTabItem.draggable!==undefined?selectedTabItem.draggable:true;newWindow.floatable=selectedTabItem.floatable!==undefined?selectedTabItem.floatable:true;targetWindow=newWindow;}else{//Returns the window to it's initial position
var _context3=targetWindow.context;targetWindow.context=targetWindow;targetWindow.windowParent=null;targetWindow.context=_context3;if(that._snapFeedback._position.indexOf('top')>-1||that._snapFeedback._position.indexOf('bottom')>-1){targetWindow.size=parseFloat(targetWindow.style.height)||targetWindow.offsetHeight;}else{targetWindow.size=parseFloat(targetWindow.style.width)||targetWindow.offsetWidth;}targetWindow.style.top=targetWindow.style.left=targetWindow.style.width=targetWindow.style.height='';targetWindow.pinned=true;//targetWindow.locked = false;
if(!targetWindow._originalTabPosition){targetWindow._originalTabPosition=targetWindow.tabPosition;}}that._insert(that._items.indexOf(that._dragDetails.hoveredTabsWindow),targetWindow,that._snapFeedback._position);return targetWindow;}/**
    * Handles windows that are not dummies while dragging. Applies settings and caches data related to them.
    */},{key:'_handleWindowOnDrag',value:function _handleWindowOnDrag(){var that=this;//Avoids unnecessary calls
if(that._dragDetails.windowFeedback.hasAttribute('dragged')){return;}var selectedItem=that._dragDetails.selectedItem,selectedTabsWindow=that._dragDetails.selectedTabsWindow,closestSplitter=selectedTabsWindow.closest('jqx-splitter');that._setWindowFeedbackSize();if(selectedTabsWindow===that.$.autoHideWindow&&!that._dragDetails._parentInfo){that._dragDetails._parentInfo={};if(selectedTabsWindow._tabsWindow.items.length>1){that._dragDetails._parentInfo.closestItem=selectedTabsWindow._tabsWindow;that._dragDetails._parentInfo.position=that.$.autoHideWindow._tab.index;}else{that._dragDetails._parentInfo.closestItem=that.$.itemsContainer;that._dragDetails._parentInfo.position=selectedTabsWindow._tabsWindow.tabPosition;that._dragDetails.windowFeedback.headerButtons=that.$.autoHideWindow._tabsWindow.headerButtons;that._noStateChangeFiring=true;that.undock(that._dragDetails.windowFeedback);}that._originalTabIndex=undefined;}else{if(closestSplitter&&closestSplitter!==that.$.itemsContainer&&closestSplitter._items.length===1){while(closestSplitter._items.length===1&&closestSplitter!==that.$.itemsContainer){closestSplitter=closestSplitter.parentElement.closest('jqx-splitter');selectedItem=selectedItem.parentElement.closest('jqx-splitter-item');}}if(!that._dragDetails._parentInfo){that._dragDetails._parentInfo={};if(selectedTabsWindow.closest('jqx-docking-layout')===that){if(selectedTabsWindow.autoHide){that._dragDetails._parentInfo.closestItem=that.$.itemsContainer;that._dragDetails._parentInfo.position=selectedTabsWindow.tabPosition;if(selectedTabsWindow._originalTabPosition){selectedTabsWindow.tabPosition=selectedTabsWindow._originalTabPosition;}if(selectedTabsWindow._originalTextOrientation){selectedTabsWindow.tabTextOrientation=selectedTabsWindow._originalTextOrientation;}}else{var selectedItemIndex=closestSplitter._items.indexOf(selectedItem),itemsCount=closestSplitter._items.length;if(itemsCount===1){that._dragDetails._parentInfo.position=closestSplitter.orientation==='horizontal'?'top':'left';that._dragDetails._parentInfo.closestItem=undefined;}else{if(selectedItemIndex===0){that._dragDetails._parentInfo.position=closestSplitter.orientation==='horizontal'?'top':'left';that._dragDetails._parentInfo.closestItem=closestSplitter._items[selectedItemIndex+1].getElementsByTagName('jqx-tabs-window')[0];}else{that._dragDetails._parentInfo.position=closestSplitter.orientation==='horizontal'?'bottom':'right';that._dragDetails._parentInfo.closestItem=closestSplitter._items[selectedItemIndex-1].getElementsByTagName('jqx-tabs-window')[0];}that._dragDetails._parentInfo.closestItemSize=that._dragDetails._parentInfo.closestItem[closestSplitter._measurements.size];if(closestSplitter!==that._dragDetails._parentInfo.closestItem.closest('jqx-splitter')){if(closestSplitter===that.$.itemsContainer){that._dragDetails._parentInfo.position='layout-'+that._dragDetails._parentInfo.position;}else{that._dragDetails._parentInfo.position='outside-'+that._dragDetails._parentInfo.position;}}else if(closestSplitter._items.length===2){that._dragDetails._parentInfo.position='inside-'+that._dragDetails._parentInfo.position;}}}}else{that._dragDetails._parentInfo.position={top:selectedTabsWindow.offsetTop,left:selectedTabsWindow.offsetLeft};}}}if(closestSplitter){that._dragDetails.windowFeedback.size=that._dragDetails.windowFeedback[closestSplitter._measurements.size];}else if(selectedTabsWindow===that.$.autoHideWindow){var autoHidePosition=that.$.autoHideWindow._tabsWindow.tabPosition;that._dragDetails.windowFeedback.size=that.$.autoHideWindow['offset'+(autoHidePosition==='top'||autoHidePosition==='bottom'?'Height':'Width')];}that._dragDetails.windowFeedback.setAttribute('dragged','');if(that._dragDetails.windowFeedback.parentElement!==document.body){that._dragDetails.windowFeedback.windowParent='body';document.body.appendChild(that._dragDetails.windowFeedback);}//Reset the proeprties of the Window
that._dragDetails.windowFeedback.autoHide=false;that._dragDetails.windowFeedback.allowToggle=false;//Reset tabPosition
if(that.snapMode!=='advanced'&&that._dragDetails.windowFeedback.tabPosition==='none'){that._dragDetails.windowFeedback.tabPosition='top';}var itemIndex=that._items.indexOf(that._dragDetails.windowFeedback);if(itemIndex>-1){that._items.splice(itemIndex,1);}if(selectedItem&&selectedItem.parentElement){if(that._items.filter(function(item){return item.opened;}).length===0&&!that.$.placeholderItem.parentElement){that.$.itemsContainer._items[0].className.indexOf('auto-hide')>-1?that.$.itemsContainer.insert(1,that.$.placeholderItem):that.$.itemsContainer.insert(0,that.$.placeholderItem);}if(closestSplitter){closestSplitter.removeChild(selectedItem);that._dragDetails.initialSplitterOrientation=closestSplitter.orientation==='horizontal';that._removeUnneccessaryItems(closestSplitter);}else if(selectedTabsWindow===that.$.autoHideWindow&&that.$.autoHideWindow._tabsWindow.items.length===0){that.$.autoHideWindow._tabsWindow.closest('jqx-splitter').removeChild(selectedItem);}that._setAutoHidePaddings();}}/**
     * Sets the size of the window feedback on documentMove
     */},{key:'_setWindowFeedbackSize',value:function _setWindowFeedbackSize(){var that=this,selectedTabsWindow=that._dragDetails.selectedTabsWindow;if(!that._dragDetails._isWindowFeedbackSizeSet){var width=void 0,height=void 0;if(selectedTabsWindow.autoHide&&selectedTabsWindow._autoHideWindow){if(selectedTabsWindow.tabPosition==='top'||selectedTabsWindow.tabPosition==='bottom'){width=selectedTabsWindow.offsetWidth+'px';height=selectedTabsWindow._autoHideWindow.offsetHeight+'px';}else{width=selectedTabsWindow._autoHideWindow.offsetWidth+'px';height=selectedTabsWindow.offsetHeight+'px';}}else{width=selectedTabsWindow.style.width||selectedTabsWindow.offsetWidth+'px';height=selectedTabsWindow.style.height||selectedTabsWindow.offsetHeight+'px';}that._dragDetails.windowFeedback.style.width=width;that._dragDetails.windowFeedback.style.height=height;that._dragDetails._isWindowFeedbackSizeSet=true;}}/**
    * Inserts a TabsWindow element inside the Layout.
    * index - jqxTabsWindow index or it's instance
    * item - a jqxTabsWindow instance to be inserted
    * position - defines the position ( top, bottom, left, right ) if the item should be nested
    */},{key:'_insert',value:function _insert(index,item,position){var that=this;if(typeof index!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:arguments[3]||'insert'}));return;}if((typeof item==='undefined'?'undefined':babelHelpers.typeof(item))==='object'&&!(item instanceof HTMLElement)){item=that._createTabsWindowFromObject(item);}else if(typeof item==='string'){item=document.getElementById(item);}else if(item instanceof JQX.TabItem){var parentTabsWindow=item.closest('jqx-tabs-window');if(parentTabsWindow&&parentTabsWindow.autoHide){that._dock(parentTabsWindow,position);return;}item=that._createTabsWindowFromObject({label:item.label,items:[{label:item.label,content:item.content}]});}if(!item||!(item instanceof JQX.TabsWindow)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:arguments[3]||'insert'}));return;}if(that.contains(item)&&item.autoHide){that._dock(item,position);return;}if(position&&position.indexOf('layout')>-1){var openedItems=that._items.filter(function(item){return item.opened;});if(openedItems>0){index=position.indexOf('left')>-1||position.indexOf('top')>-1?0:openedItems[openedItems.length-1];}else{index=0;}}var targetItem=that._items[index];if(that._items[index]&&!that._items[index].opened){targetItem=that._items.filter(function(item){return item.opened;})[0];}if(that._items.length===0){that.$.itemsContainer.orientation=position.indexOf('left')>-1||position.indexOf('right')>-1?'vertical':'horizontal';}item.style.top=item.style.left='';item.style.width=item.style.height='';item.opened=true;item.pinned=true;var parentSplitterItem=item.closest('jqx-splitter-item');if(!targetItem){that.insertBefore(item,targetItem||null);if(parentSplitterItem){parentSplitterItem.closest('jqx-splitter').removeChild(parentSplitterItem);}return;}delete item._parentInfo;if(item.autoHide){if(that.$.verticalHiddenItemsContainer.contains(item)){that.$.verticalHiddenItemsContainer.removeChild(item.closest('jqx-splitter-item'));}else if(that.$.horizontalHiddenItemsContainer.contains(item)){that.$.horizontalHiddenItemsContainer.removeChild(item.closest('jqx-splitter-item'));}}if(position){that._handleItemPositionInserting(item,targetItem,position);}else{that.insertBefore(item,targetItem||null);}if(parentSplitterItem){var closestSplitter=parentSplitterItem.closest('jqx-splitter');if(closestSplitter){closestSplitter.removeChild(parentSplitterItem);}}if(item.autoHide){that._autoHide(item,position);}else{var scrollElement=document.scrollingElement||document.documentElement,x=scrollElement.scrollLeft,y=scrollElement.scrollTop;item.focus();//Note: Applying focus sometimes breaks the style
window.scrollTo(x,y);}if(that._items.filter(function(item){return item.opened;}).length>0&&that.$.placeholderItem.parentElement){that.$.itemsContainer.removeChild(that.$.placeholderItem);}item.layout=that;item.resizeMode='none';item.minimized=false;item.maximized=false;that._setDockedItemsHeaderButtons(item);}/**
     * Tabs Windows(inside itemsContainer) Close Event Handler
     * @param {any} event
     */},{key:'_itemsContainerCloseHandler',value:function _itemsContainerCloseHandler(event){var that=this;if(event.target instanceof JQX.Tabs){var targetTabs=event.target;if(targetTabs._tabs.length===0){that.removeChild(targetTabs.closest('jqx-tabs-window'));}return;}if(!(event.target instanceof JQX.TabsWindow)){return;}var splitterItem=event.target.closest('jqx-splitter-item'),splitter=splitterItem.closest('jqx-splitter');if(splitter){splitter.removeChild(splitterItem);that._removeUnneccessaryItems(splitter);}event.target.close();if(that._items.filter(function(item){return item.opened;}).length===0&&!that.$.placeholderItem.parentElement){that.$.itemsContainer.appendChild(that.$.placeholderItem);}}/**
     * Menu autoHide event handler
     */},{key:'_itemsContainerAutoHideHandler',value:function _itemsContainerAutoHideHandler(event){var that=this,button=event.detail.button,tabsWindow=button.closest('jqx-tabs-window');if(!tabsWindow){return;}var closestSplitterItem=tabsWindow.closest('jqx-splitter-item');if(!closestSplitterItem){return;}var closestSplitter=tabsWindow.closest('jqx-splitter');if(!closestSplitter){return;}var closestSplitterItems=closestSplitter.items,isHorizontal=closestSplitter.orientation==='horizontal',isFarItem=closestSplitterItems.indexOf(closestSplitterItem)>=closestSplitterItems.length/2;if(isHorizontal){isFarItem?that.autoHideBottom(tabsWindow):that.autoHideTop(tabsWindow);}else{isFarItem?that.autoHideRight(tabsWindow):that.autoHideLeft(tabsWindow);}}/**
     * Menu open/close event handler
     */},{key:'_itemsContainerMenuHandler',value:function _itemsContainerMenuHandler(event){var that=this,menu=that.$.menu,layoutRect=that.getBoundingClientRect(),menuButtonRect=event.detail.button.getBoundingClientRect();menu.open(menuButtonRect.left-layoutRect.left,menuButtonRect.top-layoutRect.top);that._menuOpenButton=event.detail.button;}/**
     * ItemsContainer resizeEnd event handler. Called when a splitter item inside the Layout has been resized
     */},{key:'_itemsContainerResizeHandler',value:function _itemsContainerResizeHandler(){var that=this,targetItem=event.target._items?event.target._items[event.detail.firstItem.index]:undefined;that._handleAutoSave();that.$.fireEvent('stateChange',{type:'resize',item:targetItem});}/**
     * Key down event handler
     * @param {any} event
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;if(that.disabled||!that.hasAttribute('dragged')||!that._snapFeedback){return;}event.preventDefault();if(event.key==='Control'){//Hide the snap feedback
if(that.snapMode==='advanced'){for(var el in that._snapFeedback){if(that._snapFeedback[el]instanceof HTMLElement){if(el==='outherSnapElement'){var outherElements=that.$.container.children;for(var _i413=0;_i413<outherElements.length;_i413++){if(outherElements[_i413].className.indexOf('jqx-docking-layout-snap')>-1){outherElements[_i413].classList.add('jqx-hidden');}}continue;}that._snapFeedback[el].classList.add('jqx-hidden');}}}else{that._snapFeedback.classList.add('jqx-hidden');}}else if(event.key==='Escape'){that._cancelDragOperation();}}/**
    * Key up event handler
    * @param {any} event
    */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this;if(that.disabled||event.key!=='Control'||!that.hasAttribute('dragged')||!that._snapFeedback){return;}event.preventDefault();//Show that._snapFeedback
if(that.snapMode==='advanced'){for(var el in that._snapFeedback){if(that._snapFeedback[el]instanceof HTMLElement){if(el==='outherSnapElement'){var outherElements=that.$.container.children;for(var _i414=0;_i414<outherElements.length;_i414++){if(outherElements[_i414].className.indexOf('jqx-docking-layout-snap')>-1){outherElements[_i414].classList.remove('jqx-hidden');}}continue;}that._snapFeedback[el].classList.remove('jqx-hidden');}}that._handleSnapping();}else{that._snapFeedback.classList.remove('jqx-hidden');}}/**
     * Loads the previously saved state to the element
     * @param {any} state 
     */},{key:'_loadState',value:function _loadState(state){var that=this;that._createItemsFromArray(state,true);}/**
    * Removes all Layout items
    */},{key:'_removeAll',value:function _removeAll(noPlaceholder){var that=this;function removeAutoHideItems(splitter){var items=splitter._items;for(var _i415=0;_i415<items.length;_i415++){if(!items[_i415].$.hasClass('jqx-docking-layout-item-holder')){splitter.removeChild(items[_i415]);}}}that.$.itemsContainer.removeAll();//Remove auto-hidden-items
removeAutoHideItems(that.$.horizontalHiddenItemsContainer);removeAutoHideItems(that.$.verticalHiddenItemsContainer);that._items=[];if(!noPlaceholder){that.$.itemsContainer.appendChild(that.$.placeholderItem);}}/**
     * Removes unneccessary splitter elements when moving or removing items
     * @param {any} splitterContainer
     * @param {any} splitterItemForRemoval
     */},{key:'_removeUnneccessaryItems',value:function _removeUnneccessaryItems(splitterContainer){if(!splitterContainer){return;}var that=this;var parentItem=void 0;while(splitterContainer._items.length===0&&splitterContainer!==that.$.itemsContainer){(parentItem=splitterContainer.closest('jqx-splitter-item')).removeChild(splitterContainer);splitterContainer=parentItem.closest('jqx-splitter');splitterContainer.removeChild(parentItem);}}/**
    * Return item to original position
    * @param {any} item
    */},{key:'_returnItemToOrigin',value:function _returnItemToOrigin(item){var that=this;if(!item||!that._dragDetails){return;}var parentInfo=that._dragDetails._parentInfo;if(!parentInfo){return;}if(typeof parentInfo.position==='number'){var tabItems=[].slice.call(item.items);for(var _i416=0;_i416<tabItems.length;_i416++){item.removeChild(tabItems[_i416]);parentInfo.closestItem.insert(parentInfo.position,{node:tabItems[_i416]});}}else if(babelHelpers.typeof(parentInfo.position)==='object'){item.style.top=parentInfo.position.top+'px';item.style.left=parentInfo.position.left+'px';}else{if(!parentInfo.closestItem){that.appendChild(item);}else{if(parentInfo.closestItem===that.$.itemsContainer){that._autoHide(item,parentInfo.position);}else{that._insert(that._items.indexOf(parentInfo.closestItem),item,parentInfo.position);}}}}/**
     * Calculates the paddings if the horizontal autoHidden items if vertical auto hiden items are present.
     */},{key:'_setAutoHidePaddings',value:function _setAutoHidePaddings(){var that=this,leftAutoHiddenItem=that.$.verticalHiddenItemsContainer.getElementsByClassName('auto-hide-left')[0],rightAutoHiddenItem=that.$.verticalHiddenItemsContainer.getElementsByClassName('auto-hide-right')[0],topAutoHiddenitem=that.$.horizontalHiddenItemsContainer.getElementsByClassName('auto-hide-top')[0],bottomAutoHiddenitem=that.$.horizontalHiddenItemsContainer.getElementsByClassName('auto-hide-bottom')[0];if(topAutoHiddenitem){topAutoHiddenitem.style.paddingLeft=leftAutoHiddenItem?leftAutoHiddenItem.offsetWidth+'px':'';topAutoHiddenitem.style.paddingRight=rightAutoHiddenItem?rightAutoHiddenItem.offsetWidth+'px':'';}if(bottomAutoHiddenitem){bottomAutoHiddenitem.style.paddingLeft=leftAutoHiddenItem?leftAutoHiddenItem.offsetWidth+'px':'';bottomAutoHiddenitem.style.paddingRight=rightAutoHiddenItem?rightAutoHiddenItem.offsetWidth+'px':'';}}/**
     * Sets the header buttons for all docked items
     * @param {any} tabsWindow
     */},{key:'_setDockedItemsHeaderButtons',value:function _setDockedItemsHeaderButtons(tabsWindow){var headerButtons=tabsWindow.headerButtons,reservedButtons=['close','maximize','minimize'];var dockedItemHeaderButtons=headerButtons.filter(function(buttonName){return reservedButtons.indexOf(buttonName)<0;});if(dockedItemHeaderButtons.length===0){dockedItemHeaderButtons=['close','autoHide'];}else{dockedItemHeaderButtons=headerButtons;}tabsWindow.headerButtons=dockedItemHeaderButtons;}/**
     * Sets the header buttons for the Floating Items
     * @param {any} tabsWindow
     */},{key:'_setFloatingItemsHeaderButtons',value:function _setFloatingItemsHeaderButtons(tabsWindow){var defaultButtons=['close','autoHide'];// ['dock', 'autoHide']
tabsWindow._originalTabPosition=tabsWindow.tabPosition;var floatingItemButtons=tabsWindow.headerButtons.filter(function(buttonName){return defaultButtons.indexOf(buttonName)<0;});//Default FloatingItems buttons
if(floatingItemButtons.length===0){floatingItemButtons=['close','maximize','minimize'];}else{floatingItemButtons=tabsWindow.headerButtons;}tabsWindow.headerButtons=floatingItemButtons;}/**
    * Sets tab index
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(!that.disabled&&!that.unfocusable){var index=that.tabIndex>0?that.tabIndex:0;that.setAttribute('tabindex',index);}else{that.removeAttribute('tabindex');}}/**
     * Checks if snapping highlighters/markers should appear or not
     */},{key:'_setSnappingMarkers',value:function _setSnappingMarkers(event,tabHeader){var that=this,target=JQX.Utilities.Core.isMobile?document.elementFromPoint(event.pageX-window.pageXOffset,event.pageY-window.pageYOffset):event.originalEvent.target,isInsideLayout=target.closest&&target.closest('jqx-docking-layout');if(that.snapMode==='advanced'){if(event.ctrlKey){return;}that._dragDetails.hoveredItem=target.closest('.jqx-docking-layout-snap')?target:that._dragDetails.hoveredItem&&that._dragDetails.hoveredItem.getElementsByTagName('jqx-splitter').length>0?undefined:that._dragDetails.hoveredItem;that._dragDetails.hoveredTabArea=tabHeader?target.closest('.jqx-tab-label-container')||tabHeader:that._dragDetails.hoveredTabArea;that._handleSnapping();return;}if(!isInsideLayout||isInsideLayout!==that){that._handleSnapping();return;}if(!that._dragDetails.hoveredTabsWindow||that._dragDetails.windowFeedback!==that.$.tabsWindowFeedback&&that._dragDetails.hoveredTabsWindow===that._dragDetails.selectedTabsWindow){that._dragDetails.hoveredItem=target.closest('.jqx-docking-layout-snap')?target:that._dragDetails.hoveredItem&&that._dragDetails.hoveredItem.getElementsByTagName('jqx-splitter').length>0?undefined:that._dragDetails.hoveredItem;that._handleSnapping();return;}var hoveredTabOffset={};if(that._dragDetails.hoveredItem){var hoveredItemRect=that._dragDetails.hoveredItem.getBoundingClientRect(),mainSplitterRect=that.$.itemsContainer.getBoundingClientRect();hoveredTabOffset.left=that._dragDetails.hoveredItem?hoveredItemRect.left-mainSplitterRect.left:0;hoveredTabOffset.top=that._dragDetails.hoveredItem?hoveredItemRect.top-mainSplitterRect.top:0;}else{hoveredTabOffset.left=hoveredTabOffset.top=0;}var layoutRect=that.getBoundingClientRect(),itemsContainerRect=that.$.itemsContainer.getBoundingClientRect(),left=Math.max(0,event.pageX-window.pageXOffset-layoutRect.left-(itemsContainerRect.left-layoutRect.left)),top=Math.max(0,event.pageY-window.pageYOffset-layoutRect.top-(itemsContainerRect.top-layoutRect.top));if(that._dragDetails.hoveredTabArea===tabHeader){that._dragDetails.hoveredTabArea=target.closest('.jqx-tab-label-container');that._handleSnapping('header');}else if(that._dragDetails.hoveredItem&&!that._dragDetails.hoveredTabsWindow.autoHide){if(left<that.$.itemsContainer.offsetWidth*0.05&&left<that._dragDetails.hoveredItem.offsetWidth*0.15){that._handleSnapping('layout-left',event);}else if(left>that.$.itemsContainer.offsetWidth*0.95&&left>that._dragDetails.hoveredItem.offsetWidth*0.85+that._dragDetails.hoveredItem.offsetLeft){that._handleSnapping('layout-right');}else if(top<that.$.itemsContainer.offsetHeight*0.05){that._handleSnapping('layout-top');}else if(top>that.$.itemsContainer.offsetHeight*0.95){that._handleSnapping('layout-bottom');}else if(target.closest('.jqx-tabs-content-section')){var orientation=that._dragDetails.hoveredItem.closest('jqx-splitter').orientation;if(left<hoveredTabOffset.left+that._dragDetails.hoveredTabArea.offsetWidth*0.3){that._handleSnapping(orientation==='horizontal'?'inside-left':'left');}else if(left>hoveredTabOffset.left+that._dragDetails.hoveredTabArea.offsetWidth*0.7){that._handleSnapping(orientation==='horizontal'?'inside-right':'right');}else if(top<hoveredTabOffset.top+that._dragDetails.hoveredTabArea.offsetTop+that._dragDetails.hoveredTabArea.offsetHeight*0.5+that._dragDetails.hoveredTabsWindow.$.headerSection.offsetHeight){that._handleSnapping(orientation==='vertical'?'inside-top':'top');}else{that._handleSnapping(orientation==='vertical'?'inside-bottom':'bottom');}}else{that._handleSnapping();}}else{that._handleSnapping();}}/**
     * Handles the hideSplitterBars property
     */},{key:'_setSplitterBarVisibility',value:function _setSplitterBarVisibility(){var that=this,splitterBars=that.$.itemsContainer.getElementsByTagName('jqx-splitter-bar');for(var _i417=0;_i417<splitterBars.length;_i417++){that.hideSplitterBars?splitterBars[_i417].hide():splitterBars[_i417].show();}}/**
     * Keeps the window in the browser viewport
     * @param {any} targetWindow
     */},{key:'_validateWindowPosition',value:function _validateWindowPosition(targetWindow){//Keeps the target inside view if possible. documentElement.clientSize !== scrollElement.clientSize in EDGE and Safari !
targetWindow.$.addClass('no-transition','');var scrollElement=document.scrollingElement||document.documentElement;if(scrollElement.scrollTop>0){targetWindow.style.top=(parseFloat(targetWindow.style.top)||targetWindow.offsetTop)+'px';}else{//Keeps the window in the available ( window ) drop zone
targetWindow.style.top=Math.max(0,Math.min(targetWindow.offsetTop,document.documentElement.clientHeight-targetWindow.offsetHeight))+'px';}if(scrollElement.scrollLeft>0){targetWindow.style.left=(parseFloat(targetWindow.style.left)||targetWindow.offsetTop)+'px';}else{//Keeps the window in the available ( window ) drop zone
targetWindow.style.left=Math.max(0,Math.min(targetWindow.offsetLeft,document.documentElement.clientWidth-targetWindow.offsetWidth))+'px';}//Avoid transitions
requestAnimationFrame(function(){return targetWindow.$.removeClass('no-transition');});}},{key:'autoHideItems',get:function get(){var that=this;if(that.isReady){return that.getAutoHideItems();}}/**
     * Returns an array of Splitter items that are inside the element
     */},{key:'items',get:function get(){var that=this;if(that.isReady){return that._items.filter(function(item){return item.opened;}).concat(that.getAutoHideItems());}}/**
    * Returns all closed TabsWindow items
    */},{key:'closedItems',get:function get(){var that=this;if(that.isReady){return that._items.filter(function(item){return!item.opened;});}}/**
     * Returns all items of the DockingLayout that have been undocked
     */},{key:'undockedItems',get:function get(){var that=this;if(!that.isReady){return;}var tabsWindows=document.getElementsByTagName('jqx-tabs-window');var undockedWindows=[];for(var _i418=0;_i418<tabsWindows.length;_i418++){if(!tabsWindows[_i418].closest('jqx-docking-layout')&&tabsWindows[_i418].layout===that){tabsWindows[_i418].undocked=true;undockedWindows.push(tabsWindows[_i418]);}}return undockedWindows;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'autoLoadState':{value:false,type:'boolean'},'autoSaveState':{value:false,type:'boolean'},'draggable':{value:true,type:'boolean'},'floatable':{value:true,type:'boolean'},'hideSplitterBars':{value:false,type:'boolean'},'layout':{value:[],type:'array',reflectToAttribute:false},'liveResize':{value:false,type:'boolean'},'messages':{value:{'en':{'invalidNode':'{{elementType}}: "{{method}}" method accepts an instance of JQX.TabsWindow','invalidNodeRemove':'{{elementType}}: "{{method}}" method accepts an instance of JQX.TabsWindow that is a child of the DockingLayout.','invalidNodeType':'{{elementType}}: The method "{{method}}" requires a "jqx-tabs-window" element to be passed as an argument.','invalidTargetNode':'{{elementType}}: The method "{{method}}" requires an index of an item that is not hidden/closed. Only visible items that are part of the Layout are valid.','invalidIndex':'{{elementType}}: "{{method}}" method accepts an index of type number.','noId':'jqxDockingLayout requires an id in order to save/load a state.'}},type:'object',extend:true},'resizeStep':{value:5,type:'number'},'snapMode':{value:'advanced',allowedValues:['simple','advanced'],type:'string'}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'autoHideWindow.close':'_autoHideWindowCloseHandler','autoHideWindow.resizeEnd':'_autoHideWindowResizeEndHandler','dock':'_dockEventHandler','move':'_moveHandler','document.down':'_documentDownHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','document.selectstart':'_documentSelectStartHandler','document.dragstart':'_documentDragStartHandler','container.tabStripResize':'_containerTabStripResizeHandler','itemsContainer.close':'_itemsContainerCloseHandler','itemsContainer.autoHide':'_itemsContainerAutoHideHandler','itemsContainer.resizeEnd':'_itemsContainerResizeHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','mouseleave':'_mouseLeaveHandler'};}},{key:'requires',get:function get(){return{'JQX.TabsWindow':'jqxwindow.js','JQX.Splitter':'jqxsplitter.js'};}}]);return DockingLayout;}(JQX.ContentElement));/**
* jqxFileUpload custom element.
*/JQX('jqx-file-upload',function(_JQX$BaseElement12){babelHelpers.inherits(FileUpload,_JQX$BaseElement12);function FileUpload(){babelHelpers.classCallCheck(this,FileUpload);return babelHelpers.possibleConstructorReturn(this,(FileUpload.__proto__||Object.getPrototypeOf(FileUpload)).apply(this,arguments));}babelHelpers.createClass(FileUpload,[{key:'template',/**
    * Element's HTML template.
    */value:function template(){return'<div id="container">\n                    <div id="fileUploadHeader" class ="jqx-file-upload-header">\n                        <jqx-button class ="jqx-browse-button" id="browseButton" disabled="[[disabled]]" theme="[[theme]]"></jqx-button>\n                        <input type="file" class ="jqx-browse-input" id="browseInput" name="[[name]]" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]" multiple="[[multiple]]" webkitdirectory="[[directory]]" mozdirectory="[[directory]]" />\n                    </div>\n                    <div id="fileUploadContainer" class ="jqx-file-upload-container">\n                        <div id="dropZone" class ="jqx-drop-zone"></div>\n                        <div id="selectedFiles" class ="jqx-selected-files"></div>\n                    </div>\n                    <div id="totalFiles" class ="jqx-total-files jqx-hidden">Total flies: 0</div>\n                    <div id="fileUploadFooter" class ="jqx-file-upload-footer jqx-hidden">\n                        <jqx-button class ="jqx-upload-all-button success" id="uploadAllButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]"" theme="[[theme]]"></jqx-button>\n                        <jqx-button class ="jqx-cancel-all-button error" id="cancelAllButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]" theme="[[theme]]"></jqx-button>\n                        <jqx-button class ="jqx-pause-all-button primary" id="pauseAllButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]" theme="[[theme]]"></jqx-button>\n                    </div>\n                </div>';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;babelHelpers.get(FileUpload.prototype.__proto__||Object.getPrototypeOf(FileUpload.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);switch(propertyName){case'accept':that.$.browseInput.accept=newValue;break;case'dropZone':case'appendTo':that._handleContainers();break;case'messages':case'locale':that._updateTextValues();break;case'multiple':that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;if(!newValue&&that._selectedFiles.length>1){that._selectedFiles.splice(1);that._renderSelectedFiles();}break;case'itemTemplate':if(that._items.length>0){that._renderSelectedFiles();that._handleComponentsByAvailableHeight();}break;}}/**
    * Called when the element is attached to the DOM.
    */},{key:'attached',value:function attached(){babelHelpers.get(FileUpload.prototype.__proto__||Object.getPrototypeOf(FileUpload.prototype),'attached',this).call(this);var that=this;that._handleContainers();}/**
    * Called when the element is detached from the DOM.
    */},{key:'detached',value:function detached(){babelHelpers.get(FileUpload.prototype.__proto__||Object.getPrototypeOf(FileUpload.prototype),'detached',this).call(this);var that=this;if(!that.$.fileUploadContainer.contains(that.$.dropZone)){that.$.fileUploadContainer.insertBefore(that.$.dropZone,that.$.fileUploadContainer.firstChild);}if(!that.$.fileUploadContainer.contains(that.$.selectedFiles)){that.$.fileUploadContainer.appendChild(that.$.selectedFiles);}}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(FileUpload.prototype.__proto__||Object.getPrototypeOf(FileUpload.prototype),'ready',this).call(this);var that=this;that._setInitialValues();that._updateTextValues();that._handleContainers();that._handleComponentsByAvailableHeight();}/**
    * Browses for a file
    */},{key:'browse',value:function browse(){var that=this;if(that.disabled||!that.multiple&&that._selectedFiles.length>0){return;}that.$.browseInput.click();}/**
    * Cancels all selected files
    */},{key:'cancelAll',value:function cancelAll(){var that=this;if(that.disabled||that._items.length===0){return;}for(var _i419=that._items.length-1;_i419>=0;_i419--){that.cancelFile(that._items[_i419].index);}that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;}/**
    * Cancels single file.
    * @param {number/string} index - File index.
    */},{key:'cancelFile',value:function cancelFile(index){var that=this;if(!(typeof index==='number')||that.disabled||that._selectedFiles.length===0){return;}var item=that._getFileItem(index,true);if(!item){that.error(that.localize('wrongItemIndex',{elementType:that.nodeName.toLowerCase()}));return;}var itemIndexInArray=that._items.indexOf(item);that.$.selectedFiles.removeChild(item);if(item&&item.xhr){item.xhr.abort();}that._selectedFiles.splice(itemIndexInArray,1);that._items.splice(itemIndexInArray,1);that.$.fireEvent('uploadCanceled',{'filename':item.file.name,'type':item.file.type,'size':item.file.size,'index':item.index});that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;if(that._selectedFiles.length===0){that.$.fileUploadFooter.classList.add('jqx-hidden');}that._handleComponentsByAvailableHeight();}/**
    * Pauses upload of all files
    */},{key:'pauseAll',value:function pauseAll(){var that=this;if(that.disabled||that._items.length===0){return;}for(var _i420=that._items.length-1;_i420>=0;_i420--){var _item29=that._items[_i420];if(_item29.xhr){_item29.xhr.abort();}}}/**
    * Pauses particular file upload
    * @param {number/string} index - File index.
    */},{key:'pauseFile',value:function pauseFile(index){var that=this;if(typeof index!=='number'&&typeof index!=='string'||that.disabled||that._items.length===0){return;}var item=that._getFileItem(index,true);if(!item){that.error(that.localize('wrongItemIndex',{elementType:that.nodeName.toLowerCase()}));return;}item.classList.remove('jqx-uploading-start');if(item&&item.xhr){item.xhr.abort();}that.$.fireEvent('uploadPaused',{'filename':item.file.name,'type':item.file.type,'size':item.file.size,'index':item.index});}/**
    * Uploads all selected files
    */},{key:'uploadAll',value:function uploadAll(){var that=this;if(that.disabled||that._items.length===0){return;}for(var _i421=that._items.length-1;_i421>=0;_i421--){if(!that._items[_i421].uploading){that.uploadFile(that._items[_i421].index);}}}/**
    * Uploads single file. Selection by index
    * @param {number/string} index - File index.
    */},{key:'uploadFile',value:function uploadFile(index){var that=this;var isOnProgress=false;if(!(typeof index==='number')||that.disabled||that._selectedFiles.length===0){return;}var selectedItem=that._getFileItem(index,true);if(!selectedItem){return;}var formData=new FormData(),progressBar=that.showProgress?selectedItem.getElementsByTagName('jqx-progress-bar')[0]:null,// to be handled case with custom template
selectedFile=selectedItem.file;selectedItem.classList.remove('jqx-pause','jqx-error');selectedItem.classList.add('jqx-uploading-start');formData.append('userfile[]',selectedFile);var request=new XMLHttpRequest();request.open('POST',that.uploadUrl);if(that.setHeaders&&typeof that.setHeaders==='function'){that.setHeaders(request,selectedFile);}that.$.fireEvent('uploadStarted',{'filename':selectedItem.file.name,'type':selectedItem.file.type,'size':selectedItem.file.size,'index':selectedItem.index});request.upload.onprogress=function(event){if(!isOnProgress){isOnProgress=true;selectedItem.classList.remove('jqx-uploading-start');selectedItem.classList.add('jqx-uploading');selectedItem.uploading=true;selectedItem.xhr=request;}if(progressBar){progressBar.value=Math.round(event.loaded/event.total*100);}selectedItem.classList.remove('jqx-pause','jqx-error');};request.onabort=function(){selectedItem.classList.remove('jqx-uploading-start','jqx-uploading');selectedItem.classList.add('jqx-pause');selectedItem.addEventListener('animationend',function(){selectedItem.classList.remove('jqx-pause','jqx-error');});};request.onerror=function(){selectedItem.classList.remove('jqx-uploading-start','jqx-uploading');selectedItem.classList.add('jqx-error');selectedItem.addEventListener('animationend',function(){selectedItem.classList.remove('jqx-pause','jqx-error');});};request.onload=function(){isOnProgress=false;selectedItem.classList.remove('jqx-uploading-start','jqx-uploading');if(request.status>=200&&request.status<=299){var actualIndex=that._items.indexOf(selectedItem);that.$.selectedFiles.removeChild(selectedItem);that._selectedFiles.splice(that._selectedFiles.indexOf(selectedFile),1);that._items.splice(actualIndex,1);that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;that.$.fireEvent('uploadCompleted',{'filename':selectedItem.file.name,'type':selectedItem.file.type,'size':selectedItem.file.size,'status':request.status,'index':selectedItem.index});if(that._selectedFiles.length===0){that.$.fileUploadFooter.classList.add('jqx-hidden');}}else{selectedItem.classList.add('jqx-error');selectedItem.classList.remove('jqx-uploading');that.$.fireEvent('uploadError',{'filename':selectedItem.file.name,'type':selectedItem.file.type,'size':selectedItem.file.size,'status':request.status,'index':selectedItem.index});}};request.onreadystatechange=function(){if(!that.responseHandler||typeof that.responseHandler!=='function'){return;}that.responseHandler(request);};request.send(formData);}/**
     * Click handler about "selectedFiles" container
     */},{key:'_selectedFilesClickHandler',value:function _selectedFilesClickHandler(event){var that=this;if(that.disabled){return;}var target=event.target,isItemUploadClicked=target.closest('.jqx-item-upload-button'),isItemCancelClicked=target.closest('.jqx-item-cancel-button'),isItemAbortClicked=target.closest('.jqx-item-pause-button'),clickedItem=target.closest('.jqx-file');if(isItemUploadClicked){that.uploadFile(clickedItem.index);}else if(isItemCancelClicked){that.cancelFile(clickedItem.index);}else if(isItemAbortClicked){that.pauseFile(clickedItem.index);}}/**
    * Change handler of the browse input. When files are selected, they are updated into files array and rendered in the file list
    **/},{key:'_browseInputChangeHandler',value:function _browseInputChangeHandler(){var that=this,selectedFiles=that._filterNewFiles(Array.from(that.$.browseInput.files));var validNewFiles=[];if(that.disabled||selectedFiles.length===0){return;}if(that.validateFile&&typeof that.validateFile==='function'){validNewFiles=selectedFiles.filter(function(file){if(that.validateFile(file)){return true;}that.$.fireEvent('validationError',{'filename':file.name,'type':file.type,'size':file.size});return false;});}else{validNewFiles=selectedFiles;}that._selectedFiles=that._selectedFiles.concat(validNewFiles);if(that._selectedFiles.length===0){return;}that._renderSelectedFiles(validNewFiles);that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;that.$.browseInput.value='';if(that.autoUpload){that.uploadAll();}}/**
    * Returns the default item template
    * @param {string} fileName
    */},{key:'_defaultItemTemplate',value:function _defaultItemTemplate(fileName){var that=this,uploadString=that.localize('uploadFile'),cancelString=that.localize('cancelFile'),pauseString=that.localize('pauseFile');return'<span class ="jqx-item-name">'+fileName+'</span>\n                <span class ="jqx-item-upload-button" title="'+uploadString+'"></span>\n                <span class ="jqx-item-cancel-button" title="'+cancelString+'"></span>\n                <span class ="jqx-item-pause-button" title="'+pauseString+'"></span>\n                <jqx-progress-bar></jqx-progress-bar>';}/**
     * dropZone event handler
     */},{key:'_dropZoneHandler',value:function _dropZoneHandler(event){var that=this;event.preventDefault();event.stopPropagation();if(that.disabled){return;}if(event.type==='dragenter'||event.type==='dragleave'){event.type==='dragenter'?that.$.dropZone.classList.add('jqx-drag-over'):that.$.dropZone.classList.remove('jqx-drag-over');return;}if(event.type==='drop'){that.$.dropZone.classList.remove('jqx-drag-over');if(!that.multiple&&that._selectedFiles.length>0){return;}if(event.dataTransfer&&event.dataTransfer.files&&event.dataTransfer.files.length){var droppedFiles=that._filterNewFiles(Array.from(event.dataTransfer.files));if(droppedFiles.length===0){return;}if(!that.multiple){droppedFiles.splice(1);}that._selectedFiles=that._selectedFiles.concat(droppedFiles);that._renderSelectedFiles(droppedFiles);}that.$.browseButton.disabled=!that.multiple&&that._selectedFiles.length>0||that.disabled?true:false;}}/**
    * Check for duplicated items during selection and add only new items in the selection list
    * @param {array} newSelection - an array with selected files
    **/},{key:'_filterNewFiles',value:function _filterNewFiles(newSelection){var that=this;var newFiles=[];for(var _i422=0;_i422<newSelection.length;_i422++){var notYetSelected=true;for(var j=0;j<that._selectedFiles.length;j++){var oldFile=that._selectedFiles[j],newFile=newSelection[_i422];if(newFile.name===oldFile.name&&newFile.size===oldFile.size&&newFile.type===oldFile.type&&newFile.lastModified===oldFile.lastModified){notYetSelected=false;break;}}if(notYetSelected){newFiles.push(newSelection[_i422]);}}return newFiles;}/**
     * Gets an item from the array with files if it matches particular file name or index
     */},{key:'_getFileItem',value:function _getFileItem(value,byIndex){var that=this;var match=null;if(!value||typeof value!=='string'&&typeof value!=='number'){return;}if(!that._items||that._items.length===0){return null;}for(var _i423=0;_i423<that._items.length;_i423++){var _item30=that._items[_i423];if(byIndex&&_item30.index===parseInt(value)||_item30.file.name===value){match=_item30;}}return match;}/**
     * Handles "dropZone" and "selectedFiles" contaners if they are append to external elements
     */},{key:'_handleContainers',value:function _handleContainers(){var that=this,dropZone=that._validateDOMElement(that.dropZone),appendTo=that._validateDOMElement(that.appendTo);if(dropZone){dropZone.appendChild(that.$.dropZone);}else{that.$.fileUploadContainer.insertBefore(that.$.dropZone,that.$.fileUploadContainer.firstChild);}if(appendTo){appendTo.appendChild(that.$.selectedFiles);}else{that.$.fileUploadContainer.appendChild(that.$.selectedFiles);}}/**
    * Applies the item template
    * @param {string} fileName
    */},{key:'_handleItemTemplate',value:function _handleItemTemplate(filename){var that=this;var template=that.itemTemplate;if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(!template){return that._defaultItemTemplate(filename);}if(typeof template==='string'){template=document.getElementById(template);}if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'template'}));return;}var content=template.innerHTML,regex=/{{\w+}}/g;return content.replace(regex,filename);}/**
    * Renders selected files - by defauld file name, upload button, cancel button
    * @param {array} files - Array with all selected files.
    **/},{key:'_renderSelectedFiles',value:function _renderSelectedFiles(files){var that=this,itemsFragment=document.createDocumentFragment(),filesToRender=files||that._selectedFiles;if(!files){that._items=[];that.$.selectedFiles.innerHTML='';}for(var _i424=0;_i424<filesToRender.length;_i424++){var fileName=that.directory?filesToRender[_i424].webkitRelativePath:filesToRender[_i424].name,_item31=document.createElement('div');that._incrementIndex++;_item31.className='jqx-file';_item31.index=that._incrementIndex;_item31.setAttribute('item-id',that._incrementIndex);_item31.innerHTML=that.itemTemplate?that._handleItemTemplate(fileName):that._defaultItemTemplate(fileName);_item31.file=filesToRender[_i424];_item31.uploading=false;_item31.xhr=null;itemsFragment.appendChild(_item31);that._items.push(_item31);that.$.fireEvent('fileSelected',{'filename':filesToRender[_i424].name,'type':filesToRender[_i424].type,'size':filesToRender[_i424].size,'index':_item31.index});}that.$.selectedFiles.appendChild(itemsFragment);that.$.fileUploadFooter.classList.remove('jqx-hidden');that._handleComponentsByAvailableHeight();// flag about cancel all to prevent recalculations every time when file is canceled
}/**
    * Sets values on initialization
    **/},{key:'_setInitialValues',value:function _setInitialValues(){var that=this;that.$.browseInput.accept=that.accept;that._selectedFiles=[];that._items=[];that._incrementIndex=0;}/**
    * Updates the values of all file uploads buttons an popups
    **/},{key:'_updateTextValues',value:function _updateTextValues(){var that=this,buttons=['browse','uploadAll','cancelAll','pauseAll'];for(var _i425=0;_i425<buttons.length;_i425++){var localizationString=buttons[_i425],buttonName=localizationString+'Button';that.$[buttonName].innerHTML=that.localize(localizationString);}for(var _i426=0;_i426<that._selectedFiles.length;_i426++){var _item32=that._items[_i426];_item32.querySelector('.jqx-item-upload-button').title=that.localize('uploadFile');_item32.querySelector('.jqx-item-cancel-button').title=that.localize('cancelFile');_item32.querySelector('.jqx-item-pause-button').title=that.localize('pauseFile');}}/**
    * Validates if an element exists in DOM
    * @param {string} fileName
    **/},{key:'_validateDOMElement',value:function _validateDOMElement(element){if(!element){return;}if(typeof element==='string'){return document.getElementById(element);}else if(element instanceof HTMLElement){return element;}}/**
    * Validates element's height
    **/},{key:'_handleComponentsByAvailableHeight',value:function _handleComponentsByAvailableHeight(){var that=this;that._calculateAvailableContainerHeight();if(that._elementsAutoHeight>that.offsetHeight){that.$.container.classList.add('jqx-overflow');that._containerOverflows=true;if(that._rowHeight){var remainingFiles=parseInt(that._availableHeight/that._rowHeight);for(var _i427=0;_i427<that._items.length;_i427++){var _item33=that._items[_i427];_i427<remainingFiles?_item33.classList.remove('jqx-hidden'):_item33.classList.add('jqx-hidden');}if(that._items.length>remainingFiles){that.$.totalFiles.innerHTML=that.localize('totalFiles')+that._items.length;that.$.totalFiles.classList.remove('jqx-hidden');}else{that.$.totalFiles.classList.add('jqx-hidden');}}}else if(that.dropZone===''&&that._elementsAutoHeight<that.offsetHeight){that.$.container.classList.remove('jqx-overflow');that._containerOverflows=false;}}/**
    * Calculates available container height
    **/},{key:'_calculateAvailableContainerHeight',value:function _calculateAvailableContainerHeight(){var that=this,containerStyles=window.getComputedStyle(that.$.fileUploadContainer,null),fileUploadContainerOffset=parseInt(containerStyles.getPropertyValue('margin-top'))+parseInt(containerStyles.getPropertyValue('margin-bottom'))+parseInt(containerStyles.getPropertyValue('padding-top'))+parseInt(containerStyles.getPropertyValue('padding-bottom')),fileRow=that.$.container.querySelector('.jqx-file'),headersHeight=that.$.fileUploadHeader.offsetHeight,footersHeight=that.$.fileUploadFooter.offsetHeight,inlineHeight=that.style.height;var totalFilesContainerHeight=0;if(fileRow){that._rowHeight=fileRow.offsetHeight;}that.style.height='auto';if(that._containerOverflows){that.$.container.classList.remove('jqx-overflow');}that._elementsAutoHeight=that.offsetHeight;that.style.height=inlineHeight;if(that._containerOverflows){that.$.container.classList.add('jqx-overflow');}if(that.$.totalFiles.classList.contains('jqx-hidden')>-1){that.$.totalFiles.classList.remove('jqx-hidden');totalFilesContainerHeight=that.$.totalFiles.offsetHeight;that.$.totalFiles.classList.add('jqx-hidden');}that._availableHeight=that.offsetHeight-(headersHeight+footersHeight)-fileUploadContainerOffset-totalFilesContainerHeight;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'accept':{value:null,type:'string?'},'appendTo':{value:null,type:'any'},'autoUpload':{value:false,type:'boolean'},'directory':{value:false,type:'boolean'},'dropZone':{value:null,type:'any'},'hideFooter':{value:false,type:'boolean'},'itemTemplate':{value:null,type:'any'},'messages':{value:{'en':{'browse':'Browse','uploadFile':'Upload File','cancelFile':'Cancel File','pauseFile':'Pause File','uploadAll':'Upload All','cancelAll':'Cancel All','pauseAll':'Pause All','totalFiles':'Total files: ','connectionError':'{{elementType}}: File Upload requires connection to the server.','wrongItemIndex':'{{elementType}}: There is no file with such an index in the list of uploaded files.','tooLongFileName':'{{elementType}}: File name is too long.'}},type:'object',extend:true},'multiple':{value:false,type:'boolean'},'name':{value:'',type:'string'},'responseHandler':{value:null,type:'function?',reflectToAttribute:false},'setHeaders':{value:null,type:'function?',reflectToAttribute:false},'showProgress':{value:false,type:'boolean'},'validateFile':{value:null,type:'function?',reflectToAttribute:false},'uploadUrl':{value:'',type:'string',reflectToAttribute:false}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'browseButton.click':'browse','browseInput.change':'_browseInputChangeHandler','selectedFiles.click':'_selectedFilesClickHandler','uploadAllButton.click':'uploadAll','cancelAllButton.click':'cancelAll','pauseAllButton.click':'pauseAll','dropZone.dragenter':'_dropZoneHandler','dropZone.dragleave':'_dropZoneHandler','dropZone.dragover':'_dropZoneHandler','dropZone.drop':'_dropZoneHandler','resize':'_handleComponentsByAvailableHeight'};}/**
    * Checks for missing modules.
    */},{key:'requires',get:function get(){return{'JQX.Button':'jqxbutton.js','JQX.ProgressBar':'jqxprogressbar.js'};}}]);return FileUpload;}(JQX.BaseElement));/**
 * jqxFilterBuilder custom element.
 */JQX('jqx-filter-builder',function(_JQX$BaseElement13){babelHelpers.inherits(FilterBuilder,_JQX$BaseElement13);function FilterBuilder(){babelHelpers.classCallCheck(this,FilterBuilder);return babelHelpers.possibleConstructorReturn(this,(FilterBuilder.__proto__||Object.getPrototypeOf(FilterBuilder)).apply(this,arguments));}babelHelpers.createClass(FilterBuilder,[{key:'template',/**
    * Element's HTML template.
    */value:function template(){return'<div id="container" title="[[hint]]">\n                    <div id="innerContainer" class ="jqx-inner-container">\n                            <div id="scrollableOuterContainer" class ="jqx-scrollable-outer-container">\n                                <jqx-scroll-viewer id="scrollableContainer" class ="jqx-scrollable-container" animation="[[animation]]">\n                                    <div id="contentContainer" class ="jqx-content-container"></div>\n                                </jqx-scroll-viewer>\n                            </div>\n                            <div id="editorsContainer" class ="jqx-editors-container">\n                                <div id="customEditor" class ="jqx-custom-editor jqx-hidden"></div>\n                            </div>\n                    </div>\n                    <jqx-menu id="conditionsMenu" mode="dropDown" class ="jqx-conditions-menu" theme="[[theme]]" animation="[[animation]]"></jqx-menu>\n            </div>';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;var editors=['textBoxEditor','numericTextBoxEditor','comboBoxEditor','dateTimePickerEditor','checkBoxEditor'];babelHelpers.get(FilterBuilder.prototype.__proto__||Object.getPrototypeOf(FilterBuilder.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);switch(propertyName){case'animation':case'theme':editors.forEach(function(editor){return that.$[editor]&&(that.$[editor][propertyName]=newValue);});break;case'customOperations':that._handleCustomOperations();that._refresh();break;case'fields':that._mapFieldsToMenu();that._refresh();break;case'formatStringDate':case'formatStringDateTime':case'showIcons':case'valueFormatFunction':that._refresh();break;case'locale':case'messages':that._localizeInitialValues();that._refresh();that._handleCustomOperations();//
if(that.$.dateTimePickerEditor){if(!that.$.dateTimePickerEditor.messages[that.locale]){that.$.dateTimePickerEditor.messages[that.locale]={};}that.$.dateTimePickerEditor.messages[that.locale].dateTabLabel=that.localize('dateTabLabel');that.$.dateTimePickerEditor.messages[that.locale].timeTabLabel=that.localize('timeTabLabel');if(propertyName==='locale'){that.$.dateTimePickerEditor.locale=that.locale;}else if(propertyName==='messages'){that.$.dateTimePickerEditor.$.selectDate.innerHTML=that.$.dateTimePickerEditor.messages[that.locale].dateTabLabel;that.$.dateTimePickerEditor.$.selectTime.innerHTML=that.$.dateTimePickerEditor.messages[that.locale].timeTabLabel;}}break;case'maxConditions':case'maxConditionsPerGroup':case'maxLevel':case'value':{that._totalConditions=0;that._validateValue();that._emptyElementsStructure(true);that._convertValueToFlat(that.value);that._getFieldsFromValue();that._mapFieldsToMenu();that._generateHTMLStructureFromFlatValue();that.$.scrollableContainer.refresh();var oldValueAsString=JSON.stringify(that.value);if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{'value':JSON.parse(oldValueAsString)});}break;}case'valuePlaceholder':that._updatePlaceholder();break;}}/**
     * Validates the value of "maxConditions", "maxConditionsPerGroup", and "maxLevel"
     * @param {any} oldValue - the old value
     * @param {any} value - the new value
     */},{key:'_maxValidator',value:function _maxValidator(oldValue,newValue){if(typeof newValue!=='number'){return newValue;}return Math.max(1,newValue);}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(FilterBuilder.prototype.__proto__||Object.getPrototypeOf(FilterBuilder.prototype),'ready',this).call(this);var that=this;that._validateValue();that._setInitialValues();that._handleCustomOperations();that._emptyElementsStructure(true);that._totalConditions=0;that._convertValueToFlat(that.value);that._getFieldsFromValue();that._generateHTMLStructureFromFlatValue();that.$.conditionsMenu._noAutoFocus=true;that._oldValueAsString=JSON.stringify(that.value);setTimeout(function(){that.$.scrollableContainer.refresh();},25);}/*
    * Creates new condition
    * @param {Any} parentGroup - html object or group id
    * @param {Array} data - contains dataField, operator and value
    */},{key:'addCondition',value:function addCondition(parentGroup,data){var that=this;that._checkFieldsExistence();that._addElement('condition',parentGroup,data);}/*
    * Creates new empty group by given operator and parent group
    * @param {Any} parentGroup - could be html object or nodeId
    * @param {String} groupOperator - 'and'/'or'/'notand'/'notor'
    */},{key:'addGroup',value:function addGroup(parentGroup,groupOperator){var that=this;that._addElement('group',parentGroup,groupOperator);}/*
    * Removes condition
    * @param {Any} elementNode - HTML element or nodeId of the element
    */},{key:'removeCondition',value:function removeCondition(elementNode){var that=this;that._validateNode(elementNode,'removeCondition');that._deleteElement(elementNode,'condition');that._refresh();}/*
    * Removes a group with all of it's children
    * @param {Any} elementNode - HTML element or nodeId of the element
    */},{key:'removeGroup',value:function removeGroup(elementNode){var that=this;that._validateNode(elementNode,'removeGroup');that._deleteElement(elementNode,'group');that._refresh();}/**
    * Generates string representation of the value
    * @param {Boolean} useLabels - controls the way of string representation. In mode without labels the object is stringified. In mode with 
    */},{key:'toString',value:function toString(useLabels){var that=this;if(!useLabels){return JSON.stringify(that.value);}var formattedValueFlat=[],groupsWithItems=[];for(var _i428=0;_i428<that._valueFlat.length;_i428++){var _item34=that._valueFlat[_i428];var formattedItem={};if(_item34.type==='condition'){var fieldData=that._getFieldByFieldName(_item34.data[0]),type=fieldData.dataType,category='['+(fieldData.label||fieldData.value)+']',operator=that.localize(_item34.data[1]),_value29=['boolean','number'].indexOf(type)!==-1?_item34.data[2]+'':'\''+_item34.data[2]+'\'';formattedItem.data=category+' '+operator+' '+_value29;}else{formattedItem.data=_item34.data;}formattedItem.nodeId=_item34.nodeId;formattedItem.parentId=_item34.parentId;formattedItem.type=_item34.type;formattedValueFlat.push(formattedItem);}var _loop12=function _loop12(_i429){var item=formattedValueFlat[_i429];var group={};if(item.type==='group'){var hasItems=formattedValueFlat.filter(function(testItem){return testItem.parentId===item.nodeId&&testItem.type==='condition';});if(hasItems.length>0){var content=hasItems.map(function(mappedItem){return mappedItem.data;}),prefix='',sufix='',groupOperator=item.data;if(['notand','notor'].indexOf(groupOperator)!==-1){prefix='Not (';sufix=')';groupOperator=groupOperator.substring(3);}group.nodeId=item.nodeId;group.parentId=item.parentId;group.data=item.data;group.structure=prefix+content.join(' '+that.localize(groupOperator)+' ')+sufix;groupsWithItems.push(group);}}};for(var _i429=0;_i429<formattedValueFlat.length;_i429++){_loop12(_i429);}groupsWithItems=groupsWithItems.filter(function(item){return item.structure.length>1;});groupsWithItems.sort(function(a,b){return b.nodeId.split('.').length-a.nodeId.split('.').length;});var _loop13=function _loop13(_i430){var curentElement=groupsWithItems[_i430],parentElement=groupsWithItems.filter(function(item){return item.nodeId===curentElement.parentId;})[0];if(parentElement&&parentElement.structure){var groupOperator=parentElement.data;if(['notand','notor'].indexOf(groupOperator)!==-1){groupOperator=groupOperator.substring(3);parentElement.structure=parentElement.structure.slice(0,parentElement.structure.length-1)+' '+that.localize(groupOperator)+' ('+curentElement.structure+'))';}else{parentElement.structure=parentElement.structure+' '+that.localize(groupOperator)+' ('+curentElement.structure+')';}}};for(var _i430=0;_i430<groupsWithItems.length;_i430++){_loop13(_i430);}return groupsWithItems[groupsWithItems.length-1].structure;}/*
    * Updates content of a condition
    * @param {Any} elementNode - HTML element or nodeId of the element
    * @param {Array} data - an array with a new condition settings
    */},{key:'updateCondition',value:function updateCondition(elementNode,data){var that=this,editedItem=that._validateNode(elementNode,'updateCondition');that._validateUserData(data,true);editedItem.data=data;that._refresh();}/*
    * Updates content of a group
    * @param {Any} elementNode - HTML element or nodeId of the element
    * @param {String} data - the new state of the group condition operator
    */},{key:'updateGroup',value:function updateGroup(elementNode,data){var that=this,editedItem=that._validateNode(elementNode,'updateGroup');that._validateUserData(data);editedItem.data=data;that._refresh();}/*
    * Creates new group or condition
    * @param {String} type - 'group' or 'condition'
    * @param {Any} parentGroup - html object or group id
    * @param {Any} data - if type is group - contains group's operator;  if type is condition - dataField, operator and value
    */},{key:'_addElement',value:function _addElement(type,parentGroup,data/*, noRefresh*/){parentGroup=parentGroup||'0';var that=this,parentGroups=that._valueFlat.filter(function(item){return item.nodeId===parentGroup&&item.type==='group';}),parentGroupExists=parentGroups.length>0?parentGroups[0]:false,siblings=that._valueFlat.filter(function(item){return item.parentId===parentGroup;});var addGroupAtPosition=0,groupSeparator='';if(!parentGroupExists){that.error(that.localize('wrongParentGroupIndex',{elementType:that.nodeName.toLowerCase(),method:'addGroup/addCondition'}));}if(type==='group'){data=data||'or';}else{if(siblings.filter(function(item){return item.type==='condition';}).length===that.maxConditionsPerGroup||that._totalConditions===that.maxConditions){return;}var defaultDataField=that.fields&&that.fields.length>0?that.fields[0].dataField:that._valueFields[0].dataField;that._totalConditions++;data=data||[];data[0]=data[0]||defaultDataField;data[1]=data[1]||'=';data[2]=babelHelpers.typeof(data[2])!==undefined?data[2]:null;}if(siblings){var siblingsIndexes=siblings.map(function(index){var indexPath=index.nodeId.split('.');return parseInt(indexPath[indexPath.length-1]);});siblingsIndexes=siblingsIndexes.length===0?[0]:siblingsIndexes;addGroupAtPosition=siblingsIndexes.reduce(function(a,b){return Math.max(a,b);})+1;}if(parentGroup&&parentGroup.length>0){groupSeparator='.';}var itemId=parentGroup+groupSeparator+addGroupAtPosition,itemData={nodeId:itemId,parentId:parentGroup,type:type,data:data,htmlNode:null};that._valueFlat.push(itemData);that._refresh();}/**
    * Sets condition row's value to null and sets value's container with valuePlaceholder
    */},{key:'_clearConditionsValue',value:function _clearConditionsValue(nodeId,type){var that=this,itemAsHTML=that.querySelector('[node-id="'+(nodeId||0)+'"]'),valueContainer=itemAsHTML.querySelector('.jqx-value-container');for(var _i431=0;_i431<that._valueFlat.length;_i431++){if(that._valueFlat[_i431].nodeId===nodeId){(function(){var item=that._valueFlat[_i431],dataType=type?that.fields.find(function(field){return field.dataField===type;}).dataType:that.fields.find(function(field){return field.dataField===item.data[0];}).dataType;item.data[2]=that._defaultValueByType(dataType);})();}}valueContainer.innerHTML=that.valuePlaceholder;valueContainer.closest('.jqx-filter-value').setAttribute('placeholder','');}/**
    * Converts value(represented as nested array) to flat array. Used about internal data representation 
    * @param {Array} groupData - an array with group data
    * @param {String} nodeId - the id of the current element
    */},{key:'_convertValueToFlat',value:function _convertValueToFlat(groupData,nodeId){var that=this,regEx=/^(and|or|notAnd|notOr)$/i;if(!groupData){return;}var operatorsFilter=groupData.filter(function(element){return typeof element==='string'&&element.match(regEx);}),groupOperator=operatorsFilter?operatorsFilter[0]:null,conditions=groupData.filter(function(element){return Array.isArray(element)&&element.length===3&&element.filter(function(subElement){return typeof subElement==='string'&&subElement.match(regEx);}).length===0;}),subGroups=groupData.filter(function(element){return!conditions.includes(element)&&element!==groupOperator;});if(!operatorsFilter){return;}var groupSeparator=that._lastProcessedItemInCurrentGroup.parentId?'.':'',groupNodeId=(that._lastProcessedItemInCurrentGroup.parentId||'')+groupSeparator+(nodeId||0);if(that._isMaxLevelExceeded(groupNodeId)){return;}var itemData={nodeId:groupNodeId,parentId:that._lastProcessedItemInCurrentGroup.parentId,type:'group',data:groupOperator,htmlNode:null/*,
            allowedConditionsInGroup = that.maxConditionsPerGroup ? that.maxConditionsPerGroup : conditions.length*/};that._valueFlat.push(itemData);that._lastProcessedItemInCurrentGroup.position=0;for(var _i432=0;_i432<conditions.length;_i432++){if(!conditions[_i432]){break;}var conditionNodeId=groupNodeId+'.'+(that._lastProcessedItemInCurrentGroup.position||0);if(that._isMaxLevelExceeded(conditionNodeId)){break;}var _itemData={nodeId:conditionNodeId,parentId:groupNodeId,type:'condition',data:conditions[_i432],htmlNode:null};that._totalConditions++;that._valueFlat.push(_itemData);that._lastProcessedItemInCurrentGroup.position++;}// process nested elements
for(var _i433=0;_i433<subGroups.length;_i433++){that._lastProcessedItemInCurrentGroup.parentId=groupNodeId;that._convertValueToFlat(subGroups[_i433],conditions.length+_i433);that._lastProcessedItemInCurrentGroup.position++;}}/**
     * Checks the construction for maxLevel nesting
     */},{key:'_isMaxLevelExceeded',value:function _isMaxLevelExceeded(groupId){var that=this,valueFlat=that._valueFlat;if(that.maxLevel===null||valueFlat.length<1){return;}//NOTE: 2 because - 1 is for the 0th (root) group, and -1 because we want to start from 0
//Checks a specific item
if(groupId){return groupId.split('.').length-2>=that.maxLevel;}//Checks the whole structure
for(var _i434=0;_i434<valueFlat.length;_i434++){var data=valueFlat[_i434];if(data.nodeId.split('.').length-2>that.maxLevel){return true;}}}/**
    * Handles click event according to the target's type (filter button, add button, delete button, etc.).
    */},{key:'_clickHandler',value:function _clickHandler(event){var that=this,target=event.target,conditionRow=target?target.closest('.jqx-filter-group-condition'):null,conditionId=conditionRow?conditionRow.getAttribute('node-id'):null,filterGroup=target?target.closest('.jqx-filter-group'):null,filterGroupId=filterGroup?filterGroup.getAttribute('node-id'):null,isAddButton=target.closest('.jqx-filter-add-btn'),isDeleteButton=target.closest('.jqx-filter-delete-btn'),isFilterButton=target.closest('.filter-builder-item'),itemId=conditionId||filterGroupId,item=that._getItemById(itemId);var clickedComponent=void 0;if(that.disabled){return;}if(isFilterButton||isDeleteButton||isAddButton){if(isFilterButton){if(isFilterButton.classList.contains('jqx-filter-field-name')){clickedComponent='fieldButton';}else if(isFilterButton.classList.contains('jqx-filter-operation')){clickedComponent='operationButton';}else if(isFilterButton.classList.contains('jqx-filter-value')){clickedComponent='valueButton';}else{clickedComponent='groupOperationButton';}}else if(isAddButton){clickedComponent='addButton';}else{clickedComponent='deleteButton';}that.$.fireEvent('itemClick',{id:item.nodeId,type:item.type,component:clickedComponent,data:item.data});}if(isDeleteButton){var groupOperatorRow=target.closest('.jqx-filter-group-operator'),_conditionRow=target.closest('.jqx-filter-group-condition');that._clickHandlerDeleteButton(groupOperatorRow,_conditionRow,filterGroup);return;}else if(isAddButton){that._closeEditor();that._contextMenuOptions=that._addOptions;that._handleContextMenu(target);return;}else if(isFilterButton){var elementClassList=isFilterButton.classList;that._clickHandlerFilterButton(elementClassList,itemId,target);return;}if(that.$.conditionsMenu.opened){that.$.fireEvent('menuClosing');that.$.conditionsMenu.close();that.$.fireEvent('menuClose');}var isTargetADropDown=target.closest('.jqx-drop-down'),targetIsEditor=that._editor&&that._editor.contains(target)||isTargetADropDown&&isTargetADropDown.ownerElement===that._editor||target.closest('.jqx-custom-editor');if(!that._editorIsOpen||!that._editor||targetIsEditor){return;}if(that._scrollBarDown){delete that._scrollBarDown;return;}that._closeEditor();}/**
      * Handling click on delete button
      */},{key:'_clickHandlerDeleteButton',value:function _clickHandlerDeleteButton(groupOperatorRow,conditionRow,filterGroup){var that=this;if(that.$.conditionsMenu.opened){that.$.fireEvent('menuClosing');that.$.conditionsMenu.close();that.$.fireEvent('menuClose');}that._closeEditor();if(groupOperatorRow){that._deleteElement(filterGroup,'group');that._generateValue();}else if(conditionRow){that._deleteElement(conditionRow);that._generateValue();}that.$.scrollableContainer.refresh();}/**
    * Handling click on delete buton
    */},{key:'_clickHandlerFilterButton',value:function _clickHandlerFilterButton(elementClassList,itemId,target){var that=this;if(target.closest('.jqx-editors-container')){return;}that._closeEditor();that._editedItem=that._getItemById(itemId);if(!elementClassList.contains('jqx-filter-field-name')&&(!that._editedItem.data||!that._editedItem.data.length)){return;}if(elementClassList.contains('jqx-filter-group-operation')){prepareContextMenu(target,that._groupOperationDescriptions,that._editedItem.data);return;}else if(elementClassList.contains('jqx-filter-add-btn')){prepareContextMenu(target,that._groupOperationDescriptions);}else if(elementClassList.contains('jqx-filter-field-name')){if(!that._fields){that._mapFieldsToMenu();}prepareContextMenu(target,that._fields,that._editedItem.data[0]);return;}else if(elementClassList.contains('jqx-filter-operation')){var selectedField=that._getFieldByFieldName(that._editedItem.data[0]);if(!selectedField){return;}var filteredOptions=that._filterOperationDescriptions.slice();if(selectedField&&selectedField.filterOperations){filteredOptions=that._filterOperationDescriptions.filter(function(item){return selectedField.filterOperations.indexOf(item.value)>-1;});}else{var filterOperationsByType=void 0;switch(selectedField.dataType){case'number':filterOperationsByType=['=','<>','<','>','<=','>=','isblank','isnotblank'];break;case'date':filterOperationsByType=['=','<>','<','>','<=','>=','isblank','isnotblank'];break;case'datetime':filterOperationsByType=['=','<>','<','>','<=','>=','isblank','isnotblank'];break;case'boolean':filterOperationsByType=['=','<>','isblank','isnotblank'];break;case'object':filterOperationsByType=['isblank','isnotblank'];break;case'string':filterOperationsByType=['contains','notcontains','startswith','endswith','=','<>','isblank','isnotblank'];break;default:filterOperationsByType=['contains','notcontains','startswith','endswith','=','<>','<','>','<=','>=','isblank','isnotblank'];break;}filteredOptions=that._filterOperationDescriptions.filter(function(item){return filterOperationsByType.indexOf(item.value)>-1;});}if(that.showIcons){filteredOptions=filteredOptions.map(function(item){item.label='<div class="jqx-filter-builder-icon">'+that.icons[item.value]+'</div><div class="jqx-filter-builder-menu-item">'+that.localize(item.value)+'</div>';return item;});}prepareContextMenu(target,filteredOptions.slice(),that._editedItem.data[1]);return;}else{that._openEditor(target);return;}function deSelectMenuItem(){var alredySelectedItem=that.$.conditionsMenu.querySelector('.jqx-selected-menu-item');if(alredySelectedItem){alredySelectedItem.classList.remove('jqx-selected-menu-item');}}function prepareContextMenu(target,dataSource,selectedItem){deSelectMenuItem();that._contextMenuOptions=dataSource.length===0?that._defaultFilterOperationDescriptions:dataSource;that._handleContextMenu(target);var selectedField=selectedItem,chosenMenuItem=that.$.conditionsMenu.querySelector('jqx-menu-item[value="'+selectedField+'"]');if(!that.$.conditionsMenu.opened||!chosenMenuItem){return;}chosenMenuItem.classList.add('jqx-selected-menu-item');}}/**
    * Closes an editor and sets the new value in the value's cotainer
    * @param {Boolean} preventEventFiring (optional).
    */},{key:'_closeEditor',value:function _closeEditor(preventEventFiring){var that=this;var storedValue=void 0;if(!that._editedItem||!that._editorIsOpen){return;}if(that._editor===that.$.dateTimePickerEditor){storedValue=that._editor.value;if(storedValue){storedValue=storedValue.toDate();}}else if(that._editor===that.$.checkBoxEditor){storedValue=that._editor.checked;}else if(that._editor===that.$.customEditor){storedValue=that._selectedCustomCondition.handleValue(that._editor);}else{var selectedField=that._getFieldByFieldName(that._editedItem.data[0]);if(selectedField.dataType==='array'){storedValue=that._editor.value.split(',');}else if(selectedField.dataType==='object'){storedValue=JSON.parse(that._editor.value);}else{storedValue=that._editor.value;}}var editedItem=that._editedItem,editedRow=editedItem.htmlNode,nodeId=editedItem.nodeId,valueDataType=that._getFieldByFieldName(editedItem.data[0]).dataType,editedHTMLvalueComponent=editedRow.querySelector('.jqx-filter-value'),editedHTMLvalueContainer=editedRow.querySelector('.jqx-value-container'),eventData={value:storedValue,valueType:valueDataType||'string',editedItem:editedItem};that.$.fireEvent('editorClosing',eventData);that._updateValueInFlatArray(nodeId,storedValue,'value',valueDataType||'string');that._generateValue(preventEventFiring);editedHTMLvalueComponent.removeAttribute('edited');that.$.editorsContainer.removeAttribute('open');if(that._editor===that.$.checkBoxEditor){editedHTMLvalueContainer.innerHTML=that._editor.checked?'true':'false';}else if(that._editor===that.$.customEditor){var _value30=that._selectedCustomCondition.valueTemplate(that._editor);editedHTMLvalueContainer.innerHTML=_value30;}else{editedHTMLvalueContainer.innerHTML=that._formatValueStringRepresentation(that._editor.value,that._editedItem.data[0]);}that._editor.classList.add('jqx-hidden');that._editorIsOpen=that._enterIsPressedInEditor=false;that.$.fireEvent('editorClose',eventData);that.$.scrollableContainer.refresh();}},{key:'_defaultValueByType',value:function _defaultValueByType(type){var defaultValue=void 0;switch(type){case'number':defaultValue=0;break;case'date':case'datetime':{defaultValue=new Date();defaultValue.setHours(0,0,0);break;}case'boolean':defaultValue=false;break;case'object':defaultValue=null;break;default:defaultValue='';}return defaultValue;}/**
    * Removes a condition and it's HTML representation
    * @param {Any} elementNode.
    * @param {String} type.
    */},{key:'_deleteElement',value:function _deleteElement(elementNode,type){var that=this,actualElement=elementNode instanceof HTMLElement?elementNode:that._valueFlat.find(function(item){return item.nodeId===elementNode;}).htmlNode,nodeId=typeof elementNode==='string'?elementNode:elementNode.getAttribute('node-id');if(!nodeId||nodeId.length===1){return;}type==='group'?deleteGroup(nodeId):deleteCondition(nodeId);function deleteCondition(nodeId){var items=that._valueFlat.filter(function(item){return nodeId===item.nodeId;});var item=items?items[0]:null;that._valueFlat.splice(that._valueFlat.indexOf(item),1);that._totalConditions--;}function deleteGroup(nodeId){var items=that._valueFlat.filter(function(item){return nodeId===item.nodeId;}),item=items?items[0]:null;for(var _i435=0;_i435<that._valueFlat.length;_i435++){var nestedItem=that._valueFlat[_i435],nestedNodeId=nestedItem.nodeId;if(nestedItem.parentId===nodeId){nestedItem.type==='group'?deleteGroup(nestedNodeId):deleteCondition(nestedNodeId);}}that._valueFlat.indexOf(item)>-1&&that._valueFlat.splice(that._valueFlat.indexOf(item),1);}var _loop14=function _loop14(_i436){var parentGroup=that._valueFlat.filter(function(item){return that._valueFlat[_i436].parentId===item.nodeId;});if(parentGroup.length===0&&that._valueFlat[_i436].nodeId!=='0'){that._valueFlat.splice(_i436,1);that._totalConditions--;}};for(var _i436=that._valueFlat.length-1;_i436>=0;_i436--){_loop14(_i436);}that._generateValue();actualElement.parentElement.removeChild(actualElement);function updateNodeIds(siblings,parentId){siblings.forEach(function(element,index){var valueFlatItem=that._valueFlat.find(function(item){return item.htmlNode===element;}),id=parentId+'.'+index;element.setAttribute('node-id',id);valueFlatItem.parentId=parentId;valueFlatItem.nodeId=id;if(element.classList.contains('jqx-filter-group')){updateNodeIds(Array.from(element.children[1].children),id);}});}updateNodeIds(Array.from(that.$.contentContainer.firstElementChild.children[1].children),'0');}/**
    * Document click handler - closes menu and/or editor on click outside of the element
    */},{key:'_documentClickHandler',value:function _documentClickHandler(event){var that=this;if(event.target.closest('jqx-filter-builder')){return;}if(that.$.conditionsMenu.opened){that.$.fireEvent('menuClosing');that.$.conditionsMenu.close();that.$.fireEvent('menuClose');}if(that._editorIsOpen&&!that._scrollBarDown){that._closeEditor();}delete that._scrollBarDown;}/**
     * down handler
     */},{key:'_downHandler',value:function _downHandler(event){var that=this;if(event.target.closest('jqx-scroll-bar')){that._scrollBarDown=true;}else{delete that._scrollBarDown;}}/**
     * Editor's change handler
     */},{key:'_containerChangeHandler',value:function _containerChangeHandler(event){event.stopPropagation();}/**
    * Generates HTML structure from flat array and adds/replaces 
    * @param {Array} data - contains dataField, operator and value
    */},{key:'_emptyElementsStructure',value:function _emptyElementsStructure(emptyValueFlat){var that=this,contentContainer=that.$.contentContainer;while(contentContainer.firstChild){contentContainer.removeChild(contentContainer.firstChild);}that._valueFlat=emptyValueFlat?[]:that._valueFlat;that._lastProcessedItemInCurrentGroup={parentId:null,id:null,position:null};}/**
    * Creates filter group row
    * @param {String} groupOperator (optional).
    */},{key:'_filterGroupRow',value:function _filterGroupRow(groupOperator){var that=this;groupOperator=that.localize(groupOperator||'or');var groupRow=document.createElement('div'),template='<span class ="jqx-filter-delete-btn"></span>\n                <span class ="filter-builder-item jqx-filter-group-operation">'+groupOperator+'</span>\n                <span class ="jqx-filter-add-btn"></span>';groupRow.className='jqx-filter-group-operator';groupRow.innerHTML=template;groupRow.data=groupOperator||'or';//
return groupRow;}/**
    * Removes a condition and it's HTML representation
    * @param {Any} value.
    * @param {String} field.
    */},{key:'_formatValueStringRepresentation',value:function _formatValueStringRepresentation(value,field){var that=this,fieldData=that._getFieldByFieldName(field);var valueFormattedByType=void 0;if(!fieldData){return value;}if((!value||value.length===0)&&fieldData.dataType!=='boolean'&&fieldData.dataType==='number'&&value===null||fieldData.dataType==='string'&&(!value||value.length===0)){return that.valuePlaceholder;}switch(fieldData.dataType){case'date':case'datetime':if(value){value=validateDateTimeValue(value);value.calendar.days=that._localizedDays;value.calendar.months=that._localizedMonths;value.calendar.locale=that.locale;JQX.Utilities.DateTime.cache=[];valueFormattedByType=value.toString(fieldData.dataType==='date'?that.formatStringDate:that.formatStringDateTime);}else{valueFormattedByType=that.valuePlaceholder;}break;case'array':valueFormattedByType=typeof value==='string'?value.split(','):value;break;case'object':valueFormattedByType=typeof value==='string'?value:JSON.stringify(value);break;case'number':valueFormattedByType=value;break;case'boolean':valueFormattedByType=value===false?'false':'true';break;default:valueFormattedByType=value+'';break;}if(!that.valueFormatFunction){return valueFormattedByType;}function validateDateTimeValue(value){if(value===0||typeof value==='number'||typeof value==='string'||value===true||value===''||value==='0'||Array.isArray(value)||(typeof value==='undefined'?'undefined':babelHelpers.typeof(value))==='object'&&value.constructor===Date){return new JQX.Utilities.DateTime(value);}else{return value;}}return that.valueFormatFunction(valueFormattedByType,field,fieldData.dataType||'string');}/**
    * Generates HTML structure from flat array and adds/replaces 
    */},{key:'_generateHTMLStructureFromFlatValue',value:function _generateHTMLStructureFromFlatValue(){var that=this,fragment=document.createDocumentFragment();if(!that._valueFlat||that._valueFlat.length===0){return;}var _loop15=function _loop15(_i437){var item=that._valueFlat[_i437],customOperation=that.customOperations?that.customOperations.find(function(operation){return operation.name===item.data[1];}):false,parentGroupHTMLcontainer=item.parentId?that.querySelector('[node-id="'+item.parentId+'"]').querySelector('.jqx-filter-group-condition-container'):that.$.contentContainer;if(item.type==='group'){var groupContainerBlock=document.createElement('div'),groupOperatorBlock=that._filterGroupRow(item.data),groupConditionsContainerBlock=document.createElement('div');groupContainerBlock.className='jqx-filter-group';groupConditionsContainerBlock.className='jqx-filter-group-condition-container';groupContainerBlock.appendChild(groupOperatorBlock);groupContainerBlock.appendChild(groupConditionsContainerBlock);fragment.appendChild(groupContainerBlock);groupContainerBlock.setAttribute('node-id',item.nodeId);that._valueFlat[_i437].htmlNode=groupContainerBlock;if(that._isMaxLevelExceeded(item.nodeId+'.0')){groupContainerBlock.setAttribute('max-level','');}}else{var condition=that._newFilterConditionRow(item.data);condition.setAttribute('node-id',item.nodeId);fragment.appendChild(condition);that._valueFlat[_i437].htmlNode=condition;if(['isblank','isnotblank'].indexOf(item.data[1])!==-1||customOperation&&customOperation.hideValue){condition.children[3].classList.add('jqx-hidden');}}parentGroupHTMLcontainer.appendChild(fragment);};for(var _i437=0;_i437<that._valueFlat.length;_i437++){_loop15(_i437);}}/**
    * Generates the new value of "value" property from flat array
    */},{key:'_generateValue',value:function _generateValue(){var that=this;var groupsWithItems=[],value=that._valueFlat.slice();createNestedArray(value);function createNestedArray(flatValue){for(var _i438=0;_i438<flatValue.length;_i438++){var _item35=flatValue[_i438];var _group5={};if(_item35.type==='group'){_group5.nodeId=_item35.nodeId;_group5.parentId=_item35.parentId;_group5.structure=[_item35.data||'or'];groupsWithItems.push(_group5);}}var _loop16=function _loop16(_i439){var group=groupsWithItems[_i439],conditions=flatValue.filter(function(item){return item.parentId===group.nodeId&&item.type==='condition';});for(var _i441=0;_i441<conditions.length;_i441++){_i441===0?group.structure.unshift(conditions[_i441].data):group.structure.push(conditions[_i441].data);}};for(var _i439=0;_i439<groupsWithItems.length;_i439++){_loop16(_i439);}groupsWithItems=groupsWithItems.filter(function(item){return item.structure.length>1;});groupsWithItems.sort(function(a,b){return b.nodeId.split('.').length-a.nodeId.split('.').length;});var _loop17=function _loop17(_i440){var curentElement=groupsWithItems[_i440],parentElement=groupsWithItems.filter(function(item){return item.nodeId===curentElement.parentId;})[0];if(parentElement&&parentElement.structure){parentElement.structure.push(curentElement.structure);}};for(var _i440=0;_i440<groupsWithItems.length;_i440++){_loop17(_i440);}}if(groupsWithItems.length>0){that.value=that._valueFlat.length>1?groupsWithItems[groupsWithItems.length-1].structure:groupsWithItems;}else{that.value=[that._getItemById('0').data];}var oldValueAsString=JSON.stringify(that.value);if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{'value':JSON.parse(oldValueAsString)});}}/**
    * Return field's data by given field name
    * @param {String} fieldName
    */},{key:'_getFieldByFieldName',value:function _getFieldByFieldName(fieldName){var that=this,fields=that.fields?that.fields.filter(function(item){return item.dataField===fieldName;}):that._valueFields.filter(function(item){return item.dataField===fieldName;});return fields[0]||null;}/**
    * Generates an array of field objecst, used as a backup when fields property is not set
    */},{key:'_getFieldsFromValue',value:function _getFieldsFromValue(){var that=this,items=that._valueFlat,fieldsNames=[],fields=[];for(var _i442=0;_i442<items.length;_i442++){if(items[_i442].type==='condition'){var fieldName=items[_i442].data[0];if(fieldsNames.indexOf(fieldName)===-1){var fieldElement={label:fieldName,dataField:fieldName,dataType:'string',format:null};fieldsNames.push(fieldName);fields.push(fieldElement);}}}that._valueFields=fields;}/**
    * Return item's data by given id
    * @param {String} id - item's id (or parent id - demending on the second parameter)
    * @param {Boolean} isParent (optional)  - of the items is searched by parentId
    */},{key:'_getItemById',value:function _getItemById(id,isParent){var that=this,matches=that._valueFlat.filter(function(item){if(isParent){return item.parentId===id;}return item.nodeId===id;}),editedItem=matches.length>0?matches[0]:null;return editedItem;}/**
    * Handles context menu position
    * @param {HTML element} target (optional) - the component which is clicked
    */},{key:'_handleContextMenu',value:function _handleContextMenu(target){var that=this;if(that._selectedElement===target&&that.$.conditionsMenu.opened){return;}var targetCoordinates=target.getBoundingClientRect(),elementCoordinates=that.getBoundingClientRect(),offsetTop=targetCoordinates.height,x=targetCoordinates.left+that.$.contentContainer.scrollLeft-elementCoordinates.left,y=targetCoordinates.top+that.$.contentContainer.scrollTop-elementCoordinates.top+offsetTop,selectedFlatItemId=target.closest('[node-id]').getAttribute('node-id'),selectedFlatItem=that._getItemById(selectedFlatItemId);var targetType=null;if(target.closest('.jqx-filter-delete-btn')){targetType='buttonDelete';}else if(target.closest('.jqx-filter-add-btn')){if(that.restrictedMode){that._checkFieldsExistence();var conditionField=that.fields?that.fields[0]:that._valueFields[0],operation=conditionField.filterOperations&&conditionField.filterOperations.length>0?conditionField.filterOperations[0]:'=';that._addElement('condition',0,[conditionField.dataField,operation,that._defaultValueByType(conditionField.dataType)]);return;}targetType='buttonAdd';}else if(target.closest('.jqx-filter-group-operation')){targetType='groupOperation';}else if(target.closest('.jqx-filter-field-name')){targetType='conditionField';}else if(target.closest('.jqx-filter-operation')){targetType='conditionOperation';}var eventData={'target':target,'targetX':targetCoordinates.left,'targetY':targetCoordinates.top,'parentGroupId':selectedFlatItem.parentId,'id':selectedFlatItem.nodeId,'type':selectedFlatItem.type,'data':selectedFlatItem.data,'targetType':targetType};if(that.$.conditionsMenu.opened){that.$.fireEvent('menuClosing');that.$.conditionsMenu.close();that.$.fireEvent('menuClose');}that._closeEditor();if(that.disableContextMenu){that._selectedElement=target;that.$.fireEvent('menuOpening',eventData);that.$.fireEvent('menuOpen',eventData);return;}that.$.fireEvent('menuOpening',eventData);that.$.conditionsMenu.dataSource=that._contextMenuOptions;that.$.conditionsMenu.open(x,y);that._selectedElement=target;that.$.fireEvent('menuOpen',eventData);that.$.scrollableContainer.refresh();}/**
    * Add custom operations to the menu's operations list
    */},{key:'_handleCustomOperations',value:function _handleCustomOperations(){var that=this;that._filterOperationDescriptions=that._defaultFilterOperationDescriptions;for(var _i443=0;_i443<that.customOperations.length;_i443++){var operation=that.customOperations[_i443];that._filterOperationDescriptions.push({label:operation.label,value:operation.name,custom:true,index:_i443,editorTemplate:operation.editorTemplate,valueTemplate:operation.valueTemplate,handleValue:operation.handleValue});}}/**
    * Initializes Editors instance if it's not initialized.
    */},{key:'_initializeEditor',value:function _initializeEditor(editor){var that=this,editorTagName='jqx-'+JQX.Utilities.Core.toDash(editor),editorElement=document.createElement(editorTagName);if(editor==='numericTextBox'){editorElement.spinButtons=true;editorElement.inputFormat='floatingPoint';}else if(editor==='dateTimePicker'){editorElement.calendarButton=true;editorElement.dropDownDisplayMode='auto';editorElement.enableMouseWheelAction=true;editorElement.locale=that.locale;if(!editorElement.messages[that.locale]){editorElement.messages[that.locale]={};}editorElement.messages[that.locale].dateTabLabel=that.localize('dateTabLabel');editorElement.messages[that.locale].timeTabLabel=that.localize('timeTabLabel');}editorElement.tabIndex='1';editorElement.theme=that.theme;editorElement.animation=that.animation;that.$[editor+'Editor']=editorElement;editorElement.$=JQX.Utilities.Extend(editorElement);editorElement.className=editorTagName+'-editor jqx-hidden';that.$.editorsContainer.appendChild(editorElement);that['_'+editor+'Initialized']=true;}/**
     * InnerContainer keydown eventHandler 
     * @param {any} event
     */},{key:'_innerContainerKeydownHandler',value:function _innerContainerKeydownHandler(event){var that=this;if(event.key!=='Escape'&&event.key!=='Enter'||!that._editorIsOpen){return;}that._closeEditor();}/**
    * Updates value on blur
    */},{key:'_inputBlurHandler',value:function _inputBlurHandler(){var that=this;var storedValue=void 0;if(that._editor===that.$.dateTimePickerEditor){storedValue=that._editor.value;if(storedValue){storedValue=storedValue.toDate();}}else if(that._editor===that.$.checkBoxEditor){storedValue=that._editor.checked;}else if(that._editor===that.$.customEditor){storedValue=that._selectedCustomCondition.handleValue(that._editor);}else{var selectedField=that._getFieldByFieldName(that._editedItem.data[0]);if(selectedField.dataType==='array'){storedValue=that._editor.value.split(',');}else if(selectedField.dataType==='object'){storedValue=JSON.parse(that._editor.value);}else{storedValue=that._editor.value;}//   storedValue = that._editor.value;
}var editedItem=that._editedItem,nodeId=editedItem.nodeId,valueDataType=that._getFieldByFieldName(editedItem.data[0]).dataType;that._updateValueInFlatArray(nodeId,storedValue,'value',valueDataType||'string');that._generateValue();}/**
     * Localizes default values for the menus.
     */},{key:'_localizeInitialValues',value:function _localizeInitialValues(){var that=this,localizedNames=JQX.Utilities.DateTime.getLocalizedNames(that.locale);that._addOptions=[{label:that.localize('addCondition'),value:'addCondition'},{label:that.localize('addGroup'),value:'addGroup'}];that._groupOperationDescriptions=[{label:that.localize('and'),value:'and'},{label:that.localize('notand'),value:'notand'},{label:that.localize('or'),value:'or'},{label:that.localize('notor'),value:'notor'}];that._defaultFilterOperationDescriptions=that._filterOperationDescriptions=[{label:that.localize('='),value:'=',custom:false},{label:that.localize('<>'),value:'<>',custom:false},{label:that.localize('>'),value:'>',custom:false},{label:that.localize('>='),value:'>=',custom:false},{label:that.localize('<'),value:'<',custom:false},{label:that.localize('<='),value:'<=',custom:false},{label:that.localize('startswith'),value:'startswith',custom:false},{label:that.localize('endswith'),value:'endswith',custom:false},{label:that.localize('contains'),value:'contains',custom:false},{label:that.localize('notcontains'),value:'notcontains',custom:false},{label:that.localize('isblank'),value:'isblank',custom:false},{label:that.localize('isnotblank'),value:'isnotblank',custom:false}];that._localizedDays=localizedNames.days;that._localizedMonths=localizedNames.months;}/**
    * Map fields data source to match menu's label and value.
    */},{key:'_mapFieldsToMenu',value:function _mapFieldsToMenu(){var that=this;if(!that.fields&&!that._valueFields){return;}that._fields=(that.fields||that._valueFields).map(function(field){var menuField={};menuField.label=field.label;menuField.value=field.dataField;menuField.dataType=field.dataType;return menuField;});}/**
    * Handles menu item click.
    */},{key:'_menuItemClickHandler',value:function _menuItemClickHandler(event){var that=this,selectedElement=that._selectedElement.closest('.filter-builder-item'),details=event.detail,value=details.value,label=that.localize(value)||details.label;if(selectedElement){var selectedIsCondition=selectedElement.closest('.jqx-filter-group-condition'),selectedIsGroup=selectedElement.closest('.jqx-filter-group'),nodeId=selectedIsCondition?selectedIsCondition.getAttribute('node-id'):selectedIsGroup.getAttribute('node-id');var updatedPosition=2;selectedElement.innerHTML=label;selectedElement.value=value;if(that._editedItem&&selectedElement.classList.contains('jqx-filter-field-name')&&that._editedItem.data[0]!==value){var valueHTMLnode=selectedElement.parentNode.querySelector('.jqx-filter-value'),customOperationsWithoutValue=that.customOperations.map(function(item){if(item.hideValue){return item.name;}}).filter(function(item){return item;}),operationsWithoutValue=customOperationsWithoutValue.concat(['isblank','isnotblank']);that._clearConditionsValue(nodeId,value);that._setInitialFilterOperation(nodeId,value);operationsWithoutValue.indexOf(value)>-1?valueHTMLnode.classList.add('jqx-hidden'):valueHTMLnode.classList.remove('jqx-hidden');}if(selectedElement.classList.contains('jqx-filter-field-name')){updatedPosition=0;}else if(selectedElement.classList.contains('jqx-filter-operation')){var _valueHTMLnode=selectedElement.parentNode.querySelector('.jqx-filter-value');var _customOperation=void 0;if(that.customOperations){var customOperations=that.customOperations.filter(function(operation){return operation.name===value;});if(customOperations.length>0){_customOperation=customOperations[0];}}if(['isblank','isnotblank'].indexOf(value)>-1||_customOperation&&_customOperation.hideValue){that._clearConditionsValue(nodeId);_valueHTMLnode.classList.add('jqx-hidden');}else{_valueHTMLnode.classList.remove('jqx-hidden');}updatedPosition=1;}else if(selectedElement.classList.contains('jqx-filter-group-operation')){for(var _i444=0;_i444<that._valueFlat.length;_i444++){if(that._valueFlat[_i444].nodeId===nodeId){that._valueFlat[_i444].data=selectedElement.value;}}that._generateValue();that.$.scrollableContainer.refresh();return;}for(var _i445=0;_i445<that._valueFlat.length;_i445++){if(that._valueFlat[_i445].nodeId===nodeId){that._valueFlat[_i445].data[updatedPosition]=selectedElement.value;}}that._generateValue();that.$.scrollableContainer.refresh();return;}var selectedFilterGroup=that._selectedElement.closest('.jqx-filter-group'),selectedFilterGroupId=selectedFilterGroup.getAttribute('node-id');if(that._isMaxLevelExceeded(selectedFilterGroupId+'.0')){return;}if(value==='addCondition'&&(that.maxConditions&&that._totalConditions<that.maxConditions||!that.maxConditions)){that._checkFieldsExistence();var conditionField=that.fields?that.fields[0]:that._valueFields[0],operation=conditionField.filterOperations&&conditionField.filterOperations.length>0?conditionField.filterOperations[0]:'=';that._addElement('condition',selectedFilterGroupId,[conditionField.dataField,operation,that._defaultValueByType(conditionField.dataType)]);}else if(value==='addGroup'){that._addElement('group',selectedFilterGroupId,'and');}that.$.scrollableContainer.refresh();}},{key:'_setInitialFilterOperation',value:function _setInitialFilterOperation(nodeId,fieldName){var that=this;var newField=that.fields.find(function(field){return field.dataField===fieldName;}),selectedItem=that._valueFlat.find(function(item){return item.nodeId===nodeId;}),operationHtmlNode=selectedItem.htmlNode.getElementsByClassName('jqx-filter-operation')[0],newFieldOperation=newField&&newField.filterOperations&&newField.filterOperations.length>0?newField.filterOperations[0]:'=';var newFieldOperationLabel=that.localize(newFieldOperation);if(!newFieldOperationLabel){newFieldOperationLabel=that.customOperations.find(function(operation){return operation.name===newFieldOperation;}).label;}selectedItem.data[1]=newFieldOperation;operationHtmlNode.innerHTML=newFieldOperationLabel;}},{key:'_checkFieldsExistence',value:function _checkFieldsExistence(){var that=this;if((!that.fields||that.fields.length===0)&&(!that._valueFields||that._valueFields.length===0)){that.error(that.localize('missingFields',{elementType:that.nodeName.toLowerCase()}));}}/**
    * Creates new filter condition row
    * @param {Array} condition (optional). An array with a condition params. If "condition" parameter is not set - in the method is used default value
    */},{key:'_newFilterConditionRow',value:function _newFilterConditionRow(condition){condition=condition||[];var that=this,dataField=condition[0]?condition[0]:that.fields[0].dataField,value=that._formatValueStringRepresentation(condition[2],condition[0]),dataFieldsWithLabels=that.fields?that.fields.filter(function(item){return item.dataField===dataField;}):that._valueFields.filter(function(item){return item.dataField===dataField;}),dataFieldsLabel=dataFieldsWithLabels.length>0?dataFieldsWithLabels[0].label:condition[0];var operation=that.localize(condition[1]);if(!operation&&that.customOperations&&that.customOperations.length>0){operation=that.customOperations.find(function(operation){return operation.name===condition[1];}).label;}var conditionRow=document.createElement('div'),template='<span class ="jqx-filter-delete-btn"></span>\n                <span class ="filter-builder-item jqx-filter-field-name">'+dataFieldsLabel+'</span>\n                <span class ="filter-builder-item jqx-filter-operation">'+(operation||'')+'</span>\n                <span class ="filter-builder-item jqx-filter-value"><span class ="jqx-value-container">'+value+'</span></span>';conditionRow.className='jqx-filter-group-condition';conditionRow.innerHTML=template;return conditionRow;}/**
    * Open an editor at the position of the current editted condition value container
    * @param {Html element} target - the clicked HTML element. Used to be localized element's data and set into editor
    */},{key:'_openEditor',value:function _openEditor(target){var that=this,id=target&&target.closest('.jqx-filter-group-condition')?target.closest('.jqx-filter-group-condition').getAttribute('node-id'):null,valueContainer=target.closest('.jqx-filter-value'),editedItem=that._getItemById(id),field=editedItem.data[0]||that.fields[0].dataField||that._valueFields[0].dataField,fieldData=that._getFieldByFieldName(field);var value=void 0;if(editedItem){value=editedItem.data[2];if(value===undefined){value='';}}else{value='';}if(!fieldData){return;}if(that._editorIsOpen){that._closeEditor();}if(that.$.conditionsMenu.opened){that.$.fireEvent('menuClosing');that.$.conditionsMenu.close();that.$.fireEvent('menuClose');}valueContainer.setAttribute('edited','');that._editedItem=editedItem;var fields=that.fields||that._valueFields,fieldItemsMatch=fields.filter(function(item){return item.dataField===field;}),foundCustomConditions=that._filterOperationDescriptions.filter(function(item){return item.value===editedItem.data[1]&&item.custom;}),fieldItem=fieldItemsMatch.length>0?fieldItemsMatch[0]:null,fieldType=fieldData.lookup&&fieldData.lookup.dataSource?'lookup':fieldItem.dataType;if(foundCustomConditions.length===0||!foundCustomConditions[0].editorTemplate){that._openEditorByFieldType(fieldType,value,fieldData);}else{that._selectedCustomCondition=foundCustomConditions[0];that._openCustomEditor(fieldType,value,fieldData);}that.$.fireEvent('editorOpening',{value:value,type:fieldType,editedItem:editedItem});setTimeout(function(){that._editor.focus();if(that._editor===that.$.numericTextBoxEditor||that._editor===that.$.textBoxEditor){that.$.scrollableContainer.scrollLeft=that.$.scrollableContainer.$.scrollViewerContainer.scrollLeft;that.$.scrollableContainer.scrollTop=that.$.scrollableContainer.$.scrollViewerContainer.oldTop;that.$.scrollableContainer.$.scrollViewerContainer.scrollLeft=0;that.$.scrollableContainer.$.scrollViewerContainer.scrollTop=0;that._editor.$.input.selectionStart=that._editor.$.input.selectionEnd=that._editor.$.input.value.length;}that.$.scrollableContainer.refresh();that.$.fireEvent('editorOpen',{value:value,type:fieldType,editedItem:editedItem});},0);that._editor.classList.remove('jqx-hidden');that._editorIsOpen=true;that.$.editorsContainer.setAttribute('open','');valueContainer.appendChild(that.$.editorsContainer);that.$.scrollableContainer.refresh();}/**
    * Open specific editor, regarding field type settings and set it's value
    * @param {String} fieldType - type of the edited field, each type has different handling
    * @param {Any} value - the value, that must be set to the editor
    */},{key:'_openEditorByFieldType',value:function _openEditorByFieldType(fieldType,value,fieldData){var that=this;switch(fieldType){case'lookup':if(!that._comboBoxInitialized){that._initializeEditor('comboBox');}that._editor=that.$.comboBoxEditor;that._editor.dataSource=fieldData.lookup.dataSource;that._editor.dropDownAppendTo=that.$.container;that._editor.selectedValues=[value];break;case'boolean':if(!that._checkBoxInitialized){that._initializeEditor('checkBox');}that._editor=that.$.checkBoxEditor;that._editor.checked=!!value;break;case'datetime':if(!that._dateTimePickerInitialized){that._initializeEditor('dateTimePicker');}that._editor=that.$.dateTimePickerEditor;that._editor.formatString=that.formatStringDateTime;that._editor.dropDownAppendTo=that.$.container;that._editor.value=value;break;case'date':if(!that._dateTimePickerInitialized){that._initializeEditor('dateTimePicker');}that._editor=that.$.dateTimePickerEditor;that._editor.formatString=that.formatStringDate;that._editor.dropDownAppendTo=that.$.container;that._editor.value=value;break;case'number':if(!that._numericTextBoxInitialized){that._initializeEditor('numericTextBox');}value=value?value:0;that._editor=that.$.numericTextBoxEditor;that._editor.value=value;break;case'array':if(!that._textBoxInitialized){that._initializeEditor('textBox');}that._editor=that.$.textBoxEditor;that._editor.value=value.toString();break;case'object':if(!that._textBoxInitialized){that._initializeEditor('textBox');}value=value?value:{};that._editor=that.$.textBoxEditor;that._editor.value=JSON.stringify(value);break;default:if(!that._textBoxInitialized){that._initializeEditor('textBox');}that._editor=that.$.textBoxEditor;that._editor.value=value+'';}}/**
    * Open custom editor
    */},{key:'_openCustomEditor',value:function _openCustomEditor(fieldType,value,fieldData){var that=this,editorStructure=that.customOperations[that._selectedCustomCondition.index].editorTemplate(fieldType,value,fieldData);that.$.customEditor.innerHTML='';if(editorStructure){that.$.customEditor.appendChild(editorStructure);}that._editor=that.$.customEditor;}/**
    * Refreshes the structure
    */},{key:'_refresh',value:function _refresh(){var that=this;that._generateValue();that._emptyElementsStructure();that._generateHTMLStructureFromFlatValue();that.$.scrollableContainer.refresh();}/**
    * Handles scrollbars on resize
    */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;that.$.scrollableContainer.refresh();}/**
     * scrollViewer wheel handler.
     */},{key:'_scrollViewerWheelHandler',value:function _scrollViewerWheelHandler(event){var that=this;if(event.type==='wheel'&&that.$.scrollableContainer.scrollHeight){event.stopPropagation();event.preventDefault();}}/**
    * Set default values for the menus
    */},{key:'_setInitialValues',value:function _setInitialValues(){var that=this;that._mapFieldsToMenu();that._localizeInitialValues();that.$.conditionsMenu.dropDownAppendTo=that.$.container;that.$.conditionsMenu.dataSource=that._groupOperationDescriptions;that._valueFlat=[];that._lastProcessedItemInCurrentGroup={parentId:null,id:null,position:null};}/**
     * Updates innerHTML of all fields.
     */},{key:'_updatePlaceholder',value:function _updatePlaceholder(){var that=this;for(var _i446=0;_i446<that._valueFlat.length;_i446++){var _item36=that._valueFlat[_i446];if(_item36.type==='condition'&&(_item36.data[2]===null||_item36.data[2]==='')){_item36.htmlNode.querySelector('.jqx-value-container').innerHTML=that.valuePlaceholder;}}if(that.$.textBoxEditor){that.$.textBoxEditor.placeholder=that.valuePlaceholder;}}/**
    * Updates value in the flat array.
    * @param {String} nodeId
    * @param {Any} value
    * @param {String} updatedComponent
    * @param {String} valueType
    */},{key:'_updateValueInFlatArray',value:function _updateValueInFlatArray(nodeId,value,updatedComponent,valueType){var that=this;if(!nodeId||that.disabled){return;}valueType=valueType||'string';updatedComponent=updatedComponent||'value';if(value!==null){switch(valueType){case'number':value=parseFloat(value);break;case'boolean':value=!!value;break;case'string':value=value+'';break;}}for(var _i447=0;_i447<that._valueFlat.length;_i447++){if(that._valueFlat[_i447].nodeId===nodeId){switch(updatedComponent){case'column':that._valueFlat[_i447].data[0]=value;break;case'filterCondition':that._valueFlat[_i447].data[1]=value;break;case'value':that._valueFlat[_i447].data[2]=value;break;case'groupCondition':that._valueFlat[_i447].data=value;break;}}}}/*
    * Validates if node exists in the internal element's structure. 
    * @param {Any} elementNode - HTML element or nodeId of the element
    * @param {String} methodName - an array with a new condition settings
    */},{key:'_validateNode',value:function _validateNode(elementNode,methodName){var that=this;var editedItem=void 0;if(elementNode instanceof HTMLElement){editedItem=that._getItemById(elementNode.getAttribute('node-id'));}else if(typeof elementNode==='string'){editedItem=that._getItemById(elementNode);}else{that.error(that.localize('wrongElementNode',{elementType:that.nodeName.toLowerCase(),method:methodName}));}if(!editedItem){that.error(that.localize('wrongElementNode',{elementType:that.nodeName.toLowerCase(),method:methodName}));}return editedItem;}/*
    * Validates if node exists in the internal element's structure. 
    * @param {Any} data - HTML element or nodeId of the element
    * @param {Boolean} isCondition - flag defined where the data will be used (condition or group)
    */},{key:'_validateUserData',value:function _validateUserData(data,isCondition){var that=this;if(isCondition){if(!Array.isArray(data)||data.length<3){that.error(that.localize('invalidDataStructure',{elementType:that.nodeName.toLowerCase()}));}}else{var regEx=/^(and|or|notAnd|notOr)$/i;if(!(typeof data==='string')||!data.match(regEx)){that.error(that.localize('invalidDataStructure',{elementType:that.nodeName.toLowerCase()}));}}}/**
     * Validates the structure of the "value" array.
     */},{key:'_validateValue',value:function _validateValue(){var that=this,maxConditions=that.maxConditions,maxConditionsPerGroup=that.maxConditionsPerGroup,maxLevel=that.maxLevel;var totalConditions=0;if(maxConditions===null&&maxConditionsPerGroup===null&&maxLevel===null){return;}var value=that.value,finalResult=[];function isCondition(structure){return structure.length===3&&typeof structure[0]==='string'&&typeof structure[1]==='string';}function process(structure,level,result){var conditionsPerGroup=0;structure.forEach(function(item){if(Array.isArray(item)){if(isCondition(item)){// condition
if(maxConditions!==null&&maxConditions===totalConditions||maxConditionsPerGroup!==null&&maxConditionsPerGroup===conditionsPerGroup){return;}result.push(item);conditionsPerGroup++;totalConditions++;}else{// inner group
if(maxLevel!==null&&maxLevel===level+1){return;}var _group6=[];result.push(_group6);process(item,level+1,_group6);}}else{// operator
result.push(item);}});}process(value,0,finalResult);that.value=finalResult;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'customOperations':{value:[],type:'array',reflectToAttribute:false},'disableContextMenu':{value:false,type:'boolean'},'fields':{value:null,type:'array?',reflectToAttribute:false},'formatStringDate':{value:'dd-MMM-yy',type:'string'},'formatStringDateTime':{value:'dd-MMM-yy HH:mm:ss',type:'string'},'hint':{value:null,type:'string?'},'icons':{value:{'=':'=','<>':'≠','>':'>','>=':'≥','<':'<','<=':'≤','startswith':'a|bc','endswith':'ab|c','contains':'abc','notcontains':'!abc','isblank':'○','isnotblank':'●'},type:'object',reflectToAttribute:false},'maxConditions':{value:null,type:'number?',validator:'_maxValidator'},'maxConditionsPerGroup':{value:null,type:'number?',validator:'_maxValidator'},'maxLevel':{value:null,type:'number?',validator:'_maxValidator'},'messages':{value:{'en':{'add':'Add','addCondition':'Add Condition','addGroup':'Add Group','and':'And','notand':'Not And','or':'Or','notor':'Not Or','=':'Equals','<>':'Does not equal','>':'Greater than','>=':'Greater than or equal to','<':'Less than','<=':'Less than or equal to','startswith':'Starts with','endswith':'Ends with','contains':'Contains','notcontains':'Does not contain','isblank':'Is blank','isnotblank':'Is not blank','wrongParentGroupIndex':'{{elementType}}: Wrong parent group index in "{{method}}" method.','missingFields':'{{elementType}}: Fields are required for proper condition\'s adding. Set "fields" source and then conditions will be added as expected.','wrongElementNode':'{{elementType}}: Incorect node / node Id in "{{method}}" method.','invalidDataStructure':'{{elementType}}: Used invalid data structure in updateCondition/updateGroup method.','dateTabLabel':'DATE','timeTabLabel':'TIME'}},type:'object',extend:true},'restrictedMode':{value:false,type:'boolean'},'showIcons':{value:false,type:'boolean'},'value':{value:['or'],type:'array?',reflectToAttribute:false},'valueFormatFunction':{value:null,type:'function?',reflectToAttribute:false},'valuePlaceholder':{value:'&lt;enter a value&gt;',type:'string'}};}/** 
    * Filter Builder's required files
    */},{key:'requires',get:function get(){return{'JQX.Button':'jqxbutton.js','JQX.CheckBox':'jqxcheckbox.js','JQX.ScrollBar':'jqxscrollbar.js','JQX.ListBox':'jqxlistbox.js','JQX.DropDownList':'jqxdropdownlist.js','JQX.ComboBox':'jqxcombobox.js','JQX.Calendar':'jqxcalendar.js','JQX.TimePicker':'jqxtimepicker.js','JQX.Tooltip':'jqxtooltip.js','JQX.Utilities.DateTime':'jqxdate.js','JQX.DateTimePicker':'jqxdatetimepicker.js','JQX.Menu':'jqxmenu.js'};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'click':'_clickHandler','down':'_downHandler','document.click':'_documentClickHandler','conditionsMenu.itemClick':'_menuItemClickHandler','container.change':'_containerChangeHandler','scrollableContainer.wheel':'_scrollViewerWheelHandler','scrollableOuterContainer.resize':'_resizeHandler','innerContainer.keydown':'_innerContainerKeydownHandler'};}}]);return FilterBuilder;}(JQX.BaseElement));/**
 * jqxQueryBuilder custom element.
 */JQX('jqx-query-builder',function(_JQX$BaseElement14){babelHelpers.inherits(QueryBuilder,_JQX$BaseElement14);function QueryBuilder(){babelHelpers.classCallCheck(this,QueryBuilder);return babelHelpers.possibleConstructorReturn(this,(QueryBuilder.__proto__||Object.getPrototypeOf(QueryBuilder)).apply(this,arguments));}babelHelpers.createClass(QueryBuilder,[{key:'template',/**
     * Element's HTML template.
     */value:function template(){return'<div id="container">\n                    <jqx-scroll-viewer id="scrollableContainer" class ="jqx-scrollable-container" animation="[[animation]]">\n                        <div id="queryLabel" class="jqx-query-builder-label jqx-unselectable"></div>\n                        <div id="contentContainer" class ="jqx-content-container"></div>\n                    </jqx-scroll-viewer>\n                    <div id="editorsContainer" class ="jqx-editors-container">\n                        <div id="customEditor" class ="jqx-custom-editor jqx-hidden"></div>\n                    </div>\n                    <jqx-menu id="conditionsMenu" mode="dropDown" class ="jqx-conditions-menu" theme="[[theme]]" animation="[[animation]]"></jqx-menu>\n                </div>';}/**
   * Updates the element when a property is changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
   * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
   */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(QueryBuilder.prototype.__proto__||Object.getPrototypeOf(QueryBuilder.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'animation':case'theme':['textBoxEditor','numericTextBoxEditor','comboBoxEditor','dateTimePickerEditor','checkBoxEditor'].forEach(function(editor){return that.$[editor]&&(that.$[editor][propertyName]=newValue);});break;case'formatStringDate':case'formatStringDateTime':case'valueFormatFunction':that._refresh();break;case'operatorPlaceholder':Array.from(that.querySelectorAll('.jqx-filter-operation[placeholder]')).forEach(function(element){return element.firstElementChild.innerHTML=newValue;});break;case'propertyPlaceholder':Array.from(that.querySelectorAll('.jqx-filter-field-name[placeholder]')).forEach(function(element){return element.firstElementChild.innerHTML=newValue;});break;case'showIcons':that._closeEditor();if(newValue){that._filterOperationDescriptions.map(function(item){return item.icon=that.icons[item.value];});}else{that._filterOperationDescriptions.map(function(item){return delete item.icon;});}break;case'customOperations':case'fields':case'value':{var oldValueAsString=JSON.stringify(that._validValue);if(propertyName==='customOperations'){that._handleCustomOperations();}else if(propertyName===''){that._mapFieldsToMenu();}that._applyValue();if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{value:JSON.parse(oldValueAsString)});}break;}case'valuePlaceholder':Array.from(that.querySelectorAll('.jqx-filter-value[placeholder]')).forEach(function(element){return element.firstElementChild.innerHTML=newValue;});break;case'locale':case'messages':that._localizeInitialValues();that._refresh();that._handleCustomOperations();//
if(that.$.dateTimePickerEditor){if(!that.$.dateTimePickerEditor.messages[that.locale]){that.$.dateTimePickerEditor.messages[that.locale]={};}that.$.dateTimePickerEditor.messages[that.locale].dateTabLabel=that.localize('dateTabLabel');that.$.dateTimePickerEditor.messages[that.locale].timeTabLabel=that.localize('timeTabLabel');if(propertyName==='locale'){that.$.dateTimePickerEditor.locale=that.locale;}else if(propertyName==='messages'){that.$.dateTimePickerEditor.$.selectDate.innerHTML=that.$.dateTimePickerEditor.messages[that.locale].dateTabLabel;that.$.dateTimePickerEditor.$.selectTime.innerHTML=that.$.dateTimePickerEditor.messages[that.locale].timeTabLabel;}}break;case'icons':that._closeEditor();break;}}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(QueryBuilder.prototype.__proto__||Object.getPrototypeOf(QueryBuilder.prototype),'ready',this).call(this);var that=this;that._setInitialValues();that._handleCustomOperations();that._applyValue();Object.defineProperty(that,'value',{get:function get(){if(that.context===that){return that.properties.value.value;}else{return that._validValue;}},set:function set(value){that.updateProperty(that,that._properties.value,value);}});}/**
   * Set default values for the menus
   */},{key:'_setInitialValues',value:function _setInitialValues(){var that=this;that._autoScrollCoefficient=JQX.Utilities.Core.Browser.Firefox?4:JQX.Utilities.Core.Browser.Edge?8:2;that._isMobile=JQX.Utilities.Core.isMobile;that._manuallyAddedFields=[];that._localizeInitialValues();that.$.conditionsMenu.dropDownAppendTo=that.$.container;that.$.conditionsMenu.dataSource=that._groupOperationDescriptions;that._valueFlat=[];that._lastProcessedItemInCurrentGroup={parentId:null,id:null,position:null};}/**
     * Applies value.
     */},{key:'_applyValue',value:function _applyValue(){var that=this;that._emptyElementsStructure(true);that._validateValue();//that._setRequiredFields();
that._convertValueToFlat(that.value);that._getFieldsFromValue();that._mapFieldsToMenu();that._generateHTMLStructureFromFlatValue(true);that._restrictNesting();that._validValue=that._getValidValue();that._oldValueAsString=JSON.stringify(that._validValue);}/**
     * Set's the requested fields
     */},{key:'_setRequiredFields',value:function _setRequiredFields(){var that=this;if(!that.requiredFields||!that.requiredFields.length){return;}var currentValue=that.value;var reqGroup=[];var _loop18=function _loop18(_i448){var reqField=that.requiredFields[_i448],field=that.fields.find(function(field){return field.dataField===reqField;});if(field){var valueRecords=[];if(currentValue){var _i449=0;//Doing a lookup on the value for records that contain 'requiredFields'
//Modifies the value dynamically
while(_i449<currentValue.length){var val=currentValue[_i449];if(Array.isArray(val)){var r=0;while(r<val.length){var record=val[r];if(record&&record[0]===field.dataField){valueRecords.push(record);val.splice(r>0?r-1:r,2);continue;}r++;}}if(!val.length){currentValue.splice(_i449,2);continue;}_i449++;}}//Check if group records exist inside value
if(valueRecords){for(var _r2=0;_r2<valueRecords.length;_r2++){reqGroup.push(valueRecords[_r2]);reqGroup.push('and');}}else{//If no records create a placeholder
reqGroup.push([reqField]);reqGroup.push('and');}}};for(var _i448=0;_i448<that.requiredFields.length;_i448++){_loop18(_i448);}//Remove the lastly added 'and' condition
if(typeof reqGroup[reqGroup.length-1]==='string'){reqGroup.pop();}//Add the Required Fields on Top of the value
that.value.unshift(reqGroup,'and');}/**
     * Change event Handler for the ContentContainer
     * @param {any} event
     */},{key:'_contentContainerChangeHandler',value:function _contentContainerChangeHandler(event){var that=this;event.stopPropagation();if(that.applyMode!=='immediately'||!that._editorIsOpen||!that._editor){return;}var editedHTMLField=that._editor.closest('.filter-builder-item');if(!editedHTMLField.classList.contains('jqx-filter-value')){that._closeEditor();}}/**
    * Map field's data with menu's label and value.
    */},{key:'_mapFieldsToMenu',value:function _mapFieldsToMenu(){var that=this;if(!that.fields&&!that._valueFields){return;}that._fields=(that.fields||that._valueFields).concat(that._manuallyAddedFields).map(function(field){return{label:field.label,value:field.dataField,dataType:field.dataType,filterOperations:field.filterOperations,lookup:field.lookup};});}/**
    * Localizes default values for the menus.
    */},{key:'_localizeInitialValues',value:function _localizeInitialValues(){var that=this;that.$.queryLabel.innerHTML=that.localize('queryLabel');that._addOptions=[{label:that.localize('addCondition'),value:'addCondition'},{label:that.localize('addGroup'),value:'addGroup'}];that._groupOperationDescriptions=[{label:that.localize('and'),value:'and'},//{ label: that.localize('notand'), value: 'notand' },
{label:that.localize('or'),value:'or'//{ label: that.localize('notor'), value: 'notor' }
}];that._defaultFilterOperationDescriptions=that._filterOperationDescriptions=[{label:that.localize('='),value:'=',custom:false},{label:that.localize('<>'),value:'<>',custom:false},{label:that.localize('>'),value:'>',custom:false},{label:that.localize('>='),value:'>=',custom:false},{label:that.localize('<'),value:'<',custom:false},{label:that.localize('<='),value:'<=',custom:false},{label:that.localize('startswith'),value:'startswith',custom:false},{label:that.localize('endswith'),value:'endswith',custom:false},{label:that.localize('contains'),value:'contains',custom:false},{label:that.localize('notcontains'),value:'notcontains',custom:false},{label:that.localize('isblank'),value:'isblank',custom:false},{label:that.localize('isnotblank'),value:'isnotblank',custom:false}];//TODO: To Be moved to _formatValueStringRepresentation
var localizedNames=JQX.Utilities.DateTime.getLocalizedNames(that.locale);that._localizedDays=localizedNames.days;that._localizedMonths=localizedNames.months;}/**
    * Add custom operations to the menu's operations list
    */},{key:'_handleCustomOperations',value:function _handleCustomOperations(){var that=this;that._filterOperationDescriptions=that._defaultFilterOperationDescriptions.slice(0);for(var _i450=0;_i450<that.customOperations.length;_i450++){var operation=that.customOperations[_i450];that._filterOperationDescriptions.push({label:operation.label,value:operation.name,custom:true,index:_i450,editorTemplate:operation.editorTemplate,valueTemplate:operation.valueTemplate,handleValue:operation.handleValue,hideValue:operation.hideValue});}}/**
   * InnerContainer keydown eventHandler 
   * @param {any} event
   */},{key:'_innerContainerKeydownHandler',value:function _innerContainerKeydownHandler(event){var that=this;if(that._editorIsOpen&&(event.key==='Escape'||event.key==='Enter')){that._closeEditor();}}/**
     * Document down handler - closes menu and/or editor on click outside of the element
     */},{key:'_documentDownHandler',value:function _documentDownHandler(event){var that=this,target=event.originalEvent.target;if(target.closest('.jqx-input-drop-down-menu')||that.$.conditionsMenu.contains(target)){return;}var isDropDown=target.closest('.jqx-drop-down');if(target.closest('jqx-query-builder')===that||isDropDown&&that.contains(isDropDown.ownerElement)){that._clickHandler(event.originalEvent);return;}if(that._editorIsOpen&&!that._scrollBarDown){that._closeEditor();}delete that._scrollBarDown;}/**
    * Generates HTML structure from flat array and adds/replaces
    * @param {Array} data - contains dataField, operator and value
    */},{key:'_emptyElementsStructure',value:function _emptyElementsStructure(emptyValueFlat){var that=this,contentContainer=that.$.contentContainer;while(contentContainer.firstChild){contentContainer.removeChild(contentContainer.firstChild);}that._valueFlat=emptyValueFlat?[]:that._valueFlat;that._lastProcessedItemInCurrentGroup={parentId:null,id:null,position:null};}/**
    * Resize handler
    */},{key:'_resizeHandler',value:function _resizeHandler(){this.$.scrollableContainer.refresh();}/**
     * Returns the number of all conditions
     */},{key:'_getTotalConditions',value:function _getTotalConditions(){return this.getElementsByClassName('jqx-filter-group-condition').length;}/**
     * Validates the structure of the "value" array.
     */},{key:'_validateValue',value:function _validateValue(){var that=this,value=that.value;if(!Array.isArray(value)||JSON.stringify(value).replace(/[\[\]]/g,'')===''){that.value=[[[]]];return;}if(value.length===3&&typeof value[0]==='string'){that.value=[[value]];}if(Array.isArray(value[0])&&value[0].length===3&&typeof value[0][0]==='string'){that.value=[value];}while(typeof value[0]==='string'){value.shift();}while(typeof value[value.length-1]==='string'){value.pop();}that.value.forEach(function(item){if(Array.isArray(item)&&item.length===0){item.push([]);}});}/**
   * Converts value(represented as nested array) to flat array. Used for internal data representation 
   * @param {Array} groupData - an array with group data
   * @param {String} nodeId - the id of the current element
   */},{key:'_convertValueToFlat',value:function _convertValueToFlat(groupData){var that=this,operatorList=['and','or','notAnd','notOr'];if(!groupData){return;}var totalConditions=0,totalGroups=0;function createItems(groupData,groupIndex){var operator=void 0;for(var _i451=0;_i451<groupData.length;_i451++){var data=groupData[_i451],isDataAnOperator=typeof data==='string'&&operatorList.indexOf(data)>-1;var _item37={htmlNode:null};if(isDataAnOperator){operator=data.trim();continue;}operator=operator||'and';//Check if condition/group
if(Array.isArray(data)){var groupConditions=that._valueFlat.filter(function(item){return item.parentId+''===groupIndex+'';}).length;//Check if condition
if(!data.find(function(item){return Array.isArray(item);})){if(that.maxConditions&&totalConditions>=that.maxConditions||that.maxConditionsPerGroup&&groupConditions>=that.maxConditionsPerGroup){continue;}//Create Operator
if(_i451!==0){that._valueFlat.push({nodeId:groupIndex+'.'+groupConditions,type:'operator',data:operator,parentId:groupIndex+''});operator='';groupConditions++;}//Create Condition
_item37.nodeId=groupIndex+'.'+groupConditions;_item37.parentId=groupIndex+'';_item37.type='condition';_item37.data=data;totalConditions++;that._valueFlat.push(_item37);}else{_item37.nodeId=(totalGroups+=1)+'';_item37.type='group';_item37.data=operator;that._valueFlat.push(_item37);createItems(data,_item37.nodeId);operator='';}}}}//Empty the flat value
that._valueFlat=[];createItems(groupData,0);delete that._totalGroups;}/**
    * Generates an array of field objects, used as a backup when fields property is not set
    */},{key:'_getFieldsFromValue',value:function _getFieldsFromValue(){var that=this,items=that._valueFlat,fieldsNames=[],fields=[];function getDataType(data){if(typeof data==='boolean'){return'boolean';}if(data instanceof Date){if(data.getHours()>0||data.getMinutes()>0||data.getSeconds()>0){return'datetime';}return'date';}if(!isNaN(data)){return'number';}return'string';}for(var _i452=0;_i452<items.length;_i452++){var _item38=items[_i452];if(_item38.type==='condition'){var fieldName=_item38.data[0];if(fieldName&&fieldsNames.indexOf(fieldName)===-1){var fieldElement={label:fieldName,dataField:fieldName,dataType:getDataType(_item38.data[2]),format:null};fieldsNames.push(fieldName);fields.push(fieldElement);}}}that._valueFields=fields;}/*
   * Creates new group or condition
   * @param {String} type - 'group' or 'condition'
   * @param {Any} parentGroup - html object or group id
   * @param {Any} data - if type is group - contains group's operator;  if type is condition - dataField, operator and value
   */},{key:'_addElement',value:function _addElement(type,parentGroup,data,noRefresh){var that=this,siblings=that._valueFlat.filter(function(item){return item.parentId===parentGroup;});var addGroupAtPosition=0,groupSeparator='';data=data||(type==='group'?'or':[]);if(siblings.length){var siblingsIndexes=siblings.map(function(index){var indexPath=index.nodeId.split('.');return parseInt(indexPath[indexPath.length-1]);});siblingsIndexes=siblingsIndexes.length===0?[0]:siblingsIndexes;addGroupAtPosition=siblingsIndexes.reduce(function(a,b){return Math.max(a,b);})+1;}if(parentGroup&&parentGroup.length>0){groupSeparator='.';}var itemId=(parentGroup||'')+groupSeparator+(type==='group'?that._valueFlat.filter(function(item){return item.type==='group';}).length+1:addGroupAtPosition);var lastGroupSibling=siblings[0];if(siblings.length){for(var s=0;s<siblings.length;s++){var sibling=siblings[s],siblingIndex=sibling.nodeId.split('.').pop();if(parseInt(siblingIndex)>parseInt(lastGroupSibling.nodeId.split('.').pop())){lastGroupSibling=sibling;}}}else{lastGroupSibling=that._valueFlat.find(function(item){return item.nodeId===parentGroup;});}var lastGroupSiblingIndex=lastGroupSibling?that._valueFlat.indexOf(lastGroupSibling)+1:that._valueFlat.length;if(type==='condition'&&siblings.length>0){that._valueFlat.splice(lastGroupSiblingIndex,0,{nodeId:itemId,parentId:parentGroup,type:'operator',data:['and'],htmlNode:null});itemId=(parentGroup||'')+groupSeparator+(addGroupAtPosition+1);lastGroupSiblingIndex++;}var itemData={nodeId:itemId,parentId:parentGroup,type:type,data:data,htmlNode:null};that._valueFlat.splice(lastGroupSiblingIndex,0,itemData);if(type==='group'){that._addElement('condition',itemId,[],true);}if(!noRefresh){that._refresh();}}/**
   * Removes a condition and it's HTML representation
   * @param {Any} elementNode.
   * @param {String} type.
   */},{key:'_deleteElement',value:function _deleteElement(elementNode,type){var that=this,nodeId=typeof elementNode==='string'?elementNode:elementNode.getAttribute('node-id');if(!nodeId||nodeId.length===1){return;}function deleteOperator(index){var operator=that._valueFlat[index];//Remove the nested operator for the condition
if(operator&&operator.type==='operator'){that._valueFlat.splice(index,1);operator.htmlNode.parentElement.removeChild(operator.htmlNode);return true;}}function deleteCondition(nodeId){var item=void 0,indexInGroup=0,groupId=nodeId.split('.');groupId.pop();groupId=groupId.join('.');for(var _i453=0;_i453<that._valueFlat.length;_i453++){var flatItem=that._valueFlat[_i453];if(flatItem.type!=='condition'){continue;}if(flatItem.nodeId===nodeId){item=flatItem;break;}if(flatItem.parentId===groupId){indexInGroup++;}}var itemIndex=that._valueFlat.indexOf(item);//Remove the condition
that._valueFlat.splice(itemIndex,1);//that._totalConditions--;
item.htmlNode.parentElement.removeChild(item.htmlNode);//Remove the operator for the condition
var isPreviousOperatorRemoved=deleteOperator(itemIndex-1);//If the removed condition was 1st in the group, remove the next nested condition as well
if(!indexInGroup){deleteOperator(itemIndex-(isPreviousOperatorRemoved?1:0));}var groupNode=that._valueFlat.filter(function(item){return item.nodeId===groupId;})[0].htmlNode;if(groupNode.children[1].childElementCount>0&&groupNode.children[2].hasAttribute('limit-selection')&&!groupNode.children[1].lastElementChild.hasAttribute('limit-selection')){groupNode.children[2].removeAttribute('limit-selection');}}function deleteGroup(nodeId){var item=that._valueFlat.filter(function(item){return nodeId===item.nodeId&&item.type==='group';})[0];for(var _i454=0;_i454<that._valueFlat.length;_i454++){var nestedItem=that._valueFlat[_i454],nestedNodeId=nestedItem.nodeId;if(nestedItem.parentId===nodeId){nestedItem.type==='group'?deleteGroup(nestedNodeId):deleteCondition(nestedNodeId);}}that._valueFlat.indexOf(item)>-1&&that._valueFlat.splice(that._valueFlat.indexOf(item),1);item.htmlNode.parentElement.removeChild(item.htmlNode);}type==='group'?deleteGroup(nodeId):deleteCondition(nodeId);//Delete the group if it's empty
if(!type||type==='condition'){var groupId=nodeId.split('.');groupId.pop();groupId=groupId.join('.');if(!that._valueFlat.filter(function(i){return i.parentId===groupId;}).length){if(that._valueFlat.filter(function(item){return item.type==='group';}).length>1){deleteGroup(groupId);}//Set the new 0th group
if(groupId==='0'){var firstGroup=that._valueFlat.find(function(item){return item.type==='group';}),oldGroupId=firstGroup.nodeId;firstGroup.nodeId='0';firstGroup.htmlNode.setAttribute('node-id','0');var groupConditions=that._valueFlat.filter(function(item){return item.parentId===oldGroupId;});for(var c=0;c<groupConditions.length;c++){var con=groupConditions[c];con.parentId='0';con.nodeId='0.'+c;con.htmlNode.setAttribute('node-id',con.nodeId);}}}//if (that.requiredFields && that.requiredFields.length) {
//    const firstNonRestrictedGroup = that._valueFlat.find(item => item.type === 'group' && !item.restricted);
//    if (firstNonRestrictedGroup) {
//        firstNonRestrictedGroup.htmlNode.querySelector('.jqx-filter-group-operator').setAttribute('restricted', '');
//    }
//}
that._generateValue();}}/**
     * Generates a flat structure form HTML
     */},{key:'_generateHTMLStructureFromFlatValue',value:function _generateHTMLStructureFromFlatValue(validation){var that=this,fragment=document.createDocumentFragment();if(!that._valueFlat||that._valueFlat.length===0){return;}//let lastGroup;
var _loop19=function _loop19(_i455){var item=that._valueFlat[_i455],customOperation=that.customOperations?that.customOperations.find(function(operation){return operation.name===item.data[1];}):false,parentGroupHTMLcontainer=item.parentId?that.querySelector('[node-id="'+item.parentId+'"]').querySelector('.jqx-filter-group-condition-container'):that.$.contentContainer;if(item.type==='group'){var groupContainerBlock=document.createElement('div'),groupOperator=that.localize(item.data)||'';groupContainerBlock.className='jqx-filter-group';groupContainerBlock.innerHTML='<div class="jqx-filter-group-operator">'+groupOperator+'</div>'+'<div class="jqx-filter-group-condition-container"></div>'+'<div class="jqx-filter-add-condition-btn"><div>'+that.localize('add')+'</div></div>'+'<div class="jqx-filter-add-btn"></div>';//Set the group operator 'data' attribute
groupContainerBlock.firstElementChild.data=groupOperator;fragment.appendChild(groupContainerBlock);groupContainerBlock.setAttribute('node-id',item.nodeId);that._valueFlat[_i455].htmlNode=groupContainerBlock;//if (!lastGroup && that.requiredFields && that.requiredFields.length) {
//    groupContainerBlock.setAttribute('restricted', '');
//    item.restricted = true;
//}
//lastGroup = groupContainerBlock;
}else if(item.type==='condition'){var condition=that._newFilterConditionRow(item.data);condition.setAttribute('node-id',item.nodeId);fragment.appendChild(condition);that._valueFlat[_i455].htmlNode=condition;if(item.data[0]!==undefined&&item.data[1]===undefined){var validOperations=that._getFilterOperations(that._fields.find(function(field){return field.value===item.data[0];}));that._handleOnlyOperation(validOperations,item.data,condition);}else if(['isblank','isnotblank'].indexOf(item.data[1])!==-1||customOperation&&customOperation.hideValue){item.data.splice(2,1);condition.children[2].classList.add('jqx-visibility-hidden');}}else{var operator=document.createElement('div');operator.className='jqx-filter-nested-operator';operator.setAttribute('node-id',item.nodeId);operator.innerHTML=that.localize(item.data);fragment.appendChild(operator);that._valueFlat[_i455].htmlNode=operator;}parentGroupHTMLcontainer.appendChild(fragment);};for(var _i455=0;_i455<that._valueFlat.length;_i455++){_loop19(_i455);}if(validation){that._validateValueAdvanced();}that.$.scrollableContainer.refresh();}/**
     * Advanced value validation.
     */},{key:'_validateValueAdvanced',value:function _validateValueAdvanced(){var that=this,value=that.value;var toRefresh=false,toRefreshValue=false,consecutiveStrings=0;for(var _i456=0;_i456<value.length;_i456++){var _group7=value[_i456];if(typeof _group7==='string'){continue;}for(var j=_group7.length-1;j>=0;j--){var _item39=_group7[j];if(Array.isArray(_item39)&&_item39.length===0&&j!==_group7.length-1){_group7.splice(j,1);if(j===0){_group7.splice(0,1);}toRefresh=true;}else if(typeof _item39==='string'){_item39=_item39.toLowerCase();consecutiveStrings++;if(consecutiveStrings>1||_item39!=='and'&&_item39!=='or'){toRefreshValue=true;}continue;}consecutiveStrings=0;}}if(toRefresh){that._emptyElementsStructure(true);that._convertValueToFlat(that.value);that._generateHTMLStructureFromFlatValue();}if(toRefreshValue){that._generateValue(true);}}/**
     * Restict nesting in condition groups if a "placeholder" condition is already present.
     */},{key:'_restrictNesting',value:function _restrictNesting(){var that=this,addConditionBtns=Array.from(that.getElementsByClassName('jqx-filter-add-condition-btn'));addConditionBtns.forEach(function(btn){var lastCondition=btn.previousElementSibling.lastElementChild;if(lastCondition&&lastCondition.hasAttribute('limit-selection')){btn.setAttribute('limit-selection','');}});}/**
    * Handles click event according to the target's type (filter button, add button, delete button, etc.).
    */},{key:'_clickHandler',value:function _clickHandler(event){var that=this,target=event.target;if(that.disabled||!target||!target.closest||!that._isMobile&&event.button!==0){return;}if(that._scrollBarDown){delete that._scrollBarDown;return;}var isTargetADropDown=target.closest('.jqx-drop-down'),targetIsEditor=that._editor&&that._editor.contains(target)||isTargetADropDown&&(that._editor.contains(isTargetADropDown.ownerElement)||that._editor===isTargetADropDown.ownerElement)||target.closest('.jqx-custom-editor');if(that._editor&&that._editorIsOpen&&!targetIsEditor){that._closeEditor();}var filterItem=target.closest('.jqx-filter-group-condition')||target.closest('.jqx-filter-nested-operator')||target.closest('.jqx-filter-group');if(!filterItem){return;}var item=that._getItemById(filterItem.getAttribute('node-id'));if(!item){return;}that.$.fireEvent('itemClick',{id:item.nodeId,type:item.type,data:item.data});if(target.closest('.jqx-filter-delete-btn')){that._clickHandlerDeleteButton(item.htmlNode);return;}var isAddButton=target.closest('.jqx-filter-add-btn')||target.closest('.jqx-filter-add-condition-btn');//Add group
if(isAddButton){var selectedFilterGroupId=isAddButton.closest('.jqx-filter-group').getAttribute('node-id');if(isAddButton.classList.contains('jqx-filter-add-condition-btn')&&(that.maxConditions&&that._getTotalConditions()<that.maxConditions||!that.maxConditions)){that._addElement('condition',selectedFilterGroupId,[]);//that._totalConditions++;
}else{that._clickHandlerFilterButton(isAddButton.classList,item.nodeId,target);}return;}var isFilterButton=target.closest('.filter-builder-item')||target.closest('.jqx-filter-group-operator')||target.closest('.jqx-filter-nested-operator');if(isFilterButton){var elementClassList=isFilterButton.classList;that._clickHandlerFilterButton(elementClassList,item.nodeId,target);}}/**
     * down handler
     */},{key:'_downHandler',value:function _downHandler(event){var that=this;if(!event.originalEvent||!that._isMobile&&event.button!==0){return;}var target=event.originalEvent.target;if(that.allowDrag&&target.classList.contains('jqx-filter-group-condition')&&event.pageX<target.getBoundingClientRect().left){var _conditions=that._valueFlat.filter(function(item){return item.type==='condition';});if(_conditions.length===1||_conditions.length===2&&_conditions[0].parentId===_conditions[1].parentId&&_conditions[1].htmlNode.hasAttribute('limit-selection')){return;}that._dragDetails={coords:{x:event.pageX,y:event.pageY},item:target,originalEvent:event};that.$.scrollableContainer._scrollView.disableSwipeScroll=true;that._hoveredCondition=target;window.getSelection().removeAllRanges();return;}this._scrollBarDown=target.closest('jqx-scroll-bar');event.stopPropagation();event.preventDefault();}/**
     * move handler.
     */},{key:'_moveHandler',value:function _moveHandler(event){if(event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
     * document move handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this,dragDetails=that._dragDetails;if(!dragDetails){return;}var draggedItem=dragDetails.item;if(!dragDetails.feedbackShown){if(Math.abs(dragDetails.coords.x-event.pageX)>5||Math.abs(dragDetails.coords.y-event.pageY)>5){var draggedItemData=that._valueFlat.filter(function(item){return item.htmlNode===draggedItem;})[0],dragStartEvent=that.$.fireEvent('dragStart',{data:draggedItemData.data,item:draggedItem,originalEvent:event});if(dragStartEvent.defaultPrevented){delete that._dragDetails;delete that._hoveredCondition;that.$.scrollableContainer._scrollView.disableSwipeScroll=false;return;}dragDetails.allConditions=Array.from(that.getElementsByClassName('jqx-filter-group-condition'));dragDetails.data=draggedItemData;dragDetails.feedback=that._addDragFeedback();dragDetails.feedbackShown=true;dragDetails.rect=that.getBoundingClientRect();draggedItem.classList.add('dragged');}else{return;}}var y=event.clientY;var target=event.originalEvent.target,hoveredItem=void 0;that.$.fireEvent('dragging',{data:dragDetails.data,item:draggedItem,originalEvent:event});that.setAttribute('dragging','');dragDetails.feedback.style.left=event.pageX+10+'px';dragDetails.feedback.style.top=event.pageY+10+'px';if(that._isMobile){var oldHoveredItem=that._hoveredCondition;if(oldHoveredItem){oldHoveredItem.classList.remove('drop-target','top','bottom');delete that._hoveredCondition;}var realTarget=document.elementFromPoint(event.clientX,y);if(realTarget){target=realTarget;}}var closestCondition=target.closest('.jqx-filter-group-condition'),side=void 0;if(closestCondition){hoveredItem=closestCondition;var rect=hoveredItem.getBoundingClientRect(),topDistance=Math.abs(y-rect.top),bottomDisatnce=Math.abs(y-rect.bottom);side=topDistance<bottomDisatnce?'top':'bottom';}else{var closest=void 0,closestDistance=void 0;dragDetails.allConditions.forEach(function(condition){var rect=condition.getBoundingClientRect(),topDistance=Math.abs(y-rect.top),bottomDisatnce=Math.abs(y-rect.bottom),bestDistance=Math.min(topDistance,bottomDisatnce);if(closestDistance===undefined||bestDistance<closestDistance){closest=condition;closestDistance=bestDistance;side=topDistance<bottomDisatnce?'top':'bottom';}});closestCondition=closest;}if(closestCondition!==draggedItem&&!(closestCondition.hasAttribute('limit-selection')&&side==='bottom')){var conditionsInGroup=Array.from(closestCondition.parentElement.getElementsByClassName('jqx-filter-group-condition')),indexOfDraggedItem=conditionsInGroup.indexOf(draggedItem);if(indexOfDraggedItem!==-1){if(side==='top'&&closestCondition===conditionsInGroup[indexOfDraggedItem+1]||side==='bottom'&&closestCondition===conditionsInGroup[indexOfDraggedItem-1]){closestCondition=undefined;}}}else{closestCondition=undefined;}hoveredItem=closestCondition;dragDetails.side=side;clearInterval(that._dragInterval);that._dragInterval=setInterval(function(){var rect=dragDetails.rect;if(that.$.scrollableContainer.scrollHeight>0&&rect.left<=event.clientX&&rect.left+rect.width>=event.clientX){if(y>=rect.top&&y<=rect.top+36){that.$.scrollableContainer.scrollTop-=that._autoScrollCoefficient;}else if(y>=rect.top+rect.height-36&&y<=rect.top+rect.height){that.$.scrollableContainer.scrollTop+=that._autoScrollCoefficient;}else{clearInterval(that._dragInterval);}}else{clearInterval(that._dragInterval);}},1);if(hoveredItem){if(that._hoveredCondition&&hoveredItem!==that._hoveredCondition){that._hoveredCondition.classList.remove('drop-target','top','bottom');}var hoveredItemGroup=hoveredItem.closest('.jqx-filter-group');if(hoveredItemGroup&&hoveredItemGroup.hasAttribute('restricted')){that._hoveredCondition=undefined;return;}that._hoveredCondition=hoveredItem;hoveredItem.classList.remove('top','bottom');hoveredItem.classList.add(side,'drop-target');}else if(that._hoveredCondition){that._hoveredCondition.classList.remove('drop-target','top','bottom');delete that._hoveredCondition;}}/**
     * Adds drag feedback.
     */},{key:'_addDragFeedback',value:function _addDragFeedback(){var feedback=document.createElement('div');feedback.className='jqx-query-builder-drag-feedback';document.body.appendChild(feedback);return feedback;}/**
     * document move handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,dragDetails=that._dragDetails;if(!dragDetails){if(that.$.conditionsMenu.opened&&that._selectedElement&&!that._selectedElement.classList.contains('jqx-filter-add-btn')){that.$.conditionsMenu._hoverViaKeyboard(that.$.conditionsMenu.querySelector('jqx-menu-item[value="'+that._editedItem.data+'"]'));}return;}var draggedItem=dragDetails.item,draggedItemData=dragDetails.data,hoveredItem=that._hoveredCondition;delete that._dragDetails;delete that._hoveredCondition;that.$.scrollableContainer._scrollView.disableSwipeScroll=false;if(!that.hasAttribute('dragging')){return;}clearInterval(that._dragInterval);window.getSelection().removeAllRanges();that.removeAttribute('dragging');draggedItem.classList.remove('dragged');document.body.removeChild(dragDetails.feedback);if(!hoveredItem){that.$.fireEvent('dragEnd',{data:draggedItemData.data,item:draggedItem,originalEvent:event,target:null,targetData:null,targetSide:null});return;}var hoveredItemData=that._valueFlat.filter(function(item){return item.htmlNode===hoveredItem;})[0],dragEndEvent=that.$.fireEvent('dragEnd',{data:draggedItemData.data,item:draggedItem,originalEvent:event,target:hoveredItem,targetData:hoveredItemData.data,targetSide:dragDetails.side});hoveredItem.classList.remove('drop-target','top','bottom');if(dragEndEvent.defaultPrevented){return;}var value=that.value,draggedPath=draggedItemData.nodeId.split('.').map(function(index){return parseFloat(index);}),groupInValue=value[(draggedPath[0]-1)*2],hoveredPath=hoveredItemData.nodeId.split('.').map(function(index){return parseFloat(index);}),targetGroupInValue=value[(hoveredPath[0]-1)*2];var operator='and';if(groupInValue.length>1){if(draggedPath[1]===0){// condition is first in group
operator=groupInValue[1];groupInValue[1]='!remove!';}else{// condition is not first in group
operator=groupInValue[draggedPath[1]-1];groupInValue[draggedPath[1]-1]='!remove!';}}groupInValue[draggedPath[1]]='!remove!';if(dragDetails.side==='top'){targetGroupInValue.splice(hoveredPath[1],0,draggedItemData.data,operator);}else{targetGroupInValue.splice(hoveredPath[1]+1,0,operator,draggedItemData.data);}for(var _i457=0;_i457<value.length;_i457++){if(Array.isArray(value[_i457])){value[_i457]=value[_i457].filter(function(member){return member!=='!remove!';});}}for(var _i458=value.length-1;_i458>=0;_i458--){if(Array.isArray(value[_i458])&&value[_i458].length===0){if(_i458===0){value.splice(0,2);}else{value.splice(_i458-1,2);_i458--;}}}that._emptyElementsStructure(true);that._convertValueToFlat(value);that._generateHTMLStructureFromFlatValue();that._validValue=that._getValidValue();var oldValueAsString=JSON.stringify(that._validValue);if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{value:JSON.parse(oldValueAsString)});}}/**
    * Handling click on delete button
    */},{key:'_clickHandlerDeleteButton',value:function _clickHandlerDeleteButton(item,isEmptyCheck){var that=this;if(!item||!item.classList){return;}that._closeEditor();if(that.getElementsByClassName('jqx-filter-group-condition').length===1){// resets only condition
var containers=that._valueFlat[1].htmlNode.children;that.value=[[[]]];that._validValue=that._getValidValue();that._valueFlat[1].data=[];that._valueFlat[1].htmlNode.setAttribute('limit-selection','');containers[0].setAttribute('placeholder','');containers[1].setAttribute('placeholder','');containers[2].setAttribute('placeholder','');containers[0].firstElementChild.innerHTML=that.propertyPlaceholder;containers[1].firstElementChild.innerHTML=that.operatorPlaceholder;containers[2].firstElementChild.innerHTML=that.valuePlaceholder;var oldValueAsString=JSON.stringify(that._validValue);if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{value:JSON.parse(oldValueAsString)});}return;}if(item.classList.contains('jqx-filter-group')){if(isEmptyCheck&&that._valueFlat.filter(function(conditionItem){return conditionItem.parentId===item.getAttribute('node-id');}).length>0){return;}that._deleteElement(item,'group');}else{that._deleteElement(item);}that._generateValue();that.$.scrollableContainer.refresh();Array.from(that.$.contentContainer.children).forEach(function(filterGroup,index){var parentId=(index+1).toString();filterGroup.setAttribute('node-id',parentId);that._valueFlat.filter(function(item){return item.htmlNode===filterGroup;})[0].nodeId=parentId;Array.from(filterGroup.children[1].children).forEach(function(element,index){var valueFlatItem=that._valueFlat.filter(function(item){return item.htmlNode===element;})[0],id=parentId+'.'+index;element.setAttribute('node-id',id);valueFlatItem.parentId=parentId;valueFlatItem.nodeId=id;});});}/**
     * Handles menu closing.
     */},{key:'_menuClosingHandler',value:function _menuClosingHandler(event){var detail=event.detail;if(detail.trigger==='interaction'&&this._selectedElement===detail.target){event.preventDefault();}}/**
     * Handles menu item click.
     */},{key:'_menuItemClickHandler',value:function _menuItemClickHandler(event){var that=this,selectedElement=that._selectedElement.closest('.jqx-filter-group-operator, .jqx-filter-nested-operator'),details=event.detail,value=details.value;var nodeId=void 0;if(selectedElement){selectedElement.innerHTML=that.localize(value)||details.label;selectedElement.value=value;if(selectedElement.classList.contains('jqx-filter-nested-operator')){nodeId=selectedElement.getAttribute('node-id');}else{nodeId=selectedElement.parentElement.getAttribute('node-id');}for(var _i459=0;_i459<that._valueFlat.length;_i459++){if(that._valueFlat[_i459].nodeId===nodeId){that._valueFlat[_i459].data=selectedElement.value;break;}}that._generateValue();}else{nodeId=that._selectedElement.parentElement.getAttribute('node-id');that._addElement('group',null,value);}that.$.scrollableContainer.refresh();}/**
    * Creates new filter condition row
    * @param {Array} condition (optional). An array with a condition params. If "condition" parameter is not set - in the method is used default value
    */},{key:'_newFilterConditionRow',value:function _newFilterConditionRow(){var condition=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var that=this,dataField=condition[0];var dataFieldWithLabel=that._fields.find(function(item){return item.value===dataField;}),dataFieldsLabel=dataFieldWithLabel?dataFieldWithLabel.label:undefined;var operation=void 0;if(dataField===undefined||!dataFieldsLabel&&that.fieldsMode==='static'){condition.length=0;}else{if(!dataFieldsLabel){dataFieldWithLabel=that._getDynamicFieldInfo(dataField);dataFieldsLabel=dataFieldWithLabel.label;condition[0]=dataFieldWithLabel.dataField;}var validOperations=that._getFilterOperations(dataFieldWithLabel);operation=validOperations.find(function(validOperation){return validOperation.value===condition[1];});if(!operation){condition.splice(1,2);}else{operation=operation.label;}}var value=that._formatValueStringRepresentation(condition[2],condition[0],condition[1]);var conditionRow=document.createElement('div'),template='<div class ="filter-builder-item jqx-filter-field-name" '+(dataFieldsLabel?'><div class ="jqx-value-container">'+dataFieldsLabel:'placeholder><div class ="jqx-value-container">'+that.propertyPlaceholder)+'</div></div>'+'<div class ="filter-builder-item jqx-filter-operation" '+(operation?'><div class ="jqx-value-container">'+operation:'placeholder><div class ="jqx-value-container">'+that.operatorPlaceholder)+'</div></div>'+'<div class ="filter-builder-item jqx-filter-value" '+(condition[2]!==undefined?'><div class ="jqx-value-container">'+value:'placeholder><div class ="jqx-value-container">'+that.valuePlaceholder)+'</div></div>'+'<div class ="jqx-filter-delete-btn"></div>';conditionRow.className='jqx-filter-group-condition';conditionRow.innerHTML=template;if(!condition.length){conditionRow.setAttribute('limit-selection','');}return conditionRow;}/**
    * Removes a condition and it's HTML representation
    * @param {Any} value.
    * @param {String} field.
    */},{key:'_formatValueStringRepresentation',value:function _formatValueStringRepresentation(value,field,operation){var that=this,fieldData=that._getFieldByFieldName(field);var valueFormattedByType=void 0;if(!fieldData){return value;}if(value===undefined||value===null){return that.valuePlaceholder;}if(operation!==undefined&&that.customOperations&&that.customOperations.length>0){operation=that.customOperations.find(function(customOperation){return customOperation.name===operation;});if(operation&&operation.valueTemplate){return operation.valueTemplate(that._editor,value);}}switch(fieldData.dataType){case'date':case'datetime':value=value instanceof Date||typeof value==='string'||typeof value==='number'&&!isNaN(value)?new JQX.Utilities.DateTime(value):value;value.calendar.days=that._localizedDays;value.calendar.months=that._localizedMonths;value.calendar.locale=that.locale;valueFormattedByType=value.toString(fieldData.dataType==='date'?that.formatStringDate:that.formatStringDateTime);break;case'array':valueFormattedByType=typeof value==='string'?value.split(','):value;break;case'object':valueFormattedByType=typeof value==='string'?value:JSON.stringify(value);break;case'number':valueFormattedByType=value;break;case'boolean':valueFormattedByType=!!value;break;default:valueFormattedByType=value+'';break;}if(!that.valueFormatFunction){return valueFormattedByType;}return that.valueFormatFunction(valueFormattedByType,field,fieldData.dataType||'string');}/**
    * Return field's data by given field name
    * @param {String} fieldName
    */},{key:'_getFieldByFieldName',value:function _getFieldByFieldName(fieldName){return Object.assign({},this._fields.find(function(item){return item.value===fieldName;}));}/**
    * Refreshes the structure
    */},{key:'_refresh',value:function _refresh(){var that=this;that._generateValue();that._emptyElementsStructure();that._generateHTMLStructureFromFlatValue();that._restrictNesting();}/**
    * Generates the new value of "value" property from flat
    */},{key:'_generateValue',value:function _generateValue(preventEventFiring){var that=this;var groupsWithItems=[],value=that._valueFlat.slice(0),structure=[];//Get all condition groups
for(var _i460=0;_i460<value.length;_i460++){var _item40=value[_i460];var _group8={};if(_item40.type==='group'){_group8.nodeId=_item40.nodeId;_group8.parentId=_item40.parentId;_group8.data=_item40.data;//group.structure = [item.data || 'or'];
//group.structure = item.data ? [item.data] : [];
_group8.structure=[];groupsWithItems.push(_group8);}}for(var _i461=0;_i461<groupsWithItems.length;_i461++){var _group9=groupsWithItems[_i461];//let conditions = [],
//operators = [];
for(var g=0;g<value.length;g++){var _item41=value[g];if(_item41.parentId===_group9.nodeId){if(_item41.type==='condition'){//const operator = value.filter(item => {
//    return (item.parentId === group.nodeId && item.type === 'condition' && item.data.length)
//});
var operator=value[g-1];if(operator&&operator.parentId===_group9.nodeId&&operator.type==='operator'){_group9.structure.push(operator.data.toString());}_group9.structure.push(_item41.data);}//else if (item.type === 'operator') {
//    operators.push(item);
//}
}}//conditions = value.filter(item => {
//    return (item.parentId === group.nodeId && item.type === 'condition' && item.data.length);
//}),
//operators = value.filter(item => {
//    return (item.parentId === group.nodeId && item.type === 'condition' && item.data.length);
//});
//for (let i = 0; i < conditions.length; i++) {
//   i === 0 ? group.structure.unshift(conditions[i].data) : group.structure.push(conditions[i].data);
//}
}groupsWithItems=groupsWithItems.filter(function(item){return item.structure.length>0;});groupsWithItems.sort(function(a,b){return b.nodeId.split('.').length-a.nodeId.split('.').length;});var _loop20=function _loop20(_i462){var currentElement=groupsWithItems[_i462],group=groupsWithItems.filter(function(item){return item.nodeId===currentElement.parentId;})[0];if(group&&group.structure){group.structure.push(currentElement.structure);return'continue';}if(currentElement.nodeId==='0'){structure=structure.concat(currentElement.structure);return'continue';}//Push the group operator
if(currentElement.data){if(_i462>0){structure.push(currentElement.data);}//Concat the group structure
structure.push(currentElement.structure);}};for(var _i462=0;_i462<groupsWithItems.length;_i462++){var _ret24=_loop20(_i462);if(_ret24==='continue')continue;}//if (groupsWithItems.length > 0) {
//    that.value = that._valueFlat.length > 1 ? groupsWithItems[groupsWithItems.length - 1].structure : groupsWithItems;
//}
//else {
//const data = that._getItemById('0').data;
//that.value = data ? [data] : [];
//}
that.value=structure;that._validateValue();that._validValue=that._getValidValue();if(!preventEventFiring){var oldValueAsString=JSON.stringify(that._validValue);if(that._oldValueAsString!==oldValueAsString){that._oldValueAsString=oldValueAsString;that.$.fireEvent('change',{value:JSON.parse(oldValueAsString)});}}}/**
    * Return item's data by given id
    * @param {String} id - item's id (or parent id - demending on the second parameter)
    * @param {Boolean} isParent (optional)  - of the items is searched by parentId
    */},{key:'_getItemById',value:function _getItemById(id,isParent){var that=this,matches=that._valueFlat.filter(function(item){if(isParent){return item.parentId===id;}return item.nodeId===id;}),editedItem=matches.length>0?matches[0]:null;return editedItem;}/**
    * Closes an editor and sets the new value in the value's cotainer
    * @param {Boolean} preventEventFiring (optional).
    */},{key:'_closeEditor',value:function _closeEditor(preventEventFiring){var that=this;var storedValue=void 0;if(!that._editedItem||!that._editorIsOpen){return;}var editedItem=that._editedItem,//editedRow = editedItem.htmlNode,
//nodeId = editedItem.nodeId,
editedHTMLField=that._editor.closest('.filter-builder-item'),editedHTMLvalueContainer=editedHTMLField.querySelector('.jqx-value-container'),condition=editedHTMLField.parentElement,valueContainer=condition.children[2];if(that._editor===that.$.dateTimePickerEditor){storedValue=that._editor.value;if(storedValue){storedValue=storedValue.toDate();}}else if(that._editor===that.$.checkBoxEditor){storedValue=that._editor.checked;}else if(that._editor===that.$.customEditor){if(that._editor){var customNumericTextBoxes=Array.from(that._editor.getElementsByTagName('jqx-numeric-text-box'));customNumericTextBoxes.forEach(function(customNumericTextBox){return customNumericTextBox._inputBlurHandler();});}storedValue=that._selectedCustomCondition.handleValue(that._editor);}else if(that._editor===that.$.numericTextBoxEditor){that._editor._inputBlurHandler();storedValue=that._editor.value;}else if(editedHTMLField.classList.contains('jqx-filter-value')){var selectedField=that._getFieldByFieldName(that._editedItem.data[0]);if(selectedField.dataType==='array'){storedValue=that._editor.value.split(',');}else if(selectedField.dataType==='object'){storedValue=JSON.parse(that._editor.value);}else{storedValue=that._editor.value;}}else{storedValue=that._editor.value;}//editedHTMLvalueComponent = editedRow.querySelector('.jqx-filter-value'),
//that._updateValueInFlatArray(nodeId, storedValue, 'value', (valueDataType || 'string'));
//Converted the new value to the appropriate type
//Update the condition object with the new value
if(editedHTMLField.classList.contains('jqx-filter-field-name')){if(storedValue.trim()===''){that._hideEditor(editedHTMLField,editedItem.data[0]===undefined);return;}if(condition.hasAttribute('limit-selection')){// "placeholder" condition
condition.removeAttribute('limit-selection');condition.parentElement.nextElementSibling.removeAttribute('limit-selection');}var existingField=that._fields.find(function(item){return item.label===storedValue;}),oldFieldValue=editedItem.data[0];if(existingField){editedItem.data[0]=existingField.value;}else if(that.fieldsMode==='dynamic'){var dynamicFieldInfo=that._getDynamicFieldInfo(storedValue);storedValue=dynamicFieldInfo.label;editedItem.data[0]=dynamicFieldInfo.dataField;}else{editedHTMLvalueContainer.innerHTML=that._fields.find(function(item){return item.value===oldFieldValue;}).label;that._hideEditor(editedHTMLField);return;}editedHTMLvalueContainer.innerHTML=storedValue;that._handleFieldChange([oldFieldValue,editedItem.data[0]],[valueContainer,editedItem,condition]);}else if(editedHTMLField.classList.contains('jqx-filter-operation')){that._handleOperationChange([editedItem,storedValue,that._editor.$.input.dataValue],[editedHTMLvalueContainer,valueContainer]);}else{editedItem.data[2]=storedValue;editedHTMLvalueContainer.innerHTML=that._formatValueStringRepresentation(storedValue,that._editedItem.data[0],that._editedItem.data[1]);}that._generateValue(preventEventFiring);that._hideEditor(editedHTMLField);}/**
     * Gets the info of a dynamic field.
     */},{key:'_getDynamicFieldInfo',value:function _getDynamicFieldInfo(value){var that=this,dynamicFieldInfo={label:value,dataField:value,dataType:'string'};if(that.getDynamicField){var customInfo=that.getDynamicField(value);if(customInfo.label){dynamicFieldInfo.label=customInfo.label;}if(customInfo.dataField){dynamicFieldInfo.dataField=customInfo.dataField;}if(customInfo.dataType){dynamicFieldInfo.dataType=customInfo.dataType;}if(customInfo.filterOperations&&Array.isArray(customInfo.filterOperations)&&customInfo.filterOperations.length>0){dynamicFieldInfo.filterOperations=customInfo.filterOperations;}if(customInfo.lookup){dynamicFieldInfo.lookup=customInfo.lookup;}}that._manuallyAddedFields.push(dynamicFieldInfo);that._mapFieldsToMenu();return dynamicFieldInfo;}/**
     * Handles field change.
     */},{key:'_handleFieldChange',value:function _handleFieldChange(fields,elements){var that=this,oldFieldValue=fields[0],editedItem=elements[1],condition=elements[2],valueContainer=elements[0],newField=that._fields.find(function(field){return field.value===fields[1];}),newOperations=that._getFilterOperations(newField);if(!oldFieldValue||editedItem.data[1]===undefined){that._handleOnlyOperation(newOperations,editedItem.data,condition);return;}var oldField=that._fields.find(function(field){return field.value===oldFieldValue;}),oldFieldType=oldField.dataType,newFieldType=newField.dataType;if(newField===oldField||newFieldType===oldFieldType&&!newField.filterOperations&&!oldField.filterOperations){return;}var validInNewOperations=!!newOperations.find(function(operation){return operation.value===editedItem.data[1];});if(validInNewOperations){if(newFieldType===oldFieldType){return;}if(newFieldType==='date'&&oldFieldType==='datetime'||newFieldType==='datetime'&&oldFieldType==='date'){// reformat previous value
valueContainer.firstElementChild.innerHTML=that._formatValueStringRepresentation(editedItem.data[2],editedItem.data[0],editedItem.data[1]);return;}// remove previous value
editedItem.data.splice(2,1);valueContainer.setAttribute('placeholder','');valueContainer.firstElementChild.innerHTML=that.valuePlaceholder;return;}// remove previous operator and value
editedItem.data.splice(1,2);condition.children[1].setAttribute('placeholder','');condition.children[1].firstElementChild.innerHTML=that.operatorPlaceholder;valueContainer.setAttribute('placeholder','');valueContainer.firstElementChild.innerHTML=that.valuePlaceholder;valueContainer.classList.remove('jqx-visibility-hidden');that._handleOnlyOperation(newOperations,editedItem.data,condition);}/**
     * Handles change to a field with only one operation.
     */},{key:'_handleOnlyOperation',value:function _handleOnlyOperation(newOperations,data,condition){if(newOperations.length===1){var onlyOperation=newOperations[0];data[1]=onlyOperation.value;condition.children[1].removeAttribute('placeholder','');condition.children[1].firstElementChild.innerHTML=newOperations[0].label;if(onlyOperation.value==='isblank'||onlyOperation.value==='isnotblank'||onlyOperation.custom&&onlyOperation.hideValue){data.splice(2,1);condition.children[2].classList.add('jqx-visibility-hidden');}}}/**
     * Handles operation change.
     */},{key:'_handleOperationChange',value:function _handleOperationChange(data,elements){var that=this,editedItem=data[0],storedLabel=data[1],storedValue=data[2],editedHTMLvalueContainer=elements[0],valueContainer=elements[1],oldOperation=editedItem.data[1]!==undefined?that._filterOperationDescriptions.find(function(item){return item.value===editedItem.data[1];}):undefined,newOperation=that._filterOperationDescriptions.find(function(item){return item.value===storedValue;}),newOperationValue=newOperation.value;if(newOperation===oldOperation){return;}editedItem.data[1]=newOperationValue;editedHTMLvalueContainer.innerHTML=storedLabel;if(newOperationValue==='isblank'||newOperationValue==='isnotblank'||newOperation.custom&&newOperation.hideValue){editedItem.data.splice(2,1);valueContainer.classList.add('jqx-visibility-hidden');}else if(valueContainer.classList.contains('jqx-visibility-hidden')){valueContainer.setAttribute('placeholder','');valueContainer.classList.remove('jqx-visibility-hidden');valueContainer.firstElementChild.innerHTML=that.valuePlaceholder;}else if(newOperation.custom||oldOperation&&oldOperation.custom){editedItem.data.splice(2,1);valueContainer.setAttribute('placeholder','');valueContainer.firstElementChild.innerHTML=that.valuePlaceholder;}}/**
     * Hides editor.
     */},{key:'_hideEditor',value:function _hideEditor(editedHTMLField,placeholder){var that=this;if(placeholder){editedHTMLField.setAttribute('placeholder','');}editedHTMLField.removeAttribute('edited');that.$.editorsContainer.removeAttribute('open');if(that._editor.close){that._editor.close();}that._editor.classList.add('jqx-hidden');that._editorIsOpen=that._enterIsPressedInEditor=false;that.$.scrollableContainer.refresh();}/**
    * Handling click on delete buton
    */},{key:'_clickHandlerFilterButton',value:function _clickHandlerFilterButton(elementClassList,itemId,target){var that=this;function prepareContextMenu(target,dataSource,selectedItem){that._contextMenuOptions=dataSource.length===0?that._defaultFilterOperationDescriptions:dataSource;that._handleContextMenu(target);if(that.$.conditionsMenu.opened){that.$.conditionsMenu._discardKeyboardHover();that.$.conditionsMenu._hoverViaKeyboard(that.$.conditionsMenu.querySelector('jqx-menu-item[value="'+selectedItem+'"]'));}}if(target.closest('.jqx-editors-container')){return;}that._closeEditor();that._editedItem=that._getItemById(itemId);if(elementClassList.contains('jqx-filter-add-btn')){prepareContextMenu(target,that._groupOperationDescriptions);return;}if(!elementClassList.contains('jqx-filter-field-name')&&(!that._editedItem.data||!that._editedItem.data.length)){return;}if(elementClassList.contains('jqx-filter-group-operator')||elementClassList.contains('jqx-filter-nested-operator')){prepareContextMenu(target,that._groupOperationDescriptions,that._editedItem.data);}else{var filterBuilderItem=target.closest('.filter-builder-item');filterBuilderItem.removeAttribute('placeholder');that._openEditor(target);}}/**
    * Handles context menu position
    * @param {HTML element} target (optional) - the component that is clicked
    */},{key:'_handleContextMenu',value:function _handleContextMenu(target){var that=this;if(that._selectedElement===target&&that.$.conditionsMenu.opened){that.$.conditionsMenu.close();return;}that._closeEditor();if(that.disableContextMenu){that._selectedElement=target;return;}var targetCoordinates=target.getBoundingClientRect(),elementCoordinates=that.getBoundingClientRect(),x=targetCoordinates.left+that.$.contentContainer.scrollLeft-elementCoordinates.left,y=targetCoordinates.top+that.$.contentContainer.scrollTop-elementCoordinates.top+targetCoordinates.height;that.$.conditionsMenu.dataSource=that._contextMenuOptions;that.$.conditionsMenu.open(x,y+3);that._selectedElement=target;that.$.scrollableContainer.refresh();}/**
    * Open an editor at the position of the current editted condition value container
    * @param {Html element} target - the clicked HTML element. Used to be localized element's data and set into editor
    */},{key:'_openEditor',value:function _openEditor(target){var that=this,id=target&&target.closest('.jqx-filter-group-condition')?target.closest('.jqx-filter-group-condition').getAttribute('node-id'):null,valueContainer=target.closest('.filter-builder-item'),editedItem=that._getItemById(id);var field='';if(editedItem.data[0]!==undefined){field=editedItem.data[0];}else if(that._fields.length){field=that._fields[0].value;}var fieldData=that._getFieldByFieldName(field),value='',dataValue=void 0;//filterItemIndex = target.contains('jqx-filter-field-name') ? 0 : (target.contains('jqx-filter-operation') ? 1 : 2);
//value = editedItem ? editedItem.data[filterItemIndex] : '' || '';
var filterItemIndex=void 0;if(valueContainer.classList.contains('jqx-filter-field-name')){filterItemIndex=0;if(!that._fields){that._mapFieldsToMenu();}fieldData.lookup={dataSource:that._fields.slice(),readonly:false};value=fieldData.label||'';dataValue=fieldData.value;}else if(valueContainer.classList.contains('jqx-filter-operation')){filterItemIndex=1;var filteredOptions=that._getFilterOperations(fieldData);fieldData.lookup={dataSource:filteredOptions,readonly:true};var correspondingOption=filteredOptions.find(function(option){return option.value===editedItem.data[filterItemIndex];})||filteredOptions[0];value=correspondingOption.label;dataValue=correspondingOption.value;}else{filterItemIndex=2;value=editedItem.data[filterItemIndex];if(value===undefined){value='';}}if(that._editorIsOpen){that._closeEditor();}valueContainer.setAttribute('edited','');that._editedItem=editedItem;var fields=that._fields,fieldItemsMatch=fields.filter(function(item){return item.value===field;}),foundCustomConditions=that._filterOperationDescriptions.filter(function(item){return item.value===editedItem.data[1]&&item.custom;}),fieldItem=fieldItemsMatch.length>0?fieldItemsMatch[0]:null,fieldType=fieldData.lookup&&fieldData.lookup.dataSource?'lookup':fieldItem.dataType;if(filterItemIndex!==2||foundCustomConditions.length===0||!foundCustomConditions[0].editorTemplate){that._openEditorByFieldType(fieldType,value,fieldData,dataValue);}else{that._selectedCustomCondition=foundCustomConditions[0];that._openCustomEditor(fieldType,value,fieldData);}setTimeout(function(){that._editor.focus();if(that._editor===that.$.numericTextBoxEditor||that._editor===that.$.textBoxEditor){that.$.scrollableContainer.scrollLeft=that.$.scrollableContainer.$.scrollViewerContainer.scrollLeft;that.$.scrollableContainer.scrollTop=that.$.scrollableContainer.$.scrollViewerContainer.oldTop;that.$.scrollableContainer.$.scrollViewerContainer.scrollLeft=0;that.$.scrollableContainer.$.scrollViewerContainer.scrollTop=0;that._editor.$.input.selectionStart=that._editor.$.input.selectionEnd=that._editor.$.input.value.length;}that.$.scrollableContainer.refresh();},0);that._editor.classList.remove('jqx-hidden');that._editorIsOpen=true;that.$.editorsContainer.setAttribute('open','');valueContainer.appendChild(that.$.editorsContainer);that.$.scrollableContainer.refresh();if(fieldData.lookup&&fieldData.lookup.readonly){that._editor.open();}}/**
     * Returns filter operations by field.
     */},{key:'_getFilterOperations',value:function _getFilterOperations(fieldData){var that=this;var filteredOptions=that._filterOperationDescriptions.slice();if(fieldData.filterOperations){filteredOptions=that._filterOperationDescriptions.filter(function(item){return fieldData.filterOperations.indexOf(item.value)>-1;});}else{var filterOperationsByType=void 0;switch(fieldData.dataType){case'date':case'datetime':case'number':filterOperationsByType=['=','<>','<','>','<=','>=','isblank','isnotblank'];break;case'boolean':filterOperationsByType=['=','<>','isblank','isnotblank'];break;case'object':filterOperationsByType=['isblank','isnotblank'];break;case'string':filterOperationsByType=['contains','notcontains','startswith','endswith','=','<>','isblank','isnotblank'];break;default:filterOperationsByType=['contains','notcontains','startswith','endswith','=','<>','<','>','<=','>=','isblank','isnotblank'];break;}filteredOptions=that._filterOperationDescriptions.filter(function(item){return filterOperationsByType.indexOf(item.value)>-1;});}if(that.showIcons){filteredOptions.map(function(item){return item.icon=that.icons[item.value];});}return filteredOptions;}/**
     * Open custom editor
     */},{key:'_openCustomEditor',value:function _openCustomEditor(fieldType,value,fieldData){var that=this,editorStructure=that.customOperations[that._selectedCustomCondition.index].editorTemplate(fieldType,value,fieldData);that.$.customEditor.innerHTML='';if(editorStructure){that.$.customEditor.appendChild(editorStructure);}that._editor=that.$.customEditor;}/**
    * Open specific editor, regarding field type settings and set it's value
    * @param {String} fieldType - type of the edited field, each type has different handling
    * @param {Any} value - the value, that must be set to the editor
    */},{key:'_openEditorByFieldType',value:function _openEditorByFieldType(fieldType,value,fieldData,dataValue){var that=this;switch(fieldType){case'boolean':that._initializeEditor('checkBox');that._editor.checked=!!value;break;case'date':case'datetime':that._initializeEditor('dateTimePicker');that._editor.formatString=fieldType==='date'?that.formatStringDate:that.formatStringDateTime;that._editor.value=value;break;case'number':that._initializeEditor('numericTextBox');that._editor.value=value?value:0;break;default:that._initializeEditor('input');that._editor.dropDownWidth='auto';if(fieldType==='lookup'){that._editor.dataSource=fieldData.lookup.dataSource;that._editor.dropDownAppendTo=that.$.container;that._editor.dropDownButtonPosition='right';that._editor.readonly=!!fieldData.lookup.readonly;}else{that._editor.dataSource=[];that._editor.dropDownButtonPosition='none';that._editor.readonly=false;}if(fieldType==='object'){that._editor.value=JSON.stringify(value?value:{});}else{if(value===''&&that._editor.readonly){value=fieldData.lookup.dataSource[0].label||'';}that._editor.value=value+'';if(dataValue){that._editor.$.input.dataValue=dataValue;}}break;}}/**
    * Initializes Editors instance if it's not initialized.
    */},{key:'_initializeEditor',value:function _initializeEditor(editor){var that=this;if(that.$[editor+'Editor']){that._editor=that.$[editor+'Editor'];return;}var editorElement=document.createElement('jqx-'+JQX.Utilities.Core.toDash(editor));if(editor==='numericTextBox'){editorElement.spinButtons=true;editorElement.inputFormat='floatingPoint';}else if(editor==='dateTimePicker'){editorElement.dropDownAppendTo=that.$.container;editorElement.calendarButton=true;editorElement.dropDownDisplayMode='auto';editorElement.enableMouseWheelAction=true;editorElement.locale=that.locale;if(!editorElement.messages[that.locale]){editorElement.messages[that.locale]={};}editorElement.messages[that.locale].dateTabLabel=that.localize('dateTabLabel');editorElement.messages[that.locale].timeTabLabel=that.localize('timeTabLabel');}editorElement.theme=that.theme;editorElement.animation=that.animation;editorElement.$.addClass('jqx-hidden underlined');that.$.editorsContainer.appendChild(editorElement);that._editor=that.$[editor+'Editor']=editorElement;}/**
     * Gets the value without invalid or incomplete conditions.
     */},{key:'_getValidValue',value:function _getValidValue(){var that=this,value=that.properties.value.value,result=[];var emptyGroup=false;value.forEach(function(group){if(Array.isArray(group)){var groupIsValid=false,emptyCondition=false;var groupContent=[];group.forEach(function(condition){if(Array.isArray(condition)){var _field=condition[0],operation=condition[1],val=condition[2];if(_field===undefined||operation===undefined){emptyCondition=true;return;}if(val!==undefined||operation==='isblank'||operation==='isnotblank'){groupIsValid=true;groupContent.push(condition);return;}var operationInfo=that._filterOperationDescriptions.find(function(currentOperation){return currentOperation.value===operation;});if(operationInfo.custom&&operationInfo.hideValue){groupIsValid=true;groupContent.push(condition);}else{emptyCondition=true;}}else if(emptyCondition){emptyCondition=false;}else{groupContent.push(condition);}});if(groupIsValid){if(typeof groupContent[groupContent.length-1]==='string'){groupContent.pop();}result.push(groupContent);}else{emptyGroup=true;}}else if(emptyGroup){emptyGroup=false;}else{result.push(group);}});if(typeof result[result.length-1]==='string'){result.pop();}return result;}}],[{key:'properties',/**
     * Element's properties
     */get:function get(){return{'allowDrag':{value:false,type:'boolean'},'applyMode':{allowValues:['immediately','change'],value:'change',type:'string'},'customOperations':{value:[],type:'array',reflectToAttribute:false},//'disableContextMenu': {
//    value: false,
//    type: 'boolean'
//},
'fields':{value:null,type:'array?',reflectToAttribute:false},'fieldsMode':{value:'dynamic',allowedValues:['dynamic','static'],type:'string'},'formatStringDate':{value:'dd-MMM-yy',type:'string'},'formatStringDateTime':{value:'dd-MMM-yy HH:mm:ss',type:'string'},'getDynamicField':{value:null,type:'function?'},'icons':{value:{'=':'equals','<>':'notequals','>':'greaterthan','>=':'greaterthanorequal','<':'lessthan','<=':'lessthanorequal','startswith':'startswith','endswith':'endswith','contains':'contains','notcontains':'notcontains','isblank':'isblank','isnotblank':'isnotblank'},type:'object',reflectToAttribute:false},//'maxConditions': {
//    value: null,
//    type: 'number?'
//},
//'maxConditionsPerGroup': {
//    value: null,
//    type: 'number?'
//},
'messages':{value:{'en':{'add':'Add','addCondition':'Add Condition','addGroup':'Add Group','and':'And','notand':'Not And','or':'Or','notor':'Not Or','=':'Equals','<>':'Does not equal','>':'Greater than','>=':'Greater than or equal to','<':'Less than','<=':'Less than or equal to','startswith':'Starts with','endswith':'Ends with','contains':'Contains','notcontains':'Does not contain','isblank':'Is blank','isnotblank':'Is not blank','wrongParentGroupIndex':'{{elementType}}: Wrong parent group index in "{{method}}" method.','wrongElementNode':'{{elementType}}: Incorect node / node Id in "{{method}}" method.','invalidDataStructure':'{{elementType}}: Used invalid data structure in updateCondition/updateGroup method.','dateTabLabel':'DATE','timeTabLabel':'TIME','queryLabel':'Query'}},type:'object',extend:true},'operatorPlaceholder':{value:'Operator',type:'string'},'propertyPlaceholder':{value:'Property',type:'string'},//'requiredFields': {
//    value: null,
//    type: 'array?',
//    reflectToAttribute: false
//},
'showIcons':{value:false,type:'boolean'},'value':{value:[],type:'array?',reflectToAttribute:false},'valueFormatFunction':{value:null,type:'function?',reflectToAttribute:false},'valuePlaceholder':{value:'Value',type:'string'}};}/**
    *  Required files
    */},{key:'requires',get:function get(){var requiredFiles={'JQX.Button':'jqxbutton.js','JQX.Calendar':'jqxcalendar.js','JQX.CheckBox':'jqxcheckbox.js','JQX.DateTimePicker':'jqxdatetimepicker.js','JQX.DropDownList':'jqxdropdownlist.js','JQX.Input':'jqxinput.js','JQX.ListBox':'jqxlistbox.js','JQX.Menu':'jqxmenu.js','JQX.NumericTextBox':'jqxnumerictextbox.js','JQX.ScrollBar':'jqxscrollbar.js','JQX.TimePicker':'jqxtimepicker.js','JQX.Tooltip':'jqxtooltip.js','JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.DateTime':'jqxdate.js','JQX.Utilities.Draw':'jqxdraw.js','JQX.Utilities.NumericProcessor':'jqxnumeric.js'};if(!window.NIComplex){requiredFiles['JQX.Utilities.Complex']='jqxcomplex.js';}return requiredFiles;}/**
     * Element's event listeners.
     */},{key:'listeners',get:function get(){return{'down':'_downHandler','move':'_moveHandler','resize':'_resizeHandler','editorsContainer.keydown':'_innerContainerKeydownHandler','conditionsMenu.closing':'_menuClosingHandler','conditionsMenu.itemClick':'_menuItemClickHandler','contentContainer.change':'_contentContainerChangeHandler','document.down':'_documentDownHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler'};}}]);return QueryBuilder;}(JQX.BaseElement));/**
 * Filter panel custom element.
 */JQX('jqx-filter-panel',function(_JQX$BaseElement15){babelHelpers.inherits(FilterPanel,_JQX$BaseElement15);function FilterPanel(){babelHelpers.classCallCheck(this,FilterPanel);return babelHelpers.possibleConstructorReturn(this,(FilterPanel.__proto__||Object.getPrototypeOf(FilterPanel)).apply(this,arguments));}babelHelpers.createClass(FilterPanel,[{key:'template',/**
     * Filter panel's HTML template.
     */value:function template(){var template='<div id="container" class="jqx-container">\n                <div id="label" class="jqx-filter-panel-label"></div>\n                <div id="mainContainer"></div>\n                <div id="buttonContainer" class="jqx-filter-panel-button-container">\n                    <jqx-button id="filterButton" class="primary" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]"></jqx-button>\n                    <jqx-button id="clearButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]"></jqx-button>\n                    <jqx-button id="cancelButton" animation="[[animation]]" disabled="[[disabled]]" unfocusable="[[unfocusable]]"></jqx-button>\n                </div>\n            </div>';return template;}/**
     * Invoked when an instance of custom element is attached to the DOM for the first time.
     */},{key:'ready',value:function ready(){babelHelpers.get(FilterPanel.prototype.__proto__||Object.getPrototypeOf(FilterPanel.prototype),'ready',this).call(this);var that=this,filterType=that.filterType;that._localize();that._setButtonsVisibility();that._filterType=filterType+'Filter';that._filterHandler=new JQX.Utilities[filterType.slice(0,1).toUpperCase()+filterType.slice(1)+'FilterHandler'](that);}/**
     * Discards current filtering.
     */},{key:'cancel',value:function cancel(){var that=this;that._filterHandler[that.mode+'Cancel']();that.$.fireEvent('cancel');}/**
     * Clears current filtering.
     */},{key:'clear',value:function clear(){var that=this;that._filterHandler[that.mode+'Clear']();that.$.fireEvent('clear');}},{key:'reset',value:function reset(){var that=this;that.$.clearButton.removeAttribute('hover');that.$.filterButton.removeAttribute('hover');that.$.cancelButton.removeAttribute('hover');that._filterHandler[that.mode+'Clear']();that._filterHandler.filterObject=new JQX.Utilities.FilterGroup();}},{key:'getFilter',value:function getFilter(){if(this._filterHandler){var filter=new JQX.Utilities.FilterGroup();for(var filterProperty in this._filterHandler.filterObject){filter[filterProperty]=this._filterHandler.filterObject[filterProperty];}return filter;}return null;}/**
     * Evaluates a filter.
     */},{key:'evaluate',value:function evaluate(value){try{return this._filterHandler.evaluate(value);}catch(error){return false;}}/**
     * Applies current filtering.
     */},{key:'filter',value:function filter(){var that=this;that._filterHandler[that.mode+'Filter']();that.$.fireEvent('filter');}/**
     * Gets the current filter state.
     */},{key:'getState',value:function getState(){return this._filterHandler.cachedFilter;}/**
     * Loads a previously saved filter state.
     *
     * @param {Object} state An object returned by the method getState.
     */},{key:'loadState',value:function loadState(state){try{var _that2=this;_that2._filterHandler.cachedFilter=state;_that2._filterHandler[_that2.mode+'Cancel']();}catch(error){//
}}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(FilterPanel.prototype.__proto__||Object.getPrototypeOf(FilterPanel.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this,filterHandler=that._filterHandler;function clearStoredObjects(){var objectNames=['cachedFilter','caseSensitive','customExcelFilterObjects','customItems','dataSource','defaultListSelection','defaultListSource','displayMode','filterBuilder','filterBuilderObject','filterBuilderOperations','filterObject','firstInput','firstList','operationsMapping','operatorList','secondInput','secondList','timeOnly','tree'];objectNames.forEach(function(index){delete filterHandler[objectNames[index]];});delete that._filterHandler;}function reRender(){that.$.mainContainer.innerHTML='';clearStoredObjects();that._filterHandler=new JQX.Utilities[that.filterType.slice(0,1).toUpperCase()+that.filterType.slice(1)+'FilterHandler'](that);}switch(propertyName){case'animation':case'disabled':case'unfocusable':switch(that.mode){case'default':[filterHandler.firstList,filterHandler.firstInput,filterHandler.logicalOperatorList,filterHandler.secondList,filterHandler.secondInput].forEach(function(element){element[propertyName]=newValue;});break;case'excel':filterHandler.tree[propertyName]=newValue;break;case'filterBuilder':filterHandler.filterBuilder[propertyName]=newValue;if(filterHandler.caseSensitive){filterHandler.caseSensitive[propertyName]=newValue;}break;}break;case'buttons':that._setButtonsVisibility();break;case'data':case'dataField':if(that.mode==='excel'&&!Array.isArray(that.dataSource)){reRender();}break;case'dataSource':if(that.mode==='excel'){reRender();}break;case'filterType':that._filterType=newValue+'Filter';reRender();break;case'mode':reRender();break;case'formatString':if(that.filterType!=='date'){return;}switch(that.mode){case'default':filterHandler.firstInput.formatString=newValue;filterHandler.secondInput.formatString=newValue;break;case'excel':reRender();break;case'filterBuilder':filterHandler.filterBuilder.formatStringDate=newValue;filterHandler.filterBuilder.formatStringDateTime=newValue;break;}break;case'locale':case'messages':{that._localize();switch(that.mode){case'default':{var firstListSelection=filterHandler.firstList.selectedIndexes,operatorListSelection=filterHandler.logicalOperatorList.selectedIndexes,secondListSelection=filterHandler.secondList.selectedIndexes;filterHandler.setDefaults();filterHandler.firstList.dataSource=filterHandler.defaultListSource;filterHandler.logicalOperatorList.dataSource=[{value:0,label:that.localize('and')},{value:1,label:that.localize('or')}];filterHandler.secondList.dataSource=filterHandler.defaultListSource;if(that.filterType==='date'){var inputs=[filterHandler.firstInput,filterHandler.secondInput];inputs.forEach(function(input){if(!input.messages[that.locale]){input.messages[that.locale]={};}input.messages[that.locale].dateTabLabel=that.localize('dateTabLabel');input.messages[that.locale].timeTabLabel=that.localize('timeTabLabel');if(propertyName==='locale'){input.locale=that.locale;}else{input.$.selectDate.innerHTML=input.messages[that.locale].dateTabLabel;input.$.selectTime.innerHTML=input.messages[that.locale].timeTabLabel;}if(input._dropDownDisplayMode==='timePicker'){input.placeholder=that.localize('placeholderTime');input.placeholder=that.localize('placeholderTime');}else{input.placeholder=that.localize('placeholderDate');input.placeholder=that.localize('placeholderDate');}});}filterHandler.firstList.selectedIndexes=firstListSelection;filterHandler.logicalOperatorList.selectedIndexes=operatorListSelection;filterHandler.secondList.selectedIndexes=secondListSelection;break;}case'excel':filterHandler.tree.selectAll.label=that.localize('selectAll');if(filterHandler.tree.blanks){filterHandler.tree.blanks.label=that.localize('blanks');}break;case'filterBuilder':filterHandler.localizeFilterBuilder();if(propertyName==='messages'){filterHandler.filterBuilder._localizeInitialValues();filterHandler.filterBuilder._refresh();}filterHandler.filterBuilder.$.scrollableContainer.refresh();break;}break;}}}/**
     * Localizes element.
     */},{key:'_localize',value:function _localize(){var that=this;that.$.label.innerHTML=that.localize('showRows');that.$.filterButton.innerHTML=that.localize('filter');that.$.clearButton.innerHTML=that.localize('clear');that.$.cancelButton.innerHTML=that.localize('cancel');}/**
     * Sets buttons visibility.
     */},{key:'_setButtonsVisibility',value:function _setButtonsVisibility(){var that=this,buttonsVisibility=that.buttons;['cancel','clear','filter'].forEach(function(button){if(buttonsVisibility.indexOf(button)!==-1){that['$'+button+'Button'].removeClass('jqx-hidden');}else{that['$'+button+'Button'].addClass('jqx-hidden');}});}}],[{key:'properties',/**
     * Filter panel's properties.
     */get:function get(){return{'buttons':{value:['clear','filter'],type:'array'},'data':{value:null,type:'array?',reflectToAttribute:false},'dataField':{value:null,type:'string?'},'dataSource':{value:null,type:'any',reflectToAttribute:false},'evaluateFilterExpression':{value:null,type:'function?',reflectToAttribute:false},'filterType':{value:'string',allowedValues:['numeric','string','date','boolean'],type:'string'},'formatString':{value:'d',type:'string'},'messages':{value:{'en':{'addCondition':'Add Condition','addGroup':'Add Group','and':'and','blanks':'(Blanks)','cancel':'Cancel','clear':'Clear','contains':'contains','containsCaseSensitive':'contains (case sensitive)','dateTabLabel':'DATE','doesNotContain':'does not contain','doesNotContainCaseSensitive':'does not contain (case sensitive)','empty':'empty','endsWith':'ends with','endsWithCaseSensitive':'ends with (case sensitive)','equal':'equal','equalCaseSensitive':'equal (case sensitive)','filter':'Filter','filterBuilderPlaceholder':'&lt;enter a value&gt;','greaterThan':'greater than','greaterThanOrEqual':'greater than or equal','lessThan':'less than','lessThanOrEqual':'less than or equal','mismatchedProperties':'jqxFilterPanel: The "filterType" and the data type of the selected "dataField" are mismatched.','missingProperty':'jqxFilterPanel: When mode is \'excel\', either "data" and "dataField" or "dataSource" of type Array have to be set.','notEmpty':'not empty','notEqual':'not equal','notNull':'not null','null':'null ','or':'or','placeholderDate':'Enter date','placeholderTime':'Enter time','selectAll':'(Select All)','showRows':'Show rows where:','startsWith':'starts with','startsWithCaseSensitive':'starts with (case sensitive)','timeTabLabel':'TIME'}},type:'object',extend:true},'mode':{value:'default',allowedValues:['default','excel','filterBuilder'],type:'string'}};}/**
     * Filter panel's event listeners.
     */},{key:'listeners',get:function get(){return{'cancelButton.click':'cancel','clearButton.click':'clear','filterButton.click':'filter'};}/**
     * Filter panel's required files.
     */},{key:'requires',get:function get(){return{'JQX.Button':'jqxbutton.js','JQX.DateTimePicker':'jqxdatetimepicker.js','JQX.DropDownList':'jqxdropdownlist.js','JQX.FilterBuilder':'jqxfilterbuilder.js','JQX.NumericTextBox':'jqxnumerictextbox.js','JQX.Tree':'jqxtree.js','JQX.FilterGroup':'jqxfilter.js'};}}]);return FilterPanel;}(JQX.BaseElement));JQX.Utilities.Assign('BaseFilterHandler',function(){function BaseFilterHandler(context){babelHelpers.classCallCheck(this,BaseFilterHandler);var that=this;that.context=context;that.filterObject=new JQX.Utilities.FilterGroup();that.setDefaults();if(context.filterType==='date'){var sampleDateTime=new JQX.Utilities.DateTime(),formatString=context.formatString,formatStringRegExp=sampleDateTime.getParseRegExp(sampleDateTime.calendar,formatString.replace(/y+/g,'yyyyy'));that.displayMode=JQX.Utilities.DateTime.detectDisplayMode(sampleDateTime,formatString,formatStringRegExp);that.timeOnly=that.displayMode==='timePicker';}if(context.mode==='default'){that.createDefaultHTMLStructure();return;}that.operationsMapping={'=':'EQUAL','<>':'NOT_EQUAL','<':'LESS_THAN','>':'GREATER_THAN','<=':'LESS_THAN_OR_EQUAL','>=':'GREATER_THAN_OR_EQUAL','isblank':'EMPTY','isnotblank':'NOT_EMPTY','contains':'CONTAINS','notcontains':'DOES_NOT_CONTAIN','startswith':'STARTS_WITH','endswith':'ENDS_WITH','NULL':'NULL','NOT_NULL':'NOT_NULL'};if(context.mode==='excel'){that.createExcelHTMLStructure();}else if(context.mode==='filterBuilder'){that.createBuilderHTMLStructure();}}/**
     * Sets default source and selection.
     */babelHelpers.createClass(BaseFilterHandler,[{key:'setDefaults',value:function setDefaults(){var that=this,context=that.context;that.defaultListSource=[{value:'EQUAL',label:context.localize('equal')},{value:'NOT_EQUAL',label:context.localize('notEqual')},{value:'LESS_THAN',label:context.localize('lessThan')},{value:'LESS_THAN_OR_EQUAL',label:context.localize('lessThanOrEqual')},{value:'GREATER_THAN',label:context.localize('greaterThan')},{value:'GREATER_THAN_OR_EQUAL',label:context.localize('greaterThanOrEqual')},{value:'NULL',label:context.localize('null')},{value:'NOT_NULL',label:context.localize('notNull')}];that.filterBuilderOperations=['<','=','<>','<=','>','>=','NULL','NOT_NULL'];that.defaultListSelection=2;}/**
     * Creates the filter panel's HTML structure in default mode.
     */},{key:'createDefaultHTMLStructure',value:function createDefaultHTMLStructure(){var that=this,context=that.context,firstList=document.createElement('jqx-drop-down-list'),operatorList=document.createElement('jqx-drop-down-list'),secondList=document.createElement('jqx-drop-down-list'),fragment=document.createDocumentFragment();firstList.classList.add('jqx-filter-panel-list');firstList.dataSource=that.defaultListSource;firstList.selectedIndexes=[that.defaultListSelection];operatorList.classList.add('jqx-filter-panel-operator-list');operatorList.dataSource=[{value:0,label:context.localize('and')},{value:1,label:context.localize('or')}];secondList.classList.add('jqx-filter-panel-list');secondList.dataSource=that.defaultListSource;secondList.selectedIndexes=[that.defaultListSelection];that.firstList=firstList;that.logicalOperatorList=operatorList;that.secondList=secondList;that.appendInputs();that.firstInput.classList.add('jqx-filter-panel-input');that.secondInput.classList.add('jqx-filter-panel-input');operatorList.dropDownHeight='auto';operatorList.selectedIndexes=[0];[firstList,that.firstInput,operatorList,secondList,that.secondInput].forEach(function(element){element.animation=context.animation;element.disabled=context.disabled;element.unfocusable=context.unfocusable;element.dropDownPosition='bottom';element.dropDownAppendTo='body';element.dropDownMaxHeight=200;element.dropDownWidth='auto';fragment.appendChild(element);});that.context.$.mainContainer.appendChild(fragment);that.cacheFilter(that.defaultListSelection,0,that.defaultListSelection);}/**
     * Caches filter.
     */},{key:'cacheFilter',value:function cacheFilter(firstFilterComparison,operator,secondFilterComparison){var that=this;that.cachedFilter={firstFilterComparison:firstFilterComparison,firstFilterValue:that.firstInput.value,logicalOperator:operator,secondFilterComparison:secondFilterComparison,secondFilterValue:that.secondInput.value};}/**
     * Applies filter.
     */},{key:'defaultFilter',value:function defaultFilter(){var that=this,context=that.context,firstFilterComparison=that.firstList.selectedValues[0],firstFilterValue=that.getFilterInputValue(that.firstInput),operator=parseFloat(that.logicalOperatorList.selectedValues[0]),secondFilterComparison=that.secondList.selectedValues[0],secondFilterValue=that.getFilterInputValue(that.secondInput),filterObject=that.filterObject;filterObject.clear();if(firstFilterValue!==''||['NULL','NOT_NULL','EMPTY','NOT_EMPTY'].indexOf(firstFilterComparison)!==-1){var firstFilter=filterObject.createFilter(context._filterType,firstFilterValue,firstFilterComparison,undefined,context.formatString,context.locale,that.firstInput._dropDownDisplayMode==='timePicker');filterObject.addFilter(operator,firstFilter);}if(secondFilterValue!==''||['NULL','NOT_NULL','EMPTY','NOT_EMPTY'].indexOf(secondFilterComparison)!==-1){var secondFilter=filterObject.createFilter(context._filterType,secondFilterValue,secondFilterComparison,undefined,context.formatString,context.locale,that.secondInput._dropDownDisplayMode==='timePicker');filterObject.addFilter(operator,secondFilter);}that.cacheFilter(that.firstList.selectedIndexes[0],that.logicalOperatorList.selectedIndexes[0],that.secondList.selectedIndexes[0]);}/**
     * Parses filter input value.
     */},{key:'getFilterInputValue',value:function getFilterInputValue(input){return input.value;}/**
     * Applies filter ('excel' mode).
     */},{key:'excelFilter',value:function excelFilter(){var that=this,context=that.context;if(Array.isArray(context.dataSource)){that.customExcelFilter();return;}var tree=that.tree,filterObject=that.filterObject;filterObject.clear();that.customItems=[];if(tree._menuItems['0'].selected){return;}var selectedIndexes=tree.selectedIndexes;selectedIndexes.forEach(function(index){var item=tree._menuItems[index];if(item instanceof JQX.TreeItem){var _value31=item.value;if(item.hasAttribute('default-item')){var filterComparison=that.getExcelComparison(_value31),filter=filterObject.createFilter(context._filterType,_value31,filterComparison,undefined,context.formatString,context.locale,that.timeOnly);filterObject.addFilter('or',filter);}else{that.customItems.push(item);}}});that.cachedFilter=selectedIndexes.slice(0);}/**
     * Applies filter ('excel' mode with custom data source).
     */},{key:'customExcelFilter',value:function customExcelFilter(){var that=this,tree=that.tree;delete that.customExcelFilterObjects;if(tree._menuItems['0'].selected){return;}var context=that.context,filterObjects=[],selectedIndexes=tree.selectedIndexes;selectedIndexes.forEach(function(index){var item=tree._menuItems[index];if(item instanceof JQX.TreeItem){var _value32=item.value;if(!Array.isArray(_value32)){return;}if(!Array.isArray(_value32[0])){_value32=[_value32];}var filterObject=new JQX.Utilities.FilterGroup();for(var _i463=0;_i463<_value32.length;_i463++){var condition=_value32[_i463],operation=that.operationsMapping[condition[1]],filter=filterObject.createFilter(context._filterType,condition[2],operation,undefined,context.formatString,context.locale,that.timeOnly);filterObject.addFilter('and',filter);}filterObjects.push(filterObject);}});that.customExcelFilterObjects=filterObjects;that.cachedFilter=selectedIndexes.slice(0);}/**
     * Gets filter comparison ('excel' mode).
     */},{key:'getExcelComparison',value:function getExcelComparison(value){return value===''?'NULL':'EQUAL';}/**
     * Applies filter ('filterBuilder' mode).
     */},{key:'filterBuilderFilter',value:function filterBuilderFilter(){var that=this,filterSettings=that.filterBuilder.value,caseSensitive=that.context.filterType==='string'?that.caseSensitive.checked:false,filterResult={filters:[]};function recursion(currentContext,collection){var filterObject=new JQX.Utilities.FilterGroup(),operator=currentContext[1];collection.logicalOperator=operator;for(var _i464=0;_i464<currentContext.length;_i464++){if(_i464===1){continue;}var node=currentContext[_i464];if(Array.isArray(node)){if(Array.isArray(node[0])){var subCollection={filters:[]};collection.filters.push(subCollection);recursion(node,subCollection);}else{filterObject.addFilter(operator,that.createFilterBuilderFilter(filterObject,node,caseSensitive));}}}if(filterObject.filters.length>0){collection.filters.push(filterObject);}}recursion(filterSettings,filterResult);that.filterBuilderObject=filterResult;that.cachedFilter={filterBuilder:JSON.parse(JSON.stringify(that.filterBuilder.value),function(key,value){return /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}).(\d{3})Z$/.test(value)?new Date(value):value;}),caseSensitive:caseSensitive};}/**
     * Calls the "createFilter" method with the correct arguments.
     */},{key:'createFilterBuilderFilter',value:function createFilterBuilderFilter(filterObject,node,caseSensitive){var that=this,context=that.context;var operation=that.operationsMapping[node[1]];if(caseSensitive&&['CONTAINS','DOES_NOT_CONTAIN','STARTS_WITH','ENDS_WITH','EQUAL'].indexOf(operation)!==-1){operation+='_CASE_SENSITIVE';}return filterObject.createFilter(context._filterType,node[2],operation,undefined,context.formatString,context.locale,false);}/**
     * Clears filter.
     */},{key:'defaultClear',value:function defaultClear(){var that=this;that.firstList.selectedIndexes=[that.defaultListSelection];that.firstInput.value='';that.logicalOperatorList.selectedIndexes=[0];that.secondList.selectedIndexes=[that.defaultListSelection];that.secondInput.value='';that.filterObject.clear();that.cacheFilter(that.defaultListSelection,0,that.defaultListSelection);}/**
     * Clears filter ('excel' mode).
     */},{key:'excelClear',value:function excelClear(){var that=this;that.tree.select('0');that.filterObject.clear();that.cachedFilter=that.tree.selectedIndexes.slice(0);}/**
     * Clears filter ('filterBuilder' mode).
     */},{key:'filterBuilderClear',value:function filterBuilderClear(){var that=this;that.filterBuilder.value=['and'];if(that.context.filterType==='string'){that.caseSensitive.checked=false;}that.cachedFilter={filterBuilder:['and'],caseSensitive:false};}/**
     * Cancels current filter application.
     */},{key:'defaultCancel',value:function defaultCancel(){var that=this;that.firstList.selectedIndexes=[that.cachedFilter.firstFilterComparison];that.firstInput.value=that.cachedFilter.firstFilterValue;that.logicalOperatorList.selectedIndexes=[that.cachedFilter.logicalOperator];that.secondList.selectedIndexes=[that.cachedFilter.secondFilterComparison];that.secondInput.value=that.cachedFilter.secondFilterValue;}/**
     * Cancels current filter application ('excel' mode).
     */},{key:'excelCancel',value:function excelCancel(){var that=this;that.tree.selectedIndexes=that.cachedFilter.slice(0);}/**
     * Cancels current filter application ('filterBuilder' mode).
     */},{key:'filterBuilderCancel',value:function filterBuilderCancel(){var that=this;that.filterBuilder.value=that.cachedFilter.filterBuilder;if(that.context.filterType==='string'){that.caseSensitive.checked=that.cachedFilter.caseSensitive;}}/**
     * Creates the filter panel's HTML structure in 'excel' mode.
     */},{key:'createExcelHTMLStructure',value:function createExcelHTMLStructure(){var that=this,context=that.context,tree=document.createElement('jqx-tree'),uniqueValuesDetails={data:context.data,dataField:context.dataField,filterType:context._filterType};if(!context.dataSource||!Array.isArray(context.dataSource)){if(!context.data||!context.dataField){context.error(context.localize('missingProperty'));}if(context.filterType==='date'){uniqueValuesDetails.formatString=context.formatString;uniqueValuesDetails.displayMode=that.displayMode;that.dataSource=that.filterObject.getUniqueValues(uniqueValuesDetails,context);try{that.getHierarchicalDataSource(that.displayMode);}catch(error){context.error(context.localize('mismatchedProperties'));}if(that.timeOnly){tree.classList.add('standard-excel');}else{tree.classList.add('date-excel');}}else{that.dataSource=that.filterObject.getUniqueValues(uniqueValuesDetails,context);tree.classList.add('standard-excel');}if(typeof context.dataSource==='function'){that.dataSource=context.dataSource(that.dataSource)||that.dataSource;}}else{that.processCustomDataSource(tree);}tree.animation=context.animation;tree.disabled=context.disabled;tree.unfocusable=context.unfocusable;tree.dataSource=[{label:context.localize('selectAll'),value:'',items:that.dataSource,expanded:true,selected:true}];tree.selectionMode='checkBox';tree.hasThreeStates=true;tree.toggleMode='arrow';tree.addEventListener('collapsing',function(event){if(event.detail.item.level===1){event.preventDefault();}});tree._onCompleted=function(){that.cachedFilter=tree.selectedIndexes.slice(0);if(tree.classList.contains('date-excel')){for(var path in tree._menuItems){if(path==='0'){continue;}var _item42=tree._menuItems[path];_item42.firstElementChild.style.paddingLeft=(_item42.level-1)*20-10+'px';}}else{tree._menuItems['0'].firstElementChild.style.paddingLeft=0;}tree.selectAll=tree._menuItems['0'];tree.blanks=tree.querySelector('[label="'+context.localize('blanks')+'"]');};that.tree=tree;context.$.mainContainer.appendChild(tree);}/**
     * Processes custom data source in 'excel' mode.
     */},{key:'processCustomDataSource',value:function processCustomDataSource(tree){var that=this,context=that.context,dataSource=context.dataSource;tree.classList.add('standard-excel');that.dataSource=dataSource;}/**
     * Creates the filter panel's HTML structure in 'filterBuilder' mode.
     */},{key:'createBuilderHTMLStructure',value:function createBuilderHTMLStructure(){var that=this,context=that.context,filterBuilder=document.createElement('jqx-filter-builder'),dataField=context.dataField,dataType=context.filterType==='numeric'?'number':context.filterType;that.filterBuilder=filterBuilder;filterBuilder.animation=context.animation;filterBuilder.disabled=context.disabled;filterBuilder.unfocusable=context.unfocusable;filterBuilder.value=['and'];filterBuilder.fields=[{label:dataField,dataField:dataField,dataType:dataType,filterOperations:that.filterBuilderOperations}];that.localizeFilterBuilder();context.$.mainContainer.appendChild(filterBuilder);if(dataType==='string'){var caseSensitive=document.createElement('jqx-check-box');caseSensitive.classList.add('case-sensitive');caseSensitive.innerHTML='Case sensitive';caseSensitive.animation=context.animation;caseSensitive.disabled=context.disabled;caseSensitive.unfocusable=context.unfocusable;caseSensitive.checked=false;that.caseSensitive=caseSensitive;context.$.mainContainer.appendChild(caseSensitive);}that.filterBuilderObject={filters:[]};that.cachedFilter={filterBuilder:['and'],caseSensitive:false};}/**
     * Localizes filter builder.
     */},{key:'localizeFilterBuilder',value:function localizeFilterBuilder(){var that=this,context=that.context,filterBuilder=that.filterBuilder;var defaultMessages=filterBuilder.messages[context.locale];if(!defaultMessages){defaultMessages={};filterBuilder.messages[context.locale]=defaultMessages;}filterBuilder.customOperations=[{name:'NULL',label:context.localize('null'),hideValue:true},{name:'NOT_NULL',label:context.localize('notNull'),hideValue:true}];defaultMessages['addCondition']=context.localize('addCondition');defaultMessages['addGroup']=context.localize('addGroup');defaultMessages['<']=context.localize('lessThan');defaultMessages['<=']=context.localize('lessThanOrEqual');defaultMessages['<>']=context.localize('notEqual');defaultMessages['=']=context.localize('equal');defaultMessages['>']=context.localize('greaterThan');defaultMessages['>=']=context.localize('greaterThanOrEqual');defaultMessages['and']=context.localize('and');defaultMessages['contains']=context.localize('contains');defaultMessages['endswith']=context.localize('endsWith');defaultMessages['isblank']=context.localize('empty');defaultMessages['isnotblank']=context.localize('notEmpty');defaultMessages['notcontains']=context.localize('doesNotContain');defaultMessages['or']=context.localize('or');defaultMessages['startswith']=context.localize('startsWith');defaultMessages['dateTabLabel']=context.localize('dateTabLabel');defaultMessages['timeTabLabel']=context.localize('timeTabLabel');filterBuilder.formatStringDate=context.formatString;filterBuilder.formatStringDateTime=context.formatString;filterBuilder.locale=context.locale;filterBuilder.valuePlaceholder=context.localize('filterBuilderPlaceholder');}/**
     * Evaluates a filter.
     */},{key:'evaluate',value:function evaluate(value){var that=this,context=that.context;if(context.mode==='default'){return that.filterObject.evaluate(value);}if(context.mode==='excel'){var result=false;if(Array.isArray(context.dataSource)){if(!that.customExcelFilterObjects||that.customExcelFilterObjects.length===0){return true;}for(var _i465=0;_i465<that.customExcelFilterObjects.length;_i465++){result=result||that.customExcelFilterObjects[_i465].evaluate(value);}return result;}if(that.customItems&&that.customItems.length>0){if(that.filterObject.filters.length>0){result=that.filterObject.evaluate(value);}if(that.customItems&&context.evaluateFilterExpression){for(var _i466=0;_i466<that.customItems.length;_i466++){var customCalculation=context.evaluateFilterExpression(value,that.customItems[_i466].value);if(customCalculation!==undefined){result=result||customCalculation;}}}}else{result=that.filterObject.evaluate(value);}return result;}function evaluateGroup(group){var result=group.logicalOperator==='and'?true:false;for(var _i467=0;_i467<group.filters.length;_i467++){var currentResult=void 0;if(group.filters[_i467]instanceof JQX.Utilities.FilterGroup){currentResult=group.filters[_i467].evaluate(value);}else{currentResult=evaluateGroup(group.filters[_i467]);}result=group.logicalOperator==='and'?result&&currentResult:result||currentResult;}return result;}if(!that.filterBuilderObject.logicalOperator){return true;}return evaluateGroup(that.filterBuilderObject);}}]);return BaseFilterHandler;}());JQX.Utilities.Assign('NumericFilterHandler',function(_JQX$Utilities$BaseFi){babelHelpers.inherits(NumericFilterHandler,_JQX$Utilities$BaseFi);function NumericFilterHandler(){babelHelpers.classCallCheck(this,NumericFilterHandler);return babelHelpers.possibleConstructorReturn(this,(NumericFilterHandler.__proto__||Object.getPrototypeOf(NumericFilterHandler)).apply(this,arguments));}babelHelpers.createClass(NumericFilterHandler,[{key:'appendInputs',/**
     * Appends inputs specific to filter type.
     */value:function appendInputs(){var that=this,firstInput=document.createElement('jqx-numeric-text-box'),secondInput=document.createElement('jqx-numeric-text-box');firstInput.inputFormat='floatingPoint';firstInput.nullable=true;firstInput.spinButtons=true;firstInput.value=null;secondInput.inputFormat='floatingPoint';secondInput.nullable=true;secondInput.spinButtons=true;secondInput.value=null;that.firstInput=firstInput;that.secondInput=secondInput;}/**
     * Parses filter input value.
     */},{key:'getFilterInputValue',value:function getFilterInputValue(input){if(input.value===null||input.value===''){return'';}return parseFloat(input.value);}}]);return NumericFilterHandler;}(JQX.Utilities.BaseFilterHandler));JQX.Utilities.Assign('StringFilterHandler',function(_JQX$Utilities$BaseFi2){babelHelpers.inherits(StringFilterHandler,_JQX$Utilities$BaseFi2);function StringFilterHandler(){babelHelpers.classCallCheck(this,StringFilterHandler);return babelHelpers.possibleConstructorReturn(this,(StringFilterHandler.__proto__||Object.getPrototypeOf(StringFilterHandler)).apply(this,arguments));}babelHelpers.createClass(StringFilterHandler,[{key:'setDefaults',/**
     * Sets default source and selection.
     */value:function setDefaults(){var that=this,context=that.context;that.defaultListSource=[{value:'EMPTY',label:context.localize('empty')},{value:'NOT_EMPTY',label:context.localize('notEmpty')},{value:'CONTAINS',label:context.localize('contains')},{value:'CONTAINS_CASE_SENSITIVE',label:context.localize('containsCaseSensitive')},{value:'DOES_NOT_CONTAIN',label:context.localize('doesNotContain')},{value:'DOES_NOT_CONTAIN_CASE_SENSITIVE',label:context.localize('doesNotContainCaseSensitive')},{value:'STARTS_WITH',label:context.localize('startsWith')},{value:'STARTS_WITH_CASE_SENSITIVE',label:context.localize('startsWithCaseSensitive')},{value:'ENDS_WITH',label:context.localize('endsWith')},{value:'ENDS_WITH_CASE_SENSITIVE',label:context.localize('endsWithCaseSensitive')},{value:'EQUAL',label:context.localize('equal')},{value:'EQUAL_CASE_SENSITIVE',label:context.localize('equalCaseSensitive')},{value:'NULL',label:context.localize('null')},{value:'NOT_NULL',label:context.localize('notNull')}];that.filterBuilderOperations=['contains','isblank','isnotblank','notcontains','startswith','endswith','=','NULL','NOT_NULL'];that.defaultListSelection=2;}/**
     * Appends inputs specific to filter type.
     */},{key:'appendInputs',value:function appendInputs(){var that=this,firstInput=document.createElement('input'),secondInput=document.createElement('input');firstInput.classList.add('jqx-input');secondInput.classList.add('jqx-input');that.firstInput=firstInput;that.secondInput=secondInput;}/**
     * Gets filter comparison ('excel' mode).
     */},{key:'getExcelComparison',value:function getExcelComparison(value){return value===''?'EMPTY':'EQUAL_CASE_SENSITIVE';}}]);return StringFilterHandler;}(JQX.Utilities.BaseFilterHandler));JQX.Utilities.Assign('DateFilterHandler',function(_JQX$Utilities$BaseFi3){babelHelpers.inherits(DateFilterHandler,_JQX$Utilities$BaseFi3);function DateFilterHandler(){babelHelpers.classCallCheck(this,DateFilterHandler);return babelHelpers.possibleConstructorReturn(this,(DateFilterHandler.__proto__||Object.getPrototypeOf(DateFilterHandler)).apply(this,arguments));}babelHelpers.createClass(DateFilterHandler,[{key:'appendInputs',/**
     * Appends inputs specific to filter type.
     */value:function appendInputs(){var that=this,context=that.context,firstInput=document.createElement('jqx-date-time-picker'),secondInput=document.createElement('jqx-date-time-picker');firstInput.calendarButton=true;firstInput.editMode='partial';firstInput.formatString=context.formatString;firstInput.dropDownDisplayMode='auto';firstInput.locale=context.locale;if(!firstInput.messages[context.locale]){firstInput.messages[context.locale]={};}firstInput.messages[context.locale].dateTabLabel=context.localize('dateTabLabel');firstInput.messages[context.locale].timeTabLabel=context.localize('timeTabLabel');firstInput.nullable=true;firstInput.value=null;secondInput.calendarButton=true;secondInput.editMode='partial';secondInput.formatString=context.formatString;secondInput.dropDownDisplayMode='auto';secondInput.locale=context.locale;if(!secondInput.messages[context.locale]){secondInput.messages[context.locale]={};}secondInput.messages[context.locale].dateTabLabel=context.localize('dateTabLabel');secondInput.messages[context.locale].timeTabLabel=context.localize('timeTabLabel');secondInput.nullable=true;secondInput.value=null;secondInput._onCompleted=function(){if(secondInput._dropDownDisplayMode==='timePicker'){firstInput.placeholder=context.localize('placeholderTime');firstInput.placeholder=context.localize('placeholderTime');}else{firstInput.placeholder=context.localize('placeholderDate');firstInput.placeholder=context.localize('placeholderDate');}};that.firstInput=firstInput;that.secondInput=secondInput;}/**
     * Parses filter input value.
     */},{key:'getFilterInputValue',value:function getFilterInputValue(input){if(input.value===null){return'';}var result=input.value.toDate();if(this.displayMode==='calendar'){result.setHours(0,0,0);}return result;}/**
     * Clears filter.
     */},{key:'defaultClear',value:function defaultClear(){var that=this;that.firstList.selectedIndexes=[that.defaultListSelection];that.firstInput.value=null;that.logicalOperatorList.selectedIndexes=[0];that.secondList.selectedIndexes=[that.defaultListSelection];that.secondInput.value=null;that.filterObject.clear();that.cacheFilter(that.defaultListSelection,0,that.defaultListSelection);}/**
     * Gets hierarchical data source ('excel' mode).
     */},{key:'getHierarchicalDataSource',value:function getHierarchicalDataSource(displayMode){var that=this,dataSource=that.dataSource,mapping={},treeSource=[];var blanks=void 0;if(displayMode==='timePicker'){return;}if(dataSource[dataSource.length-1].value===''){blanks=dataSource[dataSource.length-1];dataSource.pop();}dataSource.forEach(function(item){var date=item.value,year=date.getFullYear(),month=new Intl.DateTimeFormat(that.context.locale,{month:'long'}).format(date),day=date.getDate();if(!mapping[year]){mapping[year]={};}if(!mapping[year][month]){mapping[year][month]={};}if(!mapping[year][month][day]){if(displayMode==='calendar'){mapping[year][month][day]=date;return;}else{mapping[year][month][day]={};}}if(displayMode==='calendar'){return;}var hours=date.getHours(),minutes=date.getMinutes(),seconds=date.getSeconds();if(!mapping[year][month][day][hours]){mapping[year][month][day][hours]={};}if(!mapping[year][month][day][hours][minutes]){mapping[year][month][day][hours][minutes]={};}if(!mapping[year][month][day][hours][minutes][seconds]){mapping[year][month][day][hours][minutes][seconds]=date;}});for(var year in mapping){var yearLevelItem={label:year,items:[],customAttribute:'default-item'};treeSource.push(yearLevelItem);for(var month in mapping[year]){var monthLevelItem={label:month,items:[],customAttribute:'default-item'};yearLevelItem.items.push(monthLevelItem);for(var day in mapping[year][month]){var dayLeveItem={label:day,customAttribute:'default-item'};monthLevelItem.items.push(dayLeveItem);if(displayMode==='calendar'){dayLeveItem.value=mapping[year][month][day];continue;}dayLeveItem.items=[];for(var hours in mapping[year][month][day]){var hoursLevelItem={label:'0'.repeat(2-hours.length)+hours,items:[],customAttribute:'default-item'};dayLeveItem.items.push(hoursLevelItem);for(var minutes in mapping[year][month][day][hours]){var minutesLevelItem={label:':'+'0'.repeat(2-minutes.length)+minutes,items:[],customAttribute:'default-item'};hoursLevelItem.items.push(minutesLevelItem);for(var seconds in mapping[year][month][day][hours][minutes]){var secondsLevelItem={label:':'+'0'.repeat(2-seconds.length)+seconds,value:mapping[year][month][day][hours][minutes][seconds],customAttribute:'default-item'};minutesLevelItem.items.push(secondsLevelItem);}}}}}}if(blanks){treeSource.push(blanks);}that.dataSource=treeSource;}}]);return DateFilterHandler;}(JQX.Utilities.BaseFilterHandler));JQX.Utilities.Assign('BooleanFilterHandler',function(_JQX$Utilities$BaseFi4){babelHelpers.inherits(BooleanFilterHandler,_JQX$Utilities$BaseFi4);function BooleanFilterHandler(){babelHelpers.classCallCheck(this,BooleanFilterHandler);return babelHelpers.possibleConstructorReturn(this,(BooleanFilterHandler.__proto__||Object.getPrototypeOf(BooleanFilterHandler)).apply(this,arguments));}babelHelpers.createClass(BooleanFilterHandler,[{key:'cacheFilter',/**
     * Caches filter.
     */value:function cacheFilter(firstFilterComparison,operator,secondFilterComparison){var that=this;that.cachedFilter={firstFilterComparison:firstFilterComparison,firstFilterValue:that.firstInput.selectedIndexes.slice(0),logicalOperator:operator,secondFilterComparison:secondFilterComparison,secondFilterValue:that.secondInput.selectedIndexes.slice(0)};}/**
     * Sets default source and selection.
     */},{key:'setDefaults',value:function setDefaults(){var that=this,context=that.context;that.defaultListSource=[{value:'EQUAL',label:context.localize('equal')},{value:'NOT_EQUAL',label:context.localize('notEqual')},{value:'NULL',label:context.localize('null')},{value:'NOT_NULL',label:context.localize('notNull')}];that.filterBuilderOperations=['=','<>','NULL','NOT_NULL'];that.defaultListSelection=0;}/**
     * Appends inputs specific to filter type.
     */},{key:'appendInputs',value:function appendInputs(){var that=this,firstInput=document.createElement('jqx-drop-down-list'),secondInput=document.createElement('jqx-drop-down-list');firstInput.dataSource=[{value:true,label:'true'},{value:false,label:'false'}];firstInput.selectedIndexes=[];firstInput.selectionMode='zeroOrOne';secondInput.dataSource=[{value:true,label:'true'},{value:false,label:'false'}];secondInput.selectedIndexes=[];secondInput.selectionMode='zeroOrOne';that.firstInput=firstInput;that.secondInput=secondInput;}/**
     * Parses filter input value.
     */},{key:'getFilterInputValue',value:function getFilterInputValue(input){if(input.selectedValues.length===0){return'';}return input.selectedValues[0]==='true';}/**
     * Clears filter.
     */},{key:'defaultClear',value:function defaultClear(){var that=this;that.firstList.selectedIndexes=[that.defaultListSelection];that.firstInput.selectedIndexes=[];that.logicalOperatorList.selectedIndexes=[0];that.secondList.selectedIndexes=[that.defaultListSelection];that.secondInput.selectedIndexes=[];that.filterObject.clear();that.cacheFilter(that.defaultListSelection,0,that.defaultListSelection);}/**
     * Cancels current filter application.
     */},{key:'defaultCancel',value:function defaultCancel(){var that=this;that.firstList.selectedIndexes=[that.cachedFilter.firstFilterComparison];that.firstInput.selectedIndexes=that.cachedFilter.firstFilterValue;that.logicalOperatorList.selectedIndexes=[that.cachedFilter.logicalOperator];that.secondList.selectedIndexes=[that.cachedFilter.secondFilterComparison];that.secondInput.selectedIndexes=that.cachedFilter.secondFilterValue;}}]);return BooleanFilterHandler;}(JQX.Utilities.BaseFilterHandler));/**
* List Item custom element.
*/JQX('jqx-list-item',function(_JQX$ContentElement9){babelHelpers.inherits(Item,_JQX$ContentElement9);function Item(){babelHelpers.classCallCheck(this,Item);return babelHelpers.possibleConstructorReturn(this,(Item.__proto__||Object.getPrototypeOf(Item)).apply(this,arguments));}babelHelpers.createClass(Item,[{key:'template',/**
    * jqx-list-item's template.
    */value:function template(){return'<div id="container">\n                   <span id=\'itemInput\' class =\'jqx-input jqx-hidden\'></span>\n                    <span class ="jqx-overlay" id="overlay"></span>\n                    <div id="itemContainer" class ="jqx-content jqx-list-item-container"><span class="jqx-content-label" inner-h-t-m-l=\'[[innerHTML]]\'><content></content></span><span inner-h-t-m-l=\'[[details]]\' id="details" class="jqx-content-details"></span></div>\n                </div>';}},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node.classList.contains('jqx-ripple')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}that.$.itemContainer.innerHTML='';if(node instanceof HTMLElement){that.$.itemContainer.appendChild(node);}}},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}referenceNode.parentNode.insertBefore(newNode,referenceNode);}},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted||node.classList.contains('jqx-ripple')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(node instanceof HTMLElement){that.$.itemContainer.removeChild(node);}}},{key:'attached',value:function attached(){var that=this;babelHelpers.get(Item.prototype.__proto__||Object.getPrototypeOf(Item.prototype),'attached',this).call(this);that.ownerListBox=that.getListBox();}/**
    * jqx-list-item's event listeners.
    **/},{key:'ready',/**
    * Called when the element is ready. Used for one-time configuration of the Item.
    */value:function ready(){babelHelpers.get(Item.prototype.__proto__||Object.getPrototypeOf(Item.prototype),'ready',this).call(this);var that=this;if(that.label!==''){that.innerHTML=that.label;}else if(that.innerHTML!==''){that.label=that.innerHTML;}that._setDisplayMode(that.displayMode);that._setItemColor();that.$.container.noRipple=true;}/**
    * Called when a property is changed.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;babelHelpers.get(Item.prototype.__proto__||Object.getPrototypeOf(Item.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);if(propertyName==='hidden'){if(!newValue){that.$.removeClass('jqx-hidden');}else{that.$.addClass('jqx-hidden');}}else if(propertyName==='color'){that._setItemColor();}else if(propertyName==='displayMode'){that._setDisplayMode(newValue);}else if(propertyName==='label'){var _context4=that.context;that.context=document;that.innerHTML=newValue;var listBox=that.getListBox();listBox.onItemUpdated(that);that.context=_context4;}else if(propertyName==='details'){var _context5=that.context;that.context=document;that.$.details.innerHTML=newValue;var _listBox=that.getListBox();_listBox.onItemUpdated(that);that.context=_context5;}else if(propertyName==='innerHTML'){var _listBox2=that.getListBox();_listBox2.onItemUpdated(that);}}},{key:'getListBox',value:function getListBox(){var that=this;var parent=that.parentNode;while(parent instanceof JQX.ListBox===false&&parent!==null){parent=parent.parentNode;}if(!parent&&JQX.EnableShadowDOM){return that.getRootNode().host;}return parent;}/**
  * Item onMouseEnter event handler.
  */},{key:'_itemOnMouseEnter',value:function _itemOnMouseEnter(){var that=this;if(that.disabled||!that.ownerListBox){return;}if(JQX.ListBox.DragDrop.Dragging&&that.ownerListBox.allowDrop){JQX.ListBox.DragDrop.DropDetails={item:that,position:'bottom'};}if(that.ownerListBox.$.verticalScrollBar.thumbCapture||that.ownerListBox.$.horizontalScrollBar.thumbCapture){return;}that.setAttribute('hover','');}/**
     * Item onMouseMove event handler.
    */},{key:'_itemOnMouseMove',value:function _itemOnMouseMove(event){var that=this;if(!that.ownerListBox){return;}if(JQX.ListBox.DragDrop.Dragging&&that.ownerListBox.allowDrop&&!JQX.Utilities.Core.isMobile){var itemsWithFeedback=[].slice.call(that.ownerListBox.getElementsByClassName('jqx-list-item-bottom-line-feedback'));for(var _i468=0;_i468<itemsWithFeedback.length;_i468++){itemsWithFeedback[_i468].$.removeClass('jqx-list-item-line-feedback');itemsWithFeedback[_i468].$.removeClass('jqx-list-item-bottom-line-feedback');}JQX.ListBox.DragDrop.DropDetails={item:that,position:'top'};if(!that.ownerListBox._areCSSVarsSupported){if(that.ownerListBox._indexOf(that)===that.ownerListBox._items.length-1||that.parentNode.lastElementChild===that){var rect=that.getBoundingClientRect();if(event.pageY-window.pageYOffset>rect.top+rect.height/2-1){JQX.ListBox.DragDrop.DropDetails={item:that,position:'bottom'};}}return;}that.$.removeClass('jqx-list-item-line-feedback');that.$.removeClass('jqx-list-item-bottom-line-feedback');if(that.ownerListBox.sorted&&that.ownerListBox.autoSort){return;}var visibleItems=that.ownerListBox._items.filter(function(item){return!item.hidden;});if(visibleItems.indexOf(that)===visibleItems.length-1||that.parentNode.lastElementChild===that){var _rect=that.getBoundingClientRect();if(event.pageY-window.pageYOffset>_rect.top+_rect.height/2-1){that.$.addClass('jqx-list-item-bottom-line-feedback');JQX.ListBox.DragDrop.DropDetails={item:that,position:'bottom'};}else if(!arguments[1]){that.$.addClass('jqx-list-item-line-feedback');}}else if(!arguments[1]){that.$.addClass('jqx-list-item-line-feedback');}}}/**
    * Item onMouseLeave event handler.
    */},{key:'_itemOnMouseLeave',value:function _itemOnMouseLeave(){var that=this;if(!that.ownerListBox){return;}if(JQX.ListBox.DragDrop.Dragging){that.$.removeClass('jqx-list-item-line-feedback');that.$.removeClass('jqx-list-item-bottom-line-feedback');}that.removeAttribute('hover');}},{key:'_setDisplayMode',value:function _setDisplayMode(value){var that=this;var listBox=that.getListBox();if(listBox){var displayMode=listBox.selectionMode==='checkBox'||listBox.selectionMode==='radioButton'?listBox.selectionMode:'plain';that.displayMode=value=displayMode;}if(value==='plain'){that.$itemInput.addClass('jqx-hidden');return;}that.$itemInput.removeClass('jqx-hidden');}/**
     * Set's the color property
     */},{key:'_setItemColor',value:function _setItemColor(){var that=this,label=that.querySelector('.jqx-content-label'),color=/(^#[0-9A-F]{3}$)|(^#[0-9A-F]{6}$)|(^#[0-9A-F]{8}$)/i.test(that.color)?that.color:'';//HEX check
label.style.backgroundColor=color;label.style.color=that._getContrastColor(color);}/**
    * Returns a contrasting color of the target color
    * @param {any} color - HEX
    */},{key:'_getContrastColor',value:function _getContrastColor(color){if(!color){return'';}function hexToRgb(h,e,x){return[parseInt(h,16),parseInt(e,16),parseInt(x,16)];}var rgb=hexToRgb(color.slice(1,3),color.slice(3,5),color.slice(5,7)),luminance=(0.299*rgb[0]+0.61*rgb[1]+0.114*rgb[2])/255;if(parseFloat(luminance.toFixed(2))>0.65){return'#000000';}else{return'#FFFFFF';}}},{key:'hasStyleObserver',get:function get(){return false;}},{key:'enableShadowDOM',get:function get(){return false;}},{key:'_focused',get:function get(){var that=this;if(that.__focused===undefined){that.__focused=false;}return that.__focused;},set:function set(value){var that=this;that.__focused=value;if(value){that.setAttribute('focus','');}else{that.removeAttribute('focus');}}}],[{key:'properties',// Item's properties.
get:function get(){return{'alternationIndex':{value:-1,type:'int'},'color':{value:'',type:'string'},'displayMode':{allowedValues:['plain','checkBox','radioButton'],value:'plain',type:'string'},'grouped':{value:false,type:'boolean'},'selected':{value:false,type:'boolean'},'value':{value:'',type:'string'},'label':{value:'',type:'string'},'details':{value:'',type:'string'},'group':{value:'',type:'string'},'hidden':{value:false,type:'boolean'},'readonly':{value:false,type:'boolean'}};}},{key:'listeners',get:function get(){return{'mouseenter':'_itemOnMouseEnter','mouseleave':'_itemOnMouseLeave'};}}]);return Item;}(JQX.ContentElement));/**
* List Items Group custom element.
*/JQX('jqx-list-items-group',function(_JQX$ContentElement10){babelHelpers.inherits(ListItemsGroup,_JQX$ContentElement10);function ListItemsGroup(){babelHelpers.classCallCheck(this,ListItemsGroup);return babelHelpers.possibleConstructorReturn(this,(ListItemsGroup.__proto__||Object.getPrototypeOf(ListItemsGroup)).apply(this,arguments));}babelHelpers.createClass(ListItemsGroup,[{key:'template',/**
    * jqx-list-items-group's template.
    */value:function template(){return'<div id="container">\n                 <span id="itemsLabel" class ="jqx-list-items-group-label">[[label]]</span>\n                 <div id="listItemsGroupContainer" inner-h-t-m-l=\'[[innerHTML]]\' class ="jqx-list-items-group-container">\n                    <content></content>\n                 </div>\n               </div>';}},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(node instanceof HTMLElement){that.$.listItemsGroupContainer.appendChild(node);}}},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(node instanceof HTMLElement){that.$.listItemsGroupContainer.removeChild(node);}}},{key:'getListBox',value:function getListBox(){var that=this;var parent=that.parentNode;while(parent instanceof JQX.ListBox===false&&parent!==null){parent=parent.parentNode;}return parent;}},{key:'attached',value:function attached(){var that=this;babelHelpers.get(ListItemsGroup.prototype.__proto__||Object.getPrototypeOf(ListItemsGroup.prototype),'attached',this).call(this);if(!that.ownerListBox){that.ownerListBox=that.getListBox();}}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',// Item's properties.
get:function get(){return{'label':{value:'',type:'string'}};}}]);return ListItemsGroup;}(JQX.ContentElement));/**
* List box custom element.
*/JQX('jqx-list-box',function(_JQX$ScrollViewer2){babelHelpers.inherits(ListBox,_JQX$ScrollViewer2);function ListBox(){babelHelpers.classCallCheck(this,ListBox);return babelHelpers.possibleConstructorReturn(this,(ListBox.__proto__||Object.getPrototypeOf(ListBox)).apply(this,arguments));}babelHelpers.createClass(ListBox,[{key:'template',/*
    * ListBox's HTML template.
    */value:function template(){return'<div id="container" class="jqx-container">\n                 <div class="jqx-list-box-filter-input-container jqx-hidden" id="filterInputContainer">\n                     <input id="filterInput" disabled="[[disabled]]" placeholder=\'[[filterInputPlaceholder]]\'>\n                 </div>\n                 <div id="itemsContainer" class="jqx-list-items-container">\n                      <div id="placeholder" class ="jqx-placeholder">[[placeholder]]</div>\n                      <div id="itemsInnerContainer" inner-h-t-m-l=\'[[innerHTML]]\' class ="jqx-list-items-inner-container">\n                          <content></content>\n                      </div>\n                      <input type="text" id="editInput" class= "jqx-hidden"/>\n                 </div>\n                 <jqx-scroll-bar wait id="verticalScrollBar" disabled="[[disabled]]" orientation="vertical"></jqx-scroll-bar>\n                 <jqx-scroll-bar wait id="horizontalScrollBar" disabled="[[disabled]]" ></jqx-scroll-bar>\n                 <div id="loadingIndicatorContainer" class ="jqx-loader-container">\n                    <span id="loadingIndicator" class="jqx-loader"></span>\n                    <span id="loadingIndicatorPlaceHolder" class ="jqx-loader-label jqx-hidden">[[loadingIndicatorPlaceholder]]</span>\n                 </div>\n                <input id="hiddenInput" type="hidden" name="[[name]]">\n                </div>';}},{key:'_mouseLeaveHandler',value:function _mouseLeaveHandler(){var that=this,itemsWithFeedback=[].slice.call(that.getElementsByClassName('jqx-list-item-bottom-line-feedback'));//Remove Bottom Line feedbacks
for(var _i469=0;_i469<itemsWithFeedback.length;_i469++){itemsWithFeedback[_i469].$.removeClass('jqx-list-item-line-feedback');itemsWithFeedback[_i469].$.removeClass('jqx-list-item-bottom-line-feedback');}}},{key:'_downHandler',value:function _downHandler(event){var that=this;if(that.disabled||that.displayLoadingIndicator||that.readonly){return;}var target=event.originalEvent.target;var item=null;if(target instanceof JQX.ListItem&&!target.disabled&&!target.hidden&&!(target instanceof JQX.ListItemsGroup)){item=target.dataItem;}else{while(target.parentElement){if(target instanceof JQX.ListItem&&!target.disabled&&!target.hidden&&!(target instanceof JQX.ListItemsGroup)){item=target.dataItem;break;}target=target.parentElement;}}JQX.ListBox.DragDrop.StartTime=new Date();JQX.ListBox.DragDrop.StartPosition={left:event.pageX,top:event.pageY};if(!item){return;}event.stopPropagation();if(that.hasRippleAnimation){if(!item.readonly&&!item.disabled){JQX.Utilities.Animation.Ripple.animate(target.$.overlay,event.pageX,event.pageY);}}if(!JQX.Utilities.Core.isMobile&&that.selectionChangeAction==='press'){that._focus(item);that.select(item);}if(!JQX.ListBox.DragDrop.Feedback&&that.allowDrag){JQX.ListBox.DragDrop.DraggedFrom=that;JQX.ListBox.DragDrop.Feedback=document.createElement('span');if(that.dragFeedbackFormatFunction){JQX.ListBox.DragDrop.Feedback.innerHTML=that.dragFeedbackFormatFunction(item);}else{JQX.ListBox.DragDrop.Feedback.appendChild(item.offsetHeight?item.cloneNode(true):that._createItem(item));}JQX.ListBox.DragDrop.Item=item;JQX.Utilities.Extend(JQX.ListBox.DragDrop.Feedback).addClass('jqx-popup jqx-list-item jqx-list-item-feedback');}}/**
     * Double click on itemsContainer event handler
     * @param {any} event
     */},{key:'_dblclickEventHandler',value:function _dblclickEventHandler(event){var that=this;if(!that.editable){return;}var target=event.target.closest('jqx-list-item');if(!(target instanceof JQX.ListItem)||target.disabled||target.readonly){that.$editInput.addClass('jqx-hidden');return;}that.$.editInput.owner=target;that.$.editInput.value=target.label;that.$.editInput.style.height=target.offsetHeight+'px';that.$.editInput.style.top=target.offsetTop+'px';if(that.$editInput.hasClass('jqx-hidden')){that.$editInput.removeClass('jqx-hidden');}that.$.editInput.focus();}/**
     * List Item edit input change and blur event handler
     * @param {any} event
     */},{key:'_editInputEventHandler',value:function _editInputEventHandler(event){var that=this;if(event.type==='blur'||event.type==='keydown'&&event.key==='Escape'){!that.$editInput.hasClass('jqx-hidden')?that.$editInput.addClass('jqx-hidden'):undefined;that.focus();return;}if(event.type==='keydown'||that.$editInput.hasClass('jqx-hidden')){return;}var target=event.target;event.stopPropagation();//stop input's original change event
if(target.owner.label!==target.value){target.owner.label=target.value;if(that.itemTemplate){that._applyTemplate(target.owner);}if(that.dataSource){var index=target.owner.dataIndex;var _dataItem5=that.dataSource[index];if(_dataItem5){if(that.displayMember){_dataItem5[that.displayMember]=target.value;}else{_dataItem5.label=target.value;}}}}that.$editInput.addClass('jqx-hidden');that.$.fireEvent('itemLabelChange',{'selected':target.owner.selected,'disabled':target.owner.disabled,'index':that._indexOf(target.owner),'label':target.owner.label,'value':target.owner.value});}},{key:'_pointerUpHandler',value:function _pointerUpHandler(customEvent){var that=this;var event=customEvent.originalEvent;var target=event.target;var select=function select(item){var listBox=item.ownerListBox;if(listBox.disabled||listBox!==that||listBox.displayLoadingIndicator||listBox.selectionMode==='none'||item.grouped||item.readonly){return;}listBox._focus(item);listBox.select(item);customEvent.preventDefault();JQX.ListBox.DragDrop.StartPosition=null;that.$.fireEvent('itemClick',{'selected':target.selected,'disabled':target.disabled,'index':that._indexOf(target),'label':target.label,'value':target.value});};if(event.target instanceof JQX.ListItem&&!event.target.disabled&&!(event.target instanceof JQX.ListItemsGroup)){select(target.dataItem);return;}while(target.parentElement){if(target instanceof JQX.ListItem&&!target.disabled&&!(target instanceof JQX.ListItemsGroup)){select(target.dataItem);break;}target=target.parentElement;}if(this.enableShadowDOM&&this.shadowDomMode==='shadow'){var composedPath=event.composedPath();for(var _i470=0;_i470<composedPath.length;_i470++){var htmlElement=composedPath[_i470];if(htmlElement instanceof JQX.ListItem&&!htmlElement.disabled){select(htmlElement.dataItem);}}}}},{key:'_upHandler',value:function _upHandler(event){var that=this;if(that.disabled||that.readonly||!JQX.ListBox.DragDrop.StartPosition){return;}if(JQX.Utilities.Core.isMobile&&!JQX.ListBox.DragDrop.Dragging){var _left=Math.abs(event.pageX-JQX.ListBox.DragDrop.StartPosition.left);var top=Math.abs(event.pageY-JQX.ListBox.DragDrop.StartPosition.top);var canSelect=_left>=0&&_left<=3&&top>=0&&top<=3;if(JQX.Utilities.Core.isMobile){if(new Date()-JQX.ListBox.DragDrop.StartTime>=300){canSelect=false;JQX.ListBox.DragDrop.StartTime=null;}}if(canSelect){var closestListBox=event.originalEvent.target.closest('jqx-list-box');closestListBox?closestListBox._pointerUpHandler(event):that._pointerUpHandler(event);JQX.ListBox.DragDrop.StartPosition=null;}else{var target=event.originalEvent.target;if(event.target instanceof JQX.ListItem&&!target.readonly&&!event.target.disabled&&!(event.target instanceof JQX.ListItemsGroup)){event.preventDefault();event.stopPropagation();}else{while(target.parentElement){if(target instanceof JQX.ListItem&&!target.readonly&&!target.disabled&&!(target instanceof JQX.ListItemsGroup)){event.preventDefault();event.stopPropagation();break;}target=target.parentElement;}}}}else if(!JQX.Utilities.Core.isMobile&&!JQX.ListBox.DragDrop.Dragging&&that.selectionChangeAction==='release'){var _closestListBox=event.originalEvent.target.closest('jqx-list-box');_closestListBox?_closestListBox._pointerUpHandler(event):that._pointerUpHandler(event);}if(JQX.ListBox.DragDrop.Feedback){if(JQX.ListBox.DragDrop.Feedback.parentNode){JQX.ListBox.DragDrop.Feedback.parentNode.removeChild(JQX.ListBox.DragDrop.Feedback);}JQX.ListBox.DragDrop.Feedback=null;var dropTarget=void 0;if(JQX.Utilities.Core.isMobile&&JQX.ListBox.DragDrop.Dragging){for(var j=0;j<JQX.ListBox.DragDrop.ListBoxes.length;j++){var listBox=JQX.ListBox.DragDrop.ListBoxes[j];var rect=listBox.getBoundingClientRect();if(!listBox.allowDrop||listBox.closest('.jqx-visibility-hidden')){continue;}if(rect.left<=event.pageX&&event.pageX<=rect.left+rect.width&&rect.top<=event.pageY&&event.pageY<=rect.top+rect.height){dropTarget=listBox;var visibleItems=listBox._items.filter(function(item){return!item.hidden;});for(var _i471=0;_i471<visibleItems.length;_i471++){var _item43=visibleItems[_i471];var itemRect=_item43.getBoundingClientRect();if(visibleItems.indexOf(_item43)===visibleItems.length-1||_item43.parentNode.lastElementChild===_item43){if(event.pageY>=rect.top+_item43.offsetTop-listBox.scrollTop+itemRect.height/2&&event.pageY<=rect.top-listBox.scrollTop+_item43.offsetTop+itemRect.height){JQX.ListBox.DragDrop.DropDetails={item:_item43,position:'bottom'};break;}}if(event.pageY>=rect.top+_item43.offsetTop-listBox.scrollTop&&event.pageY<=rect.top+_item43.offsetTop+itemRect.height-listBox.scrollTop){JQX.ListBox.DragDrop.DropDetails={item:_item43,position:'top'};break;}}}}}if(JQX.ListBox.DragDrop.Dragging){if(JQX.ListBox.DragDrop.DropDetails){var dropItem=JQX.ListBox.DragDrop.DropDetails.item,dragItem=JQX.ListBox.DragDrop.Item;var dragItemListBox=dragItem.ownerListBox;dropTarget=!dropTarget&&event.originalEvent.target.closest?event.originalEvent.target.closest('jqx-list-box'):dropTarget;document.body.classList.remove('jqx-dragging');dropItem.$.removeClass('jqx-list-item-line-feedback');dropItem.$.removeClass('jqx-list-item-bottom-line-feedback');if(dropTarget&&dropItem.ownerListBox!==dropTarget&&dropTarget.items.length>0){dropItem=dropTarget.items[dropTarget.items.length-1];}if(JQX.ListBox.DragDrop.Item!==dropItem&&(dropTarget===dropItem.ownerListBox||JQX.Utilities.Core.isMobile)){if(dragItem.ownerListBox.dropAction!=='none'){if(dropItem.ownerListBox!==dragItem.ownerListBox&&dragItem.ownerListBox.dropAction==='move'){JQX.ListBox.DragDrop.Item.ownerListBox.removeChild(JQX.ListBox.DragDrop.Item);}if(dragItem.ownerListBox.dropAction==='copy'){dragItem=dragItem.cloneNode(true);}JQX.ListBox.DragDrop.Item.group=dropItem.group;var _listBox4=dropItem.ownerListBox;if(_listBox4.selectionMode!=='checkBox'&&_listBox4.selectionMode!=='radioButton'){_listBox4.clearSelection();}if(JQX.ListBox.DragDrop.DropDetails.position==='top'){_listBox4.insertBefore(dragItem,dropItem);}else{if(dropItem.parentNode.lastElementChild===dropItem){_listBox4.appendChild(dragItem);}else{_listBox4.appendChild(dragItem,dropItem);}}_listBox4.ensureVisible(dragItem);if(_listBox4.selectionMode==='checkBox'||_listBox4.selectionMode==='radioButton'){_listBox4._focus(dragItem);_listBox4._refreshSelection();}else{_listBox4.clearSelection();_listBox4.select(dragItem);}}}else if(dropTarget&&dropTarget._items.length===0&&dropTarget.dropAction!=='none'){if(dropTarget.dropAction==='move'){JQX.ListBox.DragDrop.Item.ownerListBox.removeChild(JQX.ListBox.DragDrop.Item);}else if(dropTarget.dropAction==='copy'){dragItem=dragItem.cloneNode(true);}dropTarget.appendChild(dragItem);}if(dragItem.selected&&dropTarget!==dragItemListBox){dragItemListBox._refreshSelection();}var _item44=JQX.ListBox.DragDrop.Item;var _listBox3=_item44.ownerListBox;_item44.displayMode=_listBox3.selectionMode==='checkBox'||_listBox3.selectionMode==='radioButton'?_listBox3.selectionMode:'plain';_listBox3.$.fireEvent('dragEnd',{'item':_item44,'target':dropItem,'data':JQX.ListBox.DragDrop,'previousContainer':dragItemListBox,'container':dropTarget,'originalEvent':event});_listBox3._focus(_item44);}else{var _item45=JQX.ListBox.DragDrop.Item;var _listBox5=_item45.ownerListBox;_item45.displayMode=_listBox5.selectionMode==='checkBox'||_listBox5.selectionMode==='radioButton'?_listBox5.selectionMode:'plain';_listBox5.$.fireEvent('dragEnd',{'item':_item45,'target':null,'data':JQX.ListBox.DragDrop,'previousContainer':_listBox5,'container':_listBox5,'originalEvent':event});_listBox5._focus(_item45);}event.preventDefault();}delete JQX.ListBox.DragDrop.DraggedFrom;JQX.ListBox.DragDrop.Dragging=false;JQX.ListBox.DragDrop.Item=null;JQX.ListBox.DragDrop.DropDetails=null;}for(var _i472=0;_i472<JQX.ListBox.DragDrop.ListBoxes.length;_i472++){var _listBox6=JQX.ListBox.DragDrop.ListBoxes[_i472];if(_listBox6._dragInterval){clearInterval(_listBox6._dragInterval);}}}},{key:'_itemsContainerMoveHandler',value:function _itemsContainerMoveHandler(event){var that=this;if(JQX.ListBox.DragDrop.Dragging){that._applyItemFeedback(event);that._moveHandler(event);event.originalEvent.preventDefault();event.originalEvent.stopPropagation();return false;}}},{key:'_applyItemFeedback',value:function _applyItemFeedback(event){var that=this,target=event.originalEvent.target,targetItem=target.closest?target.closest('jqx-list-item'):target;//Event.target doesn't work on Mobile. This is used just to the Drop logic inside upHandler
if(JQX.Utilities.Core.isMobile){JQX.ListBox.DragDrop.DropDetails={item:JQX.ListBox.DragDrop.Item,position:'bottom'};return;}if(that.items.length===0){return;}if(!targetItem){that.items[that.items.length-1]._itemOnMouseMove(event,true);return;}targetItem._itemOnMouseMove(event);}},{key:'_moveHandler',value:function _moveHandler(event){var that=this;if(!JQX.ListBox.DragDrop.Feedback||JQX.ListBox.DragDrop.DraggedFrom!==that){return;}var dragOffset=that.dragOffset;if(!JQX.ListBox.DragDrop.Dragging){var _left2=Math.abs(event.pageX-JQX.ListBox.DragDrop.StartPosition.left);var top=Math.abs(event.pageY-JQX.ListBox.DragDrop.StartPosition.top);var timeOut=new Date()-JQX.ListBox.DragDrop.StartTime;var canStartDrag=_left2>=5&&_left2<=15||top>=5&&top<=15;if(JQX.Utilities.Core.isMobile){if(timeOut<300||timeOut>1000){canStartDrag=false;}}if(canStartDrag){JQX.ListBox.DragDrop.Dragging=true;JQX.ListBox.DragDrop.Feedback.style.left=dragOffset[0]+event.pageX+'px';JQX.ListBox.DragDrop.Feedback.style.top=dragOffset[1]+event.pageY+'px';document.body.appendChild(JQX.ListBox.DragDrop.Feedback);event.preventDefault();event.stopPropagation();event.originalEvent.preventDefault();event.originalEvent.stopPropagation();var _item46=JQX.ListBox.DragDrop.Item;var listBox=_item46.ownerListBox;listBox.$.fireEvent('dragStart',{'item':_item46,'data':JQX.ListBox.DragDrop,'container':listBox,'previousContainer':listBox,'originalEvent':event.originalEvent});document.body.classList.add('jqx-dragging');}}else{JQX.ListBox.DragDrop.Feedback.style.left=dragOffset[0]+event.pageX+'px';JQX.ListBox.DragDrop.Feedback.style.top=dragOffset[1]+event.pageY+'px';that.$.fireEvent('dragging',{'item':JQX.ListBox.DragDrop.Item,'data':JQX.ListBox.DragDrop,'originalEvent':event.originalEvent});var _loop21=function _loop21(_i473){var listBox=JQX.ListBox.DragDrop.ListBoxes[_i473];if(listBox._dragInterval){clearInterval(listBox._dragInterval);}listBox._dragInterval=setInterval(function(){var rect=listBox.getBoundingClientRect();if(rect.left<=event.clientX&&rect.left+rect.width>=event.clientX){if(event.clientY>=rect.top&&event.clientY<=rect.top+20){listBox.scrollTop-=2;}else if(event.clientY>=rect.top+rect.height-20&&event.clientY<=rect.top+rect.height){listBox.scrollTop+=2;}}},1);};for(var _i473=0;_i473<JQX.ListBox.DragDrop.ListBoxes.length;_i473++){_loop21(_i473);}event.preventDefault();event.stopPropagation();event.originalEvent.preventDefault();event.originalEvent.stopPropagation();return false;}}},{key:'_focusHandler',value:function _focusHandler(){var that=this;that._focused=true;that.setAttribute('focus','');}},{key:'_blurHandler',value:function _blurHandler(){var that=this;that._focused=false;that.removeAttribute('focus');}},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(that.isVirtualized){if(that._items.indexOf(node)>-1){that._items.splice(that._items.indexOf(node),1);}that._items.push(node);}else{node.dataItem=node;if(that.enableShadowDOM&&that.shadowDomMode==='light'){that.appendChild(node);}else{that.$.itemsInnerContainer.appendChild(node);}if(that._items.indexOf(node)>-1){that._items.splice(that._items.indexOf(node),1);}that._items.push(node);}that._refreshItems();that._refreshSelection();}},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(that.isVirtualized){if(that._items.indexOf(newNode)>-1){that._items.splice(that._items.indexOf(newNode),1);}that._items.splice(that._indexOf(referenceNode),0,newNode);}else{newNode.dataItem=newNode;referenceNode.parentNode.insertBefore(newNode,referenceNode);if(that._items.indexOf(newNode)>-1){that._items.splice(that._items.indexOf(newNode),1);}that._items.splice(that._indexOf(referenceNode),0,newNode);}that._refreshItems();that._refreshSelection();}},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(that.isVirtualized){that._items.splice(that._indexOf(node),1);}else{if(node.parentNode){var selectedIndexes=that.selectedIndexes.slice(0),selectedValues=that.selectedValues.slice(0),selectedItemIndex=selectedIndexes.indexOf(node.dataIndex);node.parentNode.removeChild(node);if(selectedItemIndex>-1){selectedIndexes.splice(selectedItemIndex,1);selectedValues.splice(selectedItemIndex,1);that.selectedIndexes=selectedIndexes;that.selectedValues=selectedValues;}}}that._refreshItems();}/**
   * Updates the listbox when a property is changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
   * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
   */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(ListBox.prototype.__proto__||Object.getPrototypeOf(ListBox.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'innerHTML':that.clearSelection();that._dataBind();that.innerHTML=that.content=JQX.Utilities.Core.html(that.$.content);break;case'dataSource':case'valueMember':case'groupMember':case'displayMember':{that.clearSelection();that._dataBind();break;}case'disabled':case'unfocusable':that._setFocusable();break;case'displayLoadingIndicator':{that._setLoadingIndicatorVisibility();break;}case'filterable':{that._refreshFilter();that._refreshLayout();break;}case'grouped':{if(newValue){that._group();}else{that._ungroup();}if(that.selectionMode==='radioButton'){if(that.selectedValues.length>0){var selectedValues=that.selectedValues;that.clearSelection();that.select(selectedValues[0]);}}else{that._refreshSelection();}that._refreshLayout();break;}case'itemTemplate':{if(newValue===null||newValue===''){that._items.map(function(item){return item.innerHTML=item.label;});delete that._bindingDetails;that._refreshLayout();return;}var items=that.querySelectorAll('jqx-list-item');var itemsReady=function itemsReady(){if(that._handleItemTemplate(newValue)){that._items.map(function(item){return that._applyTemplate(item);});that._refreshLayout();}if(that.ownerElement&&that.ownerElement._setDropDownSize){that.ownerElement._setDropDownSize();}that.$.fireEvent('bindingComplete');};if(items.length===0){itemsReady();}else{that._ensureItemsReady(items,itemsReady);}break;}case'selectedIndexes':case'selectedValues':{var _selectedIndexes=that.selectedIndexes.slice(0);var _selectedValues=that.selectedValues.slice(0);if(!that._items||that._items.length===0){that.selectedIndexes=[];that.selectedValues=[];//Update the hidden form input
that.$.hiddenInput.value=that.selectedValues.toString();return;}that._propertyChanging=true;if(propertyName==='selectedIndexes'){_selectedIndexes=oldValue.slice(0);that.clearSelection();for(var _i474=0;_i474<newValue.length;_i474++){var index=newValue[_i474];var _item47=that._items[index];if(_item47){if(that.selectionMode==='oneOrManyExtended'||that.selectionMode==='oneOrMany'){if(that.selectedIndexes.length>0&&_i474===0){that.clearSelection();}that._select(_item47);}else{that.select(_item47);}}}}else{_selectedValues=oldValue.slice(0);that.selectedValues=[];that.clearSelection();for(var _i475=0;_i475<newValue.length;_i475++){var selectedValue=newValue[_i475];var _item48=that.getItem(selectedValue);if(_item48){if(that.selectionMode==='oneOrManyExtended'){that._select(_item48);}else{that.select(_item48);}}}}if(that.selectedIndexes.length>0){that._focus(that._items[that.selectedIndexes[0]]);}that._propertyChanging=false;if(JSON.stringify(_selectedValues)!==JSON.stringify(that.selectedValues.slice(0))){var selectedItems=[],unselectedItems=[];// get all newly unselected items
for(var _i476=0;_i476<_selectedIndexes.length;_i476++){if(that.selectedIndexes.indexOf(_selectedIndexes[_i476])<0){unselectedItems.push(that._items[_selectedIndexes[_i476]]);}}// get all newly selected items
for(var _i477=0;_i477<that.selectedIndexes.length;_i477++){if(_selectedIndexes.indexOf(that.selectedIndexes[_i477])<0){selectedItems.push(that._items[that.selectedIndexes[_i477]]);}}var eventDetails={'addedItems':selectedItems,'removedItems':unselectedItems};if(that.selectedIndexes.length>0){var lastSelectedItem=that._items[that.selectedIndexes[that.selectedIndexes.length-1]];if(lastSelectedItem!==undefined){eventDetails.selected=lastSelectedItem.selected;eventDetails.disabled=lastSelectedItem.disabled;eventDetails.index=that._indexOf(lastSelectedItem);eventDetails.label=lastSelectedItem.label;eventDetails.value=lastSelectedItem.value;}}else{eventDetails.selected=false;eventDetails.disabled=false;eventDetails.index=-1;eventDetails.label='';eventDetails.value='';}that.$.fireEvent('change',eventDetails);}break;}case'selectionMode':{var displayMode=that.selectionMode==='checkBox'||that.selectionMode==='radioButton'?that.selectionMode:'plain';var _selectedIndexes2=that.selectedIndexes.slice(0);var _selectedValues2=that.selectedValues.slice(0);that._propertyChanging=true;var _selectedValues3=that.selectedValues;that.selectedValues=[];that.clearSelection();for(var _i478=0;_i478<_selectedValues3.length;_i478++){var _selectedValue=_selectedValues3[_i478];var _item49=that.getItem(_selectedValue);if(_item49){if(that.selectionMode==='oneOrManyExtended'){that._select(_item49);}else{that.select(_item49);}}}that._items.forEach(function(item){return item.displayMode=displayMode;});that._recycle();that._propertyChanging=false;if(JSON.stringify(_selectedValues2)!==JSON.stringify(that.selectedValues.slice(0))){var _selectedItems=[],_unselectedItems=[];// get all newly unselected items
for(var _i479=0;_i479<_selectedIndexes2.length;_i479++){if(that.selectedIndexes.indexOf(_selectedIndexes2[_i479])<0){_unselectedItems.push(that._items[_selectedIndexes2[_i479]]);}}// get all newly selected items
for(var _i480=0;_i480<that.selectedIndexes.length;_i480++){if(_selectedIndexes2.indexOf(that.selectedIndexes[_i480])<0){_selectedItems.push(that._items[that.selectedIndexes[_i480]]);}}var _eventDetails={'addedItems':_selectedItems,'removedItems':_unselectedItems};if(_selectedIndexes2.length>0){var lastSelectedIndex=that._items[_selectedIndexes2[_selectedIndexes2.length-1]];if(lastSelectedIndex){_eventDetails.selected=lastSelectedIndex.selected;_eventDetails.disabled=lastSelectedIndex.disabled;_eventDetails.index=that._indexOf(lastSelectedIndex);_eventDetails.label=lastSelectedIndex.label;_eventDetails.value=lastSelectedIndex.value;}}that.$.fireEvent('change',_eventDetails);}break;}case'topVisibleIndex':that._setTopVisibleIndex(newValue);break;case'autoSort':that._canSort=newValue;break;case'sortDirection':case'sorted':{that._canSort=true;if(newValue){that._sort();}else{that._unsort();}var _selectedValues4=that.selectedValues;that.selectedValues=[];that._refreshSelection();for(var _i481=0;_i481<_selectedValues4.length;_i481++){var _selectedValue2=_selectedValues4[_i481];var _item50=that.getItem(_selectedValue2);if(_item50){if(that.selectionMode==='oneOrManyExtended'){that._select(_item50);}else{that.select(_item50);}}}that._refreshLayout();that._canSort=that.autoSort;break;}}}/**
    * refreshes selection items.
    */},{key:'_refreshSelection',value:function _refreshSelection(){var that=this;if(!that._items||that._items.length===0){return;}var selectedValues=that.selectedValues;that.selectedIndexes=[];that.selectedValues=[];for(var _i482=0;_i482<that._items.length;_i482++){var _item51=that._items[_i482];_item51.selected=false;if(selectedValues.indexOf(_item51.value)>-1){that.select(_item51);}}that._recycle();}/**
      * Unselects all items.
      */},{key:'clearSelection',value:function clearSelection(){var that=this;if(!that._items||that._items.length===0){return;}var removedItems=[];for(var _i483=0;_i483<that._items.length;_i483++){if(that._items[_i483].selected){removedItems.push(that._items[_i483]);}}that._items.map(function(item){return item.selected=false;});var _selectedValues=that.selectedValues.slice(0);var _selectedIndexes=that.selectedIndexes.slice(0);that.selectedIndexes=[];that.selectedValues=[];//Update the hidden form input
that.$.hiddenInput.value=that.selectedValues.toString();that._recycle();if(that.context!==that){var eventDetails={'addedItems':[],'removedItems':removedItems};if(_selectedIndexes.length>0){var lastSelectedIndex=that._items[_selectedIndexes[_selectedIndexes.length-1]];if(lastSelectedIndex){eventDetails.selected=lastSelectedIndex.selected;eventDetails.disabled=lastSelectedIndex.disabled;eventDetails.index=that._indexOf(lastSelectedIndex);eventDetails.label=lastSelectedIndex.label;eventDetails.value=lastSelectedIndex.value;}}that.$.fireEvent('change',eventDetails);}}},{key:'ensureVisible',value:function ensureVisible(item){var that=this;if(!item){return;}if(typeof item==='string'){item=that.getItem(item);if(!item){return false;}}if(!that.isVirtualized&&that.$.itemsContainer.scrollTop!==that.scrollTop){that.scrollTop=that.$.itemsContainer.scrollTop;}if(item.top+item.height>=that.scrollTop+that.offsetHeight){that.scrollTop=that.scrollTop+item.height;if(!that.isVirtualized){that.$.itemsContainer.scrollTop=that.scrollTop;}}if(item.top<=that.scrollTop||item.top>=that.scrollTop+that.$.itemsContainer.offsetHeight){that.scrollTop=item.top;if(!that.isVirtualized){that.$.itemsContainer.scrollTop=that.scrollTop;}}if(that._indexOf(item)===0||that._indexOf(item)===1&&that._items.length>1&&that._items[0].grouped){that.scrollTop=0;if(!that.isVirtualized){that.$.itemsContainer.scrollTop=that.scrollTop;}}else if(that._indexOf(item)===that._items.length-1){that.scrollTop=that.scrollHeight;if(!that.isVirtualized){that.$.itemsContainer.scrollTop=that.scrollTop;}}return true;}/**
    * Returns an array with the items from the list.
    */},{key:'ready',/**
    * ListBox ready method.
    */value:function ready(){babelHelpers.get(ListBox.prototype.__proto__||Object.getPrototypeOf(ListBox.prototype),'ready',this).call(this);var that=this;//LightDom test
if(that.enableShadowDOM&&that.shadowDomMode==='light'){var fragment=document.createDocumentFragment();[].slice.call(that.$.itemsInnerContainer.children).map(function(item){return fragment.appendChild(item);});that.appendChild(fragment);that.$.itemsInnerContainer.appendChild(document.createElement('slot'));}that._areCSSVarsSupported=JQX.Utilities.Core.CSSVariablesSupport();that._keysPressed={};that._incrementalSearchQuery='';that._incrementalSearchItems=[];that._canSort=true;that._previousEntry='';that.isUpdating=0;if(that._scrollView){that._scrollView=new JQX.Utilities.Scroll(that,that.$.horizontalScrollBar,that.$.verticalScrollBar);that._scrollView.hScrollBar.$.addClass('jqx-hidden');that._scrollView.vScrollBar.$.addClass('jqx-hidden');}var vScrollBar=that._scrollView.vScrollBar;var hScrollBar=that._scrollView.hScrollBar;vScrollBar.hasStyleObserver=false;hScrollBar.hasStyleObserver=false;vScrollBar.hasResizeObserver=false;hScrollBar.hasResizeObserver=false;vScrollBar.wait=false;hScrollBar.wait=false;that._setFocusable();that._setLoadingIndicatorVisibility();that._refreshFilter();that._initializeInnerHTML();that._dataBind();}},{key:'attached',value:function attached(){var that=this;babelHelpers.get(ListBox.prototype.__proto__||Object.getPrototypeOf(ListBox.prototype),'attached',this).call(this);if(!JQX.ListBox.DragDrop){JQX.ListBox.DragDrop={ListBoxes:[]};}JQX.ListBox.DragDrop.ListBoxes.push(that);if(!that._scrollView){that._scrollView=new JQX.Utilities.Scroll(that,that.$.horizontalScrollBar,that.$.verticalScrollBar);}if(that.selectedIndexes.length>0){that.ensureVisible(that._items[that.selectedIndexes[0]]);}}},{key:'detached',value:function detached(){var that=this;babelHelpers.get(ListBox.prototype.__proto__||Object.getPrototypeOf(ListBox.prototype),'detached',this).call(this);if(that._scrollView){that._scrollView.unlisten();delete that._scrollView;}if(JQX.ListBox.DragDrop&&JQX.ListBox.DragDrop.ListBoxes){var index=JQX.ListBox.DragDrop.ListBoxes.indexOf(that);JQX.ListBox.DragDrop.ListBoxes.splice(index,1);}}},{key:'_createItem',value:function _createItem(item,index,recycling){var that=this;var displayMode=that.selectionMode==='checkBox'||that.selectionMode==='radioButton'?that.selectionMode:'plain';var htmlItem=recycling?{}:document.createElement('jqx-list-item');htmlItem.ownerListBox=that;if(typeof item==='number'){item=''+item;}var getMemberValue=function getMemberValue(memberName,defaultMemberName){if(item[memberName]!==undefined){return''+item[memberName];}return item[defaultMemberName];};var label=typeof item==='string'?item:getMemberValue(that.displayMember,'label'),value=typeof item==='string'?item:getMemberValue(that.valueMember,'value'),group=getMemberValue(that.groupMember,'group');if(undefined===label){if(index!==undefined){label=''+index;}else{label='';}}htmlItem.label=htmlItem.innerHTML=''+label;if(undefined===value){if(index!==undefined){value=''+index;}else{value=label;}}if(item.color){htmlItem.color=item.color;}htmlItem.value=''+value;htmlItem.displayMode=displayMode;htmlItem.selected=item.selected?item.selected:false;htmlItem.disabled=item.disabled?item.disabled:false;htmlItem.dataItem=htmlItem;if(index!==undefined){htmlItem.dataIndex=index;}that._alternateItem(htmlItem);if(item.title){htmlItem.title=item.title;}if(group){htmlItem.group=''+group;}return htmlItem;}},{key:'_alternateItem',value:function _alternateItem(item){var that=this;var start=that.alternationStart;var end=that.alternationEnd>0?that.alternationEnd:Infinity;if(that.alternationCount<=0){return;}if(that._alternationIndexCounter===undefined){that._alternationIndexCounter=0;}if(item.dataIndex>=start&&item.dataIndex<=end){item.alternationIndex=that._alternationIndexCounter++;if(that._alternationIndexCounter===that.alternationCount){that._alternationIndexCounter=0;}}}},{key:'_beginUpdate',value:function _beginUpdate(){var that=this;that.isUpdating++;}},{key:'_isUpdating',value:function _isUpdating(){var that=this;return that.isUpdating>0;}},{key:'_endUpdate',value:function _endUpdate(){var that=this;that.isUpdating--;}},{key:'_initializeRecyclingItems',value:function _initializeRecyclingItems(){var that=this;if(!that.dataSource||that.dataSource&&that.dataSource.length===0||!that.isVirtualized){return;}var itemsHeight=0;var listBoxHeight=that.offsetHeight;that.$.itemsInnerContainer.innerHTML='';that._recyclingItems=[];var createRecyclingItems=function createRecyclingItems(){for(var _i484=0;_i484<that.dataSource.length;_i484++){var _item52=that.dataSource[_i484];var htmlItem=that._createItem(_item52);if(that.itemHeight&&that.itemHeight!=='auto'){htmlItem.style.height=that.itemHeight+'px';}that.$.itemsInnerContainer.appendChild(htmlItem);itemsHeight+=htmlItem.offsetHeight;htmlItem.dataItem=that._items[_i484];that._recyclingItems.push(htmlItem);if(itemsHeight>1.5*listBoxHeight){break;}}};createRecyclingItems();var maxIterations=0;while(itemsHeight<1.5*listBoxHeight&&++maxIterations<5){createRecyclingItems();}}},{key:'_dataBind',value:function _dataBind(){var that=this;if(!that._scrollView){that._scrollView=new JQX.Utilities.Scroll(that,that.$.horizontalScrollBar,that.$.verticalScrollBar);}if(typeof that.dataSource==='function'){that._items=[];}if(typeof that.dataSource==='string'){that.dataSource=JSON.parse(that.dataSource);}if(that.dataSource!==null&&Array.isArray(that.dataSource)){that.isUpdating++;var initializeDataBoundItems=function initializeDataBoundItems(fragment){that._items=[];that._groups=[];var dataSource=that.dataSource;for(var _i485=0;_i485<dataSource.length;_i485++){var _item53=dataSource[_i485],htmlItem=that._createItem(_item53,_i485,!fragment);that._items[_i485]=htmlItem;if(fragment){fragment.appendChild(htmlItem);}}};if(that.isVirtualized){initializeDataBoundItems();that._initializeRecyclingItems();}else{var fragment=document.createDocumentFragment();that.$.itemsInnerContainer.innerHTML='';initializeDataBoundItems(fragment);that.$.itemsInnerContainer.appendChild(fragment);}that.isUpdating--;}var items=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-list-item'):that.querySelectorAll('jqx-list-item');var itemsReady=function itemsReady(){that.isUpdating++;if(!that.dataSource){that._initializeHtmlListItems();that._initializeHtmlListGroups();}if(that.grouped){that._group();}if(that.sorted){that._sort();}that._refreshLayout();that._initializeSelection();that.isInitialized=true;that._canSort=that.autoSort;that.isUpdating--;if(that.itemTemplate){if(that._handleItemTemplate(that.itemTemplate)){that._items.map(function(item){return that._applyTemplate(item);});that._refreshLayout();}}if(that.__onCompleted){that._onCompleted=that.__onCompleted;that.__onCompleted=null;that._onCompleted();}if(that.topVisibleIndex>-1){that._setTopVisibleIndex(that.topVisibleIndex);}that.$.fireEvent('bindingComplete');that._updateTopVisibleIndex();if(that._items.length===0){that.clearItems();}};if(items.length===0){itemsReady();}else{if(that._onCompleted){that.__onCompleted=that._onCompleted;that._onCompleted=null;}that._ensureItemsReady(items,itemsReady);}}},{key:'_ensureItemsReady',value:function _ensureItemsReady(nodes,callback){var that=this;var contextCallback=function contextCallback(){var setContext=function setContext(context){for(var _i486=0;_i486<nodes.length;_i486++){nodes[_i486].context=context==='node'?nodes[_i486]:document;}};setContext('node');callback();setContext();};if(nodes.length===0){contextCallback();}else{that._nodesReadyListeners=0;for(var _i487=0;_i487<nodes.length;_i487++){var node=nodes[_i487];var readyEventHandler=function(){that._nodesReadyListeners--;if(that._nodesReadyListeners===0){contextCallback();delete that._nodesReadyListeners;}}.bind(that);if(!node.isCompleted){that._nodesReadyListeners++;node._onCompleted=readyEventHandler;}}if(that._nodesReadyListeners===0){contextCallback();}}}},{key:'_initializeInnerHTML',value:function _initializeInnerHTML(){var that=this;if(that.$.itemsInnerContainer.innerHTML.indexOf('<option')>=0){that.$.itemsInnerContainer.innerHTML=that.$.itemsInnerContainer.innerHTML.replace(/<optgroup/ig,'<jqx-list-items-group').replace(/<\/optgroup/ig,'<\/jqx-list-items-group').replace(/<option/ig,'<jqx-list-item').replace(/<\/option/ig,'<\/jqx-list-item');}else if(that.$.itemsInnerContainer.innerHTML.indexOf('<ul')>=0){that.$.itemsInnerContainer.innerHTML=that.$.itemsInnerContainer.innerHTML.replace(/<ul/ig,'<jqx-list-items-group').replace(/<\/ul/ig,'<\/jqx-list-items-group').replace(/<li/ig,'<jqx-list-item').replace(/<\/li/ig,'<\/jqx-list-item');}}},{key:'_initializeHtmlListItems',value:function _initializeHtmlListItems(){var that=this;var htmlItems=that.enableShadowDOM&&that.shadowDomMode==='shadow'?that.shadowRoot.querySelectorAll('jqx-list-item'):that.querySelectorAll('jqx-list-item');var displayMode=that.selectionMode==='checkBox'||that.selectionMode==='radioButton'?that.selectionMode:'plain';var getMemberValue=function getMemberValue(item,memberName,defaultMemberName){if(item[memberName]!==undefined){return''+item[memberName];}return item[defaultMemberName];};that._items=[];var top=0;for(var _i488=0;_i488<htmlItems.length;_i488++){var _item54=htmlItems[_i488];_item54.dataIndex=_i488;_item54.label=_item54.innerHTML;_item54.dataItem=_item54;if(!_item54.top){_item54.top=top;}if(!_item54.height){_item54.height=_item54.offsetHeight;}top+=_item54.height;if(!_item54.value){_item54.value=''+_i488;}var label=getMemberValue(_item54,that.displayMember,'label');var _value33=getMemberValue(_item54,that.valueMember,'value');var _group10=getMemberValue(_item54,that.groupMember,'group');if(_item54.label!==label){_item54.label=label;}if(_item54.value!==_value33){_item54.value=_value33;}if(_item54.group!==_group10){_item54.group=_group10;}//NOTE: the context must be set to document in order for item._setDisplayMode() to get called
var originalContext=_item54.context;_item54.context=document;_item54.displayMode=displayMode;_item54.context=originalContext;that._alternateItem(_item54);if(_item54.selected){that.selectedIndexes.push(_i488);that.selectedValues.push(_item54.value);}that._items.push(_item54);}if(that.itemTemplate&&that._handleItemTemplate(that.itemTemplate)){that._items.map(function(item){return that._applyTemplate(item);});}}},{key:'_group',value:function _group(){var that=this;that.isUpdating++;var groups=[];var items=[];if(that._canSort){that._unsort();}for(var _i489=0;_i489<that._items.length;_i489++){var _item55=that._items[_i489];var label=_item55.group?_item55.group.trim():_item55.innerHTML.charAt(0)||_item55.label.charAt(0);label+=' ';if(!groups[label]){groups[groups.length++]=groups[label]={items:[_item55],label:label};}else{groups[label].items.push(_item55);}}if(!that.isVirtualized){while(that.$.itemsInnerContainer.firstChild){that.$.itemsInnerContainer.removeChild(that.$.itemsInnerContainer.firstChild);}var fragment=document.createDocumentFragment();that._groups=[];for(var _i490=0;_i490<groups.length;_i490++){var _group11=groups[_i490];var groupElement=document.createElement('jqx-list-items-group');groupElement.label=_group11.label;groupElement.dataIndex=_i490;for(var j=0;j<groups[_i490].items.length;j++){var _item56=_group11.items[j];items.push(_item56);_item56.group=_group11.label;groupElement.appendChild(_item56);}that._groups.push(groupElement);fragment.appendChild(groupElement);}that._items=items;var isIE=/Trident|Edge/.test(navigator.userAgent);if(isIE){setTimeout(function(){that.$.itemsInnerContainer.appendChild(fragment);},50);}else{that.$.itemsInnerContainer.appendChild(fragment);}}else{that._groups=[];for(var _i491=0;_i491<groups.length;_i491++){var _group12=groups[_i491];_group12.dataIndex=_i491;_group12.grouped=true;_group12.hidden=false;_group12.displayMode='plain';items.push(_group12);for(var _j9=0;_j9<groups[_i491].items.length;_j9++){var _item57=_group12.items[_j9];_item57.group=_group12;items.push(_item57);}}that._groups=groups;that._items=items;}if(that.sorted){that._sort();}that.isUpdating--;}},{key:'_ungroup',value:function _ungroup(){var that=this;that.isUpdating++;that._groups=[];if(that._canSort){that._unsort();}var items=[];if(!that.isVirtualized){var fragment=document.createDocumentFragment();for(var _i492=0;_i492<that._items.length;_i492++){var _item58=that._items[_i492];fragment.appendChild(_item58);items.push(_item58);}if(items.length>0){that.$.itemsInnerContainer.innerHTML='';that.$.itemsInnerContainer.appendChild(fragment);}}else{for(var _i493=0;_i493<that._items.length;_i493++){var _item59=that._items[_i493];if(_item59.grouped){continue;}items.push(_item59);}}that._items=items;if(that.sorted){that._sort();}that.isUpdating--;}},{key:'_initializeHtmlListGroups',value:function _initializeHtmlListGroups(){var that=this;var htmlListItemsGroups=that.$.itemsInnerContainer.querySelectorAll('jqx-list-items-group');that._groups=[];for(var _i494=0;_i494<htmlListItemsGroups.length;_i494++){var _group13=htmlListItemsGroups[_i494];_group13.dataIndex=_i494;that._groups.push(_group13);}}},{key:'_initializeSelection',value:function _initializeSelection(){var that=this;/*
                if (that.selectionMode === 'one' || that.selectionMode === 'oneOrMany' || that.selectionMode === 'oneOrManyExtended') {
                    if (that.selectedIndexes.length === 0 && that.selectedValues.length === 0 && that._items.length > 0 && firstSelectableItem) {
                    }
                }
        */var selectedIndexes=that.selectedIndexes.slice(0);var selectedValues=that.selectedValues.slice(0);that.clearSelection();if(that.selectionMode==='oneOrManyExtended'){that._keysPressed['Control']=true;}for(var _i495=0;_i495<that._items.length;_i495++){var _item60=that._items[_i495];if(selectedIndexes.indexOf(_i495)>=0||selectedValues.indexOf(_item60.value||_item60.label)>=0){if(that._focusedItem){that._focusedItem._focused=false;}that._focusedItem=null;that.select(_item60);}}if(that.selectionMode==='oneOrManyExtended'){that._keysPressed['Control']=false;}}},{key:'onItemUpdated',value:function onItemUpdated(){var that=this;if(!that.isInitialized||that._isUpdating()){return;}that.isUpdating++;that._refreshLayout();that.isUpdating--;}},{key:'_refreshItems',value:function _refreshItems(){var that=this;if(!that.isInitialized||that._isUpdating()){return;}that.isUpdating++;if(that.grouped){that._ungroup();}else if(that.sorted&&that._canSort){that._unsort();}if(!that.isVirtualized){that._items=[];var items=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-list-item'):that.querySelectorAll('jqx-list-item');for(var _i496=0;_i496<items.length;_i496++){items[_i496].dataIndex=_i496;that._alternateItem(items[_i496]);that._items.push(items[_i496]);}}if(that.grouped){that._group();}else if(that.sorted){that._sort();}that._refreshLayout();that.isUpdating--;}/**
    * Incremental Search logic.
    */},{key:'_applyIncrementalSearch',value:function _applyIncrementalSearch(key){var that=this;if(that.incrementalSearchDelay===null||isNaN(that.incrementalSearchDelay)){return;}if(['Shift','ArrowUp','ArrowDown','ArrowLeft','ArrowRight','Control','Home','End','PageUp','PageDown'].indexOf(key)>-1){return;}if(that._incrementalSearchQuery.indexOf(key)!==0){that._incrementalSearchQuery+=key;}if(that._incrementalSearchTimer){clearTimeout(that._incrementalSearchTimer);}that._incrementalSearch();that._incrementalSearchTimer=setTimeout(function(){that._incrementalSearchQuery='';},that.incrementalSearchDelay);return;}/**
    * Selects an item by its HTML Element or Value.
    */},{key:'select',value:function select(item){var that=this;if(typeof item==='string'){item=that.getItem(item);if(!item){return;}}if(typeof item==='number'){item=that.getItem(item);if(!item){return;}}if(item.grouped||item.readonly){return;}if(that.selectionMode==='none'){that.selectedIndexes=[];that.selectedValues=[];return;}if(!that._focusedItem!==item&&that.selectionMode!=='none'){if(that._focusedItem){that._focusedItem._focused=false;}that._focusedItem=item;item._focused=true;}switch(that.selectionMode){case'one':if(that.selectedIndexes.length===1&&that.selectedIndexes[0]===that._indexOf(item)){return false;}that._previouslySelectedIndexes=that.selectedIndexes;if(that.selectedIndexes.length>=1){that.clearSelection();}that._select(item);delete that._previouslySelectedIndexes;return true;case'zeroOrOne':if(that.selectedIndexes.length===1&&that.selectedIndexes[0]===that._indexOf(item)){that.unselect(item);return true;}that._previouslySelectedIndexes=that.selectedIndexes;if(that.selectedIndexes.length>=1){that.clearSelection();}that._select(item);delete that._previouslySelectedIndexes;return true;case'radioButton':that._previouslySelectedIndexes=that.selectedIndexes;if(that.$.itemsInnerContainer.querySelectorAll('jqx-list-items-group').length>0){var _group14=item.parentNode;if(!item.selected){for(var index in _group14.children){var _item61=_group14.children[index];if(_item61.selected){that.unselect(_item61);}}that._select(item);}delete that._previouslySelectedIndexes;return true;}else if(that.isVirtualized&&that._groups.length>0){var _group15=item.group;if(!item.selected){for(var _index5 in _group15.items){var _item62=_group15.items[_index5];if(_item62.selected){that.unselect(_item62);}}that._select(item);}delete that._previouslySelectedIndexes;return true;}if(!item.selected){if(that.selectedIndexes.length>=1){that.clearSelection();}that._select(item);}delete that._previouslySelectedIndexes;return true;case'oneOrMany':if(!item.selected){that._select(item);}else if(that.selectedIndexes.length>1){that.unselect(item);}return true;case'zeroOrMany':case'checkBox':if(!item.selected){that._select(item);}else{that.unselect(item);}return true;case'oneOrManyExtended':{var selectedValues=that.selectedValues;if(that._keysPressed['Control']){if(that.selectedIndexes.length>1){if(item.selected){that.unselect(item);that._focus(that._items[that.selectedIndexes[0]]);}else{that._select(item);}}else{that._select(item);}return true;}if(that._keysPressed['Shift']){var selectedItem=that._items[that.selectedIndexes[0]];var _index6=void 0;that.clearSelection();var preventEvent=selectedValues.indexOf(selectedItem.value)>=0||selectedItem.selected;that._select(selectedItem,preventEvent);if(that._indexOf(selectedItem)>that._indexOf(item)){_index6=that._indexOf(selectedItem)-1;while(_index6>=that._indexOf(item)){var _item63=that._items[_index6];var _preventEvent=selectedValues.indexOf(_item63.value)>=0||_item63.selected;that._select(_item63,_preventEvent);_index6--;}}else{_index6=that._indexOf(selectedItem)+1;while(_index6<=that._indexOf(item)){var _item64=that._items[_index6];var _preventEvent2=selectedValues.indexOf(_item64.value)>=0||_item64.selected;that._select(_item64,_preventEvent2);_index6++;}}var unselectedItems=[];for(var _i497=0;_i497<selectedValues.length;_i497++){unselectedItems.push(that.getItem(selectedValues[_i497]));}if(unselectedItems.length>0&&!that._propertyChanging){var selectedItems=[];for(var _i498=0;_i498<that.selectedValues.length;_i498++){var previousSelectedValue=that.selectedValues[_i498];if(selectedValues.indexOf(previousSelectedValue)<0){selectedItems.push(that.getItem(previousSelectedValue));}}that.$.fireEvent('change',{'addedItems':selectedItems,'removedItems':unselectedItems,'selected':item.selected,'disabled':item.disabled,'index':that._indexOf(item),'label':item.label,'value':item.value});}return true;}for(var _i499=0;_i499<selectedValues.length;_i499++){var _value34=selectedValues[_i499];var _selectedItem=that.getItem(_value34);if(item!==_selectedItem){that.unselect(_selectedItem);}}that.clearSelection();that._select(item,selectedValues.indexOf(item.value)>=0);return true;}}return false;}/**
    * Returns the contents of the template with the new content applied.
    */},{key:'_applyTemplate',value:function _applyTemplate(item,refreshLayout){var that=this;if(that.itemTemplate===null){return;}if(typeof that.itemTemplate==='function'){that.itemTemplate(item,{label:item.label,value:item.value,index:that._items.indexOf(item)});return;}if(!that._bindingDetails||that._bindingDetails.length===0){return;}var bindingsCount=that._bindingDetails.length;var clone=document.importNode(that._template.content,true),bindingHolderElement=void 0,bindingStringsCount=void 0;for(var b=0;b<bindingsCount;b++){bindingHolderElement=clone.childNodes[that._bindingDetails[b].childNodeIndex];bindingStringsCount=that._bindingDetails[b].bindingString.length;for(var _i500=0;_i500<bindingStringsCount;_i500++){var _propertyName=that._bindingDetails[b].bindingString[_i500];var propertyValue=_propertyName.indexOf('label')>=0?item.label:item.value;bindingHolderElement.innerHTML=bindingHolderElement.innerHTML.replace(_propertyName,propertyValue);}}item.innerHTML='';for(var _i501=0;_i501<clone.childNodes.length;_i501++){if(clone.childNodes[_i501].outerHTML){item.innerHTML+=clone.childNodes[_i501].outerHTML;}}if(refreshLayout===false){return;}if(that._scrollHeightTimer){clearInterval(that._scrollHeightTimer);that._scrollHeightCounter=0;}that._scrollHeightTimer=setInterval(function(){if(that._lastScrollHeight!==that.$.itemsInnerContainer.scrollHeight||that._scrollHeightCounter===10){that._refreshLayout();clearInterval(that._scrollHeightTimer);}that._lastScrollHeight=that.$.itemsInnerContainer.scrollHeight;that._scrollHeightCounter++;},50);}/**
     * Filter items.
     */},{key:'_filterItems',value:function _filterItems(noSelectionRefresh,callback,ignoreFilterQueryLength){var that=this;var filterQuery=that.$.filterInput.value;var filteredItems=void 0,items=void 0;var updateListBox=function updateListBox(){if(items.length===0){that._filteredItems=[];if(callback){callback();}return;}filteredItems=that._queryItems(filterQuery,that.filterMode);for(var _i502=0;_i502<items.length;_i502++){items[_i502].hidden=true;items[_i502].$.addClass('jqx-hidden');}for(var _i503=0;_i503<filteredItems.length;_i503++){var _item65=filteredItems[_i503];_item65.hidden=false;_item65.$.removeClass('jqx-hidden');}if(that.grouped&&that.isVirtualized){for(var _i504=0;_i504<that._groups.length;_i504++){var _group16=that._groups[_i504];var _items=_group16.items;var canHide=true;for(var j=0;j<_items.length;j++){if(!_items[j].hidden){canHide=false;}}if(canHide){_group16.hidden=true;}}}if(that.grouped&&!that.isVirtualized){for(var _i505=0;_i505<that._groups.length;_i505++){var _ref;var _group17=that._groups[_i505];var _items2=(_ref=[]).concat.apply(_ref,babelHelpers.toConsumableArray(_group17.querySelectorAll('jqx-list-item')));var _canHide=true;for(var _j10=0;_j10<_items2.length;_j10++){if(!_items2[_j10].$.hasClass('jqx-hidden')){_canHide=false;}}if(_canHide){_group17.$.addClass('jqx-hidden');}else{_group17.$.removeClass('jqx-hidden');}}}that._filteredItems=filteredItems;that._refreshLayout();if(callback){callback();}if(noSelectionRefresh){return;}that._refreshSelection();};if(typeof that.dataSource==='function'){if(filterQuery||ignoreFilterQueryLength){var queryCallback=function queryCallback(response){if(!filterQuery&&!ignoreFilterQueryLength||!that.isAttached){return;}that._updateListBoxAfterQuery=function(){filteredItems=items=that._items;updateListBox();};that.clearItems();that.insert(0,response);};var response=that.dataSource(filterQuery,queryCallback);if(response){if(!filterQuery&&!ignoreFilterQueryLength){return;}that._updateListBoxAfterQuery=function(){filteredItems=items=that._items;updateListBox();};that.clearItems();that.insert(0,response);}}else{that.clearItems();filteredItems=items=that._items;updateListBox();}}else{items=that._items;if(items.length===0){return;}updateListBox();}}/**
    * Returns the next item in the list.
    */},{key:'_getNextItem',value:function _getNextItem(activeItemIndex){var that=this,items=that._items,itemsCount=that._items.length;var index=Math.max(activeItemIndex+1,0);while(index<itemsCount){var _item66=items[index];if(!_item66.disabled&&!_item66.hidden&&!_item66.grouped&&!_item66.readonly){return _item66;}index++;}return items[activeItemIndex];}/**
    * Returns the previous item in the list.
    */},{key:'_getPreviousItem',value:function _getPreviousItem(activeItemIndex){var that=this,items=that._items;var index=Math.max(activeItemIndex-1,0);while(index>-1){var _item67=items[index];if(!_item67.disabled&&!_item67.hidden&&!_item67.grouped&&!_item67.readonly){return _item67;}index--;}return items[activeItemIndex];}/**
    * Calculates the width/height of the items.
    */},{key:'update',value:function update(index,details){var that=this;var htmlItem=that._items[index];if(htmlItem){if(typeof details==='string'){htmlItem.label=details;if(undefined===htmlItem.value){htmlItem.value=details;}}else{for(var detail in details){if(detail==='selected'&&htmlItem[detail]!==details[detail]){that.select(htmlItem);}else{htmlItem[detail]=details[detail];}if(detail==='group'){that._refreshItems();}}}if(that.sorted||that.grouped||that.isVirtualized){that._refreshItems();that._refreshSelection();}}else{that.error(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:'update'}));}}},{key:'insert',value:function insert(index,items){var that=this;var htmlItems=[];function itemsReady(){that._refreshItems();if(that._items.length===0){return;}if(that._updateListBoxAfterQuery){that._updateListBoxAfterQuery();delete that._updateListBoxAfterQuery;}that._refreshSelection();that.$.fireEvent('bindingComplete');}if(!index){index=0;}if(Array.isArray(items)){that.isUpdating++;for(var _i506=0;_i506<items.length;_i506++){var _item68=items[_i506];var htmlItem=that._createItem(_item68);htmlItems.push(htmlItem);if(index>=that._items.length||that._items.length===0){that.appendChild(htmlItem);}else{that.insertBefore(htmlItem,that._items[index]);}}that.isUpdating--;}else{var _htmlItem=that._createItem(items);htmlItems.push(_htmlItem);if(index>=that._items.length||that._items.length===0){that.appendChild(_htmlItem);}else{that.insertBefore(_htmlItem,that._items[index]);}}if(htmlItems.length>0){htmlItems.map(function(item){return that._applyTemplate(item);});that._ensureItemsReady(htmlItems,itemsReady);}}},{key:'remove',value:function remove(index){var that=this;var htmlItem=that._items[index];if(htmlItem){if(that.isVirtualized){that._items.splice(index,1);}else{htmlItem.parentNode.removeChild(htmlItem);}if(htmlItem.selected){that.unselect(htmlItem);}that._refreshItems();that._refreshSelection();if(that.selectedIndexes.length===0&&that._items.length>0){if(that.selectionMode==='oneOrMany'||that.selectionMode==='one'||that.selectionMode==='oneOrManyExtended'){that.select(that._items[0]);}}}else{that.error(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:'remove'}));}}/**
      * Update all matched cases from the filter input.
      */},{key:'_queryItems',value:function _queryItems(searchQuery,searchMode){var that=this;var result=[];var findItem=function findItem(item,filterQuery){if(item.grouped){return item;}switch(searchMode){case'startsWith':if(item.label.indexOf(filterQuery)===0){return item;}break;case'startsWithIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())===0){return item;}break;case'doesNotContain':if(item.label.indexOf(filterQuery)<0){return item;}break;case'doesNotContainIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())<0){return item;}break;case'contains':if(item.label.indexOf(filterQuery)>-1){return item;}break;case'containsIgnoreCase':if(item.label.toLowerCase().indexOf(filterQuery.toLowerCase())>-1){return item;}break;case'equals':if(item.label.localeCompare(filterQuery)===0){return item;}break;case'equalsIgnoreCase':if(item.label.toLowerCase().localeCompare(filterQuery.toLowerCase())===0){return item;}break;case'endsWith':if(item.label.endsWith(filterQuery)){return item;}break;case'endsWithIgnoreCase':if(item.label.toLowerCase().endsWith(filterQuery.toLowerCase())){return item;}break;case'custom':if(that.filterCallback(item,searchQuery)){return item;}break;}return null;};if(searchQuery.length===0){return that._items;}for(var _i507=0;_i507<that._items.length;_i507++){var _item69=findItem(that._items[_i507],searchQuery);if(_item69){result.push(_item69);}}return result;}},{key:'_select',value:function _select(item,preventEvent){var that=this;var selectedIndex=that.selectedIndexes.indexOf(that._indexOf(item));var indexes=that.selectedIndexes.slice(0),values=that.selectedValues.slice(0);item.selected=true;if(selectedIndex===-1){indexes.push(that._indexOf(item));values.push(item.value||item.label);}else{that._recycle();return false;}that.selectedIndexes=indexes;that.selectedValues=values;that._recycle();//Update the hidden form input
that.$.hiddenInput.value=values.toString();if(!that.isCompleted||preventEvent||!that.isInitialized||that._propertyChanging){return;}var previouslySelectedItems=[];if(that._previouslySelectedIndexes){for(var _i508=0;_i508<that._previouslySelectedIndexes.length;_i508++){if(that.selectedIndexes.indexOf(that._previouslySelectedIndexes[_i508])<0){previouslySelectedItems.push(that._items[that._previouslySelectedIndexes[_i508]]);}}delete that._previouslySelectedIndexes;}that.$.fireEvent('change',{'addedItems':[item],'removedItems':previouslySelectedItems,'selected':item.selected,'disabled':item.disabled,'index':that._indexOf(item),'label':item.label,'value':item.value});return true;}/**
     * Handles the topVisibleIndex property. Sets an item always as first in the listBox view area
     * @param {any} item
     */},{key:'_setTopVisibleIndex',value:function _setTopVisibleIndex(item){var that=this;if(typeof item==='number'){that.topVisibleIndex=Math.max(0,item);item=that._items[that.topVisibleIndex];}if(!item){return false;}if(item.top!==that.scrollTop){that.scrollTop=item.top;if(!that.isVirtualized){that.$.itemsContainer.scrollTop=that.scrollTop;}//Update topVisibleIndex to the first visible item
if(that.scrollHeight===that.scrollTop){that._updateTopVisibleIndex();}}}/**
     * Updates the topVisibleIndex
     */},{key:'_updateTopVisibleIndex',value:function _updateTopVisibleIndex(){var that=this,minScrollTop=that.scrollTop+that._scrollView.verticalScrollBar.offsetHeight-that.offsetHeight;var lastVisibleItem=void 0;if(that.scrollTop<that.scrollHeight/2){for(var _i509=0;_i509<that._items.length;_i509++){if(that._items[_i509].top>minScrollTop){lastVisibleItem=that._items[_i509];break;}}}else{for(var _i510=that._items.length-1;_i510>=0;_i510--){if(that._items[_i510].top<minScrollTop){break;}lastVisibleItem=that._items[_i510];}}if(lastVisibleItem){that.topVisibleIndex=lastVisibleItem.dataIndex;}}},{key:'unselect',value:function unselect(item){var that=this;if(!item){return;}if(typeof item==='string'){item=that.getItem(item);if(!item){return;}}if(that.selectionMode==='none'){that.clearSelection();return;}var selectedIndex=that.selectedIndexes.indexOf(that._indexOf(item));var indexes=that.selectedIndexes.slice(0),values=that.selectedValues.slice(0);item.selected=false;if(selectedIndex>=0){indexes.splice(selectedIndex,1);values.splice(selectedIndex,1);}else{return false;}that.selectedIndexes=indexes;that.selectedValues=values;//Update the hidden form input
that.$.hiddenInput.value=values.toString();if(!that.isCompleted||that._propertyChanging){return;}that.$.fireEvent('change',{'addedItems':[],'removedItems':[item],'selected':item.selected,'disabled':item.disabled,'index':that._indexOf(item),'label':item.label,'value':item.value});that._recycle();return true;}/**
    * Validates the template and if valid, returns an object with binding details.
    */},{key:'_handleItemTemplate',value:function _handleItemTemplate(template){if(template===null||!template){return;}if(typeof template==='function'){return template;}var that=this;if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));that.itemTemplate=null;return;}template=document.getElementById(template);if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'itemTemplate'}));that.itemTemplate=null;return;}var templateContent=template.content,childrenCount=templateContent.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0,bindingsFound=void 0;that._bindingDetails=[];that._template=template;for(var _i511=0;_i511<childrenCount;_i511++){bindingsFound=[];while(bindingString=regex.exec(templateContent.childNodes[_i511].innerHTML)){bindingsFound.push(bindingString[0]);}if(bindingsFound.length>0){that._bindingDetails.push({childNodeIndex:_i511,bindingString:bindingsFound});}}return true;}/**
    * Handles pressed keys.
    */},{key:'_handleKeyStrokes',value:function _handleKeyStrokes(key){var that=this;var toFocus=that.selectionMode==='radioButton'||that.selectionMode==='checkBox'||that.selectionMode==='zeroOrMany'||that.selectionMode==='oneOrMany'||that.selectionMode==='zeroOrOne';var items=that._items;if(that.filterable&&that.$.filterInput.value.length>0){items=that._filteredItems;}if(that.disabled||that.readonly){return;}switch(key){case'ArrowLeft':case'ArrowUp':that._handleArrowKeys(true);break;case'ArrowRight':case'ArrowDown':that._handleArrowKeys(false);break;case' ':{if(that.selectedIndexes.length<1&&!that._focusedItem){return;}var focusedItem=that._focusedItem?that._focusedItem:that._items[that.selectedIndexes[that.selectedIndexes.length-1]];var makeSelection=function makeSelection(item){if(item.selected&&that.selectionMode!=='radioButton'){that.unselect(item);}else{that.select(item);}};if(that.selectionMode==='oneOrMany'){if(focusedItem.selected&&that.selectedIndexes.length>1){makeSelection(focusedItem);}else if(!focusedItem.selected){makeSelection(focusedItem);}return;}makeSelection(focusedItem);break;}case'Home':{if(items.length===0){return;}if(toFocus){that._focus(items[0]);}else{if(!that._keysPressed['Shift']){that.clearSelection();}that.select(items[0]);that._focus(items[0]);}that.scrollTop=0;break;}case'End':{if(items.length===0){return;}if(toFocus){that._focus(items[items.length-1]);}else{if(!that._keysPressed['Shift']){that.clearSelection();}that.select(items[items.length-1]);that._focus(items[items.length-1]);}that.scrollTop=that.scrollHeight;break;}case'PageUp':{that._pageUpKeyHandler(items);break;}case'PageDown':{that._pageDownKeyHandler(items);break;}}that._recycle();}/**
    * Horizontal Scroll Bar handler
    */},{key:'_horizontalScrollbarHandler',value:function _horizontalScrollbarHandler(event){var that=this;event.stopPropagation();if(that.isVirtualized){that._recycle();}else{that.$.itemsContainer.scrollLeft=event.detail.value;}}},{key:'_unsort',value:function _unsort(){var that=this;that.isUpdating++;var sortByIndex=function sortByIndex(a,b){var indexA=a.dataIndex;var indexB=b.dataIndex;if(indexA<indexB){return-1;}if(indexA>indexB){return 1;}return 0;};if(!that.isVirtualized){if(that._groups.length>0){that._groups.sort(sortByIndex);var sortedItems=[];for(var _i512=0;_i512<that._groups.length;_i512++){var _ref2;var _group18=that._groups[_i512];var items=(_ref2=[]).concat.apply(_ref2,babelHelpers.toConsumableArray(_group18.querySelectorAll('jqx-list-item')));items.sort(sortByIndex);sortedItems=sortedItems.concat(items);}that._items=sortedItems;}else{that._items.sort(sortByIndex);}that._applySortOrder();}else{if(that._groups.length>0){that._groups.sort(sortByIndex);var _sortedItems=[];for(var _i513=0;_i513<that._groups.length;_i513++){var _ref3;var _group19=that._groups[_i513];var _items3=(_ref3=[]).concat.apply(_ref3,babelHelpers.toConsumableArray(_group19.items));_items3.sort(sortByIndex);_sortedItems.push(_group19);_sortedItems=_sortedItems.concat(_items3);}that._items=_sortedItems;}else{that._items.sort(sortByIndex);}}that.isUpdating--;}},{key:'_applySortOrder',value:function _applySortOrder(){var that=this;var reorder=function reorder(items){for(var _i514=0;_i514<items.length;_i514++){var _item70=items[_i514];var parentNode=_item70.parentNode;if(!parentNode){continue;}parentNode.appendChild(_item70);}};reorder(that._items);reorder(that._groups);}},{key:'_sort',value:function _sort(){var that=this;if(!that._canSort){return;}that.isUpdating++;var sortByLabel=function sortByLabel(a,b){var labelA=a.label;var labelB=b.label;if(that.sortDirection==='asc'){if(labelA<labelB){return-1;}if(labelA>labelB){return 1;}}else{if(labelA<labelB){return 1;}if(labelA>labelB){return-1;}}return 0;};that._groups.sort(sortByLabel);if(!that.isVirtualized){if(that._groups.length>0){var sortedItems=[];for(var _i515=0;_i515<that._groups.length;_i515++){var _ref4;var _group20=that._groups[_i515];var items=(_ref4=[]).concat.apply(_ref4,babelHelpers.toConsumableArray(_group20.querySelectorAll('jqx-list-item')));items.sort(sortByLabel);sortedItems=sortedItems.concat(items);}that._items=sortedItems;}else{that._items.sort(sortByLabel);}that._applySortOrder();}else{if(that._groups.length>0){var _sortedItems2=[];for(var _i516=0;_i516<that._groups.length;_i516++){var _ref5;var _group21=that._groups[_i516];var _items4=(_ref5=[]).concat.apply(_ref5,babelHelpers.toConsumableArray(_group21.items));_sortedItems2.push(_group21);_items4.sort(sortByLabel);_sortedItems2=_sortedItems2.concat(_items4);}that._items=_sortedItems2;}else{that._items.sort(sortByLabel);}}that.isUpdating--;}},{key:'getItem',value:function getItem(value){var that=this;for(var _i517=0;_i517<that._items.length;_i517++){if(that._items[_i517].value===value){return that._items[_i517];}}return null;}},{key:'_focus',value:function _focus(item){var that=this;if(!item||that.selectionMode==='none'||that.disabled||that.readonly){return;}if(that._focusedItem){that._focusedItem._focused=false;}that._focusedItem=item;that._focusedItem._focused=true;}/**
     * KeyDown handler.
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;var key=event.key;if(that.disabled||that.readonly){return;}if(that.filterable&&that.$.filterInput===activeElement){return;}if(!that._focused){return;}if(that._items.length===0||that.disabled||that.displayLoadingIndicator){return;}if(that.editable){if(key==='F2'){that._dblclickEventHandler({target:that._focusedItem});return;}else{if(that.$.editInput===activeElement){return;}}}if(that.selectionMode==='none'){return;}event.stopPropagation();// Fix for not standartized event.key in Edge.
switch(key){case'Down':case'Right':case'Left':case'Up':key='Arrow'+key;break;}if(that.filterable){switch(key){case'ArrowLeft':case'ArrowRight':return;case'ArrowUp':case'ArrowDown':event.preventDefault();}}that._applyIncrementalSearch(key);if(['Shift','ArrowUp','ArrowDown','ArrowLeft','ArrowRight','Control',' ','Home','End','PageUp','PageDown'].indexOf(key)<0){return;}event.preventDefault();//prevent window scrolling
if(!that._focusedItem&&that._items.length>0){if(that.selectionMode==='one'||that.selectionMode==='oneOrMany'||that.selectionMode==='oneOrManyExtended'){that.select(that._items[0]);}else{that._focus(that._items[0]);}return;}switch(that.selectionMode){case'one':if(key==='Shift'||key==='Control'||key===' '){return;}that._handleKeyStrokes(key);break;case'oneOrMany':case'zeroOrOne':case'zeroOrMany':case'radioButton':case'checkBox':if(key==='Shift'||key==='Control'){return;}that._handleKeyStrokes(key);break;case'oneOrManyExtended':if(key===' '){return;}that._keysPressed[key]=event.type==='keydown';that._handleKeyStrokes(key);break;}}/**
    * KeyUp handler.
    */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(that.editable&&that.$.editInput===activeElement){return;}if(that.filterable&&that.$.filterInput===activeElement){if(that._filterTimer){clearTimeout(that._filterTimer);}that._filterTimer=setTimeout(function(){var context=that.context;that.context=that;that._filterItems();that.scrollTop=that.$.itemsContainer.scrollTop=0;that.scrollLeft=that.$.itemsContainer.scrollLeft=0;that.context=context;},300);return;}if(!that._focused){return;}if(that._focusedItem&&that._focusedItem.hidden){if(that._filteredItems.length>0){var itemToFocus=that._filteredItems[0];if(itemToFocus.grouped&&that._filteredItems.length>1){itemToFocus=that._filteredItems[1];}that._focus(itemToFocus);that._recycle();}}event.stopPropagation();event.preventDefault();if(that.disabled){return;}if(['Shift','ArrowUp','ArrowDown','ArrowLeft','ArrowRight','Control',' ','PageUp','PageDown'].indexOf(event.key)<0){return;}that._keysPressed[event.key]=false;}/**
    * Container mousewheel event handler.
    */},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(event){var that=this;if(!that.computedHorizontalScrollBarVisibility&&!that.computedVerticalScrollBarVisibility){return;}if(!that.disabled&&that.computedVerticalScrollBarVisibility){event.stopPropagation();event.preventDefault();that.scrollTo(that.scrollTop+that._getScrollCoefficient(event,that.offsetHeight));}}/**
    * Page Down key handler.
    */},{key:'_pageDownKeyHandler',value:function _pageDownKeyHandler(items){var that=this;if(items.length===0){return;}var selectedItem=that._items[that.selectedIndexes[that.selectedIndexes.length-1]];if(that.selectionMode==='checkBox'||that.selectionMode==='radioButton'||that.selectionMode==='zeroOrMany'||that.selectionMode==='oneOrMany'||that.selectionMode==='zeroOrOne'){if(that._focusedItem){selectedItem=that._focusedItem;}}var item=void 0;var selectedItemIndex=that._indexOf(selectedItem);var viewTop=selectedItem.top+that.$.itemsContainer.offsetHeight-selectedItem.height;for(var _i518=selectedItemIndex;_i518<items.length;_i518++){if(items[_i518].top>=viewTop){item=items[_i518];break;}}if(!item){item=items[items.length-1];}if(that.selectionMode==='checkBox'||that.selectionMode==='radioButton'||that.selectionMode==='zeroOrMany'||that.selectionMode==='oneOrMany'||that.selectionMode==='zeroOrOne'){that._focus(item);}else{if(!item.selected){if(!that._keysPressed['Shift']){that.clearSelection();}that.select(item);that._focus(item);}}if(item.height+item.top>that.$.itemsContainer.scrollTop+that.$.itemsContainer.offsetHeight||item.top<that.$.itemsContainer.scrollTop){that.scrollTop=item.top-that.$.itemsContainer.offsetHeight+item.height;}}/**
    * Page Up key handler.
    */},{key:'_pageUpKeyHandler',value:function _pageUpKeyHandler(items){var that=this;if(items.length===0){return;}var selectedItem=that._items[that.selectedIndexes[that.selectedIndexes.length-1]];if(that.selectionMode==='checkBox'||that.selectionMode==='radioButton'||that.selectionMode==='zeroOrMany'||that.selectionMode==='oneOrMany'||that.selectionMode==='zeroOrOne'){if(that._focusedItem){selectedItem=that._focusedItem;}}var viewTop=selectedItem.top-that.$.itemsContainer.offsetHeight;var selectedItemIndex=that._indexOf(selectedItem);var item=void 0;for(var _i519=selectedItemIndex;_i519>0;_i519--){if(items[_i519].top<=viewTop){item=items[_i519];break;}}if(!item){item=items[0];}if(that.selectionMode==='checkBox'||that.selectionMode==='radioButton'||that.selectionMode==='zeroOrMany'||that.selectionMode==='oneOrMany'||that.selectionMode==='zeroOrOne'){that._focus(item);}else{if(!item.selected){if(!that._keysPressed['Shift']){that.clearSelection();}that.select(item);that._focus(item);}}that.scrollTop=item.top;var itemIndex=that._indexOf(item);if(itemIndex===0){that.scrollTop=0;}}/**
    * Removes all items from DOM. 
    */},{key:'clearItems',value:function clearItems(){var that=this;that.$.itemsInnerContainer.innerHTML='';that.clearSelection();that._items=[];that.$placeholder.removeClass('jqx-hidden');}/**
    * List Box resize handler.
    */},{key:'_resizeHandler',value:function _resizeHandler(event){var that=this;if(event.target===that&&!that._isUpdatingScrollBars){that._isUpdatingScrollBars=true;that._initializeRecyclingItems();that._refreshLayout();that._isUpdatingScrollBars=false;}}},{key:'_indexOf',value:function _indexOf(item){var that=this;if(!item){return-1;}var index=that._items.indexOf(item);if(index===-1){index=that._items.indexOf(that.getItem(item.value));}return index;}/**
    * Search items.
    */},{key:'_incrementalSearch',value:function _incrementalSearch(){var that=this;var canSelect=that.selectionMode!=='radioButton'&&that.selectionMode!=='checkBox'&&that.selectionMode!=='zeroOrMany'&&that.selectionMode!=='oneOrMany'&&that.selectionMode!=='zeroOrOne';var searchQuery=void 0;var i=0;switch(that.incrementalSearchMode){case'containsIgnoreCase':case'equalsIgnoreCase':case'startsWithIgnoreCase':case'endsWithIgnoreCase':searchQuery=that._incrementalSearchQuery.toLowerCase();break;default:searchQuery=that._incrementalSearchQuery;break;}var select=function select(item){if(item.grouped||item.readonly){return;}if(canSelect){if(that.selectedIndexes.length>0){that.clearSelection();}that._focus(item);that.select(item);}else{that._focus(item);}//Move the scrollBar when item is out of view
if(item.height+item.top>that.$.itemsContainer.scrollTop+that.$.itemsContainer.offsetHeight||item.top<that.scrollTop){that.scrollTop=item.top;}if(that._indexOf(item)===0){that.scrollTop=0;}if(that._indexOf(item)===that._items.length-1){that.scrollTop=that.scrollHeight;}};if(that._previousEntry.localeCompare(searchQuery)!==0){that._incrementalSearchItems=that._queryItems(that._incrementalSearchQuery,that.incrementalSearchMode);delete that._itemPosition;}//Previously entered string.
that._previousEntry=searchQuery;var foundItemsCount=that._incrementalSearchItems.length;if(foundItemsCount===0){return;}if(foundItemsCount===1){select(that._incrementalSearchItems[0]);return;}if(that._itemPosition!==undefined){if(that._itemPosition<foundItemsCount-1){i=that._itemPosition;}else{i=0;if(canSelect){that._incrementalSearchItems[that._itemPosition].selected=false;that.selectedIndexes=[];that.selectedValues=[];}else{that._incrementalSearchItems[that._itemPosition]._focused=false;}}}else if(canSelect){that.clearSelection();}for(i;i<foundItemsCount;i++){if(that._incrementalSearchItems[i].selected&&canSelect){that._incrementalSearchItems[i].selected=false;that.selectedIndexes=[];that.selectedValues=[];continue;}if(!canSelect&&that._incrementalSearchItems[i]._focused){that._incrementalSearchItems[i]._focused=false;continue;}select(that._incrementalSearchItems[i]);that._itemPosition=i;return;}}/**
    * Document select start handler.
    */},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(that.$.filterInput===activeElement){return;}if(that.$.editInput===activeElement){return;}event.preventDefault();}/**
    * Sets an item active via Keyboard.
    *//**
    * Sets an item active via Keyboard.
    */},{key:'_handleArrowKeys',value:function _handleArrowKeys(isArrowUp){var that=this;var canSelect=that.selectionMode!=='radioButton'&&that.selectionMode!=='checkBox'&&that.selectionMode!=='zeroOrMany'&&that.selectionMode!=='oneOrMany'&&that.selectionMode!=='zeroOrOne';if(that.disabled||that.readonly){return;}var focusedItemIndex=void 0;if(that._focusedItem&&!that._keysPressed['Shift']){focusedItemIndex=that._indexOf(that._focusedItem);that._focusedItem._focused=false;}else if(that.selectedIndexes.length!==0){focusedItemIndex=that.selectedIndexes[that.selectedIndexes.length-1];}else{return;}var focusedItem=isArrowUp?that._getPreviousItem(focusedItemIndex):that._getNextItem(focusedItemIndex);that._focus(focusedItem);if(canSelect){if(that._keysPressed['Shift']){that.select(focusedItem);}else if(that._items[focusedItemIndex]!==focusedItem){that.clearSelection();that.select(focusedItem);}}that.ensureVisible(focusedItem);}/**
    * Enable/Disable the filter input component.
    */},{key:'_refreshFilter',value:function _refreshFilter(){var that=this;if(that.filterable){that.$.filterInput.disabled=that.disabled||that.displayLoadingIndicator?true:false;that.$filterInputContainer.removeClass('jqx-hidden');that.$itemsContainer.addClass('filter');return;}that.$.filterInput.disabled=true;that.$filterInputContainer.addClass('jqx-hidden');that.$itemsContainer.removeClass('filter');}/**
    * Set tabIndex.
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}that.tabIndex=that.tabIndex>0?that.tabIndex:0;}/**
    * Set Loading Indicator Visibility
    */},{key:'_setLoadingIndicatorVisibility',value:function _setLoadingIndicatorVisibility(){var that=this;if(that.displayLoadingIndicator){that.$loadingIndicatorContainer.hasClass('jqx-visibility-hidden')?that.$loadingIndicatorContainer.removeClass('jqx-visibility-hidden'):that.$loadingIndicatorContainer.removeClass('jqx-hidden');return;}//Check for old browsers.
that._areCSSVarsSupported?that.$loadingIndicatorContainer.addClass('jqx-hidden'):that.$loadingIndicatorContainer.addClass('jqx-visibility-hidden');}/**
    * Sets the initial scroll bar sizes.
    */},{key:'_refreshLayout',value:function _refreshLayout(){var that=this;var source=that._items;that.__scrollHeight=null;that.__scrollWidth=null;that._height=null;if(!that._scrollView){that._scrollView=new JQX.Utilities.Scroll(that,that.$.horizontalScrollBar,that.$.verticalScrollBar);}that.$itemsContainer.removeClass('hscroll');that.$itemsContainer.removeClass('vscroll');if(!source||source===null||source.length===0){that.scrollWidth=0;that.scrollHeight=0;that.$filterInputContainer.removeClass('vscroll');that.$placeholder.removeClass('jqx-hidden');if(that.isVirtualized){that._recycle();}return;}that.$placeholder.addClass('jqx-hidden');var horizontalOffset=2*(parseInt(getComputedStyle(that.$.itemsInnerContainer).getPropertyValue('--jqx-list-item-horizontal-offset'))||0);var hScrollWidth=that._scrollWidth-that.$.itemsContainer.offsetWidth-horizontalOffset;var vScrollHeight=that._scrollHeight;that._refreshHorizontalScrollBarVisibility(hScrollWidth);that._refreshVerticalScrollBarVisibility(vScrollHeight);if(that.horizontalScrollBarVisibility==='hidden'){that.$.itemsInnerContainer.style.width=that.$.itemsContainer.offsetWidth-horizontalOffset;}else{that.$.itemsInnerContainer.style.width=Math.max(that.$.itemsContainer.offsetWidth-horizontalOffset,-horizontalOffset+that.__scrollWidth)+'px';}if(that.computedVerticalScrollBarVisibility){hScrollWidth=that._scrollWidth-that.$.itemsContainer.offsetWidth-that._scrollView.vScrollBar.offsetWidth;that._refreshHorizontalScrollBarVisibility(hScrollWidth);if(that.horizontalScrollBarVisibility!=='hidden'){that.$.itemsInnerContainer.style.width=Math.max(that.$.itemsContainer.offsetWidth-horizontalOffset,-horizontalOffset+that.__scrollWidth-that._scrollView.vScrollBar.offsetWidth)+'px';}if(that.computedHorizontalScrollBarVisibility){if(!(that.horizontalScrollBarVisibility==='visible'&&that.scrollWidth===0)){that.__scrollHeight+=that._scrollView.hScrollBar.offsetHeight;}else if(that.horizontalScrollBarVisibility==='visible'){that.__scrollHeight+=that._scrollView.hScrollBar.offsetHeight;}that.scrollHeight=that.__scrollHeight;}if(that.isVirtualized){that._recycle();}return;}hScrollWidth=that._scrollWidth-that.$.itemsContainer.offsetWidth-horizontalOffset;that._refreshHorizontalScrollBarVisibility(hScrollWidth);if(that.computedHorizontalScrollBarVisibility){that.scrollHeight=that._scrollHeight;that._refreshVerticalScrollBarVisibility(that.scrollHeight);//Resize event not thrown after 'bottom-corner' is applied
if(that._scrollView.vScrollBar.$.hasClass('bottom-corner')){that._scrollView.vScrollBar.refresh();}}if(that.isVirtualized){that._recycle();}var isIE=/Trident|Edge/.test(navigator.userAgent);if(!that.isRefreshing&&isIE){setTimeout(function(){that.isRefreshing=true;that._refreshLayout();that.isRefreshing=false;},50);}}/**
    * Style change event.
    */},{key:'_styleChangedHandler',value:function _styleChangedHandler(){var that=this;that._refreshLayout();}/**
    * SwipeLeft event handler.
    **/},{key:'_swipeLeftHandler',value:function _swipeLeftHandler(){}/**
    * SwipeRight event handler.
    */},{key:'_swipeRightHandler',value:function _swipeRightHandler(){}/**
    * Enable/Disable Horizontal Scroll bar.
    */},{key:'_refreshHorizontalScrollBarVisibility',value:function _refreshHorizontalScrollBarVisibility(scrollWidth){var that=this;that.scrollWidth=scrollWidth;if(that.computedHorizontalScrollBarVisibility){that.scrollLeft=that.$.itemsContainer.scrollLeft;that.$itemsContainer.addClass('hscroll');}else{that.$itemsContainer.removeClass('hscroll');}}/**
    * Enable/Disable Vertical Scroll bar.
    */},{key:'_refreshVerticalScrollBarVisibility',value:function _refreshVerticalScrollBarVisibility(scrollHeight){var that=this;that.scrollHeight=scrollHeight;if(that.computedVerticalScrollBarVisibility){that.$itemsContainer.addClass('vscroll');that.$filterInputContainer.addClass('vscroll');}else{that.$itemsContainer.removeClass('vscroll');that.$filterInputContainer.removeClass('vscroll');}}/**
    * Validates Template properties.
    */},{key:'_validateTemplate',value:function _validateTemplate(property,template){if(template===null||!template){return;}var that=this;if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));that[property]=null;return;}template=document.getElementById(template);if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:property}));that[property]=null;return;}return template;}},{key:'_getItemIndexByPosition',value:function _getItemIndexByPosition(position){var that=this;var getItemIndex=function getItemIndex(items){var bottomPointer=0;var topPointer=items.length-1;if(position<=0){return 0;}var lastNode=items[items.length-1];if(lastNode.top<=position){return items.length-1;}var condition=true;while(condition){var midPointer=Math.floor((bottomPointer+topPointer)/2);var currentitem=items[midPointer];if(that._isItemInPosition(currentitem,position)){return midPointer;}else if(currentitem.top<position){bottomPointer=midPointer+1;}else if(currentitem.top>position){topPointer=midPointer-1;}}};var items=that.filterable&&that.$.filterInput.value.length>0?that._filteredItems:that._items;var index=getItemIndex(items);return index;}},{key:'_isItemInPosition',value:function _isItemInPosition(item,position){var topPixel=item.top;var bottomPixel=item.top+item.height;var pixelInRow=topPixel<=position&&bottomPixel>position;return pixelInRow;}},{key:'_recycle',value:function _recycle(){var that=this;if(!that._recyclingItems){return;}var height=that._height;if(!that._height){height=that._height=that.$.itemsContainer.offsetHeight;}var j=0;var value=that.scrollTop;var itemIndex=that._getItemIndexByPosition(value);var items=that.filterable&&that.$.filterInput.value.length>0?that._filteredItems:that._items;var item=items[itemIndex];var itemTop=item?item.top:0;that.$.itemsInnerContainer.style.left=-that.scrollLeft+'px';that.$.itemsInnerContainer.style.top=-value+itemTop+'px';that.isUpdating++;if(itemIndex>=0){for(var _i520=itemIndex;_i520<items.length;_i520++){var _item71=items[_i520];if(_item71.height===0){continue;}if(itemTop+_item71.height>=value&&itemTop<=value+height){var listItem=that._recyclingItems[j++];if(!listItem){break;}listItem.context=document;listItem.dataItem=_item71;listItem.label=_item71.label;listItem.value=_item71.value;listItem.selected=_item71.selected;listItem._focused=_item71._focused;listItem.hidden=_item71.hidden;listItem.grouped=_item71.grouped;listItem.readonly=_item71.readonly;listItem.style.height=_item71.height+'px';that._alternateItem(listItem);if(_item71.title){listItem.title=_item71.title;}else{listItem.title='';}if(!_item71.grouped){listItem.displayMode=_item71.displayMode;}else{listItem.displayMode='plain';}if(that.scrollWidth>0){listItem.style.width=that.$.itemsInnerContainer.offsetWidth+that.scrollWidth+'px';}if(that.itemTemplate&&that._handleItemTemplate(that.itemTemplate)){that._applyTemplate(listItem,false);}}else{break;}itemTop+=_item71.height;}}if(j<that._recyclingItems.length){for(var _i521=j;_i521<that._recyclingItems.length;_i521++){var _listItem=that._recyclingItems[j++];var _context6=_listItem.context;_listItem.context=document;_listItem.hidden=true;_listItem.context=_context6;}}that.isUpdating--;}/**
    * Vertical Scroll Bar handler
    */},{key:'_verticalScrollbarHandler',value:function _verticalScrollbarHandler(event){var that=this;var value=event.detail.value;event.stopPropagation();if(that.isVirtualized){that._recycle();}else{that.$.itemsContainer.scrollTop=value;}that._updateTopVisibleIndex();if(event.context.max===event.context.value){that.$.fireEvent('scrollBottomReached');return;}if(event.context.min===event.context.value){that.$.fireEvent('scrollTopReached');}}},{key:'enableShadowDOM',/**
    * ScrollViewer have it's shadowRoot set to false. So it needs to be predefined
    */get:function get(){return JQX.EnableShadowDOM;}/** 
    * ListBox's requires 
    */},{key:'items',get:function get(){var that=this;if(that._filteredItems){return that._filteredItems;}return that._items;}},{key:'_scrollHeight',get:function get(){var that=this;var scrollHeight=0;if(that.isVirtualized){if(that.__scrollHeight){return that.__scrollHeight;}if(that._items.length===0){return 0;}that.isUpdating++;var measureItem=that._createItem(that.dataSource[0]);that.$.itemsInnerContainer.appendChild(measureItem);for(var _i522=0;_i522<that._items.length;_i522++){var _item72=that._items[_i522];if(_item72.hidden){_item72.height=0;_item72.top=scrollHeight;continue;}if(!that.itemHeight){measureItem.label=_item72.label;_item72.height=measureItem.offsetHeight;}else{if(that.itemHeight<32){that.itemHeight=32;}_item72.height=that.itemHeight;}_item72.top=scrollHeight;scrollHeight+=_item72.height;}that.$.itemsInnerContainer.removeChild(measureItem);that.__scrollHeight=scrollHeight-that.$.itemsInnerContainer.offsetHeight;if(that.filterable){that.__scrollHeight+=that.$.filterInput.offsetHeight;}scrollHeight=that.__scrollHeight;that.isUpdating--;}else{for(var _i523=0;_i523<that._items.length;_i523++){var _item73=that._items[_i523];if(_item73.hidden){_item73.height=0;_item73.top=scrollHeight;continue;}if(!that.itemHeight){_item73.height=_item73.offsetHeight;}else if(that.itemHeight!=='auto'){_item73.height=that.itemHeight;_item73.style.height=_item73.height+'px';}_item73.top=_item73.offsetTop;scrollHeight+=_item73.height;}scrollHeight=that.$.itemsInnerContainer.scrollHeight-that.$.itemsInnerContainer.offsetHeight;if(that.filterable&&scrollHeight>0){scrollHeight+=that.$.filterInput.offsetHeight;}that.__scrollHeight=scrollHeight;}return scrollHeight;//Note: Incorrectly decreases the scrollHeight
//let bottomOffset = 0;
//if (scrollHeight) {
//    bottomOffset = 2 * (parseInt(getComputedStyle(that.$.itemsInnerContainer).getPropertyValue('--jqx-list-item-vertical-offset')) || 0);
//}
//return scrollHeight - bottomOffset;
}},{key:'_scrollWidth',get:function get(){var _this54=this;var that=this,items=that._items;if(that.__scrollWidth){return that.__scrollWidth;}that.__scrollWidth=function(){var that=_this54;var longestItemWidth=void 0;var longestLabel='';for(var _i524=0;_i524<items.length;_i524++){if(items[_i524].hidden){continue;}var label=items[_i524].label;if(label.length>longestLabel.length){longestLabel=label;}}var measureItem=that._createItem({label:longestLabel});that.$.itemsContainer.appendChild(measureItem);measureItem.label=longestLabel;//This setting is enough to make the item width to 'auto' and measure it's size
measureItem.style.width='auto';//if not checked, fails in Karma because element is not Completed
if(measureItem.isCompleted){measureItem.$.itemContainer.style.width='auto';}var measureItemStyle=getComputedStyle(measureItem);var padding=parseInt(measureItemStyle.paddingLeft)+parseInt(measureItemStyle.paddingRight);longestItemWidth=(measureItem.$.itemContainer||measureItem).offsetWidth+padding;measureItem.parentNode.removeChild(measureItem);return longestItemWidth;}();return that.__scrollWidth;}},{key:'isVirtualized',get:function get(){var that=this;return that.virtualized&&that.dataSource&&that.dataSource.length>0;}}],[{key:'properties',/** 
    * ListBox's properties 
    */get:function get(){return{'allowDrag':{value:false,type:'boolean'},'allowDrop':{value:false,type:'boolean'},'alternationStart':{value:0,type:'int'},'alternationEnd':{value:0,type:'int'},'alternationCount':{value:0,type:'int'},'autoSort':{value:true,type:'boolean'},'dataSource':{value:null,type:'any?',reflectToAttribute:false},'dragFeedbackFormatFunction':{value:null,type:'function?'},'dragOffset':{value:[10,10],type:'array'},'displayLoadingIndicator':{value:false,type:'boolean'},'displayMember':{value:'',type:'string'},'shadowDomMode':{allowedValues:['light','shadow'],value:'shadow',type:'string'},'dropAction':{value:'move',type:'string',allowedValues:['copy','move','none']},'editable':{value:false,type:'boolean'},'filterable':{value:false,type:'boolean'},'filterCallback':{value:null,type:'function?'},'filterMode':{value:'containsIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase','custom'],type:'string'},'filterInputPlaceholder':{value:'',type:'string'},'grouped':{value:false,type:'boolean'},'groupMember':{value:'',type:'string'},'itemTemplate':{value:null,type:'any'},'itemHeight':{value:null,type:'number?'},'incrementalSearchDelay':{value:700,type:'number?'},'incrementalSearchMode':{value:'startsWithIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase'],type:'string'},'loadingIndicatorPlaceholder':{value:'Loading...',type:'string'},'loadingIndicatorPosition':{value:'center',allowedValues:['bottom','center','top'],type:'string'},'messages':{extend:true,value:{'en':{'overridingProperties':'{{elementType}}: Overriding properties {{property1}} and {{property2}} applied. The "{{property1}}" property is used by default.','invalidIndex':'{{elementType}}: "{{method}}" method accepts an index of type number or an Array of numbers.','indexOutOfBound':'{{elementType}}: Out of bound index/indexes in "{{method}}" method.','invalidItem':'{{elementType}}: "{{method}}" method accepts an object or an array of objects as it\'s second parameter.','invalidSettings':'{{elementType}}: "{{method}}" method accepts a string or an object as it\'s second parameter.'}},type:'object'},'name':{value:'',type:'string'},'placeholder':{value:'No Items',type:'string'},'selectedIndexes':{value:[],type:'array'},'selectedValues':{value:[],type:'array'},'selectionMode':{value:'oneOrManyExtended',allowedValues:['none','oneOrManyExtended','zeroOrMany','oneOrMany','zeroOrOne','one','checkBox','radioButton'],type:'string'},'selectionChangeAction':{value:'release',allowedValues:['press','release'],type:'string'},'sorted':{value:false,type:'boolean'},'sortDirection':{value:'asc',type:'string'},'topVisibleIndex':{value:-1,type:'int'},'type':{value:'list',type:'string',defaultReflectToAttribute:true,readonly:true},'valueMember':{value:'',type:'string'},'virtualized':{value:false,type:'boolean'}};}},{key:'requires',get:function get(){return{'JQX.ScrollBar':'jqxscrollbar.js'};}},{key:'styleUrls',get:function get(){return['jqx.listbox.css'];}/**
     * ListBox's event listeners.
     */},{key:'listeners',get:function get(){return{'focus':'_focusHandler','blur':'_blurHandler','container.wheel':'_mouseWheelHandler','editInput.change':'_editInputEventHandler','editInput.blur':'_editInputEventHandler','editInput.keydown':'_editInputEventHandler','horizontalScrollBar.change':'_horizontalScrollbarHandler','itemsInnerContainer.down':'_downHandler','itemsInnerContainer.dblclick':'_dblclickEventHandler','itemsInnerContainer.move':'_itemsContainerMoveHandler','itemsContainer.mouseleave':'_mouseLeaveHandler','document.up':'_upHandler','document.move':'_moveHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','resize':'_resizeHandler','selectstart':'_selectStartHandler','styleChanged':'_styleChangedHandler','swipeleft':'_swipeLeftHandler','swiperight':'_swipeRightHandler','verticalScrollBar.change':'_verticalScrollbarHandler'};}}]);return ListBox;}(JQX.ScrollViewer));/**
 * Numeric text box custom element.
 */JQX('jqx-numeric-text-box',function(_JQX$BaseElement16){babelHelpers.inherits(NumericTextBox,_JQX$BaseElement16);function NumericTextBox(){babelHelpers.classCallCheck(this,NumericTextBox);return babelHelpers.possibleConstructorReturn(this,(NumericTextBox.__proto__||Object.getPrototypeOf(NumericTextBox)).apply(this,arguments));}babelHelpers.createClass(NumericTextBox,[{key:'template',/**
     * Numeric text box's HTML template.
     */value:function template(){var template='<div id="container" class="jqx-container">'+'<span id="label" inner-h-t-m-l="[[label]]" class="jqx-label"></span>'+'<div id="radixDisplayButton" class="jqx-unselectable jqx-input-addon jqx-numeric-text-box-component jqx-numeric-text-box-radix-display"></div>'+'<input id="input" type="text" spellcheck="false" class="jqx-input jqx-numeric-text-box-component" placeholder="[[placeholder]]" readonly="[[readonly]]" disabled="[[disabled]]" name="[[name]]" />'+'<div id="unitDisplay" class="jqx-unselectable jqx-input-addon jqx-numeric-text-box-component jqx-numeric-text-box-unit-display"></div>'+'<div id="spinButtonsContainer" class="jqx-input-addon jqx-numeric-text-box-component jqx-spin-buttons-container">'+'<jqx-repeat-button initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" animation="[[animation]]" unfocusable id="upButton" class="jqx-spin-button">'+'<div class="jqx-arrow jqx-arrow-up"></div>'+'</jqx-repeat-button>'+'<jqx-repeat-button initial-delay="[[spinButtonsInitialDelay]]" delay="[[spinButtonsDelay]]" animation="[[animation]]" unfocusable id="downButton" class="jqx-spin-button">'+'<div class="jqx-arrow jqx-arrow-down"></div>'+'</jqx-repeat-button>'+'</div>'+'<ul id="dropDown" class="jqx-visibility-hidden jqx-drop-down">'+'<li id="dropDownItem2" class="jqx-list-item" data-value="2"></li>'+'<li id="dropDownItem8" class="jqx-list-item" data-value="8"></li>'+'<li id="dropDownItem10" class="jqx-list-item" data-value="10"></li>'+'<li id="dropDownItem16" class="jqx-list-item" data-value="16"></li>'+'</ul>'+'<span id="hint" class ="jqx-hint"  inner-h-t-m-l="[[hint]]"></span>'+'</div>';return template;}/**
     * Invoked when an instance of custom element is attached to the DOM for the first time.
     */},{key:'ready',value:function ready(){babelHelpers.get(NumericTextBox.prototype.__proto__||Object.getPrototypeOf(NumericTextBox.prototype),'ready',this).call(this);var that=this;that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'inputFormat');that._numberRenderer=new JQX.Utilities.NumberRenderer();that._numberRenderer.localizationObject.decimalseparator=that.decimalSeparator;that._radixPrefixes={10:'d',2:'b',8:'o',16:'x'};// regular expressions for binary, octal, decimal and hexadecimal numbers
that._regex={2:new RegExp(/^[0-1]+$/),8:new RegExp(/^[0-7]+$/),10:new RegExp(/^[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?$/),16:new RegExp(/^[0-9a-f]+$/i)};// regular expressions for special values
that._regexSpecial={nan:new RegExp(/^(nan)$/i),inf:new RegExp(/^((-?inf(inity)?)|([+\-]?∞))$/i),nonNumericValue:new RegExp(/^$|(^((nan)|((-?inf(inity)?)|([+\-]?∞))|(null))$)/i),exaValue:new RegExp(/^[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[E][+\-]\d*)?i$/)};that._initialDropDownOptionsSet=false;if(that.spinButtonsPosition==='left'){that.$.container.insertBefore(that.$.spinButtonsContainer,that.$.label.nextElementSibling);}if(that.radixDisplayPosition==='right'){that.$.container.insertBefore(that.$.radixDisplayButton,that.$.unitDisplay.nextElementSibling);}that._setInitialComponentDisplay();that._initialAdjustments();that._refreshShape();that._initialized=true;}},{key:'_refreshShape',value:function _refreshShape(){var that=this;var addons=that.$.container.querySelectorAll('.jqx-numeric-text-box-component:not(.jqx-hidden)');if(addons.length>0){addons[0].classList.add('jqx-numeric-text-box-component-border-left');addons[addons.length-1].classList.add('jqx-numeric-text-box-component-border-right');}}/*
     * Public methods
     *//**
     * Sets or gets the value of the numeric text box.
     *
     * @param {Number/String} value Optional value to be set to the numeric text box. If this parameter is not set, the method gets the value.
     * @param {Boolean} suppressValidation Optional If true is passed, the value is not validated.
     */},{key:'val',value:function val(value,suppressValidation){var that=this,isEmptyObject=value!==null&&(typeof value==='undefined'?'undefined':babelHelpers.typeof(value))==='object'&&Object.keys(value).length===0;if(value!==undefined&&isEmptyObject===false){// use as value setter
var oldValue=that.value;if((value===''||value===null)&&oldValue===null){return null;}if(value===null){that._triggerChangeEvent=that.validation==='strict';that._validate(false,null);that._triggerChangeEvent=false;that._programmaticValueIsSet=true;return;}value=value.toString();if(value.toUpperCase()!==oldValue.toString().toUpperCase()){if(suppressValidation===undefined){// sets the value after validation
that._triggerChangeEvent=that.validation==='strict';that._validate(false,value);that._triggerChangeEvent=false;}else{// sets the value without validation
that._setValue(value);}that._programmaticValueIsSet=true;}else{return value;}}else{// use as value getter
return that.value;}}/**
     * Focuses the input of the numeric text box.
     */},{key:'focus',value:function focus(){this.$.input.focus();}/*
     * Private methods
     *//**
     * Updates the internal spin buttons step object ("_spinButtonsStepObject").
     */},{key:'_updateSpinButtonsStepObject',value:function _updateSpinButtonsStepObject(){var that=this;that._spinButtonsStepObject=that._numericProcessor.createDescriptor(that.spinButtonsStep,true);}/**
     * Sets the initial display of the various numeric text box components.
     */},{key:'_setInitialComponentDisplay',value:function _setInitialComponentDisplay(){var that=this;if(that.spinButtons===false){that.$spinButtonsContainer.addClass('jqx-hidden');}if(that.radixDisplay===false){that.$radixDisplayButton.addClass('jqx-hidden');}if(that.showUnit===false){that.$unitDisplay.addClass('jqx-hidden');}}/**
     * Makes initial validations and adjustments to the numeric text box.
     */},{key:'_initialAdjustments',value:function _initialAdjustments(){var that=this;that._radixNumber=that._getRadix(that.radix);that._wordLengthNumber=that._numericProcessor.getWordLength(that.wordLength);that._validatePropertyCompatibility();that._numericProcessor.validateMinMax(true,true);that._updateSpinButtonsStepObject();that._validate(true);that._programmaticValueIsSet=true;that._cachedInputValue=that.$.input.value;if(that._editableValue===undefined){that._editableValue=that._cachedInputValue;}that.$.radixDisplayButton.innerHTML=that._radixPrefixes[that._radixNumber];that.$.unitDisplay.innerHTML=that.unit;if(that.disabled){that.$.upButton.disabled=true;that.$.downButton.disabled=true;}if(that.opened){if(that.dropDownEnabled&&!that.disabled&&that.value!==null){that._openRadix();}else{that.opened=false;}}that._setFocusable();}/**
     * Validates some initial non-numeric property values.
     */},{key:'_validatePropertyCompatibility',value:function _validatePropertyCompatibility(){var that=this;if(that.inputFormat!=='integer'){if(that._radixNumber!==10){that.error(that.localize('integerOnly',{property:'radix'}));}if(that.radixDisplay){that.error(that.localize('integerOnly',{property:'radixDisplay'}));}if(that.dropDownEnabled){that.error(that.localize('integerOnly',{property:'dropDownEnabled'}));}if(that.wordLength!=='int32'){that.error(that.localize('integerOnly',{property:'wordLength'}));}}else if(that.precisionDigits!==null){that.error(that.localize('noInteger',{property:'precisionDigits'}));}if(that.significantDigits===null&&that.precisionDigits===null){that.significantDigits=8;}else if(that.significantDigits!==null&&that.precisionDigits!==null){that.error(that.localize('significantPrecisionDigits'));}}/**
     * Validates the value of the numeric text box.
     */},{key:'_validate',value:function _validate(initialValidation,programmaticValue){var that=this;var value=void 0;if(initialValidation){value=that.value;if(value===undefined){if(that.nullable){value=null;}else{value='0';}}}else{if(programmaticValue===undefined||programmaticValue===null&&!that.nullable){value=that.$.input.value;if(value===that.value&&that._programmaticValueIsSet!==true){that.$.input.value=that._cachedInputValue;return;}}else{value=programmaticValue;}}if(that.nullable&&(value===null||value==='')){that.value=null;that._number=null;that.$.input.value='';that._cachedInputValue='';that._editableValue='';that._disableComponents();return;}var validationOptions=that._numericProcessor.prepareForValidation(initialValidation,programmaticValue,value);if(validationOptions===undefined){that._disableComponents();return;}var validNumber=that._numericProcessor.createDescriptor(validationOptions.value,true,true,!initialValidation&&programmaticValue===undefined||that.validation==='strict',initialValidation||programmaticValue!==undefined,validationOptions.enteredComplexNumber);if(initialValidation){that._number=validNumber;var renderedValue=that._renderValue(validNumber);that.value=validNumber.toString();that.$.input.value=renderedValue;}else{that._updateValue(validNumber);}that._programmaticValueIsSet=false;that._disableComponents();}/**
     * Validates the value of the numeric text box when it is not a number.
     */},{key:'_handleNonNumericValue',value:function _handleNonNumericValue(initialValidation,programmaticValue,value){var that=this;if(that.inputFormat!=='integer'){if(that._regexSpecial.nan.test(value)){// 'NaN' (or a derivative) has been entered
that._handleNaN(initialValidation);return;}if(that._regexSpecial.inf.test(value)){// '(-)Inf' (or a derivative) has been entered
that._handleInfinity(initialValidation,programmaticValue,value);return;}}// invalid input
if(initialValidation){var defaultValue=that._numericProcessor.createDescriptor(0);that._number=that._validateRange(defaultValue);var defaultValidValue=that._renderValue(that._number);that.value=that._number.toString();that.$.input.value=defaultValidValue;}else{// the old value is reverted
if(programmaticValue===undefined){that.$.input.value=that._cachedInputValue;}else{var correctValue=that._number.toString();if(that.value!==correctValue){that.value=correctValue;}}}}/**
     * Handles NaN (or derivative) entered value.
     */},{key:'_handleNaN',value:function _handleNaN(initialValidation){var that=this;that.$.input.value='NaN';if(initialValidation){that.value=NaN;that._number=NaN;}else{var oldValue=that.value;if(oldValue===null||oldValue.toString()!=='NaN'){that.value=NaN;that._number=NaN;that._cachedInputValue='NaN';that._editableValue='NaN';if(that._triggerChangeEvent){that.$.fireEvent('change',{'value':NaN,'oldValue':oldValue,'radix':that._radixNumber});}}}}/**
     * Handles (-)Infinity (or derivative) entered value.
     */},{key:'_handleInfinity',value:function _handleInfinity(initialValidation,programmaticValue,value){var that=this;var newInputValue=void 0,newValue=void 0;if(value.charAt(0)==='-'){if(value.charAt(1)==='∞'){newInputValue='-∞';}else{newInputValue='-Inf';}newValue=-Infinity;}else{if(value.indexOf('∞')!==-1){newInputValue='∞';}else{newInputValue='Inf';}newValue=Infinity;}if(newValue===-Infinity&&that.min===-Infinity||newValue===Infinity&&that.max===Infinity||programmaticValue!==undefined){if(initialValidation){that.value=newValue;that._number=newValue;that.$.input.value=newInputValue;}else{var oldValue=that.value;if(value!==newInputValue){that.$.input.value=newInputValue;}if(oldValue!==newValue){that.value=newValue;that._number=newValue;that._cachedInputValue=newInputValue;that._editableValue=newInputValue;if(that._triggerChangeEvent){that.$.fireEvent('change',{'value':newValue,'oldValue':oldValue,'radix':that._radixNumber});}}}}else{// if -Infinity/Infinity is out of the "min"-"max" range, the value is set to "min"/"max" instead
if(newValue===-Infinity){that._validate(false,that.min);}else{that._validate(false,that.max);}}}/**
     * Checks if the value is within the range from min to max.
     */},{key:'_validateRange',value:function _validateRange(numberToValidate){var that=this;numberToValidate=that._numericProcessor.validate(numberToValidate,that._minObject,that._maxObject);return numberToValidate;}/**
     * Invoked when the value of a public property has been changed by the user.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(key,oldValue,value){babelHelpers.get(NumericTextBox.prototype.__proto__||Object.getPrototypeOf(NumericTextBox.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);var that=this,input=that.$.input;function handleLeadingZeros(){if(that._initialDropDownOptionsSet===true){that._setDropDownOptions();}if(that._radixNumber===2||that._radixNumber===16){that._cachedInputValue=that._number.toString(that._radixNumber,that._wordLengthNumber,that.leadingZeros);that._editableValue=that._cachedInputValue;that.$.input.value=that._cachedInputValue;}}// eslint-disable-next-line
if(value!=oldValue){switch(key){case'disabled':that._setFocusable();if(value===true){that.$.upButton.disabled=true;that.$.downButton.disabled=true;}else{that._disableComponents();}break;case'unfocusable':that._setFocusable();break;case'enableMouseWheelAction':case'placeholder':case'readonly':case'spinButtonsDelay':case'spinButtonsInitialDelay':break;case'value':{if(value===''&&oldValue===null){return;}if(value===null||value===''||oldValue===null){that.value=oldValue;that._triggerChangeEvent=that.validation==='strict';that._validate(false,value);that._triggerChangeEvent=false;that._programmaticValueIsSet=true;return;}var stringValue=value.toString(),stringOldValue=oldValue.toString();if(stringOldValue!==stringValue){if(stringOldValue.toUpperCase()===stringValue.toUpperCase()){that.value=oldValue;}that.value=oldValue;that._triggerChangeEvent=that.validation==='strict';that._validate(false,stringValue);that._triggerChangeEvent=false;that._programmaticValueIsSet=true;}break;}case'radix':if(that.inputFormat==='integer'){that._changeRadix(value);}else{that.error(that.localize('integerOnly',{property:'radix'}));}break;case'leadingZeros':if(that.inputFormat==='integer'&&that._number!==null){handleLeadingZeros();}break;case'min':case'max':{if(value!==null){that['_'+key+'IsNull']=false;}that._numericProcessor.validateMinMax(key==='min',key==='max');if(that.validation==='strict'){that._triggerChangeEvent=true;that._validate(false,that.value);that._triggerChangeEvent=false;}else if(that._regexSpecial.nonNumericValue.test(that.value)===false){var numberToValidate=that._numericProcessor.createDescriptor(that._number),validValue=that._validateRange(numberToValidate);if(that._numericProcessor.compare(that.value,validValue)===true){that._programmaticValueIsSet=true;}}break;}case'opened':if(value){if(that.dropDownEnabled&&!that.disabled&&that.value!==null){that._openRadix();}else{that.opened=false;}}else{that._closeRadix();}break;case'outputFormatString':if(value){that._cachedInputValue=that._numberRenderer.formatNumber(that._number,value);that.$.input.value=that._cachedInputValue;}else{that._cachedInputValue=that._editableValue;that.$.input.value=that._editableValue;}break;case'dropDownEnabled':if(value){if(that.inputFormat!=='integer'){that.error(that.localize('integerOnly',{property:'dropDownEnabled'}));}if(that._initialDropDownOptionsSet===true){that._setDropDownOptions();}}else if(that.opened){that._closeRadix();}break;case'spinButtons':if(value){that.$spinButtonsContainer.removeClass('jqx-hidden');}else{that.$spinButtonsContainer.addClass('jqx-hidden');}that._refreshShape();break;case'spinButtonsStep':that._updateSpinButtonsStepObject();break;case'significantDigits':case'precisionDigits':{if(key==='precisionDigits'&&that.inputFormat==='integer'){that.error(that.localize('noInteger',{property:key}));}if(key==='significantDigits'&&that.precisionDigits!==null){that.precisionDigits=null;}else if(key==='precisionDigits'&&that.significantDigits!==null){that.significantDigits=null;}if(that._regexSpecial.nonNumericValue.test(that.value)===false){var renderedValue=that._renderValue(that._number);input.value=renderedValue;}break;}case'decimalSeparator':{that._numberRenderer.localizationObject.decimalseparator=that.decimalSeparator;var numericValue=that._discardDecimalSeparator(input.value,oldValue),valueWithNewSeparator=that._applyDecimalSeparator(numericValue),editableValueWithNewSeparator=that._applyDecimalSeparator(that._discardDecimalSeparator(that._editableValue,oldValue));input.value=valueWithNewSeparator;that._editableValue=editableValueWithNewSeparator;break;}case'spinButtonsPosition':if(value==='left'){that.$.container.insertBefore(that.$.spinButtonsContainer,that.$.label.nextElementSibling);}else{that.$.container.insertBefore(that.$.spinButtonsContainer,that.$.dropDown);}that._refreshShape();break;case'wordLength':that._wordLengthNumber=that._numericProcessor.getWordLength(value);if(that.inputFormat==='integer'){that._numericProcessor.validateMinMax(true,true);if(that._number!==null){var _validValue2=that._validateRange(new JQX.Utilities.BigNumber(that._number));that._updateValue(_validValue2);if(that.leadingZeros){handleLeadingZeros();}}}break;case'radixDisplay':if(value){if(that.inputFormat!=='integer'){that.error(that.localize('integerOnly',{property:'radixDisplay'}));}that.$radixDisplayButton.removeClass('jqx-hidden');}else{that.$radixDisplayButton.addClass('jqx-hidden');}that._refreshShape();break;case'radixDisplayPosition':if(value==='left'){that.$.container.insertBefore(that.$.radixDisplayButton,that.$.input);}else{that.$.container.insertBefore(that.$.radixDisplayButton,that.$.unitDisplay.nextElementSibling);}that._refreshShape();break;case'inputFormat':that._changeInputFormat(oldValue,value);break;case'showUnit':if(value){that.$unitDisplay.removeClass('jqx-hidden');}else{that.$unitDisplay.addClass('jqx-hidden');}that._refreshShape();break;case'unit':that.$.unitDisplay.innerHTML=value;break;case'scientificNotation':{if(that._regexSpecial.nonNumericValue.test(that.value)===false){var _renderedValue=that._renderValue(that._number);input.value=_renderedValue;}break;}case'locale':case'messages':that._initialDropDownOptionsSet=false;break;case'nullable':if(oldValue===true&&that.value===null){that._validate(false,'0');}break;case'validation':if(value==='strict'){that._triggerChangeEvent=true;that._validate(false,that.value);that._triggerChangeEvent=false;}break;}}else if(typeof value!=='string'&&typeof oldValue==='string'){that[key]=oldValue;}that._cachedInputValue=input.value;}/**
     * Changes the input format.
     */},{key:'_changeInputFormat',value:function _changeInputFormat(oldFormat,newFormat){var that=this;that._numericProcessor=new JQX.Utilities.NumericProcessor(that,'inputFormat');if(oldFormat==='complex'){// 'complex' -> 'integer'/'floatingPoint'
that._changeFromComplexInputFormat(newFormat);return;}if(newFormat==='integer'&&oldFormat==='floatingPoint'){// 'floatingPoint' -> 'integer'
that._changeFromFloatingPointToIntegerInputFormat();}if(newFormat==='floatingPoint'&&oldFormat==='integer'){// 'integer' -> 'floatingPoint'
that._changeFromIntegerToFloatingPointInputFormat();}if(newFormat==='complex'){// 'integer'/'floatingPoint' -> 'complex'
that._changeToComplexInputFormat(oldFormat);}that._updateSpinButtonsStepObject();if(that.value!==null){that._inputFormatChangedFlag=true;that._validate(undefined,that._number.toString());that._inputFormatChangedFlag=false;}}/**
     * Changes the input format from 'complex' to 'integer' or 'floatingPoint'.
     */},{key:'_changeFromComplexInputFormat',value:function _changeFromComplexInputFormat(newFormat){var that=this;that.spinButtonsStep=that._spinButtonsStepObject.realPart;that._updateSpinButtonsStepObject();if(newFormat==='integer'){if(that.min===-Infinity){that.min=null;}else{that.min=that._minObject.realPart;}if(that.max===Infinity){that.max=null;}else{that.max=that._maxObject.realPart;}}else{if(that.min!==-Infinity){that.min=that._minObject.realPart;}if(that.max!==Infinity){that.max=that._maxObject.realPart;}}that._numericProcessor.validateMinMax(true,true);if(that.value!==null){that._inputFormatChangedFlag=true;that._validate(undefined,that._number.realPart.toString());that._inputFormatChangedFlag=false;}}/**
     * Changes the input format from 'floatingPoint' to 'integer'.
     */},{key:'_changeFromFloatingPointToIntegerInputFormat',value:function _changeFromFloatingPointToIntegerInputFormat(){var that=this;if(that.min===-Infinity){that.min=null;}if(that.max===Infinity){that.max=null;}that._numericProcessor.validateMinMax(true,true);}/**
     * Changes the input format from 'integer' to 'floatingPoint'.
     */},{key:'_changeFromIntegerToFloatingPointInputFormat',value:function _changeFromIntegerToFloatingPointInputFormat(){var that=this;if(that.radixDisplay){that.radixDisplay=false;that.$radixDisplayButton.addClass('jqx-hidden');}if(that._radixNumber!==10){that.radix=10;that._radixNumber=10;}if(that._minIsNull){that.min=-Infinity;that._minObject=-Infinity;}else{that._minObject=parseFloat(that._minObject.toString());}if(that._maxIsNull){that.max=Infinity;that._maxObject=Infinity;}else{that._maxObject=parseFloat(that._maxObject.toString());}if(that.dropDownEnabled){that.dropDownEnabled=false;}}/**
     * Changes the input format from 'integer' to 'floatingPoint'.
     */},{key:'_changeToComplexInputFormat',value:function _changeToComplexInputFormat(oldFormat){var that=this;if(oldFormat==='integer'){if(that.radixDisplay){that.radixDisplay=false;that.$radixDisplayButton.addClass('jqx-hidden');}if(that._minIsNull){that.min=null;}if(that._maxIsNull){that.max=null;}if(that.dropDownEnabled){that.dropDownEnabled=false;}}that._numericProcessor.validateMinMax(that.min!==-Infinity,that.max!==Infinity);}/**
     * Updates the value of the numeric text box input and the "value" property and triggers the respective events.
     */},{key:'_updateValue',value:function _updateValue(value){var that=this,enteredValue=that.$.input.value,newValue=value.toString(that._radixNumber,that._wordLengthNumber,that.leadingZeros);if(enteredValue!==newValue||enteredValue!==that._cachedInputValue){var renderedValue=that._renderValue(value),oldValue=that.value,newValueIsNotNumeric=that._regexSpecial.nonNumericValue.test(newValue);that.$.input.value=renderedValue;that._cachedInputValue=renderedValue;if(that._inputFormatChangedFlag||newValueIsNotNumeric&&renderedValue!==oldValue||newValueIsNotNumeric===false&&that._numericProcessor.compare(value,that._number)){that._number=that._numericProcessor.createDescriptor(value);var actualNewValue=that._number.toString();that.value=actualNewValue;that._setDropDownOptions();if(that._triggerChangeEvent){that.$.fireEvent('change',{'value':actualNewValue,'oldValue':oldValue,'radix':that._radixNumber});}}}else{that.value=that._number.toString();}}/**
     * Sets a decimal numeric value to the numeric text box without any validation.
     */},{key:'_setValue',value:function _setValue(value){var that=this;that.value=value;that.$.input.value=value;that._number=that._numericProcessor.createDescriptor(value,true);that._setDropDownOptions();}/**
     * Changes the radix (numeral system).
     */},{key:'_changeRadix',value:function _changeRadix(radix){var that=this,newRadix=that._getRadix(radix),oldRadix=that.radix;if(newRadix===that._radixNumber){return;}that.radix=radix;that._radixNumber=newRadix;var input=that.$.input,oldValue=input.value;var newValue=void 0,renderedValue=void 0;if(that.value!==null){newValue=that._number.toString(newRadix,that._wordLengthNumber,that.leadingZeros);renderedValue=that._renderValue(newValue);}else{renderedValue='';}input.value=renderedValue;that._cachedInputValue=renderedValue;that.$.radixDisplayButton.innerHTML=that._radixPrefixes[newRadix];that.$.fireEvent('radixChange',{'radix':radix,'oldRadix':oldRadix,'displayedValue':renderedValue,'oldDisplayedValue':oldValue});}/**
     * Opens the radix selection drop down.
     */},{key:'_openRadix',value:function _openRadix(){var that=this;if(that._initialDropDownOptionsSet===false){that._setDropDownOptions();that._initialDropDownOptionsSet=true;}that.$radixDisplayButton.addClass('jqx-numeric-text-box-pressed-component');that.$dropDown.removeClass('moved');that.$dropDown.removeClass('jqx-visibility-hidden');that.$.dropDown.style.marginTop=null;var windowHeight=window.devicePixelRatio===1?document.documentElement.clientHeight:window.innerHeight,dropDownBoundingRect=that.$.dropDown.getBoundingClientRect(),verticalCorrection=windowHeight-dropDownBoundingRect.top-that.$.dropDown.offsetHeight;if(verticalCorrection<0){that.$.dropDown.style.marginTop=verticalCorrection-parseFloat(getComputedStyle(that).getPropertyValue('--jqx-numeric-text-box-border-width'))+'px';that.$dropDown.addClass('moved');}that.opened=true;that.$.fireEvent('open',{dropDown:that.$.dropDown});}/**
     * Closes the radix selection drop down.
     */},{key:'_closeRadix',value:function _closeRadix(){var that=this;that.$radixDisplayButton.removeClass('jqx-numeric-text-box-pressed-component');that.$dropDown.addClass('jqx-visibility-hidden');that.opened=false;that.$.fireEvent('close',{dropDown:that.$.dropDown});}/**
     * Checks if left button is pressed.
     */},{key:'_isLeftButtonPressed',value:function _isLeftButtonPressed(event){var buttons=event.buttons===0||event.which===1;return event.detail.buttons===1||buttons;}/**
     * Checks if incrementation and decrementation are allowed
     */},{key:'_isIncrementOrDecrementAllowed',value:function _isIncrementOrDecrementAllowed(){var that=this;return!that.disabled&&!that.readonly&&that._regexSpecial.nonNumericValue.test(that.$.input.value)===false;}/**
     * Up button mousedown event handler.
     */},{key:'_upButtonClickHandler',value:function _upButtonClickHandler(event){var that=this,isLeftButton=that._isLeftButtonPressed(event);if(isLeftButton&&that._isIncrementOrDecrementAllowed()){if(!that._up){that.$upButton.addClass('jqx-numeric-text-box-pressed-component');}that._incrementOrDecrement('add');}}/**
     * Down button mousedown event handler.
     */},{key:'_downButtonClickHandler',value:function _downButtonClickHandler(event){var that=this,isLeftButton=that._isLeftButtonPressed(event);if(isLeftButton&&that._isIncrementOrDecrementAllowed()){if(!that._up){that.$downButton.addClass('jqx-numeric-text-box-pressed-component');}that._incrementOrDecrement('subtract');}}/**
     * Document mousedown event handler.
     */},{key:'_documentMousedownHandler',value:function _documentMousedownHandler(event){var that=this;that._up=false;if(!that.opened){return;}if(that.enableShadowDOM){var shadowRootTarget=event.originalEvent.composedPath()[0],isInsideElement=function(){var host=shadowRootTarget.getRootNode().host;while(host){if(host===that){return host;}host=host.getRootNode().host;}}();if(!isInsideElement){that._closeRadix();}}else if(!that.contains(event.originalEvent.target)){that._closeRadix();}}/**
     * Document mouseup event handler.
     */},{key:'_documentMouseupHandler',value:function _documentMouseupHandler(){var that=this;that._up=true;that.$upButton.removeClass('jqx-numeric-text-box-pressed-component');that.$downButton.removeClass('jqx-numeric-text-box-pressed-component');}/**
     * Radix display button click event handler.
     */},{key:'_radixDisplayButtonClickHandler',value:function _radixDisplayButtonClickHandler(){var that=this;if(that.dropDownEnabled&&!that.disabled&&that.value!==null){if(that.opened){that._closeRadix();}else{that._openRadix();}}}/**
     * Dropdown item click event handler.
     */},{key:'_dropDownItemClickHandler',value:function _dropDownItemClickHandler(event){if(event.target.$.hasClass('jqx-list-item')){var _that3=this;var radix=event.target.getAttribute('data-value');_that3._changeRadix(parseInt(radix,10));_that3._closeRadix();}}/**
     * Spin button, radix display button and dropdown item mouseenter and mouseleave event handler.
     */},{key:'_mouseenterMouseleaveHandler',value:function _mouseenterMouseleaveHandler(event){var that=this;if(event.target===that.$.dropDown||that.disabled||that.readonly){return;}if(event.type==='mouseenter'){event.target.setAttribute('hover','');}else{event.target.removeAttribute('hover');}}/**
     * Input keydown event handler.
     */},{key:'_inputKeydownHandler',value:function _inputKeydownHandler(event){var that=this,keyCode=!event.charCode?event.which:event.charCode;if(keyCode===40&&that._isIncrementOrDecrementAllowed()){// decrement when Down Arrow is pressed
that._incrementOrDecrement('subtract');}else if(keyCode===38&&that._isIncrementOrDecrementAllowed()){// increment when Up Arrow is pressed
that._incrementOrDecrement('add');}that._keydownInfo={value:that.$.input.value,specialKey:event.altKey||event.ctrlKey||event.shiftKey};}/**
     * Input keyup event handler.
     */},{key:'_inputKeyupHandler',value:function _inputKeyupHandler(event){var that=this;if(event.keyCode===13){// when Enter is pressed, validation occurs
that._suppressBlurEvent=true;if(that.$.input.value!==that._cachedInputValue){that._triggerChangeEvent=true;that._validate();that._triggerChangeEvent=false;that.$.input.blur();}}else if(event.keyCode===27){// when Escape is pressed, changes are discarded
that.$.input.value=that._editableValue;}else{var inputValue=that.$.input.value;if(inputValue!==''&&that._regex[that._radixNumber].test(inputValue)){that.$.upButton.disabled=false;that.$.downButton.disabled=false;}else if(inputValue===''){that.$.upButton.disabled=true;that.$.downButton.disabled=true;}if(that._keydownInfo&&that._keydownInfo.value!==inputValue&&!that._keydownInfo.specialKey&&!event.altKey&&!event.ctrlKey&&!event.shiftKey&&event.key!=='Control'){that.$.fireEvent('changing',{'currentValue':inputValue,'validValue':that.value,'radix':that._radixNumber});}}event.preventDefault();}/**
     * Input blur event handler.
     */},{key:'_inputBlurHandler',value:function _inputBlurHandler(){var that=this;if(that._suppressBlurEvent===true){// suppresses validation because it was already handled in "_incrementOrDecrement" function
that._suppressBlurEvent=false;if(that._formattedValue){that._cachedInputValue=that._formattedValue;that.$.input.value=that._formattedValue;delete that._formattedValue;}}else if(that.$.input.value!==that._editableValue){that._triggerChangeEvent=true;that._validate();that._triggerChangeEvent=false;}else{that.$.input.value=that._cachedInputValue;}if(that.radixDisplay){that.$.radixDisplayButton.removeAttribute('focus');}if(that.opened){that._closeRadix();}if(that.spinButtons){that.$.spinButtonsContainer.removeAttribute('focus');}if(that.showUnit){that.$.unitDisplay.removeAttribute('focus');}that.removeAttribute('focus');}/**
     * Input focus event handler.
     */},{key:'_inputFocusHandler',value:function _inputFocusHandler(){var that=this;if(that.spinButtons){that.$.spinButtonsContainer.setAttribute('focus','');}if(that.radixDisplay){that.$.radixDisplayButton.setAttribute('focus','');}if(that.showUnit){that.$.unitDisplay.setAttribute('focus','');}if(that.opened){that._closeRadix();}that.setAttribute('focus','');if(that.outputFormatString){that.$.input.value=that._editableValue;}}/**
     * Input change event handler.
     */},{key:'_inputChangeHandler',value:function _inputChangeHandler(event){event.stopPropagation();event.preventDefault();}/**
     * Input paste event handler.
     */},{key:'_inputPasteHandler',value:function _inputPasteHandler(){var that=this;requestAnimationFrame(function(){return that.$.fireEvent('changing',{'currentValue':that.$.input.value,'validValue':that.value,'radix':that._radixNumber});});}/**
     * Input wheel event handler.
     */},{key:'_inputWheelHandler',value:function _inputWheelHandler(event){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement;if(that.$.input===activeElement&&that.enableMouseWheelAction&&that._isIncrementOrDecrementAllowed()){event.stopPropagation();event.preventDefault();if(event.wheelDelta>0){that._incrementOrDecrement('add');}else{that._incrementOrDecrement('subtract');}}}/**
     * Gets the internal numeric radix based on the "radix" property.
     */},{key:'_getRadix',value:function _getRadix(radix){switch(radix.toString()){case'10':case'decimal':return 10;case'2':case'binary':return 2;case'8':case'octal':return 8;case'16':case'hexadecimal':return 16;}}/**
     * Sets the dropdown list radix options.
     */},{key:'_setDropDownOptions',value:function _setDropDownOptions(){var that=this;if(that.dropDownEnabled===false||that._number===null){return;}var wordLength=that._wordLengthNumber,leadingZeros=that.leadingZeros;that.$.dropDownItem2.innerHTML=that._number.toString(2,wordLength,leadingZeros)+' ('+that.localize('binary')+')';that.$.dropDownItem8.innerHTML=that._number.toString(8,wordLength)+' ('+that.localize('octal')+')';that.$.dropDownItem10.innerHTML=that._renderValue(that._number.toString(10,wordLength),true)+' ('+that.localize('decimal')+')';that.$.dropDownItem16.innerHTML=that._number.toString(16,wordLength,leadingZeros)+' ('+that.localize('hexadecimal')+')';}/**
     * Increments or decrements the number in the numeric text box input.
     */},{key:'_incrementOrDecrement',value:function _incrementOrDecrement(func){var that=this,activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement;var cachedInputValue=that._cachedInputValue;if(that.$.input===activeElement){cachedInputValue=that._editableValue;that._suppressBlurEvent=true;}if(that.$.input.value!==cachedInputValue||that._programmaticValueIsSet&&that.validation==='interaction'){// validates the value before incrementing or decrementing
that._triggerChangeEvent=true;that._validate();that._triggerChangeEvent=false;if(that._isIncrementOrDecrementAllowed()===false){return;}}var currentNumber=that._numericProcessor.incrementDecrement(that._number,func,that._spinButtonsStepObject),validNumber=that._validateRange(currentNumber);that._triggerChangeEvent=true;that._updateValue(validNumber);that._triggerChangeEvent=false;}/**
     * Returns a BigNumber object from a binary, octal, decimal or hexadecimal value.
     */},{key:'_toBigNumberDecimal',value:function _toBigNumberDecimal(number,radix){var that=this;var result=void 0;if(radix===10){result=new JQX.Utilities.BigNumber(number);}else{if(that._unsigned||that._isNegative(number,radix)===false){if(that._wordLengthNumber<64){result=parseInt(number,radix);result=new JQX.Utilities.BigNumber(result);}else{result=that._getBigNumberFrom64BitBinOctHex(number,radix);}}else{result=that._getNegativeDecimal(number,radix);result=new JQX.Utilities.BigNumber(result);}}return result;}/**
     * Checks if the passed binary, octal or hexadecimal value is negative based on the word length.
     */},{key:'_isNegative',value:function _isNegative(value,radix){var that=this,valueLength=value.length,firstCharacter=value.charAt(0).toLowerCase();if(radix===2){return valueLength===that._wordLengthNumber&&firstCharacter==='1';}else if(radix===8){switch(that._wordLengthNumber){case 8:return valueLength===3&&(firstCharacter==='2'||firstCharacter==='3');case 16:return valueLength===5&&firstCharacter==='1';case 32:return valueLength===11&&(firstCharacter==='2'||firstCharacter==='3');case 64:return valueLength===22&&firstCharacter==='1';}}else{return valueLength===that._wordLengthNumber/4&&['8','9','a','b','c','d','e','f'].indexOf(firstCharacter)!==-1;}}/**
     * Returns a BigNumber object from a positive binary, octal or hexadecimal value.
     */},{key:'_getBigNumberFrom64BitBinOctHex',value:function _getBigNumberFrom64BitBinOctHex(number,radix){var result=new JQX.Utilities.BigNumber(0);for(var _i525=number.length-1;_i525>=0;_i525--){var current=new JQX.Utilities.BigNumber(parseInt(number.charAt(_i525),radix));result=result.add(current.multiply(new JQX.Utilities.BigNumber(radix).pow(number.length-1-_i525)));}return result;}/**
     * Returns a BigNumber object from a negative binary, octal or hexadecimal value.
     */},{key:'_getNegativeDecimal',value:function _getNegativeDecimal(value,radix){var that=this;var negativeBinary=value;if(radix===8){var threeBits=[];for(var _i526=0;_i526<value.length;_i526++){var threeBit=parseInt(value.charAt(_i526),8).toString(2);while(threeBit.length!==3){threeBit='0'+threeBit;}threeBits.push(threeBit);}negativeBinary=threeBits.join('');while(negativeBinary.charAt(0)==='0'){negativeBinary=negativeBinary.slice(1);}}else if(radix===16){var bytes=[];for(var j=0;j<value.length;j++){var currentByte=parseInt(value.charAt(j),16).toString(2);while(currentByte.length!==4){currentByte='0'+currentByte;}bytes.push(currentByte);}negativeBinary=bytes.join('');}var negativeDecimal=negativeBinary.replace(/0/g,'a');negativeDecimal=negativeDecimal.replace(/1/g,'b');negativeDecimal=negativeDecimal.replace(/a/g,'1');negativeDecimal=negativeDecimal.replace(/b/g,'0');if(this._wordLengthNumber<64){negativeDecimal=(parseInt(negativeDecimal,2)+1)*-1;}else{negativeDecimal=that._getBigNumberFrom64BitBinOctHex(negativeDecimal,radix);negativeDecimal=negativeDecimal.add(1).negate();}return negativeDecimal;}/**
     * Replaces a custom decimal separator with the default one.
     */},{key:'_discardDecimalSeparator',value:function _discardDecimalSeparator(value,separator){var that=this;if(separator===undefined){separator=that.decimalSeparator;}if(separator!=='.'&&value!==Infinity&&value!==-Infinity){var decimalSeparatorRegExp=new RegExp(separator,'g');return value.replace(decimalSeparatorRegExp,'.');}else{return value;}}/**
     * Applies a custom decimal separator.
     */},{key:'_applyDecimalSeparator',value:function _applyDecimalSeparator(value){var that=this;if(typeof value!=='string'){value=value.toString();}if(that.decimalSeparator!=='.'){value=value.replace(/\./g,that.decimalSeparator);}return value;}/**
     * Applies the scientific notation, significant digits, precision digits and decimal separator settings.
     */},{key:'_renderValue',value:function _renderValue(renderedValue,valueInDropDown){var that=this,value=renderedValue,ignoreRadixNumber=that._radixNumber===10||valueInDropDown===true;renderedValue=that._numericProcessor.render(renderedValue,ignoreRadixNumber);// decimal separator
if(that.decimalSeparator!=='.'&&ignoreRadixNumber){renderedValue=that._applyDecimalSeparator(renderedValue);}if(valueInDropDown!==true){that._editableValue=renderedValue;if(that.outputFormatString&&that._radixNumber===10){var activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement,formattedValue=that._numberRenderer.formatNumber(value,that.outputFormatString);if(activeElement!==that.$.input){return formattedValue;}that._formattedValue=formattedValue;}}return renderedValue;}/**
     * Sets whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.$.input.tabIndex=-1;return;}that.$.input.removeAttribute('tabindex');}/**
     * Disables or enables components.
     */},{key:'_disableComponents',value:function _disableComponents(){var that=this;if(that.disabled){return;}var value=that.value;if(value===null||value.toString()==='NaN'||Math.abs(value)===Infinity){that.$.upButton.disabled=true;that.$.downButton.disabled=true;}else{that.$.upButton.disabled=false;that.$.downButton.disabled=false;}}}],[{key:'properties',/**
     * Numeric text box's properties.
     */get:function get(){return{'decimalSeparator':{value:'.',type:'string'},'enableMouseWheelAction':{value:false,type:'boolean'},'inputFormat':{value:'integer',allowedValues:['integer','floatingPoint','complex'],type:'string'},'hint':{value:'',type:'string'},'label':{value:'',type:'string'},'leadingZeros':{value:false,type:'boolean'},'max':{value:null,type:'any'},'messages':{value:{'en':{'binary':'BIN','octal':'OCT','decimal':'DEC','hexadecimal':'HEX','integerOnly':'jqxNumericTextBox: The property {{property}} can only be set when inputFormat is integer.','noInteger':'jqxNumericTextBox: the property {{property}} cannot be set when inputFormat is integer.','significantPrecisionDigits':'jqxNumericTextBox: the properties significantDigits and precisionDigits cannot be set at the same time.'}},type:'object',extend:true},'min':{value:null,type:'any'},'name':{value:'',type:'string'},'nullable':{value:false,type:'boolean'},'opened':{value:false,type:'boolean'},'outputFormatString':{value:null,type:'string?'},'placeholder':{value:'',type:'string'},'dropDownEnabled':{value:false,type:'boolean'},'precisionDigits':{value:null,type:'number?'},'radix':{value:10,allowedValues:[2,8,10,16,'binary','octal','decimal','hexadecimal'],type:'any'},'radixDisplay':{value:false,type:'boolean'},'radixDisplayPosition':{value:'left',allowedValues:['left','right'],type:'string'},'scientificNotation':{value:false,type:'boolean'},'showUnit':{value:false,type:'boolean'},'significantDigits':{value:null,type:'number?'},'spinButtons':{value:false,type:'boolean'},'spinButtonsDelay':{value:75,type:'number'},'spinButtonsInitialDelay':{value:0,type:'number'},'spinButtonsPosition':{value:'right',allowedValues:['left','right'],type:'string'},'spinButtonsStep':{value:'1',type:'any'},'type':{value:'numeric',type:'string',defaultReflectToAttribute:true,readonly:true},'unit':{value:'kg',type:'string'},'validation':{value:'strict',allowedValues:['strict','interaction'],type:'string'},'value':{value:'0',type:'any?'},'wordLength':{value:'int32',allowedValues:['int8','uint8','int16','uint16','int32','uint32','int64','uint64'],type:'string'}};}/**
     * Numeric text box's event listeners.
     */},{key:'listeners',get:function get(){return{'mouseenter':'_mouseenterMouseleaveHandler','mouseleave':'_mouseenterMouseleaveHandler','downButton.click':'_downButtonClickHandler','downButton.mouseenter':'_mouseenterMouseleaveHandler','downButton.mouseleave':'_mouseenterMouseleaveHandler','dropDown.click':'_dropDownItemClickHandler','dropDown.mouseout':'_mouseenterMouseleaveHandler','dropDown.mouseover':'_mouseenterMouseleaveHandler','input.blur':'_inputBlurHandler','input.change':'_inputChangeHandler','input.focus':'_inputFocusHandler','input.keydown':'_inputKeydownHandler','input.keyup':'_inputKeyupHandler','input.paste':'_inputPasteHandler','input.wheel':'_inputWheelHandler','radixDisplayButton.click':'_radixDisplayButtonClickHandler','radixDisplayButton.mouseenter':'_mouseenterMouseleaveHandler','radixDisplayButton.mouseleave':'_mouseenterMouseleaveHandler','upButton.click':'_upButtonClickHandler','upButton.mouseenter':'_mouseenterMouseleaveHandler','upButton.mouseleave':'_mouseenterMouseleaveHandler','document.down':'_documentMousedownHandler','document.up':'_documentMouseupHandler'};}/**
     * Numeric text box's required files.
     */},{key:'requires',get:function get(){if(window.NIComplex){return{'JQX.Button':'jqxbutton.js','JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.NumericProcessor':'jqxnumeric.js'};}return{'JQX.Button':'jqxbutton.js','JQX.Utilities.Complex':'jqxcomplex.js','JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.NumericProcessor':'jqxnumeric.js'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.numerictextbox.css'];}}]);return NumericTextBox;}(JQX.BaseElement));/**
 * Pager custom element.
 */JQX('jqx-pager',function(_JQX$BaseElement17){babelHelpers.inherits(Pager,_JQX$BaseElement17);function Pager(){babelHelpers.classCallCheck(this,Pager);return babelHelpers.possibleConstructorReturn(this,(Pager.__proto__||Object.getPrototypeOf(Pager)).apply(this,arguments));}babelHelpers.createClass(Pager,[{key:'template',/**
     * Pager's HTML template.
     */value:function template(){return'<div id="container">\n                    <div id="nearButtonsContainer" class="jqx-pager-near-buttons-container">\n                        <div id="firstButton" class="jqx-first-button jqx-pager-button jqx-unselectable"></div>\n                        <div id="previousButton" class="jqx-previous-page-button jqx-pager-button jqx-unselectable"></div>\n                    </div>\n                    <div id="middleButtonsContainer" class="jqx-pager-middle-buttons-container">\n                           <span id="previousEllipsisButton" class="jqx-previous-ellipsis-button jqx-pager-page-index-selector"></span>\n                           <div id="pageIndexSelectorsContainer" tabindex="0" class="jqx-pager-page-index-selectors-container"></div>\n                           <span id="nextEllipsisButton" class="jqx-next-ellipsis-button jqx-pager-page-index-selector"></span>\n                    </div>\n                    <div id="farButtonsContainer" class="jqx-pager-far-buttons-container">\n                        <div id="nextButton" class="jqx-next-page-button jqx-pager-button jqx-unselectable"></div>\n                        <div id="lastButton" class="jqx-last-button jqx-pager-button jqx-unselectable"></div>\n                    </div>\n                    <div id="pagerInputAndLabelContainer" class="jqx-pager-input-and-label-container">\n                        <span id="navigateToLabel" class="jqx-pager-label"></span>\n                        <input type="text" id="navigateToInput" class="jqx-pager-input jqx-input" />\n                   </div>\n                 <div id="pagerSizeSelectorAndLabelContainer" class="jqx-pager-size-selector-and-label-container">\n                        <span id="pageSizeLabel" class="jqx-pager-label"></span>\n                        <jqx-drop-down-list id="pageSizeSelector" class="jqx-page-size-selector"\n                                data-source="[[pageSizeSelectorDataSource]]"\n                                drop-down-height="auto"\n                                selection-mode="one"\n                                selected-indexes=[0]\n                                disabled="[[disabled]]">\n                        </jqx-drop-down-list>\n                    </div>\n                  <span id="pagerSummaryContainer" class="jqx-pager-summary-container jqx-pager-label"></span>\n                </div>';}/**
     * Called when the element is ready.
     */},{key:'ready',value:function ready(){babelHelpers.get(Pager.prototype.__proto__||Object.getPrototypeOf(Pager.prototype),'ready',this).call(this);var that=this;that._render();}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Pager.prototype.__proto__||Object.getPrototypeOf(Pager.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'navigationButtonsPosition':that._renderButtons();return;case'navigationInputPosition':case'pageSizeSelectorPosition':case'summaryPosition':that._renderSettings();return;}that._render();}/**
    * Moves to the next page.
    */},{key:'next',value:function next(){var that=this;that.navigateTo(that.pageIndex+1);}/**
    * Moves to the previous page.
    */},{key:'prev',value:function prev(){var that=this;that.navigateTo(that.pageIndex-1);}},{key:'beginUpdate',value:function beginUpdate(){var that=this;that._updating=true;}},{key:'endUpdate',value:function endUpdate(){var that=this;that._updating=false;that._render();}},{key:'_render',value:function _render(){var that=this;if(that._updating){return;}that.$.navigateToInput.value=(1+that.pageIndex).toString();that._renderButtons();that._renderPageIndexSelectors();that._renderSettings();that._renderVisibility();that._localize();}},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;that._renderVisibility();}},{key:'_renderVisibility',value:function _renderVisibility(){var that=this;var pagerWidth=that.offsetWidth-20;if(that.showSummary){that.$pagerSummaryContainer.removeClass('jqx-hidden');}else{that.$pagerSummaryContainer.addClass('jqx-hidden');}if(that.showPageIndexSelectors){that.$middleButtonsContainer.removeClass('jqx-hidden');}else{that.$middleButtonsContainer.addClass('jqx-hidden');}if(that.showNavigationInput){that.$navigateToLabel.removeClass('jqx-hidden');that.$navigateToInput.removeClass('jqx-hidden');}else{that.$navigateToLabel.addClass('jqx-hidden');that.$navigateToInput.addClass('jqx-hidden');}if(that.showPageSizeSelector){that.$pageSizeLabel.removeClass('jqx-hidden');that.$pageSizeSelector.removeClass('jqx-hidden');}else{that.$pageSizeLabel.addClass('jqx-hidden');that.$pageSizeSelector.addClass('jqx-hidden');}if(that.showFirstLastNavigationButtons){that.$firstButton.removeClass('jqx-hidden');that.$lastButton.removeClass('jqx-hidden');}else{that.$firstButton.addClass('jqx-hidden');that.$lastButton.addClass('jqx-hidden');}if(that.showPrevNextNavigationButtons){that.$previousButton.removeClass('jqx-hidden');that.$nextButton.removeClass('jqx-hidden');}else{that.$previousButton.addClass('jqx-hidden');that.$nextButton.addClass('jqx-hidden');}that.$previousEllipsisButton.addClass('jqx-hidden');that.$nextEllipsisButton.addClass('jqx-hidden');if(that.autoEllipsis!=='after'&&that.autoEllipsis!=='none'&&that.pageIndex>=that._pageIndexSelectorsCount){that.$previousEllipsisButton.removeClass('jqx-hidden');}if(that.autoEllipsis!=='before'&&that.autoEllipsis!=='none'&&that.pageIndex<that.pagesCount-that._pageIndexSelectorsCount){that.$nextEllipsisButton.removeClass('jqx-hidden');}for(var _i527=0;_i527<that._pageIndexSelectorsCount;_i527++){if(!that.$.pageIndexSelectorsContainer.children[_i527]){break;}that.$.pageIndexSelectorsContainer.children[_i527].classList.remove('jqx-hidden');}var pagerSummaryWidth=that.$.pagerSummaryContainer.offsetWidth?Math.max(100,that.$.pagerSummaryContainer.offsetWidth):0;var totalWidth=that.$.nearButtonsContainer.offsetWidth+that.$.middleButtonsContainer.offsetWidth+that.$.farButtonsContainer.offsetWidth+pagerSummaryWidth+that.$.pagerInputAndLabelContainer.offsetWidth+that.$.pagerSizeSelectorAndLabelContainer.offsetWidth;if(totalWidth>0&&totalWidth>pagerWidth){totalWidth-=that.$.pagerSummaryContainer.offsetWidth;// hides summary.
that.$pagerSummaryContainer.addClass('jqx-hidden');if(totalWidth>pagerWidth){totalWidth-=that.$.navigateToLabel.offsetWidth;totalWidth-=that.$.navigateToInput.offsetWidth;// hides navigation input and label.
that.$navigateToLabel.addClass('jqx-hidden');that.$navigateToInput.addClass('jqx-hidden');if(totalWidth>pagerWidth){totalWidth-=that.$.pageSizeLabel.offsetWidth;totalWidth-=that.$.pageSizeSelector.offsetWidth;// hides page size selector and label.
that.$pageSizeLabel.addClass('jqx-hidden');that.$pageSizeSelector.addClass('jqx-hidden');if(totalWidth>pagerWidth){that.$previousEllipsisButton.addClass('jqx-hidden');that.$nextEllipsisButton.addClass('jqx-hidden');totalWidth-=that.$.previousEllipsisButton.offsetWidth;totalWidth-=that.$.nextEllipsisButton.offsetWidth;for(var _i528=that._pageIndexSelectorsCount-1;_i528>=0;_i528--){var pageIndexSelector=that.$.pageIndexSelectorsContainer.children[_i528];if(totalWidth<pagerWidth||!pageIndexSelector){break;}totalWidth-=pageIndexSelector.offsetWidth;pageIndexSelector.classList.add('jqx-hidden');}}if(totalWidth>pagerWidth&&that.showFirstLastNavigationButtons){that.$firstButton.addClass('jqx-hidden');that.$lastButton.addClass('jqx-hidden');}}}}}},{key:'_renderSettings',value:function _renderSettings(){var that=this;var summaryStart=that.pageIndex*that.pageSize;var summaryEnd=(that.pageIndex+1)*that.pageSize;var totalSummaryEnd=that.pagesCount*that.pageSize;that.$pagerSummaryContainer.removeClass('near');that.$pagerSizeSelectorAndLabelContainer.removeClass('near');that.$pagerInputAndLabelContainer.removeClass('near');if(that.summaryPosition==='near'){that.$pagerSummaryContainer.addClass('near');}if(that.pageSizeSelectorPosition==='near'){that.$pagerSizeSelectorAndLabelContainer.addClass('near');}if(that.navigationInputPosition==='near'){that.$pagerInputAndLabelContainer.addClass('near');}that.$.pagerSummaryContainer.innerHTML='<span class="jqx-summary-start">'+(1+summaryStart)+'</span> <span class="jqx-summary-hyphen">-</span> <span class="jqx-summary-end">'+summaryEnd+'</span>'+'<span class="jqx-summary-prefix">'+that.localize('summaryPrefix')+'</span> <span class="jqx-summary-total-end">'+totalSummaryEnd+'</span> <span class="jqx-summary-suffix">'+that.localize('summarySuffix')+'</span>';}},{key:'_renderPageIndexSelectors',/**
     * Creates page with pageIndexSelectors, based on pageIndexSelectors and pageIndexSelectors-per-page properties.
     */value:function _renderPageIndexSelectors(){var that=this;if(that.pageIndex<0||that.pageIndex>=that.pagesCount){return;}that.$.pageIndexSelectorsContainer.innerHTML='';var isArray=false;if(Array.isArray(that.pageIndexSelectors)){isArray=true;}var pageIndexSelectorStartIndex=Math.floor(that.pageIndex/that._pageIndexSelectorsCount)*that._pageIndexSelectorsCount;var pageIndexSelectorEndIndex=Math.min(that.pagesCount,pageIndexSelectorStartIndex+that._pageIndexSelectorsCount);var pageIndexSelectorIndex=0;for(var _i529=pageIndexSelectorStartIndex;_i529<pageIndexSelectorEndIndex;_i529++){var newPageIndexSelector=document.createElement('span');var newPageIndexSelectorContent=_i529+1;newPageIndexSelector.className='jqx-pager-page-index-selector';if(isArray){var pageIndexSelector=that.pageIndexSelectors[pageIndexSelectorIndex++];if(pageIndexSelector){if(pageIndexSelector.label){newPageIndexSelectorContent=that.pageIndexSelectors[_i529].label;}else if(typeof pageIndexSelector==='string'){newPageIndexSelectorContent=pageIndexSelector;}if(pageIndexSelector.value){newPageIndexSelector.setAttribute('value',that.pageIndexSelectors[_i529].value);}}}newPageIndexSelector.index=_i529;newPageIndexSelector.innerHTML=newPageIndexSelectorContent;that.$.pageIndexSelectorsContainer.appendChild(newPageIndexSelector);if(_i529===that.pageIndex){newPageIndexSelector.classList.add('jqx-selected');newPageIndexSelector.setAttribute('selected','');}}}/**
    * Last button click handler.
    */},{key:'_lastButtonClickHandler',value:function _lastButtonClickHandler(){var that=this;that.last();}},{key:'last',value:function last(){var that=this;that.navigateTo(that.pagesCount-1);}/**
    * First button click handler.
    */},{key:'_firstButtonClickHandler',value:function _firstButtonClickHandler(){var that=this;that.first();}},{key:'first',value:function first(){var that=this;that.navigateTo(0);}},{key:'_renderButtons',value:function _renderButtons(){var that=this;if(that.pageIndex===0){that.$.firstButton.setAttribute('disabled','');that.$.previousButton.setAttribute('disabled','');}else{that.$.firstButton.removeAttribute('disabled');that.$.previousButton.removeAttribute('disabled');}if(that.pageIndex===that.pagesCount-1){that.$.nextButton.setAttribute('disabled','');that.$.lastButton.setAttribute('disabled','');}else{that.$.nextButton.removeAttribute('disabled');that.$.lastButton.removeAttribute('disabled');}that.$nearButtonsContainer.removeClass('far');that.$farButtonsContainer.removeClass('far');that.$nearButtonsContainer.removeClass('near');that.$farButtonsContainer.removeClass('near');switch(that.navigationButtonsPosition){case'near':that.$nearButtonsContainer.addClass('near');that.$farButtonsContainer.addClass('near');break;case'far':that.$nearButtonsContainer.addClass('far');that.$farButtonsContainer.addClass('far');break;case'both':that.$nearButtonsContainer.addClass('near');that.$farButtonsContainer.addClass('far');break;}}},{key:'_navigateToInputChangeHandler',value:function _navigateToInputChangeHandler(){var that=this;var pageIndex=parseInt(that.$.navigateToInput.value)-1;if(isNaN(pageIndex)){that.$.navigateToInput.value='1';pageIndex=parseInt(that.$.navigateToInput.value-1);}that.navigateTo(pageIndex);}},{key:'_pageIndexSelectorsContainerClickHandler',value:function _pageIndexSelectorsContainerClickHandler(event){var that=this,closestPageIndexSelector=that.enableShadowDOM?event.composedPath()[0].closest('.jqx-pager-page-index-selector'):event.target.closest('.jqx-pager-page-index-selector');if(!closestPageIndexSelector||closestPageIndexSelector.classList.contains('jqx-selected')){return;}that.navigateTo(closestPageIndexSelector.index);}},{key:'_pageSizeSelectorChangeHandler',value:function _pageSizeSelectorChangeHandler(event){var that=this;if(!that.showPageSizeSelector||that.disabled||that._updating){return;}that.pageSize=parseInt(event.detail.value);that.$.fireEvent('pageSizeChanged',{'value':parseInt(event.detail.value)});}/**
    * Pager's keydown event handler.
    */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;if(that.disabled){return;}if((that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement)===that.$.navigateToInput){return;}if(that.$.pageSizeSelector.getAttribute('focus')!==null){return;}switch(event.key){case'End':that.last();event.preventDefault();break;case'Home':that.first();event.preventDefault();break;case'PageDown':case'ArrowDown':case'ArrowLeft':that.prev();event.preventDefault();break;case'PageUp':case'ArrowUp':case'ArrowRight':that.next();event.preventDefault();break;}}/**
    * Next Page button click handler.
    */},{key:'_nextButtonClickHandler',value:function _nextButtonClickHandler(){var that=this;that.next();}/**
    * Previous Page button click handler.
    */},{key:'_previousButtonClickHandler',value:function _previousButtonClickHandler(){var that=this;that.prev();}},{key:'navigateTo',value:function navigateTo(pageIndex){var that=this,oldIndex=that.pageIndex;if(that.disabled||that.pageIndex===pageIndex||pageIndex<0||pageIndex>=that.pagesCount){return;}that.pageIndex=pageIndex;that._render();that.$.fireEvent('change',{'oldIndex':oldIndex,'index':pageIndex});}/**
    * Updates from-to summary block.
    */},{key:'_localize',value:function _localize(){var that=this,buttonsArray=['firstButton','lastButton','previousButton','nextButton'];for(var _i530=0;_i530<buttonsArray.length;_i530++){var button=that.$[buttonsArray[_i530]];if(!that.showNavigationButtonLabels&&_i530<2){button.innerHTML='';if(_i530===0){button.classList.add('jqx-arrow-left-first');}else{button.classList.add('jqx-arrow-right-last');}}else if(!that.showNavigationButtonLabels&&_i530>=2){button.innerHTML='';if(_i530===2){button.classList.add('jqx-arrow-left');}else{button.classList.add('jqx-arrow-right');}}else{button.classList.remove('jqx-arrow-left');button.classList.remove('jqx-arrow-right');button.classList.remove('jqx-arrow-left-first');button.classList.remove('jqx-arrow-right-last');button.innerHTML=that.localize(buttonsArray[_i530]);}}that.$.pageSizeLabel.innerHTML=that.localize('pageSizeLabel');that.$.navigateToLabel.innerHTML=that.localize('navigateToLabel');that.$.previousEllipsisButton.innerHTML=that.localize('ellipsis');that.$.nextEllipsisButton.innerHTML=that.localize('ellipsis');that.$.navigateToInput.placeholder=that.localize('navigateToInputPlaceholder');}},{key:'_nextEllipsisButtonClickHandler',value:function _nextEllipsisButtonClickHandler(){var that=this;that.navigateTo(that._pageIndexSelectorsCount+that.pageIndex);}},{key:'_previousEllipsisButtonClickHandler',value:function _previousEllipsisButtonClickHandler(){var that=this;that.navigateTo(-that._pageIndexSelectorsCount+that.pageIndex);}/**
    * Updates from-to summary block.
    */},{key:'_navigationButtonsClickHandler',value:function _navigationButtonsClickHandler(event){var that=this;if(that.disabled){return;}var targetElement=that.enableShadowDOM?event.composedPath()[0].closest('.jqx-pager-button'):event.target.closest('.jqx-pager-button');switch(targetElement){case that.$.firstButton:that._firstButtonClickHandler(event);break;case that.$.lastButton:that._lastButtonClickHandler(event);break;case that.$.previousButton:that._previousButtonClickHandler(event);break;case that.$.nextButton:that._nextButtonClickHandler(event);break;}}},{key:'_navigationButtonsDownHandler',value:function _navigationButtonsDownHandler(event){var that=this,targetElement=that.enableShadowDOM?event.originalEvent.composedPath()[0].closest('.jqx-pager-button')||event.originalEvent.composedPath()[0].closest('.jqx-pager-page-index-selector'):event.originalEvent.target.closest('.jqx-pager-button')||event.originalEvent.target.closest('.jqx-pager-page-index-selector');if(that.disabled||!targetElement){return;}if(that.hasRippleAnimation){JQX.Utilities.Animation.Ripple.animate(targetElement,event.pageX,event.pageY);}if(targetElement===that.$.previousButton||targetElement===that.$.nextButton){that._startRepeat(event,targetElement);}}},{key:'_updateInBoundsFlag',value:function _updateInBoundsFlag(event){var that=this,button=that.enableShadowDOM?event.composedPath()[0]:event.target;button._isPointerInBounds=true;if(event.type==='mouseleave'){button._isPointerInBounds=false;}var buttons='buttons'in event?event.buttons:event.which;if(buttons!==1){that._stopRepeat(event);}}},{key:'_startRepeat',value:function _startRepeat(event,button){var that=this;if(!that._initialTimer){that._initialTimer=setTimeout(function(){that._repeatTimer=setInterval(function(){if(button._isPointerInBounds){if(button===that.$.previousButton){that._previousButtonClickHandler(event);}else{that._nextButtonClickHandler(event);}}},50);},150);}}},{key:'_stopRepeat',value:function _stopRepeat(){var that=this;if(that._repeatTimer){clearInterval(that._repeatTimer);that._repeatTimer=null;}if(that._initialTimer){clearTimeout(that._initialTimer);that._initialTimer=null;}}},{key:'_pageIndexSelectorsCount',get:function get(){var that=this;var pageIndexSelectorsCount=parseInt(that.pageIndexSelectors);if(Array.isArray(that.pageIndexSelectors)){pageIndexSelectorsCount=that.pageIndexSelectors.length;}return pageIndexSelectorsCount;}}],[{key:'properties',// Pager's properties.
get:function get(){return{'autoEllipsis':{value:'none',type:'string',// After - displays AutoEllipsis only after the Numeric Buttons.
// Before - displays AutoEllipsis only before the Numeric Buttons.
// Both - displays AutoEllipsis before and after the Numeric Buttons.
// None - doesn't display AutoEllipsis.
allowedValues:['none','before','after','both']},'messages':{value:{'en':{'firstButton':'First','lastButton':'Last','previousButton':'Previous','nextButton':'Next','navigateToLabel':'Go to:','pageSizeLabel':'Show:','navigateToInputPlaceholder':'','ellipsis':'...','summaryString':'of','summaryPrefix':'of','summarySuffix':''}},type:'object',extend:true},'navigationButtonsPosition':{value:'both',allowedValues:['near','far','both'],type:'string'},'navigationInputPosition':{value:'far',allowedValues:['near','far'],type:'string'},'pageIndex':{value:0,type:'number'},'pageIndexSelectors':{value:0,type:'any'},'pagesCount':{value:100,type:'number'},'pageSize':{value:10,type:'number'},'pageSizeSelectorPosition':{value:'far',allowedValues:['near','far'],type:'string'},'pageSizeSelectorDataSource':{value:[10,25,50],type:'array'},'showPrevNextNavigationButtons':{value:false,type:'boolean'},'showFirstLastNavigationButtons':{value:false,type:'boolean'},'showNavigationButtonLabels':{value:false,type:'boolean'},'showNavigationInput':{value:false,type:'boolean'},'showSummary':{value:false,type:'boolean'},'showPageSizeSelector':{value:false,type:'boolean'},'showPageIndexSelectors':{value:false,type:'boolean'},'summaryPosition':{value:'far',allowedValues:['near','far'],type:'string'}};}/**
     * Pager's event listeners.
     */},{key:'listeners',get:function get(){return{'click':'_navigationButtonsClickHandler','nextEllipsisButton.click':'_nextEllipsisButtonClickHandler','previousEllipsisButton.click':'_previousEllipsisButtonClickHandler','down':'_navigationButtonsDownHandler','navigateToInput.change':'_navigateToInputChangeHandler','nextButton.mouseenter':'_updateInBoundsFlag','nextButton.mouseleave':'_updateInBoundsFlag','pageIndexSelectorsContainer.click':'_pageIndexSelectorsContainerClickHandler','pageSizeSelector.change':'_pageSizeSelectorChangeHandler','previousButton.mouseenter':'_updateInBoundsFlag','previousButton.mouseleave':'_updateInBoundsFlag','keydown':'_keyDownHandler','resize':'_resizeHandler','document.up':'_stopRepeat'};}},{key:'requires',get:function get(){return{'JQX.DropDownList':'jqxdropdownlist.js'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.pager.css'];}}]);return Pager;}(JQX.BaseElement));JQX('jqx-base-progress-bar',function(_JQX$BaseElement18){babelHelpers.inherits(BaseProgressBar,_JQX$BaseElement18);function BaseProgressBar(){babelHelpers.classCallCheck(this,BaseProgressBar);return babelHelpers.possibleConstructorReturn(this,(BaseProgressBar.__proto__||Object.getPrototypeOf(BaseProgressBar)).apply(this,arguments));}babelHelpers.createClass(BaseProgressBar,[{key:'ready',value:function ready(){babelHelpers.get(BaseProgressBar.prototype.__proto__||Object.getPrototypeOf(BaseProgressBar.prototype),'ready',this).call(this);var that=this;that._updateProgress();}/**
   * Updates the progressbar when a property is changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
   * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
   */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(BaseProgressBar.prototype.__proto__||Object.getPrototypeOf(BaseProgressBar.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;that._updateProgress();if(propertyName==='value'){that.$.fireEvent('change',{'value':newValue,'oldValue':oldValue,changeType:'api'});}}},{key:'_updateProgress',value:function _updateProgress(){}},{key:'_percentageValue',get:function get(){var that=this;var max=Math.max(that.min,that.max);var min=Math.min(that.min,that.max);var validValue=Math.min(max,Math.max(min,that.value));var percentageValue=(validValue-min)/(max-min);return percentageValue;}}],[{key:'properties',/** Progressbar's properties */get:function get(){return{'indeterminate':{value:false,type:'boolean'},'inverted':{value:false,type:'boolean'},'formatFunction':{value:null,type:'function'},'max':{value:100,type:'number'},'min':{value:0,type:'number'},'showProgressValue':{value:false,type:'boolean'},'value':{value:0,type:'number?'}};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.progressbar.css'];}}]);return BaseProgressBar;}(JQX.BaseElement));JQX('jqx-circular-progress-bar',function(_JQX$BaseProgressBar){babelHelpers.inherits(CircularProgressBar,_JQX$BaseProgressBar);function CircularProgressBar(){babelHelpers.classCallCheck(this,CircularProgressBar);return babelHelpers.possibleConstructorReturn(this,(CircularProgressBar.__proto__||Object.getPrototypeOf(CircularProgressBar)).apply(this,arguments));}babelHelpers.createClass(CircularProgressBar,[{key:'template',/** progressbar's HTML template */value:function template(){return'<div id="container">\n                    <svg width="100%" height="100%" viewPort="0 0 100 100" viewBox="0 0 100 100">\n                       <circle id="value" class ="jqx-value-path" r="50" cx="50" cy="50" transform="rotate(270 50 50)"></circle>\n                       <circle id="value" class ="jqx-value" r="50" cx="50" cy="50" transform="rotate(270 50 50)"></circle>\n                    </svg>\n                    <div class ="jqx-label-container">\n                        <content></content>\n                        <span id="label" class ="jqx-label"></span>\n                    </div>\n                </div>';}/**
    * Circular Progress bar's event listeners.
    */},{key:'ready',/**
    * Circular progress bar's ready method.
    **/value:function ready(){babelHelpers.get(CircularProgressBar.prototype.__proto__||Object.getPrototypeOf(CircularProgressBar.prototype),'ready',this).call(this);var that=this;that.$.container.style.width=that.$.container.style.height=Math.min(that.offsetWidth,that.offsetHeight)+'px';if(that.$.hasClass('echo-animation')){that.value=that.max;that._updateProgress();}}/**
    * Circular Progress Bar's resize handler. Ensures the Progress Bars always has the same proportions.
    **/},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;that.$.container.style.width=that.$.container.style.height=Math.min(that.offsetWidth,that.offsetHeight)+'px';}/** Updates the progress element. */},{key:'_updateProgress',value:function _updateProgress(){babelHelpers.get(CircularProgressBar.prototype.__proto__||Object.getPrototypeOf(CircularProgressBar.prototype),'_updateProgress',this).call(this);var that=this,radius=that.indeterminate?Math.PI*100:Math.PI*100-that._percentageValue*Math.PI*100,isIE=/*@cc_on!@*/false||!!document.documentMode,isEdge=!isIE&&!!window.StyleMedia;if(that.showProgressValue){var percentage=parseInt(that._percentageValue*100);that.$.label.innerHTML=that.formatFunction?that.formatFunction(percentage):percentage+'%';}else{that.$.label.innerHTML='';}//Check if the browser is Edge to make the animation
if(isIE||isEdge){if(that.value===null||that.indeterminate){that.$.value.style.strokeDashoffset='';that.$.value.setAttribute('class','jqx-value jqx-value-animation-ms');return;}else{that.$.value.setAttribute('class','jqx-value');that.$.value.style.strokeDashoffset=that.inverted?-radius:radius;return;}}that.$.value.style.strokeDashoffset=that.inverted?-radius:radius;if(that.value===null||that.indeterminate){that.$value.addClass('jqx-value-animation');return;}that.$value.removeClass('jqx-value-animation');}}],[{key:'listeners',get:function get(){return{'resize':'_resizeHandler'};}}]);return CircularProgressBar;}(JQX.BaseProgressBar));JQX('jqx-progress-bar',function(_JQX$BaseProgressBar2){babelHelpers.inherits(ProgressBar,_JQX$BaseProgressBar2);function ProgressBar(){babelHelpers.classCallCheck(this,ProgressBar);return babelHelpers.possibleConstructorReturn(this,(ProgressBar.__proto__||Object.getPrototypeOf(ProgressBar)).apply(this,arguments));}babelHelpers.createClass(ProgressBar,[{key:'template',/** progressbar's HTML template. */value:function template(){return'<div>\n                    <div id="value" class="jqx-value"></div>\n                    <div id="label" class ="jqx-label"></div>\n                </div>';}/** Updates the progress elements. */},{key:'_updateProgress',value:function _updateProgress(){babelHelpers.get(ProgressBar.prototype.__proto__||Object.getPrototypeOf(ProgressBar.prototype),'_updateProgress',this).call(this);var that=this;//Label for Percentages
if(that.showProgressValue){var percentage=parseInt(that._percentageValue*100);that.$.label.innerHTML=that.formatFunction?that.formatFunction(percentage):percentage+'%';}else{that.$.label.innerHTML='';}if(that.value===null||that.indeterminate){that.$value.addClass('jqx-value-animation');}else{that.$value.removeClass('jqx-value-animation');}that.$.value.style.transform=that.orientation==='horizontal'?'scaleX('+that._percentageValue+')':'scaleY('+that._percentageValue+')';}}],[{key:'properties',/** Progressbar's properties */get:function get(){return{'orientation':{value:'horizontal',allowedValues:['horizontal','vertical'],type:'string'}};}}]);return ProgressBar;}(JQX.BaseProgressBar));/**
* ScrollBar custom element.
*/JQX('jqx-scroll-bar',function(_JQX$BaseElement19){babelHelpers.inherits(ScrollBar,_JQX$BaseElement19);function ScrollBar(){babelHelpers.classCallCheck(this,ScrollBar);return babelHelpers.possibleConstructorReturn(this,(ScrollBar.__proto__||Object.getPrototypeOf(ScrollBar)).apply(this,arguments));}babelHelpers.createClass(ScrollBar,[{key:'template',/** ScrollBar's template. */value:function template(){var template='<div id="container" class="jqx-container">\n                    <div id="nearButton" class ="jqx-scroll-button jqx-arrow-left"></div>\n                    <div  id="track" class ="jqx-track">\n                        <div id="thumb" class="jqx-thumb"></div>\n                    </div>\n                    <div id="farButton" class ="jqx-scroll-button jqx-arrow-right"></div>\n            </div>';return template;}},{key:'_updateInBoundsFlag',value:function _updateInBoundsFlag(event){var that=this;var button=event.target;button._isPointerInBounds=true;if(event.type==='mouseleave'){button._isPointerInBounds=false;}var buttons='buttons'in event?event.buttons:event.which;if(buttons!==1){that._stopRepeat(event);}}},{key:'_startRepeat',value:function _startRepeat(event){var that=this;if(that.disabled){return;}var button=event.target;if(!button._initialTimer){button._initialTimer=setTimeout(function(){button._repeatTimer=setInterval(function(){if(button._isPointerInBounds){var buttons='buttons'in event?event.buttons:event.which;button.$.fireEvent('click',{buttons:buttons,clientX:event.clientX,clientY:event.clientY,pageX:event.pageX,pageY:event.pageY,screenX:event.screenX,screenY:event.screenY});}},that.clickRepeatDelay);},3*that.clickRepeatDelay);}}},{key:'_stopRepeat',value:function _stopRepeat(event){var that=this;if(that.disabled){return;}var button=event.target;if(button._repeatTimer){clearInterval(button._repeatTimer);button._repeatTimer=null;}if(button._initialTimer){clearTimeout(button._initialTimer);button._initialTimer=null;}}},{key:'_calculateThumbSize',value:function _calculateThumbSize(scrollAreaSize){var that=this;var positions=that.max-that.min;var enoughSpace=that.orientation==='horizontal'?that.$.track.offsetWidth>10:that.$.track.offsetHeight>10;var size=0;if(positions>=1&&enoughSpace){size=scrollAreaSize/(positions+scrollAreaSize)*scrollAreaSize;if(that.$.thumb.className.indexOf('jqx-hidden')>=0){that.$thumb.removeClass('jqx-hidden');}}else{that.$thumb.addClass('jqx-hidden');}return Math.max(10,Math.min(size,scrollAreaSize));}},{key:'_dragStartHandler',value:function _dragStartHandler(event){var that=this;if(that.disabled){return;}that.thumbCapture=true;that.dragStartX=event.clientX;that.dragStartY=event.clientY;that.dragStartValue=that.value;event.stopPropagation();event.preventDefault();}},{key:'_dragHandler',value:function _dragHandler(event){var that=this;if(that.thumbCapture!==true){return;}that._isThumbDragged=true;var ratio=(that.max-that.min)/(that.scrollBarSize-that.thumbSize);var offsetValue=that.orientation==='horizontal'?(event.clientX-that.dragStartX)*ratio:(event.clientY-that.dragStartY)*ratio;var step=offsetValue;if(that.rightToLeft&&that.orientation==='horizontal'){step=-offsetValue;}that._updateValue(that.dragStartValue+step);event.stopPropagation();event.preventDefault();if(event.originalEvent){event.originalEvent.stopPropagation();event.originalEvent.preventDefault();}}},{key:'_dragEndHandler',value:function _dragEndHandler(event){var that=this;if(that._trackDownTimer){clearInterval(that._trackDownTimer);that._trackDownTimer=null;}if(!that.thumbCapture){return;}that.thumbCapture=false;that._isThumbDragged=false;if(that.mechanicalAction==='switchWhenReleased'){that._updateValue(that.dragStartValue,that.value);}else if(this.mechanicalAction==='switchUntilReleased'){that._updateValue(that.dragStartValue);}event.preventDefault();event.stopPropagation();event.originalEvent.preventDefault();event.originalEvent.stopPropagation();}},{key:'_farButtonClickHandler',value:function _farButtonClickHandler(){var that=this;if(that.disabled){return;}var value=that.value;that._updateValue(that.value+that.step);if(that.mechanicalAction==='switchUntilReleased'){that._updateValue(value);}}},{key:'_nearButtonClickHandler',value:function _nearButtonClickHandler(){var that=this;if(that.disabled){return;}var value=that.value;that._updateValue(that.value-that.step);if(that.mechanicalAction==='switchUntilReleased'){that._updateValue(value);}}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(ScrollBar.prototype.__proto__||Object.getPrototypeOf(ScrollBar.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'min':case'max':case'orientation':case'showButtons':{that._layout();break;}case'value':that._updateValue(oldValue,newValue);break;}}},{key:'ready',value:function ready(){babelHelpers.get(ScrollBar.prototype.__proto__||Object.getPrototypeOf(ScrollBar.prototype),'ready',this).call(this);var that=this;that._layout();}},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;that._layout();}},{key:'refresh',value:function refresh(){var that=this;that._layout();}},{key:'_layout',value:function _layout(){var that=this;that.scrollBarSize=that.orientation==='horizontal'?that.$.track.offsetWidth:that.$.track.offsetHeight;that.thumbSize=that._calculateThumbSize(that.scrollBarSize);if(that.orientation==='horizontal'&&that.$.thumb.style.width!==that.thumbSize+'px'){that.$.thumb.style.width=that.thumbSize+'px';}else if(that.orientation==='vertical'&&that.$.thumb.style.height!==that.thumbSize+'px'){that.$.thumb.style.height=that.thumbSize+'px';}if(that.orientation==='horizontal'){if(that.$.nearButton.classList.contains('jqx-arrow-up')){that.$.nearButton.classList.remove('jqx-arrow-up');}if(that.$.farButton.classList.contains('jqx-arrow-down')){that.$.farButton.classList.remove('jqx-arrow-down');}if(!that.$.nearButton.classList.contains('jqx-arrow-left')){that.$.nearButton.classList.add('jqx-arrow-left');}if(!that.$.farButton.classList.contains('jqx-arrow-right')){that.$.farButton.classList.add('jqx-arrow-right');}}else{if(that.$.nearButton.classList.contains('jqx-arrow-left')){that.$.nearButton.classList.remove('jqx-arrow-left');}if(that.$.farButton.classList.contains('jqx-arrow-right')){that.$.farButton.classList.remove('jqx-arrow-right');}if(!that.$.nearButton.classList.contains('jqx-arrow-up')){that.$.nearButton.classList.add('jqx-arrow-up');}if(!that.$.farButton.classList.contains('jqx-arrow-down')){that.$.farButton.classList.add('jqx-arrow-down');}}that._updateThumbPosition();if(that.value>that.max||that.value<that.min){that._updateValue(that.value,that.value>that.max?that.max:that.min);}}},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that.thumbCapture){event.preventDefault();}}},{key:'_trackDownHandler',value:function _trackDownHandler(event){var that=this;if(event.target!==that.$.track){return;}that._trackDownTimer=setInterval(function(){that._trackClickHandler(event);},that.clickRepeatDelay);event.stopPropagation();event.preventDefault();}},{key:'_trackClickHandler',value:function _trackClickHandler(event){var that=this;if(that.disabled){return;}if(that._isThumbDragged){clearInterval(that._trackDownTimer);that._trackDownTimer=null;return;}var thumbRect=that.$.thumb.getBoundingClientRect();var x=event.pageX-window.pageXOffset;var y=event.pageY-window.pageYOffset;var value=that.value;if(that.orientation==='horizontal'){if(x>(that._isThumbDragged?that.dragStartX:thumbRect.right)){that._updateValue(that.value+that.largeStep);}else if(x<(that._isThumbDragged?that.dragStartX:thumbRect.left)){that._updateValue(that.value-that.largeStep);}}else{if(y>(that._isThumbDragged?that.dragStartY:thumbRect.bottom)){that._updateValue(that.value+that.largeStep);}else if(y<(that._isThumbDragged?that.dragStartY:thumbRect.top)){that._updateValue(that.value-that.largeStep);}}if(that.mechanicalAction==='switchUntilReleased'){that._updateValue(value);}}},{key:'_updateValue',value:function _updateValue(oldValue,newValue){var that=this;if(arguments.length===1){newValue=oldValue;oldValue=that.value;}if(newValue===undefined||isNaN(newValue)){newValue=that.min;}if(newValue>that.max){newValue=that.max;}if(newValue<that.min){newValue=that.min;}that.value=newValue;if(oldValue!==newValue){that._updateThumbPosition();if(that.thumbCapture&&that.mechanicalAction==='switchWhenReleased'){return;}if(that.onChange){that.onChange({'value':that.value,'oldValue':oldValue,min:that.min,max:that.max});return;}that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue,min:that.min,max:that.max});}}},{key:'_updateThumbPosition',value:function _updateThumbPosition(){var that=this;var height=that.$.track.offsetHeight;var width=that.$.track.offsetWidth;var scrollBarSize=that.orientation==='horizontal'?width:height;var thumbSize=that._calculateThumbSize(scrollBarSize);var maxThumbPosition=that.orientation==='horizontal'?width-thumbSize:height-thumbSize;var thumbPosition=(scrollBarSize-thumbSize)/(that.max-that.min)*(that.value-that.min);if(that.rightToLeft&&that.orientation==='horizontal'){thumbPosition=(scrollBarSize-thumbSize)/(that.max-that.min)*(that.max-that.value-that.min);}thumbPosition=Math.min(maxThumbPosition,Math.max(0,thumbPosition));if(that.orientation==='vertical'&&that.$.thumb.style.top!==thumbPosition+'px'){that.$.thumb.style.top=thumbPosition+'px';}else if(that.orientation==='horizontal'&&that.$.thumb.style.left!==thumbPosition+'px'){that.$.thumb.style.left=thumbPosition+'px';}}}],[{key:'properties',// ScrollBar's properties.
get:function get(){return{'clickRepeatDelay':{type:'integer',value:50},'largeStep':{type:'integer',value:100},'min':{type:'integer',value:0},'max':{type:'integer',value:1000},'mechanicalAction':{value:'switchWhileDragging',allowedValues:['switchUntilReleased','switchWhenReleased','switchWhileDragging'],type:'string'},'orientation':{type:'string',value:'horizontal',allowedValues:['horizontal','vertical']},'step':{type:'integer',value:10},'showButtons':{type:'boolean',value:true,defaultReflectToAttribute:true},'value':{type:'integer',value:0}};}},{key:'styleUrls',get:function get(){return['jqx.scrollbar.css'];}},{key:'listeners',get:function get(){return{'nearButton.click':'_nearButtonClickHandler','nearButton.mousedown':'_startRepeat','nearButton.mouseup':'_stopRepeat','nearButton.mouseenter':'_updateInBoundsFlag','nearButton.mouseleave':'_updateInBoundsFlag','farButton.click':'_farButtonClickHandler','farButton.mousedown':'_startRepeat','farButton.mouseup':'_stopRepeat','farButton.mouseenter':'_updateInBoundsFlag','farButton.mouseleave':'_updateInBoundsFlag','track.down':'_trackDownHandler','track.click':'_trackClickHandler','thumb.down':'_dragStartHandler','document.move':'_dragHandler','document.up':'_dragEndHandler','up':'_dragEndHandler','document.selectstart':'_selectStartHandler','resize':'_resizeHandler'};}}]);return ScrollBar;}(JQX.BaseElement));JQX('jqx-splitter-item',function(_JQX$ContentElement11){babelHelpers.inherits(SplitterItem,_JQX$ContentElement11);function SplitterItem(){babelHelpers.classCallCheck(this,SplitterItem);return babelHelpers.possibleConstructorReturn(this,(SplitterItem.__proto__||Object.getPrototypeOf(SplitterItem)).apply(this,arguments));}babelHelpers.createClass(SplitterItem,[{key:'template',/**
    * Element's template
    */value:function template(){return'<div id="container">\n                    <div class="jqx-header" id="header"></div>\n                    <div class="jqx-content" id="content" inner-H-T-M-L="[[innerHTML]]">\n                        <content></content>\n                    </div>\n                </div>';}/**
    * Element's event binding
    */},{key:'propertyChangedHandler',/**
   * Updates the SplitterItem when a property is  changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value.
   * @param {number/string} newValue The new entered value.
   */value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'collapsed':that._ignorePropertyValue=true;newValue?that.collapse():that.expand();break;case'collapsible':that._updateNearSplitterBars();break;case'size':case'min':case'max':that._setSize(propertyName,newValue);break;default:babelHelpers.get(SplitterItem.prototype.__proto__||Object.getPrototypeOf(SplitterItem.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
     * Called when the element is attached to the DOM
     */},{key:'attached',value:function attached(){babelHelpers.get(SplitterItem.prototype.__proto__||Object.getPrototypeOf(SplitterItem.prototype),'attached',this).call(this);var that=this;if(!that._sizeLimits){that._sizeLimits={};}var computedStyle=getComputedStyle(that);if(!that.min){that._sizeLimits.minWidth=parseFloat(computedStyle.getPropertyValue('min-width'))||0;that._sizeLimits.minHeight=parseFloat(computedStyle.getPropertyValue('min-height'))||0;}if(!that.max){that._sizeLimits.maxWidth=parseFloat(computedStyle.getPropertyValue('max-width'))||0;that._sizeLimits.maxHeight=parseFloat(computedStyle.getPropertyValue('max-height'))||0;}}/**
     * Called when the element is detached from the DOM
     */},{key:'detached',value:function detached(){babelHelpers.get(SplitterItem.prototype.__proto__||Object.getPrototypeOf(SplitterItem.prototype),'detached',this).call(this);var that=this;that.$.removeClass('animate');}/**
   * Appends a node to the splitter item.
   */},{key:'appendChild',value:function appendChild(node){var that=this;if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}that.$.content.appendChild(node);}/**
     * Collapses the item
     */},{key:'collapse',value:function collapse(far){var that=this;if(!that.collapsible){that.collapsed=false;return;}if(that._ignorePropertyValue||!that.collapsed){var ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');if(!ownerElement){return;}var itemIndex=ownerElement._items.indexOf(that);if(itemIndex===ownerElement._items.length-1){far=true;}else if(itemIndex===0){far=false;}var direction=far?-1:1;var neighbourItemIndex=itemIndex+direction,neighbourItem=ownerElement._items[neighbourItemIndex];while(neighbourItem){if(!neighbourItem.collapsed){break;}neighbourItemIndex+=direction;neighbourItem=ownerElement._items[neighbourItemIndex];}if(!neighbourItem){that.collapsed=false;return;}delete that._ignorePropertyValue;//Store the size before collapsing
if(!that._sizeBeforeCollapse){that._sizeBeforeCollapse=that[ownerElement._measurements.size];}if(!neighbourItem._sizeBeforeCollapse){neighbourItem._sizeBeforeCollapse=neighbourItem[ownerElement._measurements.size];}var splitterBar=void 0;if(that.previousElementSibling instanceof JQX.SplitterBar){splitterBar=that.previousElementSibling;}else if(that.nextElementSibling instanceof JQX.SplitterBar){splitterBar=that.nextElementSibling;}var totalSpace=neighbourItem[ownerElement._measurements.size]+that[ownerElement._measurements.size],minSize=splitterBar?splitterBar[ownerElement._measurements.size]:that._sizeLimits[ownerElement._measurements.minDimension],spaceAvailable=totalSpace-minSize;if(totalSpace&&spaceAvailable<minSize){that.collapsed=false;return;}//Add animation class
if(that.hasAnimation&&!ownerElement._isInitializing){that.$.addClass('animate');neighbourItem.$.addClass('animate');that.addEventListener('transitionend',that._transitionEndHandler,{once:true});that.addEventListener('transitioncancel',that._transitionEndHandler,{once:true});neighbourItem.addEventListener('transitionend',that._transitionEndHandler,{once:true});neighbourItem.addEventListener('transitioncancel',that._transitionEndHandler,{once:true});}if(!that._paddings){var computedStyle=getComputedStyle(that);that._paddings=(parseFloat(computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position))||0)+(parseFloat(computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position2))||0);}if(neighbourItem._sizeBeforeCollapse){neighbourItem._sizeBeforeCollapse=neighbourItem._sizeBeforeCollapse+that._sizeBeforeCollapse;}if(neighbourItem._sizeLimits&&neighbourItem._sizeLimits[ownerElement._measurements.maxDimension]&&totalSpace>neighbourItem._sizeLimits[ownerElement._measurements.maxDimension]){neighbourItem._sizeLimits.ignoreUpdate=true;if(neighbourItem._sizeBeforeCollapse){neighbourItem.style[ownerElement._measurements.maxDimension]=neighbourItem._sizeBeforeCollapse+'px';}else{neighbourItem.style[ownerElement._measurements.maxDimension]='';}}if(neighbourItem._sizeBeforeCollapse){neighbourItem.style[ownerElement._measurements.dimension]=neighbourItem._sizeBeforeCollapse+'px';}that.style[ownerElement._measurements.dimension]=that.style[ownerElement._measurements.minDimension]='0';that.style.padding='0';//Make sure no paddings interferes with the size of the collapsed item
that._neighbourItem=neighbourItem;that.collapsed=true;ownerElement.$.fireEvent('collapse',{itemIndex:ownerElement._items.indexOf(that)});if(far){that.previousElementSibling.itemCollapsed=true;that.previousElementSibling.showFarButton=!(that.previousElementSibling.showNearButton=false);}else{that.nextElementSibling.itemCollapsed=true;that.nextElementSibling.showNearButton=!(that.nextElementSibling.showFarButton=false);}}}/**
    * Expands a splitter item
    */},{key:'expand',value:function expand(){var that=this;if(that._ignorePropertyValue||that.collapsed){var ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');if(!ownerElement){that.collapsed=true;return;}if(!that._neighbourItem){that.collapsed=true;return;}delete that._ignorePropertyValue;if(!that._neighbourItem._ignorePropertyValue&&that._neighbourItem.collapsed){var neighbourItemIndex=ownerElement._items.indexOf(that._neighbourItem);var direction=ownerElement._items.indexOf(that)>ownerElement._items.indexOf(that._neighbourItem)?-1:1;that._neighbourItem=ownerElement._items[neighbourItemIndex];while(that._neighbourItem){if(!that._neighbourItem.collapsed){break;}neighbourItemIndex+=direction;that._neighbourItem=ownerElement._items[neighbourItemIndex];}}if(!that._neighbourItem){that.collapsed=true;return;}if(that.min){that._setSize('min',that.min,true);}var totalSpace=that._neighbourItem._sizeBeforeCollapse,minSize=that._sizeLimits[ownerElement._measurements.minDimension],neighbourItemMin=that._neighbourItem._sizeLimits[ownerElement._measurements.minDimension],spaceAvailable=totalSpace-minSize;if(totalSpace&&spaceAvailable<neighbourItemMin){that.collapsed=true;return;}if(!that._neighbourItem._paddings){var computedStyle=getComputedStyle(that._neighbourItem);that._neighbourItem._paddings=(parseFloat(computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position))||0)+(parseFloat(computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position2))||0);}if(!that._paddings){var _computedStyle=getComputedStyle(that);that._paddings=(parseFloat(_computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position))||0)+(parseFloat(_computedStyle.getPropertyValue('padding-'+ownerElement._measurements.position2))||0);}if((that.size+'').indexOf('%')>-1&&(!that._sizeBeforeCollapse||that._sizeBeforeCollapse===0)&&that._neighbourItem._sizeBeforeCollapse){var totalItemSize=0;ownerElement._items.map(function(item){return totalItemSize+=!item.collapsed?item.style[ownerElement._measurements.dimension]&&item.style[ownerElement._measurements.dimension].indexOf('%')<-1&&item._sizeBeforeCollapse?item._sizeBeforeCollapse:item.getBoundingClientRect()[ownerElement._measurements.dimension]:0;});that._sizeBeforeCollapse=totalItemSize*parseFloat(that.size)/100;}var previousSize=Math.min(Math.max(minSize,that._sizeBeforeCollapse),totalSpace-that._neighbourItem._paddings-that._paddings-neighbourItemMin);if(previousSize<0){that.collapsed=true;return;}//Add animation class
if(that.hasAnimation&&!ownerElement._isInitializing){that.$.addClass('animate');that._neighbourItem.$.addClass('animate');that.addEventListener('transitionend',that._transitionEndHandler,{once:true});that.addEventListener('transitioncancel',that._transitionEndHandler,{once:true});that._neighbourItem.addEventListener('transitionend',that._transitionEndHandler,{once:true});that._neighbourItem.addEventListener('transitioncancel',that._transitionEndHandler,{once:true});}//Restore the size before collapsing
that.style.padding='';that.style[ownerElement._measurements.minDimension]=that.min?that._sizeLimits[ownerElement._measurements.minDimension]+'px':'';that.style[ownerElement._measurements.dimension]=(that._sizeBeforeCollapse=previousSize)+'px';that._neighbourItem.style[ownerElement._measurements.dimension]=(that._neighbourItem._sizeBeforeCollapse=Math.max(that._neighbourItem._sizeLimits[ownerElement._measurements.minDimension],totalSpace-previousSize))+'px';if(that._neighbourItem._sizeLimits[ownerElement._measurements.maxDimension]){that._neighbourItem.style[ownerElement._measurements.maxDimension]=that._neighbourItem._sizeLimits[ownerElement._measurements.maxDimension]+'px';}that.collapsed=false;ownerElement.$.fireEvent('expand',{itemIndex:ownerElement._items.indexOf(that)});if(ownerElement._items.indexOf(that)>ownerElement._items.indexOf(that._neighbourItem)){that.previousElementSibling.itemCollapsed=false;that.previousElementSibling.showNearButton=that._neighbourItem.collapsible;}else{that.nextElementSibling.itemCollapsed=false;that.nextElementSibling.showFarButton=that._neighbourItem.collapsible;}var previousElement=ownerElement._items[ownerElement._items.indexOf(that)-1],nextElement=ownerElement._items[ownerElement._items.indexOf(that)+1];if(previousElement){var previousSplitterBar=previousElement.nextElementSibling;if(previousSplitterBar&&previousSplitterBar instanceof JQX.SplitterBar){if(!previousElement.collapsed){previousSplitterBar.itemCollapsed=false;previousSplitterBar.showNearButton=previousElement.collapsible;previousSplitterBar.showFarButton=that.collapsible;}else{previousSplitterBar.showNearButton=that.collapsible;}}}if(nextElement){var nextSplitterBar=nextElement.previousElementSibling;if(nextSplitterBar&&nextSplitterBar instanceof JQX.SplitterBar){if(!nextElement.collapsed){nextSplitterBar.itemCollapsed=false;nextSplitterBar.showNearButton=that.collapsible;nextSplitterBar.showFarButton=nextElement.collapsible;}else{nextSplitterBar.showFarButton=nextElement.collapsed;}}}delete that._neighbourItem;}}/**
  * Inserts a node before another node inside the splitter item.
  */},{key:'insertBefore',value:function insertBefore(node,referenceNode){var that=this;if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'insertBefore',node:'node'}));return;}if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}that.$.content.insertBefore(node,referenceNode||null);}/**
    * Locks a splitter item so it's size can't change.
    */},{key:'lock',value:function lock(){var that=this;that.locked=true;}/**
    * Unlocks a splitter item
    */},{key:'unlock',value:function unlock(){var that=this;that.locked=false;}/**
    * Invoked when an instance of custom element is attached to the DOM for the first time.
    */},{key:'ready',value:function ready(){babelHelpers.get(SplitterItem.prototype.__proto__||Object.getPrototypeOf(SplitterItem.prototype),'ready',this).call(this);var that=this,ownerElement=that.closest('jqx-splitter'),isOwnerReady=ownerElement&&ownerElement.isCompleted;that._sizeLimits={};var isPercentage=typeof that.min==='string'&&that.min.indexOf('%')>-1;var min=isNaN(parseFloat(that.min))?0:parseFloat(that.min),max=isNaN(parseFloat(that.max))?0:parseFloat(that.max);that._sizeLimits.minWidth=that._sizeLimits.minHeight=isPercentage&&isOwnerReady?min*ownerElement[ownerElement._measurements.size]/100:min;isPercentage=typeof that.max==='string'&&that.max.indexOf('%')>-1;that._sizeLimits.maxWidth=that._sizeLimits.maxHeight=isPercentage&&isOwnerReady?max*ownerElement[ownerElement._measurements.size]/100:max;if(that.size){isPercentage=typeof that.size==='string'&&that.size.indexOf('%')>-1;var size=that.size==='auto'?that.size:isNaN(parseFloat(that.size))?0:parseFloat(that.size)+(isPercentage?'%':'px');isOwnerReady?that.style[ownerElement._measurements.dimension]=size:that.style.width=that.style.height=size;}that._updateNearSplitterBars();}/**
    * Removes a child from the Splitter item.
    */},{key:'removeChild',value:function removeChild(node){var that=this;if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}that.$.content.removeChild(node);}/**
     * Expands regardless of the neighbour item. Force expand
     */},{key:'_expand',value:function _expand(){var that=this;if(that._neighbourItem&&that._neighbourItem.parentElement){that.expand();return;}var ownerElement=that.closest('jqx-splitter');if(!ownerElement){return;}delete that._neighbourItem;that.collapsed=false;ownerElement.$.fireEvent('expand',{itemIndex:ownerElement._items.indexOf(that)});that.style[ownerElement._measurements.minDimension]=that.min?that._sizeLimits[ownerElement._measurements.minDimension]+'px':'';that.style[ownerElement._measurements.dimension]=that._sizeBeforeCollapse+'px';if(ownerElement._items.length<2){return;}if(that.previousElementSibling instanceof JQX.SplitterBar){that.previousElementSibling.itemCollapsed=false;that.previousElementSibling.showNearButton=ownerElement._items[ownerElement._items.indexOf(that)-1].collapsible;}}/**
     * Mouse Enter/Leave event handler
     * @param {any} event
     */},{key:'_mouseEventsHandler',value:function _mouseEventsHandler(event){var that=this,ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');if(ownerElement&&!ownerElement.disabled||JQX.Utilities.Core.isMobile){event.type==='mouseenter'?this.setAttribute('hover',''):this.removeAttribute('hover');}}/**
     * Validates the value of the property
     * @param {any} oldValue - the old value
     * @param {any} value - the new value
     */},{key:'_propertyValidator',value:function _propertyValidator(oldValue,newValue){if(typeof newValue!=='number'&&typeof newValue!=='string'){return oldValue;}return newValue;}/**
     * Set the width/height/min/max of the element
     */},{key:'_setSize',value:function _setSize(propertyName,newValue,noSizeValidation){var that=this;if(that.locked){return;}var ownerElement=that.closest('jqx-splitter');if(!ownerElement){return;}if(!ownerElement.isCompleted){ownerElement.whenReady(function(){return that._setSize(propertyName,newValue);});return;}var isPercentage=typeof newValue==='string'&&newValue.indexOf('%')>-1,ownerSize=function(){var bars=ownerElement.bars;var splitterBarsSize=0;for(var b=0;b<bars.length;b++){splitterBarsSize+=bars[b][ownerElement._measurements.size];}return ownerElement.$.container[ownerElement._measurements.size]-splitterBarsSize;}();newValue=isNaN(parseFloat(newValue))?'':parseFloat(newValue);switch(propertyName){case'size':{var oldSize=that[ownerElement._measurements.size];if(arguments[1]==='auto'||!arguments[1]){that.style[ownerElement._measurements.dimension]=arguments[1];that._sizeBeforeCollapse=that[ownerElement._measurements.size];}else{if(isPercentage){that.style[ownerElement._measurements.dimension]=newValue+'%';that._sizeBeforeCollapse=newValue*ownerSize/100;}else{that.style[ownerElement._measurements.dimension]=(that._sizeBeforeCollapse=newValue||0)+'px';}}var sizeDifference=oldSize-that._sizeBeforeCollapse;if(that._originalSize){that._originalSize=that._sizeBeforeCollapse;}var lastSplitterItem=ownerElement._items[ownerElement._items.length-1];if(that===lastSplitterItem){//Get the best fit item
var newLastItem=ownerElement._items.find(function(item){return item!==that&&!item.collapsed&&!item.locked&&!item.size;});//Get the first possible item
if(!newLastItem){for(var _i531=Math.max(0,ownerElement._items.length-2);_i531>=0;_i531--){if(!ownerElement._items[_i531].collapsed&&!ownerElement._items[_i531].locked&&ownerElement._items[_i531]!==that){newLastItem=ownerElement._items[_i531];break;}}}if(newLastItem){newLastItem.style[ownerElement._measurements.dimension]=(newLastItem._sizeBeforeCollapse=Math.max(0,newLastItem[ownerElement._measurements.size]+sizeDifference))+'px';}}break;}case'min':that._sizeLimits['minWidth']=that._sizeLimits['minHeight']=isPercentage?newValue*ownerSize/100:newValue;that.style[ownerElement._measurements.minDimension]=that.collapsed||!newValue?'':newValue+(isPercentage?'%':'px');that.style['min'+ownerElement._measurements.restricredDimension]='';if(!newValue&&!ownerElement._noNeighbourValidation){ownerElement._validateNeighbourSizeLimits(that);}break;case'max':that._sizeLimits['maxWidth']=that._sizeLimits['maxHeight']=isPercentage?newValue*ownerSize/100:newValue;that.style[ownerElement._measurements.maxDimension]=newValue?newValue+(isPercentage?'%':'px'):'';that.style['max'+ownerElement._measurements.restricredDimension]='';if(!newValue&&!ownerElement._noNeighbourValidation){ownerElement._validateNeighbourSizeLimits(that);}break;}if(!noSizeValidation){ownerElement._validateItemSize(true);}}/**
     * StyleChanged event handler
     */},{key:'_styleChangedEventHandler',value:function _styleChangedEventHandler(event){var that=this;if(that.locked){return;}if(that._sizeLimits.ignoreUpdate){delete that._sizeLimits.ignoreUpdate;return;}if(that.collapsed){return;}var ownerElement=that.closest('jqx-splitter');var value=void 0;if(event.detail.styleProperties['min-width']){value=event.detail.styleProperties['min-width'][ownerElement&&ownerElement.orientation==='horizontal'?'oldValue':'value'];that._sizeLimits['minWidth']=(parseFloat(value)||0)*(value&&value.indexOf('%')>-1?ownerElement[ownerElement._measurements.size]/100:1);}else if(event.detail.styleProperties['max-width']){value=event.detail.styleProperties['max-width'][ownerElement&&ownerElement.orientation==='horizontal'?'oldValue':'value'];that._sizeLimits['maxWidth']=(parseFloat(value)||0)*(value&&value.indexOf('%')>-1?ownerElement[ownerElement._measurements.size]/100:1);}else if(event.detail.styleProperties['min-height']){value=event.detail.styleProperties['min-height'][ownerElement&&ownerElement.orientation==='horizontal'?'value':'oldValue'];that._sizeLimits['minHeight']=(parseFloat(value)||0)*(value&&value.indexOf('%')>-1?ownerElement[ownerElement._measurements.size]/100:1);}else if(event.detail.styleProperties['max-height']){value=event.detail.styleProperties['max-height'][ownerElement&&ownerElement.orientation==='horizontal'?'value':'oldValue'];that._sizeLimits['maxHeight']=(parseFloat(value)||0)*(value&&value.indexOf('%')>-1?ownerElement[ownerElement._measurements.size]/100:1);}}/**
     * Transitionend Event Handler
     */},{key:'_transitionEndHandler',value:function _transitionEndHandler(){var that=this;if(!that.isCompleted&&that.$.hasClass('animate')){return;}that.$.removeClass('animate');if(that._neighbourItem&&that._neighbourItem.$.hasClass('animate')){that._neighbourItem.$.removeClass('animate');}if((that.size+'').indexOf('%')>-1||that._neighbourItem&&(that._neighbourItem.size+'').indexOf('%')>-1){var ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');ownerElement._validateItemSize();}}/**
     * Show/Hide the arrows of the neighbour splitter bars
     */},{key:'_updateNearSplitterBars',value:function _updateNearSplitterBars(){var that=this;if(that.previousElementSibling instanceof JQX.SplitterBar){that.previousElementSibling.showFarButton=that.collapsible;}if(that.nextElementSibling instanceof JQX.SplitterBar){that.nextElementSibling.showNearButton=that.collapsible;}}},{key:'enableShadowDOM',/**
    * Disables ShadowDOM for the splitter items
    */get:function get(){return false;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'collapsed':{value:false,type:'boolean'},'collapsible':{value:false,type:'boolean'},'locked':{value:false,type:'boolean'},'max':{value:'',type:'any',validator:'_propertyValidator'},'min':{value:'',type:'any',validator:'_propertyValidator'},'size':{value:'',type:'any',validator:'_propertyValidator'}};}},{key:'listeners',get:function get(){return{'mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','styleChanged':'_styleChangedEventHandler'};}}]);return SplitterItem;}(JQX.ContentElement));JQX('jqx-splitter-bar',function(_JQX$BaseElement20){babelHelpers.inherits(SplitterBar,_JQX$BaseElement20);function SplitterBar(){babelHelpers.classCallCheck(this,SplitterBar);return babelHelpers.possibleConstructorReturn(this,(SplitterBar.__proto__||Object.getPrototypeOf(SplitterBar)).apply(this,arguments));}babelHelpers.createClass(SplitterBar,[{key:'template',/**
    * Element's template
    */value:function template(){return'<div id="container" >\n                    <div class="jqx-splitter-far-collapse-button" id="farCollapseButton">\n                        <span id="arrowNear" class="jqx-arrow"></span>\n                    </div>\n                    <div class="jqx-splitter-resize-button" id="resizeButton">\n                        <span></span>\n                    </div>\n                    <div class="jqx-splitter-near-collapse-button" id="nearCollapseButton">\n                        <span id="arrowFar" class="jqx-arrow"></span>\n                    </div>\n                </div>';}/**
    * Element's event binding
    */},{key:'propertyChangedHandler',/**
   * Updates the SplitterBar when a property is  changed.
   * @param {string} propertyName The name of the property.
   * @param {number/string} oldValue The previously entered value.
   * @param {number/string} newValue The new entered value.
   */value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'unfocusable':that._setFocusable();break;default:babelHelpers.get(SplitterBar.prototype.__proto__||Object.getPrototypeOf(SplitterBar.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
  * Invoked when an instance of custom element is attached to the DOM for the first time.
  */},{key:'ready',value:function ready(){babelHelpers.get(SplitterBar.prototype.__proto__||Object.getPrototypeOf(SplitterBar.prototype),'ready',this).call(this);var that=this;that._setFocusable();}/**
     * Hides the Splitter Bar
     */},{key:'hide',value:function hide(){var that=this,ownerElement=that.closest('jqx-splitter');that.$.addClass('jqx-hidden');if(ownerElement){var ownerItems=ownerElement.items;if(ownerElement.hasAnimation){var animatedItem=void 0;for(var _i532=0;_i532<ownerItems.length;_i532++){if(ownerItems[_i532].$.hasClass('animate')){animatedItem=true;ownerItems[_i532].addEventListener('transitionend',function(){that.closest('jqx-splitter')._autoFitItems();},{once:true});}}if(animatedItem){return;}}ownerElement._autoFitItems();}}/**
     * Shows the Splitter Bar
     */},{key:'show',value:function show(){var that=this,ownerElement=that.closest('jqx-splitter');that.$.removeClass('jqx-hidden');if(ownerElement){var ownerItems=ownerElement.items;if(ownerElement.hasAnimation){var animatedItem=void 0;for(var _i533=0;_i533<ownerItems.length;_i533++){if(ownerItems[_i533].$.hasClass('animate')){animatedItem=true;ownerItems[_i533].addEventListener('transitionend',function(){that.closest('jqx-splitter')._autoFitItems();},{once:true});}}if(animatedItem){return;}}ownerElement._autoFitItems();}}/**
    * Locks a splitter bar so it can't be dragged
    */},{key:'lock',value:function lock(){var that=this;that.locked=that.unfocusable=true;if(that.showNearButton||that.showFarButton){return;}that._setFocusable();}/**
    * Unlocks a splitter bar
    */},{key:'unlock',value:function unlock(){var that=this;that.locked=that.unfocusable=false;that._setFocusable();}/**
     * Focus/Blur event handler
     * @param {any} event
     */},{key:'_focusEventHandler',value:function _focusEventHandler(event){var that=this,ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');if(ownerElement&&!ownerElement.disabled){event.type==='focus'?this.setAttribute('focus',''):this.removeAttribute('focus');}}/**
    * Sets tab index
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}that.tabIndex=that.tabIndex>0?that.tabIndex:0;}/**
     * MouseEnter and MouseLeave event handler for the hover state of the Splitter Bar
     */},{key:'_handleHoveredState',value:function _handleHoveredState(ownerElement,type){var that=this;switch(type){case'mouseenter':if(!ownerElement._getTargetItem(that,'previousElementSibling')||!(ownerElement.resizeMode==='adjacent'?ownerElement._getTargetItem(that,'nextElementSibling'):ownerElement._getTargetItem(that,'previousElementSibling',true))){return;}that.setAttribute('hover','');break;case'mouseleave':{that.removeAttribute('hover');break;}}}/**
    * Mouse Over/Out event handler
    * @param {any} event
    */},{key:'_mouseEventsHandler',value:function _mouseEventsHandler(event){var that=this,ownerElement=(that.getRootNode()?that.getRootNode().host:null)||that.closest('jqx-splitter');if(ownerElement&&ownerElement.disabled||JQX.Utilities.Core.isMobile){return;}if(event.type==='mouseenter'||event.type==='mouseleave'){that._handleHoveredState(ownerElement,event.type);return;}if(event.target.closest('.jqx-splitter-far-collapse-button')===that.$.farCollapseButton){event.type==='mouseover'?that.$.farCollapseButton.setAttribute('hover',''):that.$.farCollapseButton.removeAttribute('hover');return;}if(event.target.closest('.jqx-splitter-near-collapse-button')===that.$.nearCollapseButton){event.type==='mouseover'?that.$.nearCollapseButton.setAttribute('hover',''):that.$.nearCollapseButton.removeAttribute('hover');return;}if(event.target.closest('.jqx-splitter-resize-button')===that.$.resizeButton){event.type==='mouseover'?that.$.resizeButton.setAttribute('hover',''):that.$.resizeButton.removeAttribute('hover');}}},{key:'enableShadowDOM',/**
    * Disables ShadowDOM for the splitter bars
    */get:function get(){return false;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'showNearButton':{value:false,type:'boolean'},'showFarButton':{value:false,type:'boolean'},'itemCollapsed':{value:false,type:'boolean'},'locked':{value:false,type:'boolean'}};}},{key:'listeners',get:function get(){return{'mouseenter':'_mouseEventsHandler','mouseleave':'_mouseEventsHandler','mouseover':'_mouseEventsHandler','mouseout':'_mouseEventsHandler','focus':'_focusEventHandler','blur':'_focusEventHandler'};}}]);return SplitterBar;}(JQX.BaseElement));JQX('jqx-splitter',function(_JQX$ContentElement12){babelHelpers.inherits(Splitter,_JQX$ContentElement12);function Splitter(){babelHelpers.classCallCheck(this,Splitter);return babelHelpers.possibleConstructorReturn(this,(Splitter.__proto__||Object.getPrototypeOf(Splitter)).apply(this,arguments));}babelHelpers.createClass(Splitter,[{key:'template',/** 
    * Splitter's HTML template.
    */value:function template(){return'<div id="container">\n                    <content></content>\n                </div>';}/**
    * Updates the Splitter when a property is  changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'dataSource':that._createLayout();break;case'resizeMode':delete that._dragDetails;break;case'orientation':{that._setMeasurements();//Used to avoid the animation if enabled
that.setAttribute('orientation-change','');for(var _i534=0;_i534<that._items.length;_i534++){that._items[_i534].style[that._measurements.dimension]=that._items[_i534]['offset'+that._measurements.restricredDimension]+'px';that._items[_i534].style[that._measurements.restricredDimension.toLowerCase()]='100%';//Remove previous min/max
that._items[_i534].style['max'+that._measurements.restricredDimension]='none';that._items[_i534].style['min'+that._measurements.restricredDimension]='none';//Apply new max
that._items[_i534].style[that._measurements.maxDimension]=that._items[_i534].max?that._items[_i534]._sizeLimits[that._measurements.maxDimension]+'px':'';if(that._items[_i534].collapsed){that._items[_i534].style.minWidth=that._items[_i534].style.minHeight='';that._items[_i534].style[that._measurements.minDimension]='0';}else{that._items[_i534].style[that._measurements.minDimension]=that._items[_i534].min?that._items[_i534]._sizeLimits[that._measurements.minDimension]+'px':'';}}that._validateItemSize();//Used to avoid  the animation if enabled
that.removeAttribute('orientation-change');break;}case'unfocusable':that._setFocusable();break;default:babelHelpers.get(Splitter.prototype.__proto__||Object.getPrototypeOf(Splitter.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Appends a node to the splitter.
    */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node||!(node instanceof JQX.SplitterItem)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}that.insertBefore(node,null);}/**
    * Called when the element is attached to the DOM
    */},{key:'attached',value:function attached(){babelHelpers.get(Splitter.prototype.__proto__||Object.getPrototypeOf(Splitter.prototype),'attached',this).call(this);var that=this;//Make sure items are calculated properly on attached
if(that.isCompleted){that._validateItemSize();}}/**
    * Collapses a splitter item
    * item - Number indicating the index of the item / An isntance of JQX.SplitterItem
    * far - indicates whether the item should collapse to it's far or near side
    */},{key:'collapse',value:function collapse(item,far){var that=this;if(typeof item==='number'){item=that._items[item];}if(!item){return;}var closestSplitter=(that.enableShadowDOM?item.getRootNode().host:item).closest('jqx-splitter');if(item instanceof JQX.SplitterItem&&closestSplitter===that){item.collapse(far);return;}if(typeof item!=='number'||!that._items[item]){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'collapse'}));return;}item.collapse(far);}/**
    * Expands a splitter item
    */},{key:'expand',value:function expand(item){var that=this;if(typeof item==='number'){item=that._items[item];}if(!item){return;}var closestSplitter=(that.enableShadowDOM?item.getRootNode().host:item).closest('jqx-splitter');if(item instanceof JQX.SplitterItem&&closestSplitter===that){item.expand();return;}if(typeof item!=='number'||!that._items[item]){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'expand'}));return;}item.expand();}/**
     * Hides a splitter bar
     * index - the valid index of a jqxSplitterBar or its instance
     */},{key:'hideBar',value:function hideBar(item){var that=this;if(typeof item==='number'){item=that.bars[item];}if(!(item instanceof JQX.SplitterBar)){that.error(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:'hideBar'}));return;}if(item instanceof JQX.SplitterBar&&(that.enableShadowDOM?item.getRootNode().host:item.closest('jqx-splitter'))===that){item.hide();}}/**
    * Returns an array of Splitter items that are inside the element
    */},{key:'insert',/**
     * Insert a new Splitter item at a given position
     * index - indicates the index at which a new item will be inserted
     */value:function insert(index,details){var that=this;if(typeof details==='string'){details={content:details};}if(!details||(typeof details==='undefined'?'undefined':babelHelpers.typeof(details))!=='object'){that.error(that.localize('invalidSettings',{elementType:that.nodeName.toLowerCase(),method:'insert'}));return;}if(typeof index!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'insert'}));return;}var item=details instanceof JQX.SplitterItem?details:that._createItem(details);if(index>=that._items.length||that._items.length===0){that.appendChild(item);}else{that.insertBefore(item,that._items[index]);}}/**
    * Inserts a new node after another node in the splitter.
    */},{key:'insertBefore',value:function insertBefore(node,referenceNode){var that=this;function validateNodeSize(){var previousItem=function(){var item=node.previousElementSibling;while(item){if(item instanceof JQX.SplitterItem){return item;}item=item.previousElementSibling;}}();var isPreviousItemLocked=previousItem?previousItem.locked:undefined;if(previousItem){previousItem.locked=false;}that._resizeHostItemOnInsert(previousItem,node,splitterBar);if(that._items){that._items.splice(referenceNode?that._items.indexOf(referenceNode):that._items.length,0,node);}if(previousItem){if(previousItem.max){previousItem._setSize('max',previousItem.max,true);}if(previousItem.min){previousItem._setSize('min',previousItem.min,true);}if(isPreviousItemLocked){previousItem.locked=true;}}that._validateItemSize();}if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node||!(node instanceof JQX.SplitterItem)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'insertBefore',node:'newNode/referenceNode'}));return;}if(referenceNode&&!(referenceNode instanceof JQX.SplitterItem)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'insertBefore',node:'newNode/referenceNode'}));return;}//Set the restricted to fill the Splitter
node.style[that._measurements.restricredDimension.toLowerCase()]='100%';if(node.size){var unit=typeof node.size==='string'&&node.size.indexOf('%')>-1?'%':'px';node.style[that._measurements.dimension]=node.size==='auto'?node.size:isNaN(parseFloat(node.size))?'':parseFloat(node.size)+unit;if(that._items.length===1){that._items[0].size='';}}else{node.style[that._measurements.dimension]='';}if(node._sizeBeforeCollapse){if(node.size){var _unit=typeof node.size==='string'&&node.size.indexOf('%')>-1?'%':'px';node.style[that._measurements.dimension]=node.size==='auto'?node.size:isNaN(parseFloat(node.size))?0:parseFloat(node.size)+_unit;node._sizeBeforeCollapse=node[that._measurements.size];}else{delete node._sizeBeforeCollapse;}}node.style['max'+that._measurements.restricredDimension]='none';node.style[that._measurements.maxDimension]=node._sizeLimits&&node.max?node._sizeLimits[that._measurements.maxDimension]+'px':'';if(node.collapsed){node.style.minWidth=node.style.minHeight='';node.style[that._measurements.minDimension]=node.style[that._measurements.dimension]='0';}else{node.style[that._measurements.minDimension]=node._sizeLimits&&node.min?node._sizeLimits[that._measurements.minDimension]+'px':'';}for(var _i535=0;_i535<that._items.length;_i535++){if(!that._items[_i535]._sizeBeforeCollapse){that._items[_i535]._sizeBeforeCollapse=that._items[_i535][that._measurements.size];}}that.$.container.insertBefore(node,referenceNode||null);var splitterBar=void 0;var currentSplitterBars=that.bars;if(node.previousElementSibling instanceof JQX.SplitterItem){splitterBar=that._createBar(node,node.previousElementSibling);that.$.container.insertBefore(splitterBar,node);}else if(node.nextElementSibling instanceof JQX.SplitterItem){splitterBar=that._createBar(node,node.nextElementSibling);that.$.container.insertBefore(splitterBar,node.nextElementSibling);}if(splitterBar&&currentSplitterBars.length>0){splitterBar.style[that._measurements.restricredDimension.toLowerCase()]=currentSplitterBars[0].style[that._measurements.restricredDimension.toLowerCase()];}//MS EDGE specific code. In EDGE browser _validateItemSize() is called before the attached method is called
if(!node.isCompleted){node.__onCompleted=node._onCompleted;node._onCompleted=function(){if(node.__onCompleted){node.__onCompleted();delete node.__onCompleted;}validateNodeSize();};}else{validateNodeSize();}}/**
     * Locks a splitter item so it's size can't change.
     * @param {any} item - the index of a Splitter Item or it's instance
     */},{key:'lockItem',value:function lockItem(item){var that=this;if(item instanceof JQX.SplitterItem){item.lock();return;}if(typeof item!=='number'||!that._items[item]){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'lockItem'}));return;}item=that._items[item];if(item){item.lock();}}/**
    * Locks a splitter bar so it can't be dragged.
    * @param {any} item - the index of a Splitter Bar or it's instance
    */},{key:'lockBar',value:function lockBar(item){var that=this;if(item instanceof JQX.SplitterBar){item.lock();return;}if(typeof item!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'lockBar'}));return;}item=that.bars[item];if(item){item.lock();}}/**
    * Set the styleObserver to listen only for resizing
    */},{key:'ready',/**
    * Called when the element is ready
    */value:function ready(){babelHelpers.get(Splitter.prototype.__proto__||Object.getPrototypeOf(Splitter.prototype),'ready',this).call(this);var that=this;//a flag used to avoid animations on startup
that._isInitializing=true;that._createLayout();that._setFocusable();delete that._isInitializing;}/**
     * Refreshes the layout of the element
     */},{key:'refresh',value:function refresh(){this._resizeEventHandler();}/**
     * Removes a Splitter item at a given position
     * index - indicates the index at which a new item will be inserted
     */},{key:'remove',value:function remove(index){var that=this;if(index instanceof JQX.SplitterItem&&index.closest('jqx-splitter')===that){that.removeChild(index);return;}if(typeof index!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'remove'}));return;}if(index>that._items.length||index<0){that.error(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:'remove'}));return;}that.removeChild(that._items[index]);}/**
     * Remove all items
     */},{key:'removeAll',value:function removeAll(){var that=this;that._items=[];that.$.container.innerHTML='';}/**
    * Removes a node from the splitter.
    */},{key:'removeChild',value:function removeChild(node){var that=this;function getNewNeighbourItem(deletedItemIndex,item,direction){var index=deletedItemIndex,newNeighbourItem=that._items[index];while(newNeighbourItem){if(!newNeighbourItem.collapsed){break;}newNeighbourItem=that._items[index+=direction];}return newNeighbourItem;}if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node||!(node instanceof JQX.SplitterItem)){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}if(!that._items){return;}var itemIndex=that._items.indexOf(node);if(node.collapsed){that.$.container.removeChild(that._items.indexOf(node._neighbourItem)>itemIndex?node.nextElementSibling:node.previousElementSibling);}else{if(node.previousElementSibling instanceof JQX.SplitterBar){that.$.container.removeChild(node.previousElementSibling);}else if(node.nextElementSibling instanceof JQX.SplitterBar){that.$.container.removeChild(node.nextElementSibling);}}that._items.splice(itemIndex,1);itemIndex=Math.max(0,itemIndex-1);var totalItemSize=0;var uncollapsedItems=that._items.filter(function(item){return!item.collapsed&&!item.locked;}),nodeSize=node._sizeBeforeCollapse||node[that._measurements.size];uncollapsedItems.map(function(item){return totalItemSize+=(item.style[that._measurements.dimension]?item._sizeBeforeCollapse:0)||item[that._measurements.size];});that.$.content.removeChild(node);//If all left items are collapsed, force uncollapsing of the last item
if(that._items.length===1&&that._items[0].collapsed||that._items.length>0&&that._items.map(function(item){return item.collapsed;}).indexOf(false)<0){var lastItem=that._items[that._items.length-1];var _context7=lastItem.context;lastItem.context=lastItem;lastItem._expand();lastItem.context=_context7;}for(var _i536=0;_i536<that._items.length;_i536++){if(that._items[_i536].collapsed&&that._items[_i536]._neighbourItem===node){var _splitterBar=void 0,splitterBarContext=void 0;that._items[_i536]._neighbourItem=getNewNeighbourItem(itemIndex,that._items[_i536],1);if(!that._items[_i536]._neighbourItem){that._items[_i536]._neighbourItem=getNewNeighbourItem(itemIndex,that._items[_i536],-1);_splitterBar=that._items[_i536].previousElementSibling;if(_splitterBar){splitterBarContext=_splitterBar.context;_splitterBar.context=_splitterBar;_splitterBar.itemCollapsed=true;_splitterBar.showFarButton=!(_splitterBar.showNearButton=false);_splitterBar.context=splitterBarContext;}}else{_splitterBar=that._items[_i536].nextElementSibling;if(_splitterBar){splitterBarContext=_splitterBar.context;_splitterBar.context=_splitterBar;_splitterBar.itemCollapsed=true;_splitterBar.showNearButton=!(_splitterBar.showFarButton=false);_splitterBar.context=splitterBarContext;}}}}if(that.autoFitMode==='proportional'){var currentItemSize=void 0,newSize=void 0,itemMinSize=void 0;for(var _i537=0;_i537<uncollapsedItems.length;_i537++){currentItemSize=uncollapsedItems[_i537]._sizeBeforeCollapse||uncollapsedItems[_i537][that._measurements.size];newSize=currentItemSize+nodeSize*(currentItemSize/totalItemSize);//Check for item min size
itemMinSize=uncollapsedItems[_i537]._sizeLimits[that._measurements.minDimension]||0;uncollapsedItems[_i537].style[that._measurements.dimension]=(uncollapsedItems[_i537]._sizeBeforeCollapse=Math.max(0,newSize))+'px';if(itemMinSize>currentItemSize){uncollapsedItems[_i537][that._measurements.minDimension]=newSize+'px';}}}that._autoFitItems();}/**
     * Unhides a Splitter Bar
     * item - the index of the splitter bar or it's instance
     */},{key:'showBar',value:function showBar(item){var that=this;if(item instanceof JQX.SplitterBar){item.show();return;}if(typeof item!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'showBar'}));return;}item=that.bars[item];if(!(item instanceof JQX.SplitterBar)){that.error(that.localize('indexOutOfBound',{elementType:that.nodeName.toLowerCase(),method:'showBar'}));return;}item.show();}/**
    * Returns an array of Splitter items that are inside the element
    */},{key:'unlockItem',/**
    * Unlocks a previously locked splitter item
    * @param {any} item - the index of a Splitter Item or it's instance
    */value:function unlockItem(item){var that=this;if(item instanceof JQX.SplitterItem){item.unlock();return;}if(typeof item!=='number'||!that._items[item]){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'unlockItem'}));return;}item=that._items[item];if(item){item.unlock();}}/**
    * Unlocks a previously locked splitter bar
    * @param {any} item - the index of a Splitter Bar or it's instance
    */},{key:'unlockBar',value:function unlockBar(item){var that=this;if(item instanceof JQX.SplitterBar){item.unlock();return;}if(typeof item!=='number'){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'unlockBar'}));return;}item=that.bars[item];if(item){item.unlock();}}/**
     * Updates the Splitter item's properties
     * @param {any} index - index of the splitter item
     * @param {any} settings - object of properties and value
     */},{key:'update',value:function update(item,settings){var that=this;if(typeof item==='number'){item=that._items[item];if(!item){that.error(that.localize('invalidIndex',{elementType:that.nodeName.toLowerCase(),method:'update'}));return;}}if(!(item instanceof JQX.SplitterItem)||!settings||(that.enableShadowDOM?item.getRootNode().host:that.closest('jqx-splitter'))!==that){return;}for(var key in settings){if(item[key]!==undefined){item[key]=settings[key];}}}/**
    * Fits the last item according to the free space left in the Splitter.
    */},{key:'_autoFitItems',value:function _autoFitItems(){var that=this,itemsCount=that._items.length;if(itemsCount===0||that.autoFitMode==='overflow'){return;}var lastItem=void 0,lockedItems=[],collapsedItems=[],itemsWithoutSize=[];for(var _i538=itemsCount-1;_i538>=0;_i538--){if(that._items[_i538].collapsed){collapsedItems.push(that._items[_i538]);}else if(that._items[_i538].locked){lockedItems.push(that._items[_i538]);}else if(!lastItem){lastItem=that._items[_i538];}else if(!that._items[_i538].size){itemsWithoutSize.push(that._items[_i538]);}}if(lastItem&&lastItem.size&&itemsWithoutSize.length>0){lastItem=itemsWithoutSize.filter(function(item){return!item.max&&!item._sizeLimits[that._measurements.maxDimension];})[0]||lastItem;}if(collapsedItems.length===itemsCount){lastItem=collapsedItems[0];lastItem.expand();lastItem.unlock();}that._autoFitLastItem(lastItem,collapsedItems,lockedItems);}/**
     * AutoFits the items by shrinking the last item.
     */},{key:'_autoFitLastItem',value:function _autoFitLastItem(lastItem,collapsedItems,lockedItems){var that=this,itemsCount=that._items.length;var lastLockedItem=void 0;if(itemsCount===1&&that._items[0].locked){lastLockedItem=that._items[0];lastLockedItem.locked=false;}if(lockedItems.length===itemsCount){lockedItems[0].unlock();}if(!lastItem){lastItem=lockedItems[0];lastItem.unlock();}var totalItemSize=0,totalBarsSize=0;that._items.map(function(item){return totalItemSize+=!item.collapsed?item.style[that._measurements.dimension]&&item.style[that._measurements.dimension].indexOf('%')<-1&&item._sizeBeforeCollapse?item._sizeBeforeCollapse:item.getBoundingClientRect()[that._measurements.dimension]:0;});that.bars.map(function(bar){return totalBarsSize+=bar[that._measurements.size];});var currentSplitterSize=totalItemSize+totalBarsSize,containerSize=that.$.container.getBoundingClientRect()[that._measurements.dimension];if(currentSplitterSize!==containerSize){var lastItemSize=void 0;if(lastItem.style[that._measurements.dimension].indexOf('%')<-1){lastItemSize=lastItem._sizeBeforeCollapse?lastItem._sizeBeforeCollapse:lastItem.getBoundingClientRect()[that._measurements.dimension];}else{lastItemSize=lastItem.getBoundingClientRect()[that._measurements.dimension];}var sizeDifference=Math.abs(containerSize-currentSplitterSize),sign=currentSplitterSize<containerSize?1:-1;lastItem.style[that._measurements.dimension]=(lastItem._sizeBeforeCollapse=Math.max(0,lastItemSize+sign*sizeDifference))+'px';if(lastItem._sizeLimits[that._measurements.maxDimension]&&lastItem._sizeBeforeCollapse>lastItem._sizeLimits[that._measurements.maxDimension]){lastItem.style[that._measurements.maxDimension]=(lastItem._sizeLimits[that._measurements.maxDimension]=lastItem._sizeBeforeCollapse)+'px';}}if(lastLockedItem){lastLockedItem.locked=true;}}/**
     * AutoFits the items by proportionally reducing the size of all items
     */},{key:'_autoFitItemsProportionally',value:function _autoFitItemsProportionally(newItem,splitterBar){var that=this,uncollapsedItems=that._items.filter(function(item){return!item.collapsed;});var newItemSize=newItem[that._measurements.size],totalItemSize=0;uncollapsedItems.map(function(item){return totalItemSize+=item._sizeBeforeCollapse||item[that._measurements.size];});if(splitterBar){totalItemSize-=splitterBar[that._measurements.size];}if(newItem.size&&!newItem.isCompleted){newItem._setSize('size',newItemSize);newItemSize=newItem._sizeBeforeCollapse;}newItemSize=Math.min(that.$.container[that._measurements.size]/2,newItem[that._measurements.size]);newItem.style[that._measurements.dimension]=newItemSize+'px';var currentItemSize=void 0,newSize=void 0,itemMinSize=void 0;for(var _i539=0;_i539<uncollapsedItems.length;_i539++){currentItemSize=uncollapsedItems[_i539]._sizeBeforeCollapse||uncollapsedItems[_i539][that._measurements.size];newSize=(totalItemSize-newItemSize)*(currentItemSize/totalItemSize);//Check for item min size
itemMinSize=uncollapsedItems[_i539]._sizeLimits[that._measurements.minDimension]||0;uncollapsedItems[_i539].style[that._measurements.dimension]=(uncollapsedItems[_i539]._sizeBeforeCollapse=Math.max(itemMinSize,newSize))+'px';}}/**
     * Reads the dataSource and populates the Splitter with items.
     */},{key:'_createLayout',value:function _createLayout(){var that=this;that._items=[];if(typeof that.dataSource==='string'){that.dataSource=JSON.parse(that.dataSource);}if(that.dataSource!==null&&Array.isArray(that.dataSource)){that.$.container.innerHTML='';var fragment=document.createDocumentFragment(),_item74=void 0;for(var _i540=0;_i540<that.dataSource.length;_i540++){_item74=that._createItem(that.dataSource[_i540]);fragment.appendChild(_item74);}that._handleSplitterBars(fragment);return;}that._handleSplitterBars(that.$.container);}/**
     * Creates a splitter bar
     * @param {any} item - the item that precedes a splitter item
     */},{key:'_createBar',value:function _createBar(item,neighbourItem){var that=this,splitBar=document.createElement('jqx-splitter-bar');if(item.collapsed){splitBar.itemCollapsed=true;if(that._items.indexOf(item)===that._items.length-1){splitBar.showNearButton=true;}else{splitBar.showFarButton=true;}}else{if(item.collapsible){splitBar.showNearButton=true;}if(neighbourItem&&neighbourItem instanceof JQX.SplitterItem&&neighbourItem.collapsible){neighbourItem===item.nextElementSibling?splitBar.showFarButton=true:splitBar.showNearButton=true;}}return splitBar;}/**
     * Creates a splitter item
     */},{key:'_createItem',value:function _createItem(data){var item=document.createElement('jqx-splitter-item');if(data.id){item.id=data.id;}item.innerHTML=data.content||'';item.collapsible=data.collapsible||false;item.collapsed=data.collapsed||false;item.locked=data.locked||false;if(data.max){item.max=data.max;}if(data.min){item.min=data.min;}if(data.size){item.size=data.size;}return item;}/**
    * Finishes the resizing operation
    */},{key:'_completeResizing',value:function _completeResizing(canceled){var that=this;if(that._dragDetails){if(that._splitBarDummy&&that._splitBarDummy.parentElement){if(!canceled){that._dragDetails.firstItem.style[that._measurements.dimension]=(that._dragDetails.firstItem._sizeBeforeCollapse=that._dragDetails.firstItem.currentSize+that._dragDetails.firstItem._paddings)+'px';delete that._dragDetails.firstItem._originalSize;if(that.resizeMode!=='proportional'){that._dragDetails.secondItem.style[that._measurements.dimension]=(that._dragDetails.secondItem._sizeBeforeCollapse=that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize+that._dragDetails.secondItem._paddings)+'px';delete that._dragDetails.secondItem._originalSize;}else{var itemCount=that._dragDetails.itemProportions.length;if(itemCount>1){for(var p=0;p<itemCount;p++){that._dragDetails.itemProportions[p].item.style[that._measurements.dimension]=(that._dragDetails.itemProportions[p].item._sizeBeforeCollapse=that._dragDetails.itemProportions[p].currentSize+that._dragDetails.itemProportions[p].item._paddings)+'px';delete that._dragDetails.itemProportions[p]._originalSize;}}else{that._dragDetails.secondItem[0].style[that._measurements.dimension]=(that._dragDetails.secondItem[0]._sizeBeforeCollapse=Math.floor(that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize+that._dragDetails.firstItem._paddings))+'px';delete that._dragDetails.secondItem[0]._originalSize;}}}that.$.fireEvent('resizeEnd',{firstItem:{index:that._items.indexOf(that._dragDetails.firstItem),oldSize:that._dragDetails.firstItem.originalSize,newSize:that._dragDetails.firstItem[that._measurements.size]},secondItem:Array.isArray(that._dragDetails.secondItem)?{index:that._dragDetails.secondItem.map(function(item){return that._items.indexOf(item);}),oldSize:that._dragDetails.secondItem.map(function(item){return item.originalSize;}),newSize:that._dragDetails.secondItem.map(function(item){return item[that._measurements.size];})}:{index:that._items.indexOf(that._dragDetails.secondItem),oldSize:that._dragDetails.secondItem.originalSize,newSize:that._dragDetails.secondItem[that._measurements.size]}});that._splitBarDummy.classList.remove('limit-reached');that._splitBarDummy.parentElement.removeChild(that._splitBarDummy);}that.removeAttribute('dragged');delete that._dragDetails;delete that._keyboardResizing;}}/**
     * Document DragStart event handler
     * @param {any} event
     */},{key:'_dragStartHandler',value:function _dragStartHandler(event){var that=this;if(that._dragDetails){event.preventDefault();}}/**
     * Splitter mouse down event handler
     */},{key:'_downHandler',value:function _downHandler(event){var that=this;event.stopPropagation();if(that.disabled){return;}if(that._keyboardResizing){that._completeResizing();return;}var target=void 0,closestSplitter=void 0;if(that.enableShadowDOM){target=event.originalEvent.composedPath()[0];closestSplitter=target.getRootNode().host;}else{target=event.originalEvent.target;closestSplitter=target.closest('jqx-splitter');}var closestSplitterBar=target&&target.closest?target.closest('jqx-splitter-bar'):null;if(closestSplitterBar&&closestSplitter===that){//Collapse Near item
if(target.closest('.jqx-splitter-near-collapse-button')===closestSplitterBar.$.nearCollapseButton){that._collapseButtonPressed={splitBar:closestSplitterBar,item:closestSplitterBar.previousElementSibling,target:closestSplitterBar.$.nearCollapseButton,farCollapse:false};return;}//Collapse far item
if(target.closest('.jqx-splitter-far-collapse-button')===closestSplitterBar.$.farCollapseButton){that._collapseButtonPressed={splitBar:closestSplitterBar,item:closestSplitterBar.nextElementSibling,target:closestSplitterBar.$.farCollapseButton,farCollapse:true};return;}if(!closestSplitterBar.itemCollapsed&&!closestSplitterBar.locked&&that.resizeMode!=='none'){that._setDragDetails(closestSplitterBar,event);}}}/**
     * iOS Safari bug fix. (iOS Safari doesn't support 'touch-action: none')
     */},{key:'_moveHandler',value:function _moveHandler(){if(this.hasAttribute('dragged')&&JQX.Utilities.Core.isMobile){event.originalEvent.preventDefault();}}/**
     * Document move event handler
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this;if(that._keyboardResizing){return;}that._resize(event);}/**
     * Document move event handler
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;that.removeAttribute('dragging-not-allowed');that.removeAttribute('show-locked-items');if(that.disabled){delete that._dragDetails;delete that._collapseButtonPressed;return;}var target=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;that._completeResizing();if(that._collapseButtonPressed&&target.closest('.'+that._collapseButtonPressed.target.classList[0])===that._collapseButtonPressed.target){if(that._collapseButtonPressed.item.collapsed){that.expand(that._collapseButtonPressed.item);}else{that.collapse(that._collapseButtonPressed.item,that._collapseButtonPressed.farCollapse);}delete that._collapseButtonPressed;return;}}/**
     * Ensures that all items are attached and ready.
     * @param {any} nodes - nodes that are not ready
     * @param {any} callback - a function to be called when all items are ready
     */},{key:'_ensureItemsReady',value:function _ensureItemsReady(nodes,callback){var that=this;var contextCallback=function contextCallback(){var setContext=function setContext(context){for(var _i541=0;_i541<nodes.length;_i541++){nodes[_i541].context=context==='node'?nodes[_i541]:document;}};setContext('node');callback();setContext();};if(nodes.length===0){contextCallback();}else{that._nodesReadyListeners=0;for(var _i542=0;_i542<nodes.length;_i542++){var node=nodes[_i542];var readyEventHandler=function(){that._nodesReadyListeners--;if(that._nodesReadyListeners===0){contextCallback();delete that._nodesReadyListeners;}}.bind(that);if(!node.isCompleted){that._nodesReadyListeners++;node._onCompleted=readyEventHandler;}}if(that._nodesReadyListeners===0){contextCallback();}}}/**
     * Element's focus handler
     */},{key:'_focusHandler',value:function _focusHandler(event){var that=this;event.type==='focus'?that.setAttribute('focus',''):that.removeAttribute('focus');}/**
     * Used in _setDragDetails() method to get the desired item ( first and second )
     * @param {any} sibling - next item
     * @param {any} reverse - reverse order flag
     */},{key:'_getTargetItem',value:function _getTargetItem(splitter,sibling,reverse){var that=this;var previousItem=reverse?that._items[that._items.length-1]:splitter[sibling];while(previousItem){if(previousItem instanceof JQX.SplitterItem&&!previousItem.collapsed){if(!previousItem.locked){return previousItem;}if(that._dragDetails&&!that._dragDetails.firstItem){that._dragDetails.lockedItemsSize+=previousItem[that._measurements.size]+(previousItem.previousElementSibling instanceof JQX.SplitterBar?previousItem.previousElementSibling[that._measurements.size]:0);}}previousItem=previousItem[sibling];}}/**
     * Adds/Removes split bars
     */},{key:'_handleSplitterBars',value:function _handleSplitterBars(itemContainer){var that=this;if(that._items.length<1){//IE11 has no support for DocumentFragment.children. Use childNodes instead if no polyfill is provided
that._items=itemContainer.parentElement?that.items:Array.from(itemContainer.children);}if(!that._measurements){that._setMeasurements();}if(that._items.length<2){var splitBars=that.bars;for(var _i543=0;_i543<splitBars.length;_i543++){itemContainer.removeChild(splitBars[_i543]);}}if(!itemContainer.parentElement&&itemContainer!==that.$.container){that.$.container.appendChild(itemContainer);}for(var _i544=0;_i544<that._items.length;_i544++){that._items[_i544].style[that._measurements.restricredDimension.toLowerCase()]='100%';that._items[_i544].style['max'+that._measurements.restricredDimension]='none';if(!that._items[_i544].size){that._items[_i544].style[that._measurements.dimension]=that._items[_i544]._sizeBeforeCollapse?that._items[_i544]._sizeBeforeCollapse+'px':'';}var min=that._items[_i544].min,max=that._items[_i544].max;if(typeof min==='string'&&min.indexOf('%')>-1){that._items[_i544]._setSize('min',min);}if(typeof max==='string'&&max.indexOf('%')>-1){that._items[_i544]._setSize('max',max);}that._items[_i544].style[that._measurements.maxDimension]=that._items[_i544].max?that._items[_i544]._sizeLimits[that._measurements.maxDimension]+'px':'';if(that._items[_i544].nextElementSibling){var nextElementSibling=that._items[_i544].nextElementSibling;if(nextElementSibling instanceof JQX.SplitterItem||nextElementSibling.tagName.toLowerCase()==='jqx-splitter-item'){that._items[_i544].parentNode.insertBefore(that._createBar(that._items[_i544],that._items[_i544].nextElementSibling),that._items[_i544].nextElementSibling);}else{that._items[_i544].parentNode.removeChild(that._items[_i544].nextElementSibling);}}if(that._items[_i544].collapsed){var collapsible=that._items[_i544].collapsible;that._items[_i544].style.minWidth=that._items[_i544].style.minHeight='';that._items[_i544].style[that._measurements.minDimension]='0';that._items[_i544]._ignorePropertyValue=true;//Force collapse it
that._items[_i544].collapsible=true;that._items[_i544].collapse();//Return original proeprty value
that._items[_i544].collapsible=collapsible;}else{that._items[_i544].style[that._measurements.minDimension]=that._items[_i544]._sizeLimits&&that._items[_i544].min?that._items[_i544]._sizeLimits[that._measurements.minDimension]+'px':'';}}//if (!itemContainer.parentElement && itemContainer !== that.$.container) {
//    that.$.container.appendChild(itemContainer);
//}
//MS EDGE fix when items are supposed to be ready but they are not yet
that._ensureItemsReady(that._items,that._validateItemSize.bind(that));}/**
     * Key down event handler
     * @param {any} event
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;if(that.disabled){return;}var splitterBar=that.enableShadowDOM?that.shadowRoot.activeElement:document.activeElement;if(event.key==='w'&&event.altKey){//Prevents container scrolling
event.preventDefault();var firstItem=that.enableShadowDOM?that.shadowRoot.querySelector('jqx-splitter-bar'):that.querySelector('jqx-splitter-bar');if(splitterBar!==firstItem){that._completeResizing(true);}firstItem.focus();return;}if(!event.ctrlKey&&that._splitBarDummy&&that._splitBarDummy.parentElement){splitterBar=that._splitBarDummy;}else if(!(splitterBar instanceof JQX.SplitterBar)){return;}if((that.enableShadowDOM?splitterBar.getRootNode().host:splitterBar.closest('jqx-splitter'))!==that){return;}switch(event.key){case'ArrowLeft':case'ArrowRight':case'ArrowUp':case'ArrowDown':{if((event.key==='ArrowUp'||event.key==='ArrowDown')&&that.orientation==='vertical'){return;}if((event.key==='ArrowLeft'||event.key==='ArrowRight')&&that.orientation==='horizontal'){return;}//Prevents container scrolling
event.preventDefault();var direction=event.key==='ArrowLeft'||event.key==='ArrowUp'?-1:1;if(event.ctrlKey){//Cancel resizing if it's in motion
that._completeResizing(true);var neighbourItem=void 0,targetItem=void 0;if(direction<0){targetItem=splitterBar.previousElementSibling;neighbourItem=splitterBar.nextElementSibling;}else{neighbourItem=splitterBar.previousElementSibling;targetItem=splitterBar.nextElementSibling;}neighbourItem.collapsed?neighbourItem.expand():targetItem.collapse(direction>0);return;}if(splitterBar.locked){return;}if(that.resizeMode==='none'){return;}that._keyboardResizing=true;var currentPosition=void 0;if(!that._dragDetails){that._setDragDetails(splitterBar);currentPosition=splitterBar[that._measurements.offset]+direction*that.resizeStep;}else{currentPosition=that._dragDetails.position+direction*that.resizeStep;}//Requires event parameter so we imitate it with an object
that._resize({pageX:currentPosition,pageY:currentPosition});break;}case'Enter':that._completeResizing();break;case'Escape':case'Tab':that._completeResizing(true);break;}}/**
     * Mouse Enter/Leave event handler
     * @param {any} event
     */},{key:'_mouseEventsHandler',value:function _mouseEventsHandler(event){event.type==='mouseenter'&&!JQX.Utilities.Core.isMobile?this.setAttribute('hover',''):this.removeAttribute('hover');}/**
    * Used to recalculate the Proportions during resizing when resizeMode is 'proportional'
    * @param {any} amount - amount of size that has changed since the start of the operation till now
    * @param {any} totalItemsCount - total number of all items that are being resized
    * @param {any} resizableItemsCount - the number of items that can be resized.
    */},{key:'_recalcItemSize',value:function _recalcItemSize(amount,totalItemsCount,resizableItemsCount){var that=this;var usedSize=void 0,minSize=void 0;if(!resizableItemsCount){resizableItemsCount=totalItemsCount;}if(amount>0){for(var p=0;p<totalItemsCount;p++){minSize=that._dragDetails.itemProportions[p].item._sizeLimits[that._measurements.minDimension];if(that._dragDetails.itemProportions[p].currentSize>minSize){if(that._dragDetails.itemProportions[p].currentSize-minSize<amount/resizableItemsCount){usedSize=that._dragDetails.itemProportions[p].currentSize-minSize;}else{usedSize=amount/resizableItemsCount;}amount-=usedSize;that._dragDetails.itemProportions[p].currentSize=Math.max(minSize,that._dragDetails.itemProportions[p].currentSize-usedSize);delete that._dragDetails.itemProportions[p]._originalSize;}resizableItemsCount=Math.max(1,resizableItemsCount-1);}}else{var maxSize=that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize-(totalItemsCount>1?that._dragDetails.secondItemTotalMinSize-that._dragDetails.itemProportions[0].item._sizeLimits[that._measurements.minDimension]:0);var itemMaxSize=void 0;for(var _p3=0;_p3<totalItemsCount;_p3++){if(that._dragDetails.itemProportions[_p3].item._sizeLimits[that._measurements.maxDimension]){itemMaxSize=Math.min(that._dragDetails.itemProportions[_p3].item._sizeLimits[that._measurements.maxDimension],maxSize);}else{itemMaxSize=maxSize;}if(that._dragDetails.itemProportions[_p3].currentSize<itemMaxSize){if(that._dragDetails.itemProportions[_p3].currentSize-amount/resizableItemsCount>itemMaxSize){usedSize=-1*(itemMaxSize-that._dragDetails.itemProportions[_p3].currentSize);}else{usedSize=amount/resizableItemsCount;}amount-=usedSize;that._dragDetails.itemProportions[_p3].currentSize=Math.min(itemMaxSize,that._dragDetails.itemProportions[_p3].currentSize-usedSize);delete that._dragDetails.itemProportions[_p3]._originalSize;}resizableItemsCount=Math.max(1,resizableItemsCount-1);}}//size less than 0.1 is too small to care. JS can't compute properly with too small values
if(Math.abs(amount)>0.1){that._recalcItemSize(amount,totalItemsCount,resizableItemsCount);}}/**
    * Resizes the splitter items
    */},{key:'_resize',value:function _resize(event){var that=this;if(!that._dragDetails){return;}var distance=event[that._measurements.pagePosition]-that._dragDetails.position,isLimitReached=void 0;var direction=Math.sign(distance),firstItemMinSize=that._dragDetails.firstItem._sizeLimits[that._measurements.minDimension],firstItemMaxSize=that._dragDetails.firstItem._sizeLimits[that._measurements.maxDimension];var sizeAvailable=void 0,isPossibleToResize=void 0;if(!that.hasAttribute('dragged')){that.$.fireEvent('resizeStart',{firstItem:{index:that._items.indexOf(that._dragDetails.firstItem),size:that._dragDetails.firstItem[that._measurements.size]},secondItem:Array.isArray(that._dragDetails.secondItem)?{index:that._dragDetails.secondItem.map(function(item){return that._items.indexOf(item);}),size:that._dragDetails.secondItem.map(function(item){return item[that._measurements.size];})}:{index:that._items.indexOf(that._dragDetails.secondItem),size:that._dragDetails.secondItem[that._measurements.size]}});}that.setAttribute('dragged','');if(Math.abs(distance)<that.resizeStep){return;}var coercedDistance=Math.max(that.resizeStep,Math.floor(Math.abs(distance)/that.resizeStep)*that.resizeStep);var offset=distance-direction*coercedDistance;switch(that.resizeMode){case'adjacent':case'end':if(direction>0){sizeAvailable=that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize;isPossibleToResize=function isPossibleToResize(){return sizeAvailable-that._dragDetails.secondItemTotalMinSize>=coercedDistance||firstItemMaxSize&&that._dragDetails.firstItem.currentSize+that.resizeStep<=firstItemMaxSize;};isLimitReached=function isLimitReached(){return firstItemMaxSize&&that._dragDetails.firstItem.currentSize===firstItemMaxSize||sizeAvailable-that.resizeStep<=that._dragDetails.secondItemTotalMinSize;};}else{sizeAvailable=that._dragDetails.firstItem.currentSize;isPossibleToResize=function isPossibleToResize(){return sizeAvailable-firstItemMinSize>=coercedDistance||that._dragDetails.secondItemTotalMaxSize&&that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize+that.resizeStep<=that._dragDetails.secondItemTotalMaxSize;};isLimitReached=function isLimitReached(){return that._dragDetails.secondItemTotalMaxSize&&that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize===that._dragDetails.secondItemTotalMaxSize||sizeAvailable-that.resizeStep<=firstItemMinSize;};}distance=0;while(coercedDistance>0){if(isPossibleToResize()){distance+=direction*that.resizeStep;}coercedDistance-=that.resizeStep;}that._resizeItem(event,distance,offset);break;case'proportional':{var initialRemainingSpace=that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize;if(direction>0){sizeAvailable=Math.abs(initialRemainingSpace-that._dragDetails.secondItemTotalMinSize);isPossibleToResize=function isPossibleToResize(){return sizeAvailable>=coercedDistance||firstItemMaxSize&&that._dragDetails.firstItem.currentSize+that.resizeStep<=firstItemMaxSize;};isLimitReached=function isLimitReached(){return firstItemMaxSize&&that._dragDetails.firstItem.currentSize===firstItemMaxSize||that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize-that.resizeStep<that._dragDetails.secondItemTotalMinSize;};}else{sizeAvailable=that._dragDetails.firstItem.currentSize;//TODO: ResizeStep is not taken into account properly
isPossibleToResize=function isPossibleToResize(){return sizeAvailable-firstItemMinSize>=coercedDistance&&(that._dragDetails.secondItemTotalMaxSize?that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize+that.resizeStep<=that._dragDetails.secondItemTotalMaxSize:true);};isLimitReached=function isLimitReached(){return that._dragDetails.secondItemTotalMaxSize&&that._dragDetails.splitAreaSize+that.resizeStep-that._dragDetails.firstItem.currentSize>=that._dragDetails.secondItemTotalMaxSize||that._dragDetails.firstItem.currentSize-that.resizeStep<firstItemMinSize;};}var newSize=void 0,isResized=void 0;while(coercedDistance>0){if(isPossibleToResize()){isResized=true;newSize=Math.min(firstItemMaxSize?Math.min(firstItemMaxSize,that._dragDetails.splitAreaSize-that._dragDetails.secondItemTotalMinSize):that._dragDetails.splitAreaSize-that._dragDetails.secondItemTotalMinSize,Math.max(firstItemMinSize,that._dragDetails.firstItem.currentSize+direction*that.resizeStep));that._dragDetails.firstItem.currentSize=that._dragDetails.firstItem._sizeBeforeCollapse=Math.floor(newSize);}coercedDistance-=that.resizeStep;}if(!isResized){break;}var remaningSpaceAfterResize=that._dragDetails.splitAreaSize-that._dragDetails.firstItem.currentSize,itemCount=that._dragDetails.itemProportions.length;//Recalculate the proportions
that._recalcItemSize(initialRemainingSpace-remaningSpaceAfterResize,itemCount);if(that.liveResize){that._dragDetails.firstItem.style[that._measurements.dimension]=that._dragDetails.firstItem.currentSize+that._dragDetails.firstItem._paddings+'px';if(itemCount>1){for(var p=0;p<itemCount;p++){that._dragDetails.itemProportions[p].item.style[that._measurements.dimension]=that._dragDetails.itemProportions[p].item._sizeBeforeCollapse=that._dragDetails.itemProportions[p].currentSize+that._dragDetails.itemProportions[p].item._paddings+'px';}}else{that._dragDetails.secondItem[0].style[that._measurements.dimension]=(that._dragDetails.secondItem[0]._sizeBeforeCollapse=Math.floor(remaningSpaceAfterResize+that._dragDetails.itemProportions[0].item._paddings))+'px';}}else{that._splitBarDummy.style[that._measurements.position]=that._dragDetails.firstItem[that._measurements.offset]+that._dragDetails.firstItem.currentSize+that._dragDetails.lockedItemsSize+that._dragDetails.firstItem._paddings+'px';}var edge=that._dragDetails.firstItem.getBoundingClientRect()[that.orientation==='vertical'?'left':'top']+that._dragDetails.splitBarOffset;var maxPosition=firstItemMaxSize&&that._dragDetails.splitAreaSize-firstItemMaxSize>that._dragDetails.secondItemTotalMinSize?firstItemMaxSize:that._dragDetails.splitAreaSize-that._dragDetails.secondItemTotalMinSize;that._dragDetails.position=Math.max(edge+(that._dragDetails.secondItemTotalMaxSize?Math.max(that._dragDetails.splitAreaSize-that._dragDetails.secondItemTotalMaxSize,firstItemMinSize):firstItemMinSize)+that._dragDetails.lockedItemsSize+that._dragDetails.firstItem._paddings,Math.min(edge+maxPosition+that._dragDetails.lockedItemsSize+that._dragDetails.firstItem._paddings,event[that._measurements.pagePosition]-offset));break;}}if(!that.liveResize){isLimitReached()?that._splitBarDummy.classList.add('limit-reached'):that._splitBarDummy.classList.remove('limit-reached');}//Should be called only when Splitter's width is auto
that._validateBarsSize();}/**
     * Style Changed Event Handler - Refits the items if necessary
     */},{key:'_resizeEventHandler',value:function _resizeEventHandler(){var that=this;that._resizeEventFired=true;that._validateItemSize();that._resizeEventFired=false;}/**
     * Resize the host item when inserting a new one inside it
     * @param {any} hostItem
     */},{key:'_resizeHostItemOnInsert',value:function _resizeHostItemOnInsert(hostItem,newItem,splitterBar){var that=this;if(that.autoFitMode==='proportional'){that._autoFitItemsProportionally(newItem,splitterBar);return;}if(!hostItem||hostItem.locked){return;}if(newItem.size){var itemWithoutSize=function(){var item=newItem.previousElementSibling;while(item){if(item instanceof JQX.SplitterItem&&!item.size){return item;}item=item.previousElementSibling;}}();hostItem=itemWithoutSize||hostItem;}var hostItemNewSize=hostItem[that._measurements.size]-newItem[that._measurements.size]-splitterBar[that._measurements.size],hostItemSize=Math.max(hostItem._sizeLimits[that._measurements.minDimension],hostItemNewSize);hostItem.style[that._measurements.maxDimension]=hostItem.max?isNaN(parseFloat(hostItem.max))?'':parseFloat(hostItem.max)+babelHelpers.typeof(hostItem.max)==='string'&&hostItem.max.indexOf('%')>-1?'%':'px':'';//StyleChanged not fired yet
var hostItemMax=hostItem.style[that._measurements.maxDimension]?parseFloat(hostItem.style[that._measurements.maxDimension]):0;if(newItem.size){hostItem.style[that._measurements.dimension]=(hostItem._sizeBeforeCollapse=hostItemMax?Math.min(hostItemMax,hostItemSize):hostItemSize)+'px';}else{hostItem.style[that._measurements.dimension]=hostItem.size?hostItem.size==='auto'?hostItem.size:isNaN(parseFloat(hostItem.size))?0:parseFloat(hostItem.size)+(typeof hostItem.size==='string'&&hostItem.size.indexOf('%')>-1?'%':'px'):'';hostItem._sizeBeforeCollapse=hostItem[that._measurements.size];}}/**
     * Resize a single item
     * @param {any} event
     * @param {any} distance
     * @param {any} offset
     */},{key:'_resizeItem',value:function _resizeItem(event,distance,offset){var that=this;//Validate min accoridng to first Item
var newSize=Math.max(that._dragDetails.firstItem._sizeLimits[that._measurements.minDimension],Math.min(that._dragDetails.splitAreaSize-that._dragDetails.secondItem._sizeLimits[that._measurements.minDimension],that._dragDetails.firstItem._sizeLimits[that._measurements.maxDimension]?Math.min(that._dragDetails.firstItem._sizeLimits[that._measurements.maxDimension],that._dragDetails.firstItem.currentSize+distance):that._dragDetails.firstItem.currentSize+distance));var minSize=that._dragDetails.firstItem._sizeLimits[that._measurements.minDimension];if(that._dragDetails.secondItem._sizeLimits[that._measurements.maxDimension]&&that._dragDetails.splitAreaSize-newSize>that._dragDetails.secondItem._sizeLimits[that._measurements.maxDimension]){minSize=newSize=that._dragDetails.splitAreaSize-that._dragDetails.secondItem._sizeLimits[that._measurements.maxDimension];}that._dragDetails.firstItem.currentSize=newSize;if(that.liveResize){that._dragDetails.firstItem.style[that._measurements.dimension]=(that._dragDetails.firstItem._sizeBeforeCollapse=newSize+that._dragDetails.firstItem._paddings)+'px';that._dragDetails.secondItem.style[that._measurements.dimension]=(that._dragDetails.secondItem._sizeBeforeCollapse=that._dragDetails.splitAreaSize-newSize+that._dragDetails.firstItem._paddings)+'px';//Reset the original size
delete that._dragDetails.firstItem._originalSize;delete that._dragDetails._originalSize;}else{//TODO: Doesn't include collpased items offset
that._splitBarDummy.style[that._measurements.position]=that._dragDetails.firstItem[that._measurements.offset]+newSize+that._dragDetails.lockedItemsSize+that._dragDetails.firstItem._paddings+'px';}var edge=that._dragDetails.firstItem.getBoundingClientRect()[that.orientation==='vertical'?'left':'top']+that._dragDetails.splitBarOffset;that._dragDetails.position=Math.max(edge+minSize+that._dragDetails.firstItem._paddings,Math.min(edge+that._dragDetails.splitAreaSize-that._dragDetails.secondItem._sizeLimits[that._measurements.minDimension]+that._dragDetails.lockedItemsSize+that._dragDetails.firstItem._paddings,event[that._measurements.pagePosition]-offset));if(that._dragDetails.firstItem._sizeLimits[that._measurements.maxDimension]){that._dragDetails.position=Math.min(edge+that._dragDetails.firstItem._sizeLimits[that._measurements.maxDimension],that._dragDetails.position);}}/**
    * Sets tab index
    */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}that.tabIndex=that.tabIndex>0?that.tabIndex:0;}/**
     * Set drag details for a splitter item
     * @param {any} event
     */},{key:'_setDragDetails',value:function _setDragDetails(target,event){var that=this;that._dragDetails={};if(!that._measurements){that._setMeasurements();}that._dragDetails.scrollAmount=target.parentElement[that._measurements.scroll];that._dragDetails.lockedItemsSize=0;that.setAttribute('show-locked-items','');if(!(that._dragDetails.firstItem=that._getTargetItem(target,'previousElementSibling'))){delete that._dragDetails;that.setAttribute('dragging-not-allowed','');return;}that._dragDetails.firstItem.set('size','');that._dragDetails.firstItem.currentSize=that._dragDetails.firstItem[that._measurements.size];that._dragDetails.firstItem.originalSize=that._dragDetails.firstItem.currentSize;var computedStyle=getComputedStyle(that._dragDetails.firstItem);that._dragDetails.firstItem._paddings=(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position))||0)+(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position2))||0);if(that._dragDetails.firstItem.currentSize<that._dragDetails.firstItem._sizeLimits[that._measurements.minDimension]){delete that._dragDetails;return;}that._dragDetails.firstItem.currentSize-=that._dragDetails.firstItem._paddings;that._dragDetails.splitAreaSize=0;that._dragDetails.secondItemTotalMaxSize=0;that._dragDetails.secondItemTotalMinSize=0;if(that.resizeMode==='proportional'){if(that._setProportionalDetails()){return;}}else{if(that._setAdjacentOrEndDetails(target)){return;}}var splitterBarPagePosition=void 0;if(!event||(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))!=='object'){event={pageX:target[that._measurements.offset],pageY:target[that._measurements.offset]};splitterBarPagePosition=target[that._measurements.offset];}else{splitterBarPagePosition=target.getBoundingClientRect()[that._measurements.position];}that._dragDetails.position=event[that._measurements.pagePosition];that._dragDetails.splitBarOffset=that._dragDetails.position-splitterBarPagePosition;if(that.liveResize){return;}if(!that._splitBarDummy){that._splitBarDummy=document.createElement('div');that._splitBarDummy.classList.add('jqx-splitter-bar-feedback');}that._splitBarDummy.style.width=target.offsetWidth+'px';that._splitBarDummy.style.height=target.offsetHeight+'px';that._splitBarDummy.style.top=target.offsetTop+'px';that._splitBarDummy.style.left=target.offsetLeft+'px';target.parentElement.appendChild(that._splitBarDummy);}/**
     * Sets the drag details when resizeMode === 'adjacent' or 'end'
     */},{key:'_setAdjacentOrEndDetails',value:function _setAdjacentOrEndDetails(target){var that=this;if(!(that._dragDetails.secondItem=that.resizeMode==='adjacent'?that._getTargetItem(target,'nextElementSibling'):that._getTargetItem(target,'previousElementSibling',true))){delete that._dragDetails;that.setAttribute('dragging-not-allowed','');return true;}that._dragDetails.secondItem.set('size','');that._dragDetails.secondItem.currentSize=that._dragDetails.secondItem[that._measurements.size];that._dragDetails.secondItem.originalSize=that._dragDetails.secondItem.currentSize;var computedStyle=getComputedStyle(that._dragDetails.secondItem);that._dragDetails.secondItem._paddings=(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position))||0)+(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position2))||0);that._dragDetails.secondItem.currentSize-=that._dragDetails.secondItem._paddings;that._dragDetails.splitAreaSize=that._dragDetails.firstItem.currentSize+that._dragDetails.secondItem.currentSize;that._dragDetails.secondItemTotalMaxSize=that._dragDetails.secondItem._sizeLimits[that._measurements.maxDimension];that._dragDetails.secondItemTotalMinSize=that._dragDetails.secondItem._sizeLimits[that._measurements.minDimension];}/**
     * Sets the measurement object that will be used during resizing
     */},{key:'_setMeasurements',value:function _setMeasurements(){var that=this;that._measurements={};if(that.orientation==='horizontal'){that._measurements.dimension='height';that._measurements.minDimension='minHeight';that._measurements.maxDimension='maxHeight';that._measurements.restricredDimension='Width';that._measurements.size='offsetHeight';that._measurements.offset='offsetTop';that._measurements.position='top';that._measurements.position2='bottom';that._measurements.pagePosition='pageY';that._measurements.scroll='scrollTop';}else{that._measurements.dimension='width';that._measurements.minDimension='minWidth';that._measurements.maxDimension='maxWidth';that._measurements.restricredDimension='Height';that._measurements.size='offsetWidth';that._measurements.offset='offsetLeft';that._measurements.position='left';that._measurements.position2='right';that._measurements.pagePosition='pageX';that._measurements.scroll='scrollLeft';}that._measurements.overflow=getComputedStyle(that).getPropertyValue('overflow');}/**
     * Sets the dragging details when resizeMode = 'proportional'
     */},{key:'_setProportionalDetails',value:function _setProportionalDetails(){var that=this;that._dragDetails.secondItem=that._items.slice(that._items.indexOf(that._dragDetails.firstItem)+1).filter(function(item){return!item.collapsed&&!item.locked;});if(that._dragDetails.secondItem.length===0){delete that._dragDetails;return true;}that._dragDetails.splitAreaSize+=that._dragDetails.firstItem.currentSize;that._dragDetails.itemProportions=[];var noMaxLimit=void 0;for(var _i545=0;_i545<that._dragDetails.secondItem.length;_i545++){that._dragDetails.secondItem[_i545].set('size','');that._dragDetails.secondItem[_i545].currentSize=that._dragDetails.secondItem[_i545][that._measurements.size];that._dragDetails.secondItem[_i545].originalSize=that._dragDetails.secondItem[_i545].currentSize;var computedStyle=getComputedStyle(that._dragDetails.secondItem[_i545]);that._dragDetails.secondItem[_i545]._paddings=(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position))||0)+(parseFloat(computedStyle.getPropertyValue('padding-'+that._measurements.position2))||0);that._dragDetails.secondItem[_i545].currentSize-=that._dragDetails.secondItem[_i545]._paddings;that._dragDetails.splitAreaSize+=that._dragDetails.secondItem[_i545].currentSize;that._dragDetails.itemProportions.push({item:that._dragDetails.secondItem[_i545],currentSize:that._dragDetails.secondItem[_i545].currentSize});if(!that._dragDetails.secondItem[_i545]._sizeLimits[that._measurements.maxDimension]){noMaxLimit=true;}that._dragDetails.secondItemTotalMinSize+=that._dragDetails.secondItem[_i545]._sizeLimits[that._measurements.minDimension];that._dragDetails.secondItemTotalMaxSize+=that._dragDetails.secondItem[_i545]._sizeLimits[that._measurements.maxDimension];}if(noMaxLimit){that._dragDetails.secondItemTotalMaxSize=0;}}/**
     * Validates the size of the Splitter Bars inside the Splitter
     */},{key:'_validateBarsSize',value:function _validateBarsSize(){var that=this;//Check if size of the SplitterBar is explicitly set
if((getComputedStyle(that).getPropertyValue('--jqx-splitter-bar-fit-size')+'').trim()!=='100%'){return;}var biggestItem=that._items[0];var size='offset'+that._measurements.restricredDimension,bars=that.bars;if(bars.length===0){return;}for(var _i546=0;_i546<that._items.length;_i546++){if(that._items[_i546][size]>biggestItem[size]){biggestItem=that._items[_i546];}}if(!biggestItem){return;}if(biggestItem[size]!==bars[0][size]){bars.map(function(bar){return bar.style[that._measurements.restricredDimension.toLowerCase()]=biggestItem[size]+'px';});}}/**
    * Validates the sizes of the Splitter items and resizes them to fit if the overflow is set to 'none' or 'visible'
    */},{key:'_validateItemSize',value:function _validateItemSize(noStyleChangedIgnoring){var that=this;if(that.autoFitMode==='overflow'){return;}if(that.keepProportionsOnResize&&that._resizeEventFired){that._keepItemProportionsOnResize();}else{var totalItemSize=0,totalBarsSize=0;that._items.map(function(item){return totalItemSize+=!item.collapsed?item.style[that._measurements.dimension]&&item.style[that._measurements.dimension].indexOf('%')<-1&&item._sizeBeforeCollapse?item._sizeBeforeCollapse:item.getBoundingClientRect()[that._measurements.dimension]:0;});that.bars.map(function(bar){return totalBarsSize+=bar[that._measurements.size];});var sizeDifference=totalItemSize+totalBarsSize-that.$.container.getBoundingClientRect()[that._measurements.dimension];if(sizeDifference>0){that._validateItemsSizeOverflowing(sizeDifference,noStyleChangedIgnoring);}else{that._validateItemsSizeUnderflowing(sizeDifference,noStyleChangedIgnoring);}}that._autoFitItems();//Should be called only when Splitter's width is 'auto'
that._validateBarsSize();//Keeping the last valid splitter size
that._splitterSize=that[that._measurements.size];//NOTE: Elements in ShadowDOM get initialized in reverse order ( from outher to inner elements). That's why this is necessary.
if(that.enableShadowDOM){var host=that.getRootNode().host;if(host&&host.enableShadowDOM&&host.isCompleted&&host._validateItemSize){host._validateItemSize();}}}/**
     * Validates the min/max properties of the neighbour items
     * @param {any} item
     */},{key:'_validateNeighbourSizeLimits',value:function _validateNeighbourSizeLimits(item){var that=this;function checkLimits(neighbourItem){if(!neighbourItem){return;}if(neighbourItem.min){neighbourItem._setSize('min',neighbourItem.min,true);}if(neighbourItem.max){neighbourItem._setSize('max',neighbourItem.max,true);}}if(!that._items||!that._items.length){return;}that._noNeighbourValidation=true;var itemIndex=that._items.indexOf(item);//Previous item
checkLimits(that._items[itemIndex-1]);//Next item
checkLimits(that._items[itemIndex+1]);delete that._noNeighbourValidation;}/**
     * Keeps the same proportion of the items during resizing. Handles the keepProportionsOnResize proeprty
     */},{key:'_keepItemProportionsOnResize',value:function _keepItemProportionsOnResize(){var that=this;var splitterBarsSize=0,currentItemsSize=0,resizableItems=[];that.bars.map(function(bar){return splitterBarsSize+=bar[that._measurements.size];});for(var _i547=0;_i547<that._items.length;_i547++){if(that._items[_i547].collapsed){continue;}resizableItems.push(that._items[_i547]);currentItemsSize+=that._items[_i547]._sizeBeforeCollapse||that._items[_i547][that._measurements.size];}if(that._splitterSize){currentItemsSize=that._splitterSize;}var splitterSizeAfterResize=that[that._measurements.size];for(var _i548=0;_i548<resizableItems.length;_i548++){if(resizableItems[_i548].style[that._measurements.dimension].indexOf('%')>-1){continue;}resizableItems[_i548].style[that._measurements.dimension]=(resizableItems[_i548]._sizeBeforeCollapse=(resizableItems[_i548]._sizeBeforeCollapse||resizableItems[_i548][that._measurements.size])/currentItemsSize*splitterSizeAfterResize)+'px';}}/**
     * Validates and recalculates the sizes of the items if they overflow the container
     */},{key:'_validateItemsSizeOverflowing',value:function _validateItemsSizeOverflowing(sizeDifference,noStyleChangedIgnoring){var that=this,itemsCount=that._items.length;var newSize=0,initialSize=void 0,itemsLocked=[],currentSize=void 0,currentlySetSize=void 0,lastLockedItem=void 0,containerRect=that.$.container.getBoundingClientRect();for(var _i549=0;_i549<that._items.length;_i549++){//Note: If the size is set in percentages via CSS, it's not possible check if it's really percentages or not 
//because even getComputedStyle returns the computed size not the original.
//The only way to work is by setting the size property to a percentage value !
currentlySetSize=that._items[_i549].style[that._measurements.dimension];currentSize=currentlySetSize.indexOf('%')>-1?currentlySetSize:that._items[_i549][that._measurements.size];if(!currentlySetSize&&!that._items[_i549].size&&that._items[_i549].size!==0){delete that._items[_i549]._originalSize;}that._items[_i549]._originalSize=that._items[_i549]._originalSize?that._items[_i549]._originalSize:currentSize;itemsLocked.push(that._items[_i549].locked);}if(itemsLocked.indexOf(false)<0){lastLockedItem=that._items[that._items.length-1];lastLockedItem.locked=false;}//Check how many items should be resized to fit
for(var _i550=itemsCount-1;_i550>=0;_i550--){if(that._items[_i550].collapsed||that._items[_i550].locked){continue;}if((that._items[_i550]._originalSize+'').indexOf('%')>-1){that._items[_i550].style[that._measurements.dimension]=that._items[_i550]._originalSize;that._items[_i550]._sizeBeforeCollapse=containerRect[that._measurements.dimension]*parseFloat(that._items[_i550]._originalSize)/100;continue;}if(sizeDifference===0){continue;}//Doesn't include the item paddings
initialSize=that._items[_i550].getBoundingClientRect()[that._measurements.dimension];newSize=initialSize-sizeDifference;//May trigger the styleChanged event
that._items[_i550].style[that._measurements.dimension]=(that._items[_i550]._sizeBeforeCollapse=Math.max(that._items[_i550]._sizeLimits?that._items[_i550]._sizeLimits[that._measurements.minDimension]:0,newSize))+'px';sizeDifference-=initialSize-that._items[_i550]._sizeBeforeCollapse;}//Reduce the min-sizes if necessary
if(sizeDifference>0){for(var _i551=itemsCount-1;_i551>=0;_i551--){if(that._items[_i551].collapsed){continue;}initialSize=that._items[_i551].getBoundingClientRect()[that._measurements.dimension];newSize=initialSize-sizeDifference;var itemMin=that._items[_i551]._sizeLimits[that._measurements.minDimension]||that._items[_i551].min;if(itemMin){if((itemMin+'').indexOf('%')>-1){itemMin=parseFloat(itemMin)/100*that._items[_i551].parentElement[that._measurements.size];}else{itemMin=parseFloat(itemMin);}if(itemMin>newSize){//Ignore the StyleChanged event
that._items[_i551]._sizeLimits.ignoreUpdate=noStyleChangedIgnoring?false:true;that._items[_i551].style[that._measurements.minDimension]=Math.max(0,newSize)+'px';}}if(that._items[_i551]._originalSize&&(that._items[_i551]._originalSize+'').indexOf('%')>-1){continue;}that._items[_i551]._sizeLimits.ignoreUpdate=noStyleChangedIgnoring?false:true;that._items[_i551].style[that._measurements.dimension]=(that._items[_i551]._sizeBeforeCollapse=Math.max(0,newSize))+'px';sizeDifference-=initialSize-that._items[_i551]._sizeBeforeCollapse;}}if(lastLockedItem){lastLockedItem.locked=true;}}/**
     * Validates the sizes of the items if the're underflowing the container ( should fit )
     */},{key:'_validateItemsSizeUnderflowing',value:function _validateItemsSizeUnderflowing(sizeDifference,noStyleChangedIgnoring){var that=this,itemsCount=that._items.length;var newSize=0,initialSize=void 0,lastLockedItem=void 0;sizeDifference=Math.abs(sizeDifference);if(that._items.length>0&&that._items.map(function(item){return item.locked;}).indexOf(false)<0){lastLockedItem=that._items[that._items.length-1];lastLockedItem.locked=false;}//Increase the min-size of the items if it has been changed
for(var _i552=0;_i552<itemsCount;_i552++){if(that._items[_i552].collapsed||that._items[_i552][that._measurements.size]>=(that._items[_i552]._sizeLimits?that._items[_i552]._sizeLimits[that._measurements.minDimension]:0)){continue;}initialSize=that._items[_i552][that._measurements.size];newSize=that._items[_i552][that._measurements.size]+sizeDifference;if(that._items[_i552][that._measurements.size]<that._items[_i552]._sizeLimits[that._measurements.minDimension]){//Ignore the StyleChanged event
that._items[_i552]._sizeLimits.ignoreUpdate=noStyleChangedIgnoring?false:true;that._items[_i552].style[that._measurements.minDimension]=(that._items[_i552]._sizeBeforeCollapse=Math.max(0,Math.min(that._items[_i552]._sizeLimits[that._measurements.minDimension],newSize)))+'px';}sizeDifference-=(that._items[_i552]._sizeBeforeCollapse||that._items[_i552][that._measurements.size])-initialSize;if(sizeDifference<=0){break;}}var containerSize=that.$.container.getBoundingClientRect()[that._measurements.dimension];if(sizeDifference>0){for(var _i553=0;_i553<itemsCount;_i553++){if(that._items[_i553].collapsed||that._items[_i553].locked){continue;}if(that._items[_i553]._originalSize!==undefined){if((that._items[_i553]._originalSize+'').indexOf('%')>-1){that._items[_i553].style[that._measurements.dimension]=that._items[_i553]._originalSize;that._items[_i553]._sizeBeforeCollapse=parseFloat(that._items[_i553]._originalSize)*containerSize/100;//delete that._items[i]._originalSize;
}else if(that._items[_i553][that._measurements.size]>=that._items[_i553]._originalSize){sizeDifference+=that._items[_i553][that._measurements.size]-that._items[_i553]._originalSize;that._items[_i553].style[that._measurements.dimension]=(that._items[_i553]._sizeBeforeCollapse=that._items[_i553]._originalSize)+'px';}else{newSize=Math.min(that._items[_i553]._originalSize,that._items[_i553][that._measurements.size]+sizeDifference);var usedSize=newSize-that._items[_i553][that._measurements.size];if(that._items[_i553][that._measurements.minDimension]<that._items[_i553]._sizeLimits[that._measurements.minDimension]){that._items[_i553].style[that._measurements.minDimension]=Math.min(that._items[_i553]._sizeLimits[that._measurements.minDimension],newSize)+'px';}that._items[_i553].style[that._measurements.dimension]=(that._items[_i553]._sizeBeforeCollapse=Math.max(0,Math.min(newSize,that._items[_i553]._originalSize)))+'px';sizeDifference-=usedSize;}if(sizeDifference<=0){break;}}}}if(lastLockedItem){lastLockedItem.locked=true;}}},{key:'items',get:function get(){var that=this;if(!that.isReady){return;}var children=that.$.container.children;var items=[];for(var _i554=0;_i554<children.length;_i554++){if(children[_i554]instanceof JQX.SplitterItem||children[_i554].tagName==='JQX-SPLITTER-ITEM'){items.push(children[_i554]);}}return items;}},{key:'hasStyleObserver',get:function get(){return'resize';}},{key:'bars',get:function get(){var that=this;if(!that.isReady){return;}var children=that.$.container.children;var items=[];for(var _i555=0;_i555<children.length;_i555++){if(children[_i555]instanceof JQX.SplitterBar||children[_i555].tagName==='JQX-SPLITTER-BAR'){items.push(children[_i555]);}}return items;}}],[{key:'properties',/**
    * Splitter's properties
    */get:function get(){return{'autoFitMode':{allowedValues:['end','proportional','overflow'],value:'proportional',type:'string'},'dataSource':{value:null,type:'object?',reflectToAttribute:false},'orientation':{allowedValues:['horizontal','vertical'],value:'vertical',type:'string'},'keepProportionsOnResize':{value:false,type:'boolean'},'resizeMode':{allowedValues:['none','adjacent','end','proportional'],value:'adjacent',type:'string'},'resizeStep':{value:5,type:'number'},'liveResize':{value:false,type:'boolean'},'messages':{extend:true,value:{'en':{'invalidIndex':'{{elementType}}: "{{method}}" method accepts an index of type number.','indexOutOfBound':'{{elementType}}: Out of bound index/indexes in "{{method}}" method.','invalidNode':'{{elementType}}: "{{method}}" method accepts an object or an array of objects as it\'s second parameter.','invalidSettings':'{{elementType}}: "{{method}}" method accepts a string or an object as it\'s second parameter.','invalidType':'{{elementType}}: "{{propertyName}}" must be of type string or number.'}},type:'object'}};}/**
    * Splitter's event listeners
    */},{key:'listeners',get:function get(){return{'focus':'_focusHandler','blur':'_focusHandler','down':'_downHandler','move':'_moveHandler','document.dragstart':'_dragStartHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','keydown':'_keyDownHandler','resize':'_resizeEventHandler'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.button.css','jqx.splitter.css'];}}]);return Splitter;}(JQX.ContentElement));/**
 * Tab Item custom element.
 */JQX('jqx-tab-item',function(_JQX$ContentElement13){babelHelpers.inherits(TabItem,_JQX$ContentElement13);function TabItem(){babelHelpers.classCallCheck(this,TabItem);return babelHelpers.possibleConstructorReturn(this,(TabItem.__proto__||Object.getPrototypeOf(TabItem)).apply(this,arguments));}babelHelpers.createClass(TabItem,[{key:'attached',/**
     * Called when the element is attached to the DOM.
     */value:function attached(){var that=this;babelHelpers.get(TabItem.prototype.__proto__||Object.getPrototypeOf(TabItem.prototype),'attached',this).call(this);if(!that.isCompleted){return;}that.$.removeClass('right');that.$.removeClass('left');that.$.removeClass('top');that.$.removeClass('bottom');that.$.removeClass('animate');}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(TabItem.prototype.__proto__||Object.getPrototypeOf(TabItem.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;if(that._preventPropertyChangedHandler){delete that._preventPropertyChangedHandler;return;}switch(propertyName){case'closeButtonHidden':that.$.fireEvent('closeButtonVisibilityChange',{'hidden':newValue});break;case'index':that.$.fireEvent('indexChange',{'newIndex':newValue,'oldIndex':oldValue,'tabItem':that});break;case'label':break;case'labelSize':that.$.fireEvent('labelSizeChange',{'size':newValue});break;}}/**
     * Appends a child node directly to the jqx-tab-item's container.
     *
     * @param {HTMLElement} node The node to append.
     */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}that.firstElementChild.appendChild(node);}/**
     * Sets the index without "propertyChangedHandler" being called
     */},{key:'_setIndex',value:function _setIndex(index){var that=this,oldContext=that.context;that.context=that;that.index=index;that.context=oldContext;}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',// Tab Item's properties.
get:function get(){return{'closeButtonHidden':{value:false,type:'boolean'},'index':{value:null,type:'number?'},'selected':{value:false,type:'boolean'},'label':{value:'',type:'string'},'labelSize':{value:null,type:'number?'}};}}]);return TabItem;}(JQX.ContentElement));/**
 * Tab Items Group custom element.
 */JQX('jqx-tab-items-group',function(_JQX$ContentElement14){babelHelpers.inherits(TabItemsGroup,_JQX$ContentElement14);function TabItemsGroup(){babelHelpers.classCallCheck(this,TabItemsGroup);return babelHelpers.possibleConstructorReturn(this,(TabItemsGroup.__proto__||Object.getPrototypeOf(TabItemsGroup)).apply(this,arguments));}babelHelpers.createClass(TabItemsGroup,[{key:'template',/**
     * Tab Items Group's HTML template.
     */value:function template(){return'';}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(TabItemsGroup.prototype.__proto__||Object.getPrototypeOf(TabItemsGroup.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;if(that._preventPropertyChangedHandler){delete that._preventPropertyChangedHandler;return;}switch(propertyName){case'label':break;case'labelSize':this.$.fireEvent('labelSizeChange',{'size':newValue});break;}}},{key:'enableShadowDOM',get:function get(){return false;}}],[{key:'properties',// Tab Items Group's properties.
get:function get(){return{'label':{value:'',type:'string'},'labelSize':{value:null,type:'number?'}};}}]);return TabItemsGroup;}(JQX.ContentElement));/**
 * Tabs custom element.
 */JQX('jqx-tabs',function(_JQX$BaseElement21){babelHelpers.inherits(Tabs,_JQX$BaseElement21);function Tabs(){babelHelpers.classCallCheck(this,Tabs);return babelHelpers.possibleConstructorReturn(this,(Tabs.__proto__||Object.getPrototypeOf(Tabs)).apply(this,arguments));}babelHelpers.createClass(Tabs,[{key:'template',/**
     * Tabs's HTML template.
     */value:function template(){return'<div id="container">\n                    <div id="tabsHeaderSection" class="jqx-header jqx-tabs-header-section">\n                        <div id="tabsHeaderItems" class="jqx-tabs-header-items">\n                            <jqx-repeat-button id="scrollButtonNear" class="jqx-tabs-scroll-button jqx-nav-button jqx-spin-button jqx-hidden" animation="[[animation]]" unfocusable>\n                                <div id="arrowNear" class="jqx-arrow"></div>\n                            </jqx-repeat-button>\n                            <div id="tabStrip" class="jqx-tab-strip"></div>\n                            <jqx-repeat-button id="scrollButtonFar" class="jqx-tabs-scroll-button jqx-nav-button jqx-spin-button jqx-hidden" animation="[[animation]]" unfocusable>\n                                <div id="arrowFar" class="jqx-arrow"></div>\n                            </jqx-repeat-button>\n                            <div id="dropDownButton" class="jqx-drop-down-button">\n                                <div id="dropDownButtonArrow" class="jqx-drop-down-button-arrow jqx-unselectable"></div>\n                            </div>\n                            <span id="tabSelectionBar" class="jqx-tabs-selection-bar"></span>\n                            <div id="resizeToken" class="jqx-tabs-resize-token jqx-hidden"></div>\n                        </div>\n                        <div id="tabHeaderControls" class="jqx-tabs-header-controls"></div>\n                    </div>\n                    <div id="tabContentSection" class="jqx-tabs-content-section">\n                       <content></content>\n                    </div>\n                    <div id="dropDownButtonDropDown" class="jqx-drop-down-button-drop-down jqx-hidden"></div>\n                    <input id="hiddenInput" type="hidden" name="[[name]]">\n                </div>';}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){var that=this;babelHelpers.get(Tabs.prototype.__proto__||Object.getPrototypeOf(Tabs.prototype),'attached',this).call(this);if(!that.isCompleted){return;}that._applyTabOverflow();}/**
     * Called when the element is ready. Used for one-time configuration of the Tab.
     */},{key:'ready',value:function ready(){babelHelpers.get(Tabs.prototype.__proto__||Object.getPrototypeOf(Tabs.prototype),'ready',this).call(this);var that=this;that._flexWritingModeNoFullSupport=true;// !JQX.Utilities.Core.Browser.Chrome;
that._arrowCodes={top:'&#xe804',bottom:'&#xe801',left:'&#xe802',right:'&#xe803'};that._createElement();}/**
     * Appends a "jqx-tab-item" node as the last tab of the Tabs.
     *
     * @param {HTMLElement} node The "jqx-tab-item" node to append.
     */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!(node instanceof JQX.TabItem)){that.error(that.localize('tabItemRequired',{method:'appendChild'}));}that.insert(that._tabs.length,{node:node});}/**
     * Collapses the content section.
     */},{key:'collapse',value:function collapse(){var that=this;if(!that.collapsible||that.collapsed){return;}that.collapsed=true;}/**
     * Makes sure a tab is visible by scrolling to it.
     *
     * @param {Number} index The index of the tab to scroll to.
     */},{key:'ensureVisible',value:function ensureVisible(index){var that=this;if(index===null||that.tabLayout==='wrap'||that.tabLayout==='shrink'||that.tabPosition==='hidden'){return;}that._validateIndex(index,'ensureVisible');index=Math.max(0,Math.min(index,that._tabs.length-1));var group=that._tabs[index].group,tabStrip=that.$.tabStrip,tabStripBoundingRect=tabStrip.getBoundingClientRect(),scrollTarget=group===null?that._tabLabelContainers[index]:that._groupLabels[that._groups.indexOf(group)],scrollTargetBoundingRect=scrollTarget.getBoundingClientRect();if((that.tabPosition==='top'||that.tabPosition==='bottom')&&(tabStripBoundingRect.left>scrollTargetBoundingRect.left||tabStripBoundingRect.right<scrollTargetBoundingRect.right)){tabStrip.scrollLeft+=Math.round(scrollTargetBoundingRect.right-tabStrip.offsetWidth-tabStripBoundingRect.left);}else if((that.tabPosition==='left'||that.tabPosition==='right')&&(tabStripBoundingRect.top>scrollTargetBoundingRect.top||tabStripBoundingRect.bottom<scrollTargetBoundingRect.bottom)){tabStrip.scrollTop+=Math.round(scrollTargetBoundingRect.bottom-tabStrip.offsetHeight-tabStripBoundingRect.top);}that._updateScrollButtonVisibility();if(that.resize){that._getTabCoordinates();}}/**
     * Expands the content section.
     */},{key:'expand',value:function expand(){var that=this;if(!that.collapsible||!that.collapsed){return;}that.collapsed=false;}/**
     * Returns the offset of the tab item container (jqx-tab-item element) from the edge of the Tabs (jqx-tabs element) where the tab strip is positioned.
     *
     * @param {Number} index The index of the tab item.
     */},{key:'getOffsetFromEdgeOfElement',value:function getOffsetFromEdgeOfElement(index){var that=this;that._validateIndex(index,'getOffsetFromEdgeOfElement');index=Math.max(0,Math.min(index,that._tabs.length-1));var tabItem=that._tabs[index],position=that.tabPosition;if(position!=='hidden'){return Math.abs(tabItem.getBoundingClientRect()[position]-that.getBoundingClientRect()[position]);}return tabItem.getBoundingClientRect().top-that.getBoundingClientRect().top;}/**
     * Inserts a new tab and an associated content section.
     *
     * @param {Number} index The index to insert a new tab at.
     * @param {Object} details An Object with the fields "label", "labelSize", "content" and "group".
     */},{key:'insert',value:function insert(index,details){var that=this;var group=void 0,tab=void 0;that._validateIndex(index,'insert');if(details===undefined||details.label===undefined&&details.content===undefined&&details.node===undefined){that.error(that.localize('detailsObjectRequired'));}if(details.node===undefined){group=details.group;tab=document.createElement('jqx-tab-item');tab.label=details.label!==undefined?details.label:'';tab.labelSize=details.labelSize!==undefined?details.labelSize:null;tab.content=details.content;}else{tab=details.node;if(tab.index!==undefined&&tab.index!==null){var oldContext=tab.context;tab.context=tab;tab.index=null;tab.context=oldContext;}}tab.$.addClass('jqx-visibility-hidden');tab.group=null;var labelContainers=that._addTabLabelContainer(tab),tabLabelContainer=labelContainers.tabLabelContainer,dropDownLabelContainer=labelContainers.dropDownLabelContainer;tabLabelContainer.tab=tab;tab.tabLabelContainer=tabLabelContainer;var tabDetails={index:index,tab:tab,tabLabelContainer:tabLabelContainer,dropDownLabelContainer:dropDownLabelContainer};if(that._groups.length===0&&group===undefined){that._insertNoGrouping(tabDetails);}else{if(group!==undefined&&group!==null){tabDetails.group=group;var jqxTabItemsGroup=that.$.tabContentSection.querySelector('jqx-tab-items-group[label="'+group+'"]');if(jqxTabItemsGroup!==null){// group exists
tabDetails.jqxTabItemsGroup=jqxTabItemsGroup;that._insertIntoExistingGroup(tabDetails);}else{// group does not exist
that._insertIntoNewGroup(tabDetails);}}else{that._insertNearAGroup(tabDetails);}}that._getReorderItems();if(that.selectedIndex===null&&!that.allowToggle&&that._tabs.length){that._select(0,true);}if(tab.group!==null&&tab.labelSize!==null&&that.tabLayout!=='shrink'){tabLabelContainer.style.removeProperty([that._orientationSettings.dimension]);}that._applyTabOverflow();}/**
     * Inserts the specified "jqx-tab-item" node before the reference "jqx-tab-item" node.
     *
     * @param {HTMLElement} newNode The "jqx-tab-item" node to insert.
     * @param {HTMLElement} referenceNode The "jqx-tab-item" node before which newNode is inserted.
     */},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!(newNode instanceof JQX.TabItem)||referenceNode!==undefined&&referenceNode!==null&&!(referenceNode instanceof JQX.TabItem)){that.error(that.localize('tabItemRequired',{method:'insertBefore'}));}var reselectIndex=void 0;if(that.contains(newNode)){if(newNode.selected){reselectIndex=true;}that.remove(newNode.index);}if(referenceNode!==undefined&&referenceNode!==null){if(!that.contains(referenceNode)){that.error(that.localize('referenceNodeNotChild',{argument:'referenceNode'}));}that.insert(referenceNode.index,{node:newNode});}else{that.insert(that._tabs.length,{node:newNode});}if(reselectIndex){that._select(newNode.index,false);}}/**
     * Refreshes the Tabs header section.
     */},{key:'refreshTabHeader',value:function refreshTabHeader(){var that=this;if(that.tabLayout==='scroll'){that._checkOverflowScroll();}that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],true);}/**
     * Removes a tab and its associated content section.
     *
     * @param {Number} index The index of the tab to remove.
     */},{key:'remove',value:function remove(index){var that=this,initialNumberOfTabs=that._tabs.length;if(initialNumberOfTabs===0){return;}that._validateIndex(index,'remove');index=Math.max(0,Math.min(index,initialNumberOfTabs-1));var tab=that._tabs[index],tabLabelContainer=that._tabLabelContainers[index];//Fixes a iOS issue where removing the labelContainer breaks touchmove event
//Used inside DockingLayout to indicate that the lableContainer shouldn't be removed during dragging operation.
if(tabLabelContainer._lazyRemove){tabLabelContainer.classList.add('jqx-hidden');}else{tabLabelContainer.parentElement.removeChild(tabLabelContainer);//Breaks Layout on iOS
}tab.parentElement.removeChild(tab);if(tab.group!==null){var jqxTabItemsGroup=that.$.tabContentSection.querySelector('jqx-tab-items-group[label="'+tab.group+'"]');if(jqxTabItemsGroup.childElementCount===0){var groupIndex=that._groups.indexOf(tab.group);that.$.tabStrip.removeChild(that._groupLabels[groupIndex]);that._groups.splice(groupIndex,1);that.$.container.removeChild(that._groupLabels[0].dropDown);that._groupLabels.splice(groupIndex,1);that.$.tabContentSection.removeChild(jqxTabItemsGroup);}}if(initialNumberOfTabs>1){if(index<that.selectedIndex){that.selectedIndex--;}else if(index===that.selectedIndex){if(index===initialNumberOfTabs-1){that._select(index-1,false);}else{that._select(index+1,false);that.selectedIndex--;}}}else{that.selectedIndex=null;that.$.tabContentSection.innerHTML='';}that._tabLabelContainers.splice(index,1);that.$.dropDownButtonDropDown.removeChild(that.$.dropDownButtonDropDown.children[index]);that._tabs.splice(index,1);if(that._focusedItem===tab){that._focusedItem=that._tabs[that._focusedItem.index];}that._updateTabIndexes();that._getReorderItems();that._applyTabOverflow();that.ensureVisible(that.selectedIndex);}/**
     * Removes a child "jqx-tab-item" node.
     *
     * @param {HTMLElement} node The "jqx-tab-item" node to remove.
     */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!(node instanceof JQX.TabItem)){that.error(that.localize('tabItemRequired',{method:'removeChild'}));}if(!that.contains(node)){that.error(that.localize('referenceNodeNotChild',{argument:'node'}));}that.remove(node.index);}/**
     * Selects a tab.
     *
     * @param {Number} index The index of the tab to select.
     */},{key:'select',value:function select(index){var that=this;if(that._tabs.length===0){return;}that._validateIndex(index,'select');index=Math.max(0,Math.min(index,that._tabs.length-1));that.ensureVisible(index);that._select(index,true);}/**
     * Sets whether the element can be focused.
     *
     * @param {Boolean} focusable Whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.removeAttribute('tabindex');return;}if(that.getAttribute('tabindex')===null||that.getAttribute('tabindex')<0){that.setAttribute('tabindex',0);}}/**
     * Updates a tab and its associated content section.
     *
     * @param {Number} index The index of the tab to update.
     * @param {String} label The new label of the tab. The value can be the id of an HTMLTemplateElement.
     * @param {String/HTMLElement} content The new content of the tab.
     */},{key:'update',value:function update(index,label,content){var that=this;if(that._tabs.length===0){return;}that._validateIndex(index,'update');index=Math.max(0,Math.min(index,that._tabs.length-1));var tab=that._tabs[index];if(label!==undefined&&tab.label!==label){var labelTextContainer=that._tabLabelContainers[index].firstElementChild.children[0],dropDownLabelContainer=that.$.dropDownButtonDropDown.children[index];tab.label=label;labelTextContainer.innerHTML='';dropDownLabelContainer.innerHTML='';that._setLabel(label,labelTextContainer,dropDownLabelContainer);that._applyTabOverflow();}if(content!==undefined){tab.content=content;}}/**
     * Applies initial settings to the Tabs element.
     */},{key:'_createElement',value:function _createElement(){var that=this;if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}that._handlePosition(that.tabPosition);that._handleScrollButtonsPosition(that.scrollButtonsPosition,'both');if(that.dataSource!==null){that._processDataSource();}that._setFocusable();if(that.collapsed&&!that.collapsible){that.collapsed=false;}if(that.collapsible){if(that.allowToggle){that.allowToggle=false;}}that._processHTML();if(that.selectedIndex===null){that.$.tabContentSection.setAttribute('show-placeholder','');}setTimeout(function(){return that.refreshTabHeader();},300);}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Tabs.prototype.__proto__||Object.getPrototypeOf(Tabs.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;switch(propertyName){case'addNewTab':if(newValue){that._insertAddNewTab();}else{that.$.tabStrip.removeChild(that._addNewTab);delete that._addNewTab;}that._applyTabOverflow();break;case'allowToggle':if(newValue&&that.collapsible){if(that.collapsed){that._toggleCollapsedState();}that.collapsible=false;}else if(!newValue&&that.selectedIndex===null){that.ensureVisible(that.selectedIndex=0);that._select(that.selectedIndex,true,null);}break;case'closeButtonMode':if(newValue==='selected'){for(var _i556=0;_i556<that._tabs.length;_i556++){that._disableCloseButton(_i556);}that._enableCloseButton(that.selectedIndex);}else{that._disableCloseButton(that.selectedIndex);var tabLabelContainers=that._tabLabelContainers;for(var _i557=0;_i557<tabLabelContainers.length;_i557++){var tabLabelContainer=tabLabelContainers[_i557];tabLabelContainer.closeButtonEnabled=that._tabs[_i557].closeButtonHidden!==true;that._showCloseButton(tabLabelContainer);}}that._applyTabOverflow();break;case'closeButtons':{var _tabLabelContainers=that._tabLabelContainers,fn=newValue?that._showCloseButton:that._hideCloseButton;for(var _i558=0;_i558<_tabLabelContainers.length;_i558++){var _tabLabelContainer=_tabLabelContainers[_i558];fn(_tabLabelContainer);}that._applyTabOverflow();break;}case'collapsed':if(!that.collapsible&&newValue){that.collapsed=false;return;}break;case'collapsible':if(!newValue&&that.collapsed){that.collapsed=false;}that.allowToggle=false;if(that.selectedIndex===undefined){that.select(that._focusedItem.index);}break;case'dataSource':that.selectedIndex=null;for(var _i559=0;_i559<that._groupLabels.length;_i559++){that.$.container.removeChild(that._groupLabels[_i559].dropDown);}that.$.tabStrip.innerHTML='';that._processDataSource();that._processHTML();break;case'disabled':that._setFocusable();that.$.scrollButtonNear.disabled=newValue;that.$.scrollButtonFar.disabled=newValue;if(!newValue){that._updateScrollButtonVisibility();}that._closeDropDownButtonDropDown();break;case'messages':case'scrollMode':case'selectionMode':case'readonly':case'reorder':break;case'overflow':if(that.tabLayout!=='scroll'){return;}that.$.tabStrip.scrollLeft=0;that.$.tabStrip.scrollTop=0;if(newValue==='hidden'){that.$tabsHeaderSection.removeClass('scroll-buttons-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}else{that._checkOverflowScroll();}that._getTabCoordinates();break;case'tabPosition':{that.$.tabSelectionBar.style.transition='none';that._tabPositionChanging=true;that._closeGroupDropDown();that._handlePosition(newValue,oldValue);if(that.tabLayout!=='shrink'){that._applyLabelSizes('tabPosition');}that._applyTabOverflow();if(newValue!=='hidden'){var arrows=that.getElementsByClassName('jqx-tab-group-arrow');for(var _i560=0;_i560<arrows.length;_i560++){arrows[_i560].innerHTML=that._arrowCodes[that.tabPosition];}}delete that._tabPositionChanging;requestAnimationFrame(function(){that.$.tabSelectionBar.style.transition=null;});break;}case'resize':if(newValue){that._getTabCoordinates();}break;case'scrollButtonsPosition':that._handleScrollButtonsPosition(newValue,oldValue);break;case'selectedIndex':{if(isNaN(newValue)){that.selectedIndex=newValue=oldValue;}if(!that.allowToggle&&newValue===null){that.selectedIndex=oldValue;return;}var validIndex=newValue;if(newValue!==null){validIndex=Math.max(0,Math.min(newValue,that._tabs.length-1));that.ensureVisible(validIndex);}that._select(validIndex,true,oldValue);break;}case'tabLayout':if(oldValue==='scroll'){that.$tabsHeaderSection.removeClass('scroll-buttons-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}if(newValue==='shrink'){that._applyLabelSizes('shrink',true);}else if(oldValue==='shrink'){that._applyLabelSizes('shrink',false);}that._applyTabOverflow();if(newValue==='scroll'&&that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}that.ensureVisible(that.selectedIndex);break;case'tabTextOrientation':that._applyTabOverflow();that.ensureVisible(that.selectedIndex);break;case'unfocusable':that._setFocusable();break;}}/**
     * Adds a tab group container.
     */},{key:'_addGroupContainer',value:function _addGroupContainer(label,labelSize){var that=this,groupContainer=document.createElement('div'),labelTextWrapper=document.createElement('div'),labelTextContainer=document.createElement('div'),arrow=document.createElement('div'),dropDown=document.createElement('div');groupContainer.className='jqx-tab-group-container jqx-unselectable';groupContainer.$=JQX.Utilities.Extend(groupContainer);labelTextWrapper.className='jqx-tab-label-text-wrapper';if(labelSize!==null&&that.tabLayout!=='shrink'){groupContainer.style[that._orientationSettings.dimension]=parseInt(labelSize,10)+'px';}// label
labelTextContainer.className='jqx-tab-label-text-container';labelTextContainer.innerHTML=label;// down arrow
arrow.className='jqx-tab-group-arrow';arrow.innerHTML=that._arrowCodes[that.tabPosition];// dropdown
dropDown.className='jqx-tab-group-drop-down jqx-hidden';dropDown.$=JQX.Utilities.Extend(dropDown);labelTextWrapper.appendChild(labelTextContainer);labelTextWrapper.appendChild(arrow);groupContainer.appendChild(labelTextWrapper);that.$.container.appendChild(dropDown);groupContainer.group=label;groupContainer.dropDown=dropDown;dropDown.groupContainer=groupContainer;return{label:groupContainer,dropDown:dropDown};}/**
     * Adds group-related elements to the tabstrip.
     */},{key:'_addGroupElements',value:function _addGroupElements(details){var that=this,groups=details.groups,groupLabels=details.groupLabels,group=details.group,groupIndex=groups.indexOf(group),tabLabelContainer=details.tabLabelContainer;var groupLabel=void 0;if(groupIndex!==-1){// group exists
groupLabel=groupLabels[groupIndex];groupLabel.dropDown.appendChild(tabLabelContainer);}else{// group does not exist
groups.push(group);var groupContainers=that._addGroupContainer(group,details.jqxTabItemsGroup.labelSize),groupDropDown=groupContainers.dropDown;groupLabel=groupContainers.label;groupDropDown.appendChild(tabLabelContainer);groupDropDown.groupContainer=groupContainers.label;details.documentFragment.appendChild(groupLabel);groupLabels.push(groupLabel);}if(that.selectedIndex===details.i){that._selectedGroup=groupLabel;groupLabel.$.addClass('jqx-tab-group-selected');}}/**
     * "add new" tab event handler.
     */},{key:'_addNewTabHandler',value:function _addNewTabHandler(currentElement,eventType,click){var that=this;if(that._swiping){return;}if(click){currentElement.removeAttribute('hover');that.insert(that._tabs.length,{label:'New Tab',content:''});that._select(that._tabs.length-1,true);}else if(!that._reordering&&!that._swiping){if(eventType==='mouseover'){currentElement.setAttribute('hover','');}else if(eventType==='mouseout'){currentElement.removeAttribute('hover');}}}/**
     * Adds a tab label container.
     */},{key:'_addTabLabelContainer',value:function _addTabLabelContainer(tab,addNewTab){var that=this,tabLabelContainer=document.createElement('div'),labelTextWrapper=document.createElement('div'),labelTextContainer=document.createElement('div'),closeButton=document.createElement('div');var dropDownLabelContainer=void 0;tabLabelContainer.className='jqx-tab-label-container jqx-unselectable';labelTextWrapper.className='jqx-tab-label-text-wrapper';// label
labelTextContainer.className='jqx-tab-label-text-container';// close button
closeButton.className='jqx-tab-close-button';closeButton.innerHTML='&#xe81f';if(addNewTab===undefined){if(that.closeButtons){if(that.closeButtonMode==='default'&&tab.closeButtonHidden||that.closeButtonMode==='selected'&&!tab.selected){closeButton.classList.add('jqx-hidden');tabLabelContainer.closeButtonEnabled=false;}else{labelTextContainer.classList.add('jqx-close-button-enabled');tabLabelContainer.closeButtonEnabled=true;}}else{closeButton.classList.add('jqx-hidden');tabLabelContainer.closeButtonEnabled=true;}dropDownLabelContainer=document.createElement('div');dropDownLabelContainer.className='jqx-tab-label-container jqx-unselectable';if(tab.group===null&&tab.labelSize!==null&&that.tabLayout!=='shrink'){tabLabelContainer.style[that._orientationSettings.dimension]=parseInt(tab.labelSize,10)+'px';}}else{closeButton.classList.add('jqx-hidden');tabLabelContainer.closeButtonEnabled=false;}that._setLabel(tab?tab.label:'+',labelTextContainer,dropDownLabelContainer);labelTextContainer.$=JQX.Utilities.Extend(labelTextContainer);closeButton.$=JQX.Utilities.Extend(closeButton);labelTextWrapper.appendChild(labelTextContainer);labelTextWrapper.appendChild(closeButton);tabLabelContainer.appendChild(labelTextWrapper);tabLabelContainer.$=JQX.Utilities.Extend(tabLabelContainer);return{tabLabelContainer:tabLabelContainer,dropDownLabelContainer:dropDownLabelContainer};}/**
     * Animates selection.
     */},{key:'_animateSelection',value:function _animateSelection(tab,oldTab,indexGreaterThanOldIndex){var that=this;var side1='right',side2='left';that._animatedTab=tab;that._animatedOldTab=oldTab;if(!that._animatedTab||!that._animatedOldTab){return;}if(that.tabPosition==='left'||that.tabPosition==='right'){side1='top';side2='bottom';}for(var _i561=0;_i561<that._tabs.length;_i561++){that._tabs[_i561].$.removeClass(side1);that._tabs[_i561].$.removeClass(side2);that._tabs[_i561].$.removeClass('animate');}if(tab===oldTab){tab.$.hasClass('jqx-visibility-hidden')?tab.$.removeClass('jqx-visibility-hidden'):tab.$.addClass('jqx-visibility-hidden');that._animatedOldTab.classToRemove=side1;return;}if(indexGreaterThanOldIndex){tab.$.addClass(side1);tab.$.removeClass('jqx-visibility-hidden');oldTab.$.addClass('animate');tab.$.addClass('animate');oldTab.$.addClass(side2);oldTab.$.addClass('jqx-visibility-hidden');tab.$.removeClass(side1);that._animatedOldTab.classToRemove=side2;}else{tab.$.addClass(side2);tab.$.removeClass('jqx-visibility-hidden');oldTab.$.addClass('animate');tab.$.addClass('animate');oldTab.$.addClass(side1);oldTab.$.addClass('jqx-visibility-hidden');tab.$.removeClass(side2);that._animatedOldTab.classToRemove=side1;}}/**
     * Shows or hides the scroll buttons.
     */},{key:'_applyConditionalTabOverflow',value:function _applyConditionalTabOverflow(){var that=this,verticalPosition=that.tabPosition==='left'||that.tabPosition==='right',tabStrip=that.$.tabStrip;if(that.tabLayout==='scroll'){that._checkOverflowScroll();return;}if(that._flexWritingModeNoFullSupport&&that.tabLayout==='shrink'&&verticalPosition&&tabStrip.scrollHeight>tabStrip.offsetHeight){var tabStripChildren=tabStrip.children,height=100/tabStripChildren.length+'%';tabStrip.$.addClass('shrink-tabs-vertical');for(var _i562=0;_i562<tabStripChildren.length;_i562++){tabStripChildren[_i562].style.height=height;tabStripChildren[_i562].firstElementChild.firstElementChild.classList.add('jqx-tab-label-text-container-full-height');}that._inlineStyleTabStripChildren=true;}}/**
     * Applies label sizes.
     */},{key:'_applyLabelSizes',value:function _applyLabelSizes(condition,removeLabelSize){var that=this,newDimension=that._orientationSettings.dimension,oldDimension=newDimension==='width'?'height':'width';for(var _i563=0;_i563<that._reorderItems.length;_i563++){var currentItem=that._reorderItems[_i563],correspondingCustomElement=that._getCorrespondingCustomElement(currentItem);if(correspondingCustomElement.labelSize!==null){if(condition==='tabPosition'){currentItem.style.removeProperty(oldDimension);}if(!removeLabelSize){currentItem.style[newDimension]=parseInt(correspondingCustomElement.labelSize,10)+'px';}else{currentItem.style.removeProperty(newDimension);}}}}/**
     * Applies the necessary adjustments in order to achieve the chosen tab overflow.
     */},{key:'_applyTabOverflow',value:function _applyTabOverflow(){var that=this;that._removeInlineStyle();if(that._tabs.length===0){that._toggleNavigationElementsVisibility();return;}var tabLayout=that.tabLayout,position=that.tabPosition,verticalPosition=position==='left'||position==='right',tabStrip=that.$.tabStrip;that._closeDropDownButtonDropDown();switch(tabLayout){case'scroll':case'dropDown':if(that._flexWritingModeNoFullSupport&&that.tabTextOrientation==='vertical'&&verticalPosition){that._fixTabStripNotChrome(tabStrip);}break;case'wrap':if(that.tabTextOrientation==='vertical'){if(that._flexWritingModeNoFullSupport){// fix for flexbox-related issues in Firefox, Edge, and Safari
if(verticalPosition){that._fixTabStripNotChrome(tabStrip);}else{var tabStripChildren=tabStrip.children;var greatestHeight=tabStripChildren[0].offsetHeight;for(var _i564=1;_i564<tabStripChildren.length;_i564++){greatestHeight=Math.max(greatestHeight,tabStripChildren[_i564].offsetHeight);}for(var _i565=1;_i565<tabStripChildren.length;_i565++){tabStripChildren[_i565].style.height=greatestHeight+'px';}that._inlineStyleTabStripChildren=true;}}else if(!verticalPosition){if(tabStrip.scrollHeight>tabStrip.offsetHeight){tabStrip.style.height=tabStrip.scrollHeight+'px';that._inlineStyleTabStrip=true;}}}else if(verticalPosition&&tabStrip.scrollWidth>tabStrip.offsetWidth){tabStrip.style.width=tabStrip.scrollWidth+'px';if(position==='right'){tabStrip.style.flexWrap='wrap-reverse';}that._inlineStyleTabStrip=true;}break;case'shrink':{if(!verticalPosition){if(tabStrip.scrollWidth>tabStrip.offsetWidth){tabStrip.$.addClass('shrink-tabs');}}else if(that._flexWritingModeNoFullSupport&&that.tabTextOrientation==='vertical'){var _tabStripChildren=tabStrip.children,computedStyle=window.getComputedStyle(_tabStripChildren[0].firstElementChild),paddings=parseInt(computedStyle.paddingLeft,10)+parseInt(computedStyle.paddingRight,10);var maxWidth=0;for(var _i566=0;_i566<_tabStripChildren.length;_i566++){maxWidth=Math.max(maxWidth,_tabStripChildren[_i566].firstElementChild.firstElementChild.offsetWidth);}tabStrip.style.width=paddings+maxWidth+'px';that._inlineStyleTabStrip=true;break;}}}that._applyConditionalTabOverflow();that._getTabCoordinates();that._fixTabStripFlex(tabLayout);that._toggleNavigationElementsVisibility();that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],true);}/**
     * Checks if items overflow and shows/hides scroll buttons.
     */},{key:'_checkOverflowScroll',value:function _checkOverflowScroll(){var that=this,tabsHeaderSection=that.$tabsHeaderSection,tabStrip=that.$.tabStrip,overflow=that.overflow;if(overflow==='hidden'){return;}var overflowing=void 0,showNear=void 0,showFar=void 0;if(!(that.tabPosition==='left'||that.tabPosition==='right')){overflowing=Math.round(tabStrip.scrollWidth)>Math.round(tabStrip.offsetWidth);showNear=Math.round(tabStrip.scrollLeft)>0;showFar=Math.round(tabStrip.offsetWidth+tabStrip.scrollLeft)<Math.round(tabStrip.scrollWidth);}else{overflowing=Math.round(tabStrip.scrollHeight)>Math.round(tabStrip.offsetHeight);showNear=Math.round(tabStrip.scrollTop)>0;showFar=Math.round(tabStrip.offsetHeight+tabStrip.scrollTop)<Math.round(tabStrip.scrollHeight);}if(overflow==='scroll'){tabsHeaderSection.addClass('scroll-buttons-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');}if(overflowing){if(overflow==='auto'){if(!tabsHeaderSection.hasClass('scroll-buttons-shown')){tabsHeaderSection.addClass('scroll-buttons-shown');}if(showNear){that.$scrollButtonNear.removeClass('jqx-hidden');}else{that.$scrollButtonNear.addClass('jqx-hidden');}if(showFar){that.$scrollButtonFar.removeClass('jqx-hidden');}else{that.$scrollButtonFar.addClass('jqx-hidden');}if((showNear&&showFar)===false){tabsHeaderSection.addClass('one-button-shown');}else{tabsHeaderSection.removeClass('one-button-shown');}if(!that.disabled){that.$.scrollButtonNear.disabled=false;that.$.scrollButtonFar.disabled=false;}}else{tabsHeaderSection.removeClass('one-button-shown');if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}else{that.$.scrollButtonNear.disabled=!showNear;that.$.scrollButtonFar.disabled=!showFar;}}}else if(!overflowing&&overflow==='auto'&&tabsHeaderSection.hasClass('scroll-buttons-shown')){tabsHeaderSection.removeClass('scroll-buttons-shown');tabsHeaderSection.removeClass('one-button-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}else if(!overflowing&&overflow==='scroll'){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}}/**
     * jqx-tab-item closeButtonVisibilityChange event handler.
     */},{key:'_closeButtonVisibilityChangeHandler',value:function _closeButtonVisibilityChangeHandler(event){var that=this,index=event.target.index;if(that.closeButtonMode==='selected'){that._tabLabelContainers[index].closeButtonEnabled=event.detail.hidden;return;}if(event.detail.hidden){that._disableCloseButton(index);}else{that._enableCloseButton(index);}}/**
     * Closes the dropdown in mode 'dropDown'.
     */},{key:'_closeDropDownButtonDropDown',value:function _closeDropDownButtonDropDown(){var that=this;if(that._dropDownButtonDropDownOpened){that.$dropDownButtonDropDown.addClass('jqx-hidden');that._dropDownButtonDropDownOpened=false;}}/**
     * Closes the open group dropdown.
     */},{key:'_closeGroupDropDown',value:function _closeGroupDropDown(){var that=this;if(!that._openDropDown){return;}if(that._openDropDown.rippleInProgress){setTimeout(function(){if(that._openDropDown){that._openDropDown.$.addClass('jqx-hidden');delete that._openDropDown.rippleInProgress;that._openDropDown=undefined;}},450);}else{that._openDropDown.$.addClass('jqx-hidden');that._openDropDown=undefined;}}/**
     * Container event handler.
     */},{key:'_containerHandler',value:function _containerHandler(event){var that=this,eventType=event.type;if(that.disabled||that.readonly||that._resizing&&eventType!=='mouseout'||(eventType==='down'||eventType==='up')&&event.which!==1&&!JQX.Utilities.Core.isMobile){return;}if(eventType==='up'){event.stopPropagation();}var target=event.originalEvent?event.originalEvent.target:event.target;if(that.$.tabContentSection.contains(target)){return;}if(that.$.dropDownButton.contains(target)){that._dropDownButtonHandler(target,event);return;}if(that.$.dropDownButtonDropDown.contains(target)){that._dropDownButtonHandler(target,event,true);return;}that._tabStripHandler(target,event);}/**
     * Disables the close button of a tab.
     *
     * @param {Number} index The index of which tab's close button to hide.
     */},{key:'_disableCloseButton',value:function _disableCloseButton(index){var that=this,tabLabelContainer=that._tabLabelContainers[index];tabLabelContainer.closeButtonEnabled=false;if(that.closeButtons){that._hideCloseButton(tabLabelContainer);}}/**
     * Document (mouse)move handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this,orientationSettings=that._orientationSettings;if(that._reordering){if(!that._reorderStartThrown){that._fireDragEvent(event,'dragStart');that._reorderStartThrown=true;}var mouseCoordinate=event[orientationSettings.coordinate],condition=that.tabLayout!=='wrap'?function(currentCoordinateSet){return mouseCoordinate>=currentCoordinateSet[orientationSettings.from]&&mouseCoordinate<=currentCoordinateSet[orientationSettings.to];}:function(currentCoordinateSet){return event.pageX>=currentCoordinateSet.fromX&&event.pageX<=currentCoordinateSet.toX&&event.pageY>=currentCoordinateSet.fromY&&event.pageY<=currentCoordinateSet.toY;};var inTab=false;for(var _i567=0;_i567<that._tabCoordinates.length;_i567++){var currentCoordinateSet=that._tabCoordinates[_i567];if(condition(currentCoordinateSet)){inTab=_i567;break;}}if(that._preventReorder!==true&&inTab!==false&&inTab!==that._draggedIndex){that._reorderTabs(that._draggedIndex,inTab);that._closeGroupDropDown();that._draggedIndex=inTab;that._getReorderItems();that._getTabCoordinates();}var draggedIndexCoordinates=that._tabCoordinates[that._draggedIndex];if(that.tabLayout!=='wrap'&&(mouseCoordinate<draggedIndexCoordinates[orientationSettings.from]||mouseCoordinate>draggedIndexCoordinates[orientationSettings.to])||that.tabLayout==='wrap'&&(event.originalEvent.target.closest('.jqx-tab-label-container')!==null||event.originalEvent.target.closest('.jqx-tab-group-container')!==null)&&!(event.pageX>=draggedIndexCoordinates.fromX&&event.pageX<=draggedIndexCoordinates.toX&&event.pageY>=draggedIndexCoordinates.fromY&&event.pageY<=draggedIndexCoordinates.toY)){that._preventReorder=true;}else{that._preventReorder=false;}}else if(that._resizing){that.$.resizeToken.style[orientationSettings.edge]=event[orientationSettings.coordinate]-that._tabsHeaderSectionCoordinate+'px';that.$resizeToken.removeClass('jqx-hidden');}}/**
     * Document (mouse)up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this;var target=event.originalEvent.target;that._endSwiping(event,Date.now());if(that._openDropDown&&!that._openDropDown.rippleInProgress&&(target===document||target.closest('.jqx-tab-group-container')!==that._openDropDown.groupContainer)){that._closeGroupDropDown();}if(!that.$.dropDownButton.contains(target)){that._closeDropDownButtonDropDown();}that._endReordering(event,target);that._resize(event);if(that._tabToResize!==undefined){that._tabToResize=undefined;}}/**
     * Dropdown button and dropdown event handler.
     */},{key:'_dropDownButtonHandler',value:function _dropDownButtonHandler(target,event,dropDown){var that=this,eventType=event.type;if(dropDown){if(target.classList.contains('jqx-tab-label-container')){switch(eventType){case'down':that._downTarget=target;break;case'mouseout':target.removeAttribute('hover');break;case'mouseover':target.setAttribute('hover','');break;case'up':if(target===that._downTarget){that.select(Array.from(that.$.dropDownButtonDropDown.children).indexOf(target));that._closeDropDownButtonDropDown();}break;}}return;}if(eventType==='down'){that._downTarget=that.$.dropDownButton;}else if(eventType==='up'&&that._downTarget===that.$.dropDownButton){if(!that._dropDownButtonDropDownOpened){var tabPosition=that.tabPosition;var _left3=void 0,top=void 0;switch(tabPosition){case'top':_left3=that.$.dropDownButton.offsetLeft;top=that.$.tabsHeaderSection.offsetTop+that.$.dropDownButton.offsetHeight;break;case'bottom':_left3=that.$.dropDownButton.offsetLeft;top=that.$.tabsHeaderSection.offsetTop;break;case'left':_left3=that.$.dropDownButton.offsetWidth;top=that.$.dropDownButton.offsetTop;break;case'right':_left3=that.$.tabsHeaderSection.offsetLeft;top=that.$.dropDownButton.offsetTop;break;}that.$.dropDownButtonDropDown.style.left=_left3+'px';that.$.dropDownButtonDropDown.style.top=top+'px';that.$dropDownButtonDropDown.removeClass('jqx-hidden');that._dropDownButtonDropDownOpened=true;}else{that._closeDropDownButtonDropDown();}}}/**
     * Enables the close button of a tab.
     *
     * @param {Number} index The index of which tab's close button to show.
     */},{key:'_enableCloseButton',value:function _enableCloseButton(index){var that=this,tabLabelContainer=that._tabLabelContainers[index];tabLabelContainer.closeButtonEnabled=true;if(that.closeButtons){that._showCloseButton(tabLabelContainer);}}/**
     * Ends reordering operation.
     */},{key:'_endReordering',value:function _endReordering(event,target){var that=this;if(!that._reordering){return;}if(that._draggedHoveredTab){if(!that._draggedHoveredTab.contains(target)){that._draggedHoveredTab.removeAttribute('hover');}delete that._draggedHoveredTab;}that._reorderedIndex=undefined;that._reordering=false;that._reorderStartThrown=false;that.removeAttribute('dragged');if(event){that._fireDragEvent(event,'dragEnd');}}/**
     * Ends swiping and scrolls kinetically.
     */},{key:'_endSwiping',value:function _endSwiping(event,now){var that=this;if(!that._dragStartDetails){return;}var orientationSettings=that._orientationSettings,tabStrip=that.$.tabStrip,timeDifference=Math.abs(that._dragStartDetails.startTime-now),speed=200/timeDifference,distanceDifference=(that._dragStartDetails[orientationSettings.startCoordinate]-event[orientationSettings.coordinate])*speed;var remaining=Math.abs(distanceDifference);var scrollable=function scrollable(){if(distanceDifference>0&&tabStrip[orientationSettings.scrollDirection]===tabStrip[orientationSettings.scrollSize]-tabStrip[orientationSettings.size]||distanceDifference<0&&tabStrip[orientationSettings.scrollDirection]===0){return false;}return true;};var scrollStep=0.03*Math.abs(distanceDifference)*speed;var kineticScrolling=function kineticScrolling(){if(scrollStep>5){var remainingPart=(remaining-scrollStep)/Math.abs(distanceDifference);if(remainingPart<0.1){scrollStep/=1.25;}else if(remainingPart<0.15){scrollStep/=1.2;}else if(remainingPart<0.2){scrollStep/=1.15;}else if(remainingPart<0.25){scrollStep/=1.1;}else if(remainingPart<0.3){scrollStep/=1.05;}}scrollStep=Math.round(scrollStep);var oldScrollDirection=tabStrip[orientationSettings.scrollDirection];if(distanceDifference>0){tabStrip[orientationSettings.scrollDirection]=Math.min(oldScrollDirection+scrollStep,tabStrip[orientationSettings.scrollSize]-tabStrip[orientationSettings.size]);}else{tabStrip[orientationSettings.scrollDirection]=Math.max(oldScrollDirection-scrollStep,0);}remaining-=scrollStep;that._updateScrollButtonVisibility(true);var canBeScrolled=scrollable();if(remaining>0&&canBeScrolled){that._scrollingAnimationFrame=window.requestAnimationFrame(kineticScrolling);}else{that._wheelInProgress=false;}};if(that._scrollingAnimationFrame){cancelAnimationFrame(that._scrollingAnimationFrame);}if(timeDifference<500&&scrollable()){that._scrollingAnimationFrame=window.requestAnimationFrame(kineticScrolling);}else{that._wheelInProgress=false;}delete that._dragStartDetails;if(that._swiping){delete that._swiping;}}/**
     * Fires the "dragStart" or "dragEnd" event.
     */},{key:'_fireDragEvent',value:function _fireDragEvent(event,eventToFire){var that=this,target=that.$.tabStrip.children[that._draggedIndex],tab=target.tab;var selected=void 0,index=void 0,label=void 0;if(tab){selected=tab.selected;index=tab.index;label=tab.label;}else{label=target.group;}that.$.fireEvent(eventToFire,{'position':{left:event.pageX,top:event.pageY},'target':target,'selected':selected,'index':index,'label':label});}/**
     * Fix for the tab strip layout in Firefox, Edge, and Safari when the position and text orientation are vertical.
     */},{key:'_fixTabStripNotChrome',value:function _fixTabStripNotChrome(tabStrip){var that=this;function recalcTabStripWidth(){var tabStripChildren=[].slice.call(tabStrip.children).filter(function(item){return!item._lazyRemove;});var rect=tabStripChildren[0].getBoundingClientRect(),leastStartX=rect.left,greatestEndX=leastStartX+tabStripChildren[0].offsetWidth;for(var _i568=1;_i568<tabStripChildren.length;_i568++){rect=tabStripChildren[_i568].getBoundingClientRect();leastStartX=Math.min(leastStartX,rect.left);greatestEndX=Math.max(greatestEndX,rect.left+tabStripChildren[_i568].offsetWidth);}tabStrip.style.width=greatestEndX-leastStartX+'px';that._inlineStyleTabStrip=true;}if(that._tabs.length===0){return;}recalcTabStripWidth();if(JQX.Utilities.Core.Browser.Safari){setTimeout(function(){tabStrip.parentElement.classList.add('jqx-hidden');setTimeout(function(){tabStrip.parentElement.classList.remove('jqx-hidden');recalcTabStripWidth();},10);},10);}//Necessary for cases where the tab is nested for example in a Layout and resize has to be called on the Layout.
that.$.fireEvent('tabStripResize');}/**
     * Fix for a flexbox-related issue in Chrome.
     */},{key:'_fixTabStripFlex',value:function _fixTabStripFlex(tabLayout){var that=this;if(!that._flexWritingModeNoFullSupport&&that.tabTextOrientation==='vertical'&&(that.tabPosition==='left'||that.tabPosition==='right')){setTimeout(function(){that.$tabsHeaderSection.addClass('jqx-hidden');setTimeout(function(){that.$tabsHeaderSection.removeClass('jqx-hidden');that._getTabCoordinates();if(tabLayout==='scroll'){that._checkOverflowScroll();}},10);},10);}}/**
     * Returns the custom element corresponding to the passed tab strip element.
     */},{key:'_getCorrespondingCustomElement',value:function _getCorrespondingCustomElement(currentItem){if(currentItem.$.hasClass('jqx-tab-label-container')){return currentItem.tab;}else{return this.$.tabContentSection.querySelector('jqx-tab-items-group[label="'+currentItem.group+'"]');}}/**
     * Stores the items that can be reordered in an Array.
     */},{key:'_getReorderItems',value:function _getReorderItems(){var that=this;var reorderItems=void 0;if(that._groups.length===0){reorderItems=that._tabLabelContainers;}else{reorderItems=Array.from(that.$.tabStrip.children);if(that.addNewTab){reorderItems.pop();}}that._reorderItems=reorderItems;}/**
     * Stores the coordinates of tab label containers in an Array (for use in reorder and resize functionalities).
     */},{key:'_getTabCoordinates',value:function _getTabCoordinates(){var that=this;if(!that.reorder&&!that.resize||that.tabPosition==='hidden'){return;}var coordinates=[],windowScrollX=window.scrollX||window.pageXOffset,windowScrollY=window.scrollY||window.pageYOffset;for(var _i569=0;_i569<that._reorderItems.length;_i569++){var currentTabLabelContainer=that._reorderItems[_i569],boundingClientRect=currentTabLabelContainer.getBoundingClientRect(),style=window.getComputedStyle(currentTabLabelContainer),marginLeft=parseFloat(style.marginLeft),marginRight=parseFloat(style.marginRight),marginTop=parseFloat(style.marginTop),marginBottom=parseFloat(style.marginBottom);coordinates.push({fromX:boundingClientRect.left-marginLeft+windowScrollX,toX:boundingClientRect.right+marginRight+windowScrollX,fromY:boundingClientRect.top-marginTop+windowScrollY,toY:boundingClientRect.bottom+marginBottom+windowScrollY});}that._tabCoordinates=coordinates;}/**
     * Stores tabs in an Array.
     */},{key:'_getTabs',value:function _getTabs(){var that=this;var tabs=that.enableShadowDOM?that.shadowRoot.querySelectorAll('jqx-tab-item'):that.getElementsByTagName('jqx-tab-item');if(that.selectedIndex!==null){if(tabs.length===0){that.selectedIndex=null;}else{that.selectedIndex=Math.max(0,Math.min(that.selectedIndex,tabs.length-1));}}that._tabs=Array.from(tabs);}/**
     * Group container event handler.
     */},{key:'_groupContainerHandler',value:function _groupContainerHandler(currentElement,eventType){var that=this,dropDown=currentElement.dropDown;if(eventType==='down'){that._downTarget=currentElement;if(that.reorder&&that._reorderItems.length>1){that._getTabCoordinates();that._reordering=true;that.setAttribute('dragged','');that._draggedIndex=Array.from(that.$.tabStrip.children).indexOf(currentElement);}return;}if(!that._reordering&&!that._swiping){if(dropDown!==that._openDropDown&&eventType==='mouseover'&&!currentElement.classList.contains('jqx-tab-group-selected')){currentElement.setAttribute('hover','');}else if(eventType==='mouseout'){currentElement.removeAttribute('hover');}}if(eventType!=='up'||that._downTarget!==currentElement||that._reorderedIndex!==undefined||that._swiping){return;}if(dropDown===that._openDropDown){that._closeGroupDropDown();if(!currentElement.classList.contains('jqx-tab-group-selected')){currentElement.setAttribute('hover','');}}else{that._openGroupDropDown(currentElement);}}/**
     * Handles changes to the "tabPosition" property.
     */},{key:'_handlePosition',value:function _handlePosition(newPosition,oldPosition){var that=this;if([undefined,'top','left','hidden'].indexOf(oldPosition)!==-1&&(newPosition==='bottom'||newPosition==='right')){that.$.container.insertBefore(that.$.tabContentSection,that.$.tabsHeaderSection);}else if((oldPosition==='bottom'||oldPosition==='right')&&['top','left','hidden'].indexOf(newPosition)!==-1){that.$.container.insertBefore(that.$.tabsHeaderSection,that.$.tabContentSection);}if(newPosition==='hidden'){that._orientationSettings={coordinate:'pageY',dimension:'height',edge:'top',from:'fromY',size:'offsetHeight',to:'toY',scrollDirection:'scrollTop',scrollSize:'scrollHeight',startCoordinate:'startY',wheelOffset:35};that.removeAttribute('horizontal');that.removeAttribute('vertical');return;}if(newPosition==='top'||newPosition==='bottom'){that._orientationSettings={coordinate:'pageX',dimension:'width',edge:'left',from:'fromX',size:'offsetWidth',to:'toX',scrollDirection:'scrollLeft',scrollSize:'scrollWidth',startCoordinate:'startX',wheelOffset:70};that.removeAttribute('vertical');that.setAttribute('horizontal','');that.$arrowNear.removeClass('jqx-arrow-up');that.$arrowNear.addClass('jqx-arrow-left');that.$arrowFar.removeClass('jqx-arrow-down');that.$arrowFar.addClass('jqx-arrow-right');}else{that._orientationSettings={coordinate:'pageY',dimension:'height',edge:'top',from:'fromY',size:'offsetHeight',to:'toY',scrollDirection:'scrollTop',scrollSize:'scrollHeight',startCoordinate:'startY',wheelOffset:35};that.removeAttribute('horizontal');that.setAttribute('vertical','');that.$arrowNear.removeClass('jqx-arrow-left');that.$arrowNear.addClass('jqx-arrow-up');that.$arrowFar.removeClass('jqx-arrow-right');that.$arrowFar.addClass('jqx-arrow-down');}that.$.dropDownButtonArrow.innerHTML=that._arrowCodes[that.tabPosition];}/**
     * Handles changes to the "scrollButtonsPosition" property.
     */},{key:'_handleScrollButtonsPosition',value:function _handleScrollButtonsPosition(newScrollButtonsPosition,oldScrollButtonsPosition){var that=this,tabsHeaderItems=that.$.tabsHeaderItems;if(newScrollButtonsPosition===oldScrollButtonsPosition){return;}if(newScrollButtonsPosition==='both'){if(oldScrollButtonsPosition==='near'){tabsHeaderItems.insertBefore(that.$.scrollButtonFar,that.$.dropDownButton);}else{tabsHeaderItems.insertBefore(that.$.scrollButtonNear,that.$.tabStrip);}}else if(newScrollButtonsPosition==='near'){if(oldScrollButtonsPosition==='far'){tabsHeaderItems.insertBefore(that.$.scrollButtonNear,that.$.tabStrip);}tabsHeaderItems.insertBefore(that.$.scrollButtonFar,that.$.tabStrip);}else{if(oldScrollButtonsPosition==='near'){tabsHeaderItems.insertBefore(that.$.scrollButtonFar,that.$.dropDownButton);}tabsHeaderItems.insertBefore(that.$.scrollButtonNear,that.$.scrollButtonFar);}}/**
     * Hides the close button of a tab.
     */},{key:'_hideCloseButton',value:function _hideCloseButton(tabLabelContainer){tabLabelContainer.firstElementChild.children[0].$.removeClass('jqx-close-button-enabled');tabLabelContainer.firstElementChild.children[1].$.addClass('jqx-hidden');}/**
     * jqx-tab-item indexChange event handler.
     */},{key:'_indexChangeHandler',value:function _indexChangeHandler(event){var that=this,oldIndex=event.detail.oldIndex,validNewIndex=Math.max(0,Math.min(event.detail.newIndex,that._tabs.length-1));if(oldIndex!==validNewIndex){if(that._groups.length===0){that._reorderTabs(oldIndex,validNewIndex);}else{var tabItem=event.detail.tabItem;tabItem._setIndex(oldIndex);that.remove(oldIndex);that.insert(validNewIndex,{node:tabItem});if(that.selectedIndex===oldIndex){that._select(validNewIndex,false);}}that._reorderedIndex=undefined;}}/**
     * Inserts the "add new" tab.
     */},{key:'_insertAddNewTab',value:function _insertAddNewTab(){var that=this,tabLabelContainer=that._addTabLabelContainer(undefined,true).tabLabelContainer;tabLabelContainer.$.addClass('jqx-add-new-tab');that.$.tabStrip.appendChild(tabLabelContainer);that._addNewTab=tabLabelContainer;}/**
     * Inserts a tab into an existing group.
     */},{key:'_insertIntoExistingGroup',value:function _insertIntoExistingGroup(details){var that=this,jqxTabItemsGroup=details.jqxTabItemsGroup,tab=details.tab,tabLabelContainer=details.tabLabelContainer,group=details.group,groupLabel=that._groupLabels[that._groups.indexOf(group)],groupDropDown=groupLabel.dropDown;var index=details.index;index=Math.max(0,Math.min(index,jqxTabItemsGroup.childElementCount));groupDropDown.insertBefore(tabLabelContainer,groupDropDown.children[index]);var sibling=jqxTabItemsGroup.children[index];var overallIndex=void 0;if(sibling){overallIndex=sibling.index;}else{overallIndex=jqxTabItemsGroup.children[index-1].index+1;}jqxTabItemsGroup.insertBefore(tab,sibling);that._tabLabelContainers.splice(overallIndex,0,tabLabelContainer);that.$.dropDownButtonDropDown.insertBefore(details.dropDownLabelContainer,that.$.dropDownButtonDropDown.children[overallIndex]||null);that._tabs.splice(overallIndex,0,tab);index=overallIndex;tab.group=group;that._updateIndexes(index);}/**
     * Inserts a tab into a new group.
     */},{key:'_insertIntoNewGroup',value:function _insertIntoNewGroup(details){var that=this,tab=details.tab,tabLabelContainer=details.tabLabelContainer,group=details.group,groupContainers=that._addGroupContainer(group),groupLabel=groupContainers.label,groupDropDown=groupContainers.dropDown;groupDropDown.appendChild(tabLabelContainer);that._groups.push(group);var index=Math.max(0,Math.min(details.index,that.$.tabStrip.childElementCount)),tabStripIndex=index;if(that._addNewTab&&tabStripIndex===that.$.tabStrip.childElementCount){tabStripIndex--;}that.$.tabStrip.insertBefore(groupLabel,that.$.tabStrip.children[tabStripIndex]||null);that._groupLabels.push(groupLabel);var newJqxTabItemsGroup=document.createElement('jqx-tab-items-group');newJqxTabItemsGroup.appendChild(tab);that.$.tabContentSection.insertBefore(newJqxTabItemsGroup,that.$.tabContentSection.children[index]);newJqxTabItemsGroup.label=group;var previousSibling=newJqxTabItemsGroup.previousElementSibling;var overallIndex=0;if(previousSibling){if(previousSibling instanceof JQX.TabItem){overallIndex=previousSibling.index+1;}else if(previousSibling){overallIndex=previousSibling.lastElementChild.index+1;}}that._tabLabelContainers.splice(overallIndex,0,tabLabelContainer);that.$.dropDownButtonDropDown.insertBefore(details.dropDownLabelContainer,that.$.dropDownButtonDropDown.children[overallIndex]||null);that._tabs.splice(overallIndex,0,tab);index=overallIndex;tab.group=group;that._updateIndexes(index);}/**
     * Inserts a stand-alone tab when there are groups.
     */},{key:'_insertNearAGroup',value:function _insertNearAGroup(details){var that=this,tab=details.tab,tabLabelContainer=details.tabLabelContainer;var index=details.index;index=Math.max(0,Math.min(index,that._tabs.length));var previous=that._tabs[index-1],next=that._tabs[index],groupOfNext=next?next.group:undefined;if(previous&&previous.group!==null&&next&&groupOfNext!==null){// insert into group
next.tabLabelContainer.parentElement.insertBefore(tabLabelContainer,next.tabLabelContainer);next.parentElement.insertBefore(tab,next);tab.group=groupOfNext;}else{if(next){if(groupOfNext!==null){that.$.tabStrip.insertBefore(tabLabelContainer,that._groupLabels[that._groups.indexOf(groupOfNext)]);that.$.tabContentSection.insertBefore(tab,that.$.tabContentSection.querySelector('jqx-tab-items-group[label="'+groupOfNext+'"]'));}else{that.$.tabStrip.insertBefore(tabLabelContainer,next.tabLabelContainer);that.$.tabContentSection.insertBefore(tab,next);}}else{that.$.tabStrip.insertBefore(tabLabelContainer,that._addNewTab||null);that.$.tabContentSection.appendChild(tab);}}that._tabLabelContainers.splice(index,0,tabLabelContainer);that.$.dropDownButtonDropDown.insertBefore(details.dropDownLabelContainer,that.$.dropDownButtonDropDown.children[index]||null);that._tabs.splice(index,0,tab);that._updateIndexes(index);}/**
     * Inserts a tab when there are no groups.
     */},{key:'_insertNoGrouping',value:function _insertNoGrouping(tabDetails){var that=this,index=Math.max(0,Math.min(tabDetails.index,that._tabs.length)),tab=tabDetails.tab,tabLabelContainer=tabDetails.tabLabelContainer;that.$.tabStrip.insertBefore(tabLabelContainer,that._tabLabelContainers[index]||that._addNewTab||null);that.$.tabContentSection.insertBefore(tab,that._tabs[index]||null);that._tabLabelContainers.splice(index,0,tabLabelContainer);that.$.dropDownButtonDropDown.insertBefore(tabDetails.dropDownLabelContainer,that.$.dropDownButtonDropDown.children[index]||null);that._tabs.splice(index,0,tab);that._updateIndexes(index);}/**
     * keydown event handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this,key=event.key;if(document.activeElement!==that||['ArrowLeft','ArrowDown','ArrowRight','ArrowUp','End','Home','Enter',' ','Escape'].indexOf(key)===-1||that.disabled||that.readonly||that.selectionMode==='none'||!that.allowToggle&&that.selectedIndex===null||that._reordering||that._swiping){return;}event.preventDefault();var lastTabIndex=that._tabs.length-1;var indexToSelect=void 0,noSelect=void 0,step=0;switch(key){case'ArrowLeft':case'ArrowUp':if(that.collapsible&&event.ctrlKey){if(key==='ArrowLeft'){if(that.tabPosition==='right'){that.expand();}else if(that.tabPosition==='left'){that.collapse();}}else if(key==='ArrowUp'){if(that.tabPosition==='bottom'){that.expand();}else if(that.tabPosition==='top'){that.collapse();}}return;}step=-1;// selects previous tab
if(that.selectedIndex===0){noSelect=true;break;}indexToSelect=that.selectedIndex+step;break;case'ArrowRight':case'ArrowDown':if(that.collapsible&&event.ctrlKey){if(key==='ArrowRight'){if(that.tabPosition==='right'){that.collapse();}else if(that.tabPosition==='left'){that.expand();}}else if(key==='ArrowDown'){if(that.tabPosition==='bottom'){that.collapse();}else if(that.tabPosition==='top'){that.expand();}}return;}step=1;// selects next tab
if(that.selectedIndex===lastTabIndex){noSelect=true;break;}indexToSelect=that.selectedIndex+step;break;case'End':if(that.selectedIndex===lastTabIndex){noSelect=true;break;}indexToSelect=lastTabIndex;break;case'Home':if(that.selectedIndex===0){noSelect=true;break;}indexToSelect=0;break;case'Enter':case' ':if(!that.allowToggle){return;}if(that._focusedItem){that.select(that._focusedItem.index);var closestGroupContainer=that._focusedItem.tabLabelContainer.closest('.jqx-tab-group-drop-down');if(closestGroupContainer){that._openGroupDropDown(closestGroupContainer.groupContainer);}}return;case'Escape':if(that._openDropDown){that._closeGroupDropDown();}return;}if(that.allowToggle&&that._tabs.length>0){if(that._focusedItem){that._focusedItem.tabLabelContainer.removeAttribute('focus');}else{that._focusedItem=that._focusedItem||that._tabs[that.selectedIndex]||that._tabs[0];}that._focusedItem=that._tabs[Math.min(Math.max(0,that._focusedItem.index+step),lastTabIndex)];that._focusedItem.tabLabelContainer.setAttribute('focus','');that.ensureVisible(that._focusedItem.index);var _closestGroupContainer=that._focusedItem.tabLabelContainer.closest('.jqx-tab-group-drop-down');if(_closestGroupContainer&&_closestGroupContainer.groupContainer){if(that._openDropDown&&that._openDropDown!==_closestGroupContainer.dropDown){that._closeGroupDropDown();}that._openGroupDropDown(_closestGroupContainer.groupContainer);}else if(that._openDropDown){that._closeGroupDropDown();}return;}if(!noSelect){that.select(indexToSelect);}}/**
     * Tab label container/label text container event handler.
     */},{key:'_labelContainerHandler',value:function _labelContainerHandler(currentElement,event,eventType){var that=this,click=eventType==='up'&&that._downTarget===currentElement;if(eventType==='down'){that._downTarget=currentElement;if(that.selectionMode==='click'&&currentElement!==that._addNewTab){if(JQX.Utilities.Core.isMobile&&currentElement.tab.group===null){var scrollDirection=that.$.tabStrip[that._orientationSettings.scrollDirection];setTimeout(function(){if(scrollDirection===that.$.tabStrip[that._orientationSettings.scrollDirection]){var rippleInProgress=that._ripple(event,currentElement);if(rippleInProgress&&that._openDropDown&&that._openDropDown.contains(currentElement)){that._openDropDown.rippleInProgress=true;}}},100);}else{var rippleInProgress=that._ripple(event,currentElement);if(rippleInProgress&&that._openDropDown&&that._openDropDown.contains(currentElement)){that._openDropDown.rippleInProgress=true;}}}}if(currentElement===that._addNewTab){that._addNewTabHandler(currentElement,eventType,click);return;}var index=currentElement.tab.index,currentElementStatic=!(that._reordering&&that._reorderedIndex!==undefined);if(click&&index===that.selectedIndex){that._closeGroupDropDown();if(currentElementStatic&&currentElement.tab.group===null){that._toggleCollapsedState();}}if(!that._swiping&&(currentElementStatic&&that.selectionMode==='click'&&click||!that._reordering&&(that.selectionMode===eventType||that.selectionMode==='mouseenter'&&eventType==='mouseover'))){that._select(index,true);}if(!that._reordering&&!that._swiping&&(that.selectionMode==='click'||that.selectionMode==='dblclick')){if(eventType==='mouseover'&&!currentElement.hasAttribute('selected')){currentElement.setAttribute('hover','');}else if(eventType==='mouseout'){currentElement.removeAttribute('hover');}}if(that.reorder&&eventType==='down'&&currentElement.tab.group===null&&that._reorderItems.length>1){that._getTabCoordinates();that._reordering=true;that.setAttribute('dragged','');if(currentElement.hasAttribute('hover')){that._draggedHoveredTab=currentElement;}if(that._groups.length===0){that._draggedIndex=currentElement.tab.index;}else{that._draggedIndex=Array.from(that.$.tabStrip.children).indexOf(currentElement);}}}/**
     * jqx-tab-item labelSizeChange event handler.
     */},{key:'_labelSizeChangeHandler',value:function _labelSizeChangeHandler(event){var that=this,newSize=event.detail.size;var correspondingLabelContainer=void 0;if(that.tabLayout==='shrink'){return;}if(event.target instanceof JQX.TabItem){correspondingLabelContainer=event.target.tabLabelContainer;}else{correspondingLabelContainer=that._groupLabels[that._groups.indexOf(event.target.label)];}if(newSize!==null){correspondingLabelContainer.style[that._orientationSettings.dimension]=parseInt(newSize,10)+'px';}else{correspondingLabelContainer.style.removeProperty(that._orientationSettings.dimension);}that._applyTabOverflow();}/**
    * Opens the open group dropdown.
    */},{key:'_openGroupDropDown',value:function _openGroupDropDown(currentElement){var that=this;if(!currentElement){return;}if(that._openDropDown){that._openDropDown.$.addClass('jqx-hidden');}currentElement.dropDown.$.removeClass('jqx-hidden');that._positionGroupDropDown(currentElement);that._openDropDown=currentElement.dropDown;currentElement.removeAttribute('hover');}/**
     * Orders tabs initially.
     */},{key:'_orderTabs',value:function _orderTabs(){var that=this,groups=that.getElementsByTagName('jqx-tab-items-group'),indexes=[],list=[];var unset=true,ambiguous=false;if(groups.length===0){for(var _i570=0;_i570<that._tabs.length;_i570++){var tab=that._tabs[_i570],index=tab.index;if(unset&&index!==null){unset=false;}if(indexes.indexOf(index||0)!==-1){ambiguous=true;if(index!==null){break;}}indexes.push(index||0);list.push({tab:tab,index:index});}}if(!ambiguous){var sortedIndexes=indexes.slice(0).sort(function(a,b){return a-b;});if(JSON.stringify(indexes)===JSON.stringify(sortedIndexes)){unset=true;}}if(!unset&&!ambiguous){list.sort(function(a,b){return a.index-b.index;});for(var _i571=0;_i571<list.length;_i571++){var _tab=list[_i571].tab;_tab._setIndex(_i571);that.$.tabContentSection.removeChild(_tab);}for(var _i572=0;_i572<list.length;_i572++){var _tab2=list[_i572].tab;that.$.tabContentSection.appendChild(_tab2);that._tabs[_i572]=_tab2;}}else{if(!unset){that.warn(that.localize('ambiguousIndexes'));}for(var _i573=0;_i573<that._tabs.length;_i573++){that._tabs[_i573]._setIndex(_i573);}}}/**
     * Populates the tab strip.
     */},{key:'_populateTabStrip',value:function _populateTabStrip(){var that=this,documentFragment=document.createDocumentFragment(),tabLabelContainers=[],groups=[],groupLabels=[];var selectedTabLabelContainer=null;for(var _i574=0;_i574<that._tabs.length;_i574++){var tab=that._tabs[_i574],tabParentElement=tab.parentElement,_group22=tabParentElement instanceof JQX.TabItemsGroup?tabParentElement.label:null;tab.group=_group22;var labelContainers=that._addTabLabelContainer(tab),tabLabelContainer=labelContainers.tabLabelContainer,dropDownLabelContainer=labelContainers.dropDownLabelContainer;if(that.selectedIndex===_i574){tabLabelContainer.$.addClass('jqx-tab-selected');tabLabelContainer.setAttribute('selected','');selectedTabLabelContainer=tabLabelContainer;}tab.tabLabelContainer=tabLabelContainer;tabLabelContainer.tab=tab;tabLabelContainers.push(tabLabelContainer);if(_group22===null){documentFragment.appendChild(tabLabelContainer);}else{that._addGroupElements({documentFragment:documentFragment,groups:groups,groupLabels:groupLabels,i:_i574,group:_group22,tabLabelContainer:tabLabelContainer,jqxTabItemsGroup:tabParentElement});}that.$.dropDownButtonDropDown.appendChild(dropDownLabelContainer);}that.$.tabStrip.appendChild(documentFragment);that._tabLabelContainers=tabLabelContainers;that._groups=groups;that._groupLabels=groupLabels;that._positionTabSelectionBar(selectedTabLabelContainer,true);}},{key:'_positionTabSelectionBar',value:function _positionTabSelectionBar(selectedTabLabelContainer,noAnimation){var that=this;if(!selectedTabLabelContainer){return;}var tabPosition=that.tabPosition;var left=void 0,top=void 0,width=void 0,height=void 0;if(noAnimation){that.$.tabSelectionBar.style.transition='none';}if(selectedTabLabelContainer.tab.group){selectedTabLabelContainer=that._groupLabels[that._groups.indexOf(selectedTabLabelContainer.tab.group)];}if(tabPosition==='top'||tabPosition==='bottom'){if(that.tabLayout==='wrap'){top=selectedTabLabelContainer.offsetTop;if(tabPosition==='top'){top+=selectedTabLabelContainer.offsetHeight-that.$.tabSelectionBar.offsetHeight;}top+='px';}else{top=null;}height=null;left=-that.$.tabStrip.scrollLeft+selectedTabLabelContainer.offsetLeft+'px';width=selectedTabLabelContainer.offsetWidth+'px';}else if(tabPosition==='left'||tabPosition==='right'){if(that.tabLayout==='wrap'){left=selectedTabLabelContainer.offsetLeft;if(tabPosition==='left'){left+=selectedTabLabelContainer.offsetWidth-that.$.tabSelectionBar.offsetWidth;}left+='px';}else{left=null;}width=null;top=-that.$.tabStrip.scrollTop+selectedTabLabelContainer.offsetTop+'px';height=selectedTabLabelContainer.offsetHeight+'px';}function updateStyle(){that.$.tabSelectionBar.style.top=top;that.$.tabSelectionBar.style.height=height;that.$.tabSelectionBar.style.left=left;that.$.tabSelectionBar.style.width=width;}if(JQX.Utilities.Core.isMobile&&that.hasAnimation&&!noAnimation){requestAnimationFrame(function(){requestAnimationFrame(updateStyle);});}else{updateStyle();}if(noAnimation&&!that._tabPositionChanging){requestAnimationFrame(function(){return that.$.tabSelectionBar.style.transition=null;});}}/**
     * Positions a group dropdown.
     */},{key:'_positionGroupDropDown',value:function _positionGroupDropDown(groupLabel){var that=this,position=that.tabPosition,dropDown=groupLabel.dropDown,headerSectionStyle=window.getComputedStyle(that.$.tabsHeaderSection),headerSectionPaddingLeft=parseFloat(headerSectionStyle.paddingLeft),headerSectionPaddingTop=parseFloat(headerSectionStyle.paddingTop);if(position==='top'||position==='bottom'){var material=false;//that.hasAnimation;
dropDown.style.left=groupLabel.offsetLeft-that.$.tabStrip.scrollLeft+headerSectionPaddingLeft+'px';if(position==='top'){if(!material){dropDown.style.top=groupLabel.offsetTop+groupLabel.offsetHeight+headerSectionPaddingTop+'px';}}else{var top=groupLabel.getBoundingClientRect().top-that.$.container.getBoundingClientRect().top+headerSectionPaddingTop;if(material){top+=that.$.tabStrip.offsetHeight;}dropDown.style.top=top+'px';}}else{dropDown.style.top=groupLabel.offsetTop-that.$.tabStrip.scrollTop+headerSectionPaddingTop+'px';if(position==='left'){dropDown.style.left=groupLabel.offsetLeft+groupLabel.offsetWidth+headerSectionPaddingLeft+'px';}else{dropDown.style.left=groupLabel.getBoundingClientRect().left-that.$.container.getBoundingClientRect().left+headerSectionPaddingLeft+'px';}}}/**
     * Processes "dataSource" object.
     */},{key:'_processDataSource',value:function _processDataSource(){var that=this,dataSource=that.dataSource;function processItem(item,parent){var element=void 0;if(Array.isArray(item.items)&&item.items.length>0){element=document.createElement('jqx-tab-items-group');for(var _i575=0;_i575<item.items.length;_i575++){if(item.items[_i575].items){continue;}processItem(item.items[_i575],element);}}else{element=document.createElement('jqx-tab-item');if(item.closeButtonHidden===true){element.closeButtonHidden=true;}if(item.content!==undefined){element.innerHTML=item.content;}if(item.index!==undefined){element.index=item.index;}if(item.selected===true){element.selected=item.selected;}}if(item.label!==undefined){element.label=item.label;}if(item.labelSize!==undefined){element.labelSize=item.labelSize;}parent.appendChild(element);}that.$.tabContentSection.innerHTML='';if(dataSource===null){return;}for(var _i576=0;_i576<dataSource.length;_i576++){var currentItem=dataSource[_i576];processItem(currentItem,that.$.tabContentSection);}}/**
     * Processes HTML structure.
     */},{key:'_processHTML',value:function _processHTML(){var that=this;that._getTabs();that._orderTabs();that._validateInitialSelection();that._populateTabStrip();if(that.addNewTab){that._insertAddNewTab();}that._getReorderItems();that._applyTabOverflow();that.ensureVisible(that.selectedIndex);}/**
     * Removes set inline style.
     */},{key:'_removeInlineStyle',value:function _removeInlineStyle(){var that=this,tabStrip=that.$.tabStrip;if(that._inlineStyleTabStripChildren){var tabStripChildren=tabStrip.children;for(var _i577=0;_i577<tabStripChildren.length;_i577++){tabStripChildren[_i577].removeAttribute('style');tabStripChildren[_i577].firstElementChild.firstElementChild.classList.remove('jqx-tab-label-text-container-full-height');}delete that._inlineStyleTabStripChildren;}if(that._inlineStyleTabStrip){tabStrip.removeAttribute('style');delete that._inlineStyleTabStrip;}tabStrip.$.removeClass('shrink-tabs');tabStrip.$.removeClass('shrink-tabs-vertical');}/**
     * Positions a tab before or after another tab.
     */},{key:'_reorderTabs',value:function _reorderTabs(firstTabIndex,secondTabIndex){function reorderList(list,x,y){var temp=list[x];list.splice(x,1);list.splice(y,0,temp);}var that=this;if(that._groups.length===0){var tabs=that._tabs,tabLabelContainers=that._tabLabelContainers,referenceNodeIndex=firstTabIndex>secondTabIndex?secondTabIndex:secondTabIndex+1;if(that.selectedIndex===firstTabIndex){that.selectedIndex=secondTabIndex;}else if(that.selectedIndex<=secondTabIndex&&that.selectedIndex>firstTabIndex){that.selectedIndex--;}else if(that.selectedIndex>=secondTabIndex&&that.selectedIndex<firstTabIndex){that.selectedIndex++;}var tabStripInsertBefore=void 0;if(tabLabelContainers[referenceNodeIndex]){tabStripInsertBefore=tabLabelContainers[referenceNodeIndex];}else if(that.addNewTab){tabStripInsertBefore=that._addNewTab;}else{tabStripInsertBefore=null;}that.$.tabStrip.insertBefore(tabLabelContainers[firstTabIndex],tabStripInsertBefore);that.$.dropDownButtonDropDown.insertBefore(that.$.dropDownButtonDropDown.children[firstTabIndex],that.$.dropDownButtonDropDown.children[referenceNodeIndex]||null);that.$.tabContentSection.insertBefore(tabs[firstTabIndex],tabs[referenceNodeIndex]||null);reorderList(tabs,firstTabIndex,secondTabIndex);reorderList(tabLabelContainers,firstTabIndex,secondTabIndex);that._updateTabIndexes();}else{that._reorderTabsGrouping(firstTabIndex,secondTabIndex);}that.$.fireEvent('reorder',{'newIndex':secondTabIndex,'originalIndex':firstTabIndex});that._reorderedIndex=secondTabIndex;that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],true);}/**
     * Positions a tab before or after another tab when there are groups.
     */},{key:'_reorderTabsGrouping',value:function _reorderTabsGrouping(firstTabIndex,secondTabIndex){var that=this,tabStripChildren=that.$.tabStrip.children,tabContentSectionChildren=that.$.tabContentSection.children,referenceNodeIndex=firstTabIndex>secondTabIndex?secondTabIndex:secondTabIndex+1,selectedTab=that._tabs[that.selectedIndex];that.$.tabStrip.insertBefore(tabStripChildren[firstTabIndex],tabStripChildren[referenceNodeIndex]||null);that.$.tabContentSection.insertBefore(tabContentSectionChildren[firstTabIndex],tabContentSectionChildren[referenceNodeIndex]||null);that._groupLabels=Array.from(that.$.tabStrip.getElementsByClassName('jqx-tab-group-container'));that._groups=[];for(var _i578=0;_i578<that._groupLabels.length;_i578++){that._groups.push(that._groupLabels[_i578].group);}that._tabs=Array.from(that.$.tabContentSection.getElementsByTagName('jqx-tab-item'));var dropDownContentFragment=document.createDocumentFragment();var tabLabelContainers=[];for(var _i579=0;_i579<that._tabs.length;_i579++){dropDownContentFragment.appendChild(that.$.dropDownButtonDropDown.children[that._tabs[_i579].index].cloneNode(true));}that.$.dropDownButtonDropDown.innerHTML='';that.$.dropDownButtonDropDown.appendChild(dropDownContentFragment);for(var _i580=0;_i580<that.$.tabStrip.childElementCount;_i580++){var _currentChild=that.$.tabStrip.children[_i580];if(_currentChild.$.hasClass('jqx-tab-label-container')&&_currentChild!==that._addNewTab){tabLabelContainers.push(_currentChild);}else if(_currentChild.$.hasClass('jqx-tab-group-container')){tabLabelContainers=tabLabelContainers.concat(Array.from(_currentChild.dropDown.children));}}that._tabLabelContainers=tabLabelContainers;that._updateTabIndexes();if(selectedTab){that.selectedIndex=selectedTab.index;}}/**
     * Resizes a tab strip element.
     */},{key:'_resize',value:function _resize(event){var that=this;if(!that._resizing){return;}var orientationSettings=that._orientationSettings,sizeChange=event[orientationSettings.coordinate]-that._resizeFrom,customElement=that._getCorrespondingCustomElement(that._tabToResize);var oldSize=void 0;if(customElement.labelSize===null){oldSize=that._tabToResize[orientationSettings.size];}else{oldSize=customElement.labelSize;}var newSize=Math.max(10,oldSize+sizeChange);if(newSize!==oldSize){customElement._preventPropertyChangedHandler=true;customElement.labelSize=newSize;that._tabToResize.style[orientationSettings.dimension]=parseInt(newSize,10)+'px';}that.$resizeToken.addClass('jqx-hidden');that._applyTabOverflow();that._resizing=false;that.removeAttribute('resizing');}/**
     * Triggers ripple effect.
     */},{key:'_ripple',value:function _ripple(event,target){var that=this;if(that.hasRippleAnimation){var rippleAgent=document.createElement('div');rippleAgent.className='ripple-agent';target.firstElementChild.appendChild(rippleAgent);setTimeout(function(){target.firstElementChild.removeChild(rippleAgent);},1000);JQX.Utilities.Animation.Ripple.animate(rippleAgent,event.pageX,event.pageY);return true;}}/**
     * Scroll button click handler.
     */},{key:'_scrollButtonClickHandler',value:function _scrollButtonClickHandler(event){var that=this,tabStrip=that.$.tabStrip;var modifier=event.target.closest('jqx-repeat-button')===that.$.scrollButtonNear?-1:1;if(that.scrollMode==='paging'){var orientationSettings=that._orientationSettings,swipeInfo={};that._dragStartDetails={startX:0,startY:0,pageX:0,pageY:0,startTime:Date.now(),target:event.target};that._wheelInProgress=true;swipeInfo[orientationSettings.coordinate]=-modifier*(tabStrip[orientationSettings.size]/1.1428571428571428);that._endSwiping(swipeInfo,that._dragStartDetails.startTime+175);return;}if(that.hasAttribute('horizontal')){tabStrip.scrollLeft+=10*modifier;}else{tabStrip.scrollTop+=10*modifier;}that._updateScrollButtonVisibility(true);}/**
     * Selects a tab.
     */},{key:'_select',value:function _select(index,fireEvent,oldIndex){var that=this,hasAnimation=that.hasAnimation;if(oldIndex===undefined){oldIndex=that.selectedIndex;}if(index===oldIndex&&(!that.allowToggle||that.allowToggle&&that.selectionMode==='mouseenter')){return;}var tab=that._tabs[index];if(that._focusedItem){that._focusedItem.tabLabelContainer.removeAttribute('focus');}if(oldIndex!==null){var oldTab=that._tabs[oldIndex];if(hasAnimation){that._animateSelection(tab,oldTab,index>oldIndex);}else{oldTab.$.addClass('jqx-visibility-hidden');}oldTab.selected=false;that._tabLabelContainers[oldIndex].$.removeClass('jqx-tab-selected');that._tabLabelContainers[oldIndex].removeAttribute('selected');if(that.closeButtons&&that.closeButtonMode==='selected'){that._disableCloseButton(oldIndex);}}if(!that.allowToggle||index!==null&&(arguments[2]!==undefined?oldIndex:that.selectedIndex)!==index){tab.selected=true;that.$.tabContentSection.removeAttribute('show-placeholder');if(oldIndex===null||!hasAnimation){tab.$.removeClass('jqx-visibility-hidden');}that.selectedIndex=index;that._focusedItem=that._tabs[index];that._focusedItem.tabLabelContainer.$.addClass('jqx-tab-selected');that._focusedItem.tabLabelContainer.setAttribute('selected','');that._positionTabSelectionBar(that._focusedItem.tabLabelContainer,oldIndex===null);}else{that.selectedIndex=null;that.$.tabContentSection.setAttribute('show-placeholder','');if(that.allowToggle){that._focusedItem=that._tabs[index===null?oldIndex:index];if(that._focusedItem){that._focusedItem.tabLabelContainer.setAttribute('focus','');}}}if(index!==null){that._tabLabelContainers[index].removeAttribute('hover');if(that.closeButtons&&that.closeButtonMode==='selected'){that._enableCloseButton(index);}}if(fireEvent){//Upate hidden input
that.$.hiddenInput.value=that.selectedIndex;that.$.fireEvent('change',{'index':that.selectedIndex,'oldIndex':oldIndex});}that._closeGroupDropDown();if(tab&&tab.group!==null){if(that._selectedGroup){that._selectedGroup.$.removeClass('jqx-tab-group-selected');}if(that.selectedIndex!==null){that._selectedGroup=that._groupLabels[that._groups.indexOf(tab.group)];that._selectedGroup.$.addClass('jqx-tab-group-selected');}}else if(that._selectedGroup){that._selectedGroup.$.removeClass('jqx-tab-group-selected');delete that._selectedGroup;}}/**
     * Document select start handler.
     */},{key:'_selectStartHandler',value:function _selectStartHandler(event){var that=this;if(that._reordering||that._resizing){event.preventDefault();}}/**
     * Sets the label of a tab.
     */},{key:'_setLabel',value:function _setLabel(label,labelTextContainer,dropDownLabelContainer){var potentialHTMLTemplate=label?document.getElementById(label):null;if(potentialHTMLTemplate!==null&&potentialHTMLTemplate.tagName.toLowerCase()==='template'){// label is the id of an HTML template
var templateContent=document.importNode(potentialHTMLTemplate.content,true);labelTextContainer.appendChild(templateContent);if(dropDownLabelContainer){var _templateContent=document.importNode(potentialHTMLTemplate.content,true);dropDownLabelContainer.appendChild(_templateContent);}}else{// label is string
if(label===''){label='&nbsp;';}labelTextContainer.innerHTML=label;if(dropDownLabelContainer){dropDownLabelContainer.innerHTML=label;}}}/**
     * Shows the close button of a tab.
     */},{key:'_showCloseButton',value:function _showCloseButton(tabLabelContainer){if(tabLabelContainer.closeButtonEnabled){tabLabelContainer.firstElementChild.children[0].$.addClass('jqx-close-button-enabled');tabLabelContainer.firstElementChild.children[1].$.removeClass('jqx-hidden');}}/**
     * tabContentSection transitionend handler.
     */},{key:'_tabContentSectionTransitionendHandler',value:function _tabContentSectionTransitionendHandler(event){var that=this,target=event.target;if(!(target instanceof JQX.TabItem)){return;}if(target===that._animatedOldTab){target.$.addClass('jqx-hidden');target.$.removeClass('animate');target.$.removeClass(that._animatedOldTab.classToRemove);target.$.removeClass('jqx-hidden');delete that._animatedOldTab;}else if(target===that._animatedTab){target.$.removeClass('animate');delete that._animatedTab;}target.classList.remove('left');target.classList.remove('right');target.classList.remove('top');target.classList.remove('bottom');}/**
     * tabsHeaderItems wheel handler.
     */},{key:'_tabsHeaderItemsWheelHandler',value:function _tabsHeaderItemsWheelHandler(event){var that=this,orientationSettings=that._orientationSettings;if(!that.enableMouseWheelAction||that._wheelInProgress||that.disabled||that.$.tabStrip[orientationSettings.size]===that.$.tabStrip[orientationSettings.scrollSize]){return;}event.preventDefault();that._dragStartDetails={startX:event.pageX,startY:event.pageY,pageX:event.pageX,pageY:event.pageY,startTime:Date.now(),target:event.target};that._wheelInProgress=true;var swipeInfo={};swipeInfo[orientationSettings.coordinate]=event[orientationSettings.coordinate]+(event.deltaY>0?-1:1)*orientationSettings.wheelOffset;that._endSwiping(swipeInfo,that._dragStartDetails.startTime+100);}/**
     * Tab strip event handler.
     */},{key:'_tabStripHandler',value:function _tabStripHandler(target,event){var that=this,eventType=event.type;if(eventType==='down'&&that._tabToResize!==undefined){that._resizing=true;that._tabsHeaderSectionCoordinate=that.$.tabsHeaderSection.getBoundingClientRect()[that._orientationSettings.edge];return;}if(eventType==='down'&&JQX.Utilities.Core.isMobile){that._dragStartDetails={startX:event.pageX,startY:event.pageY,pageX:event.pageX,pageY:event.pageY,startTime:Date.now(),originalTime:Date.now(),target:event.originalEvent.target};}var scrollButton=target.closest('jqx-repeat-button');if(eventType==='up'&&scrollButton){that.focus();if(that.resize){that._getTabCoordinates();}return;}if(target.classList.contains('jqx-tab-close-button')){// close button
if(eventType==='up'){if(target===that._downTarget){var indexToClose=target.parentElement.parentElement.tab.index,closingEvent=that.$.fireEvent('closing',{'index':indexToClose});if(!closingEvent.defaultPrevented){that.remove(indexToClose);that.$.fireEvent('close',{'index':indexToClose});}return;}}else if(eventType==='down'){that._downTarget=target;return;}else if(!that._reordering&&!that._swiping){if(eventType==='mouseover'){target.setAttribute('hover','');}else if(eventType==='mouseout'){target.removeAttribute('hover');}}}var closestLabelContainer=target.closest('.jqx-tab-label-container');if(closestLabelContainer!==null){that._labelContainerHandler(closestLabelContainer,event,eventType);return;}var closestGroupContainer=target.closest('.jqx-tab-group-container');if(closestGroupContainer!==null){that._groupContainerHandler(closestGroupContainer,eventType);}}/**
     * Tab strip mouseleave handler.
     */},{key:'_tabStripMouseleaveHandler',value:function _tabStripMouseleaveHandler(){var that=this;if(that.resize&&!that._resizing&&that.hasAttribute('resizing')){that.removeAttribute('resizing');}}/**
     * Tab strip (mouse)move handler.
     */},{key:'_tabStripMoveHandler',value:function _tabStripMoveHandler(event){var that=this;if(that._dragStartDetails&&!that._dragStartDetails.checked){if(Date.now()-that._dragStartDetails.originalTime<500){that._endReordering(undefined,undefined);that._dragStartDetails.checked=true;}else{delete that._dragStartDetails;}}if(that._dragStartDetails&&(Math.abs(that._dragStartDetails.pageX-event.pageX)>=5||Math.abs(that._dragStartDetails.pageY-event.pageY)>=5)){var _orientationSettings=that._orientationSettings,difference=that._dragStartDetails[_orientationSettings.coordinate]-event[_orientationSettings.coordinate],oldScrollDirection=that.$.tabStrip[_orientationSettings.scrollDirection];that.$.tabStrip[_orientationSettings.scrollDirection]+=difference;if(oldScrollDirection!==that.$.tabStrip[_orientationSettings.scrollDirection]){that._updateScrollButtonVisibility();}that._dragStartDetails={startX:that._dragStartDetails.startX,startY:that._dragStartDetails.startY,pageX:event.pageX,pageY:event.pageY,startTime:that._dragStartDetails.startTime,originalTime:that._dragStartDetails.originalTime,target:event.originalEvent.target,checked:that._dragStartDetails.checked};that._swiping=true;return;}if(!that.resize||that._resizing||that._reordering||that.tabLayout==='shrink'){return;}var orientationSettings=that._orientationSettings,currentCoordinate=event[orientationSettings.coordinate],tabCoordinates=that._tabCoordinates;var tabToResize=void 0;for(var _i581=0;_i581<tabCoordinates.length;_i581++){var currentTabCoordinate=tabCoordinates[_i581][orientationSettings.to];if(currentCoordinate>=currentTabCoordinate-4&&currentCoordinate<=currentTabCoordinate+4){tabToResize=that._reorderItems[_i581];that._resizeFrom=currentCoordinate;break;}}if(tabToResize!==undefined){that._tabToResize=tabToResize;that.setAttribute('resizing','');}else{that._tabToResize=undefined;that.removeAttribute('resizing');}}/**
     * Toggles the collapsed state on click.
     */},{key:'_toggleCollapsedState',value:function _toggleCollapsedState(){var that=this;if(!that.collapsible){return;}if(!that.collapsed){that.collapse();}else{that.expand();}}/**
     * Toggles the visibility of navigation elements.
     */},{key:'_toggleNavigationElementsVisibility',value:function _toggleNavigationElementsVisibility(){var that=this,numberOfTabs=that._tabs.length;var action=void 0;if(numberOfTabs===0){action='addClass';}else if(numberOfTabs===1){action='removeClass';}else{return;}if(that.tabLayout==='scroll'&&that.overflow==='scroll'){that.$scrollButtonNear[action]('jqx-hidden');that.$scrollButtonFar[action]('jqx-hidden');}else if(that.tabLayout==='dropDown'){that.$dropDownButton[action]('jqx-hidden');}}/**
     * Updates the selected index and the index of each tab.
     */},{key:'_updateIndexes',value:function _updateIndexes(index){var that=this;if(that.selectedIndex!==null&&index<=that.selectedIndex){that.selectedIndex++;}that._updateTabIndexes();}/**
     * Updates scroll button visibility.
     */},{key:'_updateScrollButtonVisibility',value:function _updateScrollButtonVisibility(noTabSelectionBarAnimation){var that=this;if(that.tabLayout!=='scroll'||that.overflow==='hidden'){that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],noTabSelectionBarAnimation);return;}var tabsHeaderSection=that.$tabsHeaderSection,tabStrip=that.$.tabStrip,orientationSettings=that._orientationSettings;var showNear=true,showFar=true;if(Math.round(tabStrip[orientationSettings.scrollDirection])===0){showNear=false;}if(Math.round(tabStrip[orientationSettings.size]+tabStrip[orientationSettings.scrollDirection])>=Math.round(tabStrip[orientationSettings.scrollSize])-1){showFar=false;}if(that.overflow==='auto'){if(showNear&&showFar){that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');tabsHeaderSection.removeClass('one-button-shown');if(that._tabLabelContainers[that.selectedIndex]){that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],noTabSelectionBarAnimation);}return;}if(showNear){that.$scrollButtonNear.removeClass('jqx-hidden');}else{that.$scrollButtonNear.addClass('jqx-hidden');}if(showFar){that.$scrollButtonFar.removeClass('jqx-hidden');}else{that.$scrollButtonFar.addClass('jqx-hidden');}tabsHeaderSection.addClass('one-button-shown');that._getTabCoordinates();}else if(that.overflow==='scroll'&&!that.disabled){that.$.scrollButtonNear.disabled=!showNear;that.$.scrollButtonFar.disabled=!showFar;}if(that._tabLabelContainers[that.selectedIndex]){that._positionTabSelectionBar(that._tabLabelContainers[that.selectedIndex],noTabSelectionBarAnimation);}}/**
     * Updates the indexes of all tabs.
     */},{key:'_updateTabIndexes',value:function _updateTabIndexes(){var that=this;if(that._tabs.length>0){for(var _i582=0;_i582<that._tabs.length;_i582++){that._tabs[_i582]._setIndex(_i582);}}else{that.selectedIndex=null;}}/**
     * Validates the index passed to the methods "ensureVisible", "getOffsetFromEdgeOfElement", "insert", "remove", "select" and "update".
     */},{key:'_validateIndex',value:function _validateIndex(index,method){if(isNaN(parseInt(index,10))||(typeof index==='undefined'?'undefined':babelHelpers.typeof(index))==='object'){var _that4=this;_that4.error(_that4.localize('invalidIndex',{method:method}));}}/**
     * Validates the initial selection.
     */},{key:'_validateInitialSelection',value:function _validateInitialSelection(){var that=this;var selectedIndex=that.selectedIndex;for(var _i583=0;_i583<that._tabs.length;_i583++){var currentTab=that._tabs[_i583];if(selectedIndex===_i583){currentTab.selected=true;currentTab.$.removeClass('jqx-visibility-hidden');}else if(currentTab.selected){if(selectedIndex===null){selectedIndex=_i583;currentTab.$.removeClass('jqx-visibility-hidden');}else{currentTab.selected=false;currentTab.$.addClass('jqx-visibility-hidden');}}else{currentTab.$.addClass('jqx-visibility-hidden');}}if(that._tabs.length>0&&selectedIndex===null&&!that.allowToggle){selectedIndex=0;that._tabs[0].selected=true;that._tabs[0].$.removeClass('jqx-visibility-hidden');}that.selectedIndex=selectedIndex;if(that.selectedIndex!==null){that._focusedItem=that._tabs[that.selectedIndex];}}}],[{key:'properties',// Tabs's properties.
get:function get(){return{'addNewTab':{value:false,type:'boolean'},'allowToggle':{value:false,type:'boolean'},'closeButtonMode':{value:'default',allowedValues:['default','selected'],type:'string'},'closeButtons':{value:false,type:'boolean'},'collapsed':{value:false,type:'boolean'},'collapsible':{value:false,type:'boolean'},'dataSource':{value:null,type:'array?',reflectToAttribute:false},'enableMouseWheelAction':{value:false,type:'boolean'},'messages':{value:{'en':{'ambiguousIndexes':'jqx-tabs: Initially set jqx-tab-item indexes are ambiguous and are ignored in favour of the HTML structure.','detailsObjectRequired':'jqx-tabs: The method "insert" requires a details Object to be passed as a second argument.','invalidIndex':'jqx-tabs: "{{method}}" method accepts an index of type number.','referenceNodeNotChild':'jqx-tabs: Passed {{argument}} is not part of this jqx-tabs element.','tabItemRequired':'jqx-tabs: The method "{{method}}" requires a "jqx-tab-item" element to be passed as an argument.'}},type:'object',extend:true},'name':{value:'',type:'string'},'overflow':{value:'auto',allowedValues:['auto','hidden','scroll'],type:'string'},'reorder':{value:false,type:'boolean'},'resize':{value:false,type:'boolean'},'scrollButtonsPosition':{value:'both',allowedValues:['near','far','both'],type:'string'},'scrollMode':{value:'paging',allowedValues:['paging','continuous'],type:'string'},'selectedIndex':{value:null,type:'number?'},'selectionMode':{value:'click',allowedValues:['click','dblclick','mouseenter','none'],type:'string'},'tabLayout':{value:'scroll',allowedValues:['scroll','dropDown','wrap','shrink'],type:'string',defaultReflectToAttribute:true},'tabPosition':{value:'top',allowedValues:['top','bottom','left','right','hidden'],type:'string'},'tabTextOrientation':{value:'horizontal',allowedValues:['horizontal','vertical'],type:'string'}};}/**
     * Tabs's event listeners.
     */},{key:'listeners',get:function get(){return{'closeButtonVisibilityChange':'_closeButtonVisibilityChangeHandler','indexChange':'_indexChangeHandler','keydown':'_keydownHandler','labelSizeChange':'_labelSizeChangeHandler','resize':'_applyTabOverflow','styleChanged':'_applyTabOverflow','container.dblclick':'_containerHandler','container.down':'_containerHandler','container.mouseout':'_containerHandler','container.mouseover':'_containerHandler','container.up':'_containerHandler','scrollButtonFar.click':'_scrollButtonClickHandler','scrollButtonNear.click':'_scrollButtonClickHandler','tabContentSection.transitionend':'_tabContentSectionTransitionendHandler','tabsHeaderItems.wheel':'_tabsHeaderItemsWheelHandler','tabStrip.mouseleave':'_tabStripMouseleaveHandler','tabStrip.move':'_tabStripMoveHandler','document.move':'_documentMoveHandler','document.selectstart':'_selectStartHandler','document.up':'_documentUpHandler'};}/**
     * Tabs's required files.
     */},{key:'requires',get:function get(){return{'JQX.RepeatButton':'jqxbutton.js'};}},{key:'styleUrls',get:function get(){return['jqx.tabs.css'];}}]);return Tabs;}(JQX.BaseElement));/**
 * TimePicker custom element.
 */JQX('jqx-time-picker',function(_JQX$BaseElement22){babelHelpers.inherits(TimePicker,_JQX$BaseElement22);function TimePicker(){babelHelpers.classCallCheck(this,TimePicker);return babelHelpers.possibleConstructorReturn(this,(TimePicker.__proto__||Object.getPrototypeOf(TimePicker)).apply(this,arguments));}babelHelpers.createClass(TimePicker,[{key:'template',/**
     * TimePicker's HTML template.
     */value:function template(){var template='<div id="container">\n                <div id="header" class="jqx-header jqx-unselectable">\n                    <div id="hourMinuteContainer" class="jqx-hour-minute-container">\n                        <div id="hourContainer" class ="jqx-hour-container"></div>\n                        <div>:</div>\n                        <div id="minuteContainer" class="jqx-minute-container"></div>\n                    </div>\n                    <div id="ampmContainer" class="jqx-am-pm-container">\n                        <div id="amContainer" class="jqx-am-container">AM</div>\n                        <div id="pmContainer" class="jqx-pm-container">PM</div>\n                    </div>\n                </div>\n                <div id="main" class="jqx-main-container">\n                    <div id="svgContainer" class="jqx-svg-container">\n                        <div id="picker" class="jqx-svg-picker"></div>\n                    </div>\n                    <div id="footer" class="jqx-footer"></div>\n                </div>\n                <input id="hiddenInput" type="hidden" name="[[name]]">\n            </div>';return template;}/**
     * Called when the element is ready. Used for one-time configuration of the TimePicker.
     */},{key:'ready',value:function ready(){babelHelpers.get(TimePicker.prototype.__proto__||Object.getPrototypeOf(TimePicker.prototype),'ready',this).call(this);this._createElement();}/**
     * Sets the hours.
     *
     * @param {Number} hours The hours to set.
     */},{key:'setHours',value:function setHours(hours){var that=this;if(hours===24){hours=0;}else{hours=Math.max(0,Math.min(hours,23));}if(hours<12){that._selectAmPm('am');}else{that._selectAmPm('pm');}if(that.format==='12-hour'){if(hours===0){hours=12;}else if(hours>12){hours-=12;}}that._updateHours(hours,arguments[1]);if(that.selection==='hour'){that._inInnerCircle=that.format==='24-hour'&&(hours===0||hours>12);that._drawArrow(true,hours,arguments[2]);if(!that.hasAnimation){that._inInnerCircle=false;}}}/**
     * Sets the minutes.
     *
     * @param {Number} minutes The minutes to set.
     */},{key:'setMinutes',value:function setMinutes(minutes){var that=this;if(minutes===60){minutes=0;}else{minutes=Math.max(0,Math.min(minutes,59));}that._updateMinutes(minutes);if(that.selection==='minute'){that._drawArrow(true,minutes,arguments[1]);}}/**
     * Invoked when the value of a public property has been changed by the user.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(key,oldValue,value){babelHelpers.get(TimePicker.prototype.__proto__||Object.getPrototypeOf(TimePicker.prototype),'propertyChangedHandler',this).call(this,key,oldValue,value);var that=this;switch(key){case'disabled':case'unfocusable':that._setFocusable();break;case'footer':case'view':that._resizeHandler();break;case'footerTemplate':that._validateFooterTemplate();break;case'format':{var hours=that.value.getHours();if(value==='12-hour'){that.$ampmContainer.removeClass('jqx-hidden');if(that.value.getHours()<12){that._selectAmPm('am');}else{that._selectAmPm('pm');}if(hours===0){hours=12;}else if(hours>12){hours-=12;}}else{that.$ampmContainer.addClass('jqx-hidden');}that.$.hourContainer.innerHTML=hours;if(that.selection==='hour'){that._draw.clear();that._renderSVG();}break;}case'minuteInterval':{var validValue=Math.max(1,Math.min(value,60));if(validValue!==value){that.minuteInterval=validValue;}if(that.selection==='minute'){that.interval=validValue;}break;}case'selection':if(value==='hour'){that._changeToHourSelection();}else{that._changeToMinuteSelection();}break;case'value':{that._oldValue=oldValue;that._validateValue();var equalHours=that.value.getHours()===oldValue.getHours(),equalMinutes=that.value.getMinutes()===oldValue.getMinutes();if(!(equalHours&&equalMinutes)){if(equalMinutes){that.setHours(that.value.getHours());}else{if(!equalHours){that.setHours(that.value.getHours(),true);}that.setMinutes(that.value.getMinutes());}}delete that._oldValue;break;}}}/**
     * Applies initial settings to the TimePicker element.
     */},{key:'_applyInitialSettings',value:function _applyInitialSettings(){var that=this,value=that.value;var hours=void 0,minutes=void 0;hours=value.getHours();minutes=value.getMinutes();if(that.format==='12-hour'){if(hours<12){that._ampm='am';that.$amContainer.addClass('jqx-selected');if(hours===0){hours=12;}}else{that._ampm='pm';that.$pmContainer.addClass('jqx-selected');if(hours>12){hours-=12;}}}else{that.$ampmContainer.addClass('jqx-hidden');}minutes=minutes.toString();if(minutes.length===1){minutes='0'+minutes;}that.$.hourContainer.innerHTML=hours;that.$.minuteContainer.innerHTML=minutes;if(that.selection==='hour'){that.$hourContainer.addClass('jqx-selected');}else{that.$minuteContainer.addClass('jqx-selected');}}/**
     * Changes the TimePicker selection when the user interacts with it.
     */},{key:'_changeSelection',value:function _changeSelection(event,noAnimation){var that=this,x=event.pageX,y=event.pageY,center=that._getCenterCoordinates(),distanceFromCenter=Math.sqrt(Math.pow(center.x-x,2)+Math.pow(center.y-y,2));that._measurements.center=center;if(event.type==='down'){if(distanceFromCenter>that._measurements.radius){event.stopPropagation();return;}else{that._dragging=true;}}if(that.format==='24-hour'&&that.selection==='hour'&&distanceFromCenter<that._measurements.radius-50){that._inInnerCircle=true;}else{that._inInnerCircle=false;}var angleRadians=Math.atan2(y-center.y,x-center.x);var angleDeg=-1*angleRadians*180/Math.PI;if(angleDeg<0){angleDeg+=360;}that._angle=angleDeg;var newValue=that._numericProcessor.getValueByAngle(that._angle);if(that.selection==='hour'){if(that.format==='24-hour'){if(that._inInnerCircle){if(newValue!==0&&newValue!==12){newValue+=12;}else{newValue=0;}}else if(newValue===0){newValue=12;}}else{if(newValue===0){newValue=12;}}that._updateHours(newValue);}else{if(newValue===60){newValue=0;}that._updateMinutes(newValue);}if(that._oldTimePart===undefined){return;}cancelAnimationFrame(that._animationFrameId);that._drawArrow(true,newValue,noAnimation);}/**
     * Changes to hour selection.
     */},{key:'_changeToHourSelection',value:function _changeToHourSelection(){var that=this,svgCanvas=that._centralCircle.parentElement||that._centralCircle.parentNode;cancelAnimationFrame(that._animationFrameId);that.interval=1;that.$hourContainer.addClass('jqx-selected');that.$minuteContainer.removeClass('jqx-selected');svgCanvas.removeChild(that._centralCircle);svgCanvas.removeChild(that._arrow);svgCanvas.removeChild(that._head);that._getMeasurements();that._numericProcessor.getAngleRangeCoefficient();that._draw.clear();svgCanvas.appendChild(that._centralCircle);svgCanvas.appendChild(that._arrow);svgCanvas.appendChild(that._head);that._renderHours();if(that.format==='24-hour'&&(that.value.getHours()===0||that.value.getHours()>12)){that._inInnerCircle=true;}that._drawArrow(true,undefined,true);that._inInnerCircle=false;}/**
     * Changes to minute selection.
     */},{key:'_changeToMinuteSelection',value:function _changeToMinuteSelection(){var that=this,svgCanvas=that._centralCircle.parentElement||that._centralCircle.parentNode;that._inInnerCircle=false;cancelAnimationFrame(that._animationFrameId);that.interval=that.minuteInterval;that.$hourContainer.removeClass('jqx-selected');that.$minuteContainer.addClass('jqx-selected');svgCanvas.removeChild(that._centralCircle);svgCanvas.removeChild(that._arrow);svgCanvas.removeChild(that._head);that._getMeasurements();that._numericProcessor.getAngleRangeCoefficient();that._draw.clear();svgCanvas.appendChild(that._centralCircle);svgCanvas.appendChild(that._arrow);svgCanvas.appendChild(that._head);that._renderMinutes();that._drawArrow(true,undefined,true);}/**
     * Computes arrow body points.
     */},{key:'_computeArrowBodyPoints',value:function _computeArrowBodyPoints(radius,angle,width,length){var that=this,sin=Math.sin(angle),cos=Math.cos(angle),endX1=radius-width*cos+length*sin,endY1=radius+width*sin+length*cos,endX2=radius+width*cos+length*sin,endY2=radius-width*sin+length*cos,startX1=radius+width*cos,startY1=radius-width*sin,startX2=radius-width*cos,startY2=radius+width*sin,points='M '+startX1+','+startY1+' L '+startX2+','+startY2+' L '+endX1+','+endY1+' '+endX2+','+endY2;that._headCenter={x:(endX1+endX2)/2,y:(endY1+endY2)/2};return points;}/**
     * Applies initial settings to the TimePicker element.
     */},{key:'_createElement',value:function _createElement(){var that=this;that.coerce=true;that.min=0;that._drawMin='0';that.startAngle=-270;that.endAngle=90;that._angleDifference=that.endAngle-that.startAngle;that.ticksVisibility='none';that._tickIntervalHandler={};that._tickIntervalHandler.labelsSize={};that._distance={majorTickDistance:0,minorTickDistance:0,labelDistance:10};that._measurements={};that._validateInitialPropertyValues();that._applyInitialSettings();that._numericProcessor=new JQX.Utilities.DecimalNumericProcessor(that);that._draw=new JQX.Utilities.Draw(that.$.picker);if(!that._isVisible()){that._renderingSuspended=true;return;}that._setPickerSize();that._getMeasurements();that._numericProcessor.getAngleRangeCoefficient();that._renderSVG();that._setFocusable();}/**
     * Document move handler.
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this;if(that._dragging){that._changeSelection(event,true);}}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(){var that=this;if(that._dragging){that._inInnerCircle=false;that._dragging=false;if(that.autoSwitchToMinutes&&that.selection==='hour'){if(that.hasAnimation){that.$picker.addClass('animate');setTimeout(function(){that.selection='minute';that._changeToMinuteSelection();},250);setTimeout(function(){that.$picker.removeClass('animate');},550);}else{that.selection='minute';that._changeToMinuteSelection();}}}}/**
     * Draws/updates the arrow.
     */},{key:'_drawArrow',value:function _drawArrow(update,value,noAnimation){var that=this,hourSelection=that.selection==='hour',twelveHourFormat=that.format==='12-hour';var current=that._oldTimePart;delete that._oldTimePart;if(value===undefined){if(hourSelection){value=that.value.getHours();if(twelveHourFormat&&value>12){value-=12;}}else{value=that.value.getMinutes();}}if(current===undefined||noAnimation||!that.hasAnimation){that._drawArrowSVG(update,value);return;}if(hourSelection&&!twelveHourFormat){that._animate24HourView(current,value);return;}var step=void 0,max=void 0;if(hourSelection){step=0.2;max=12;value=value%max;current=current%max;}else{step=1;max=60;}var distanceCW=value-current,distanceCCW=current-value;if(distanceCW<0){distanceCW+=max;}if(distanceCCW<0){distanceCCW+=max;}if(distanceCCW<distanceCW){step*=-1;}function animate(){current+=step;current=parseFloat((current%max).toFixed(1));if(current<0){current+=max;}that._drawArrowSVG(update,current);if(current!==value%max){that._animationFrameId=requestAnimationFrame(animate);}}that._animationFrameId=requestAnimationFrame(animate);}/**
     * Animates selection in 24-hour view.
     */},{key:'_animate24HourView',value:function _animate24HourView(current,value){var that=this;var step=0.2;that._inInnerCircle=false;var currentInnerCircle=current===0||current>12,valueInnerCircle=value===0||value>12;if(currentInnerCircle!==valueInnerCircle){if(currentInnerCircle){current=Math.abs(current-12);}else{current=(current+12)%24;}that._inInnerCircle=valueInnerCircle;that._drawArrowSVG(true,current);if(current===value){return;}}else{that._inInnerCircle=valueInnerCircle;}var start=current,end=value;if(that._inInnerCircle){if(end===0&&start<18){end=12;}else if(start===0&&end<18){start=12;}}var distanceCW=end-start,distanceCCW=start-end;if(distanceCW<0){distanceCW+=12;}if(distanceCCW<0){distanceCCW+=12;}if(distanceCCW<distanceCW){step*=-1;}function animate(inInnerCircle){that._inInnerCircle=inInnerCircle;if(inInnerCircle){current=parseFloat((current+step).toFixed(1));if(current<0){current+=24;}else if(current<1){current=current+12;}if(current===12||current===24){current=0;}}else{current+=step;if(current!==12){current=parseFloat((current%12).toFixed(1));}if(current<=0){current+=12;}}that._drawArrowSVG(true,current);if(current!==value){that._animationFrameId=requestAnimationFrame(function(){animate(inInnerCircle);});}else{that._inInnerCircle=false;}}that._animationFrameId=requestAnimationFrame(function(){animate(that._inInnerCircle);});}/**
     * Draws/updates the arrow.
     */},{key:'_drawArrowSVG',value:function _drawArrowSVG(update,value){var that=this,measurements=that._measurements,angle=that._numericProcessor.getAngleByValue(value);var arrowBodyPoints=void 0;if(!that._inInnerCircle){arrowBodyPoints=that._computeArrowBodyPoints(measurements.radius,angle,1,measurements.innerRadius-that._largestLabelSize/2);}else{arrowBodyPoints=that._computeArrowBodyPoints(measurements.radius,angle,1,measurements.innerRadius-that._largestLabelSize/2-45);}if(update){that._arrow.setAttribute('d',arrowBodyPoints);that._head.setAttribute('cx',that._headCenter.x);that._head.setAttribute('cy',that._headCenter.y);that._head.setAttribute('r',that._largestLabelSize);that._headRect=that._head.getBoundingClientRect();if(value%1===0){that._highlightLabel(value);}}else{that._arrow=that._draw.path(arrowBodyPoints,{'class':'jqx-needle'});that._head=that._draw.circle(that._headCenter.x,that._headCenter.y,that._largestLabelSize,{'class':'jqx-needle-central-circle'});that._headRect=that._head.getBoundingClientRect();}}/**
     * Draws a label.
     */},{key:'_drawLabel',value:function _drawLabel(angle,value,distance){var that=this,measurements=that._measurements,r=measurements.radius,stylingObj={'class':'jqx-label jqx-unselectable','font-size':measurements.fontSize,'font-family':measurements.fontFamily,'font-weight':measurements.fontWeight,'font-style':measurements.fontStyle};if(that.selection==='hour'){if(that._plotInnerCircle){if(value>0){value+=12;}else{value='00';}}else{if(value===0){value=12;}}}else{if(value.toString().length===1){value='0'+value;}}var textSize=that._draw.measureText(value,0,stylingObj),w=r-distance-that._largestLabelSize/2,x=r+w*Math.sin(angle),y=r+w*Math.cos(angle),label=that._draw.text(value,Math.round(x)-textSize.width/2,Math.round(y)-textSize.height/2,textSize.width,textSize.height,0,stylingObj);label.setAttribute('value',parseFloat(value));}/**
     * Gets the center coordinates.
     */},{key:'_getCenterCoordinates',value:function _getCenterCoordinates(){var that=this,offset=that.$.picker.getBoundingClientRect(),radius=that._measurements.radius,scrollLeft=document.body.scrollLeft||document.documentElement.scrollLeft,scrollTop=document.body.scrollTop||document.documentElement.scrollTop;return{x:offset.left+scrollLeft+radius,y:offset.top+scrollTop+radius};}/**
     * Measures some elements of the TimePicker and stores the results.
     */},{key:'_getMeasurements',value:function _getMeasurements(){var that=this,measurements=that._measurements,measureLabel=document.createElement('div');var minLabel=void 0,maxLabel=void 0,minLabelWidth=void 0,maxLabelWidth=void 0,minLabelHeight=void 0,maxLabelHeight=void 0;measureLabel.className='jqx-label';measureLabel.style.position='absolute';measureLabel.style.visibility='hidden';that.$.svgContainer.appendChild(measureLabel);if(that.selection==='hour'){minLabel='1';maxLabel='23';that.max=12;that._drawMax='12';that._range=12;}else{minLabel='00';maxLabel='55';that.max=60;that._drawMax='60';that._range=60;}measureLabel.innerHTML=minLabel;minLabelWidth=measureLabel.offsetWidth;minLabelHeight=measureLabel.offsetHeight;measureLabel.innerHTML=maxLabel;maxLabelWidth=measureLabel.offsetWidth;maxLabelHeight=measureLabel.offsetHeight;that._largestLabelSize=Math.max(minLabelWidth,minLabelHeight,maxLabelWidth,maxLabelHeight);that._tickIntervalHandler.labelsSize.minLabelSize=minLabelHeight;that._tickIntervalHandler.labelsSize.maxLabelSize=maxLabelHeight;var measureElementStyle=window.getComputedStyle(measureLabel);measurements.fontSize=measureElementStyle.fontSize;measurements.fontFamily=measureElementStyle.fontFamily;measurements.fontWeight=measureElementStyle.fontWeight;measurements.fontStyle=measureElementStyle.fontStyle;that.$.svgContainer.removeChild(measureLabel);}/**
     * Header click handler.
     */},{key:'_headerClickHandler',value:function _headerClickHandler(event){var that=this;if(that.disabled||that.readonly){return;}switch(event.target){case that.$.hourContainer:if(that.selection!=='hour'){that.selection='hour';that._changeToHourSelection();}break;case that.$.minuteContainer:if(that.selection!=='minute'){that.selection='minute';that._changeToMinuteSelection();}break;case that.$.amContainer:if(!that.$amContainer.hasClass('jqx-selected')){that._selectAmPm('am');var oldValue=new Date(that.value.getTime());that.value.setHours(that.value.getHours()-12);// Update the hidden input 
that.$.hiddenInput.value=that.value;that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}break;case that.$.pmContainer:if(!that.$pmContainer.hasClass('jqx-selected')){that._selectAmPm('pm');var _oldValue=new Date(that.value.getTime());that.value.setHours(that.value.getHours()+12);// Update the hidden input 
that.$.hiddenInput.value=that.value;that.$.fireEvent('change',{'value':that.value,'oldValue':_oldValue});}break;}}/**
     * Highlights a label.
     */},{key:'_highlightLabel',value:function _highlightLabel(value){var that=this;if(that._highlightedLabel){if(parseFloat(that._highlightedLabel.getAttribute('value'))===value){return;}that._highlightedLabel.classList.remove('jqx-selected');that._highlightedLabel=undefined;}var roundedValue=void 0;if(that.selection==='hour'){if(value===undefined){value=that.value.getHours();}if(that.format==='12-hour'){if(value===0){value=12;}else if(value>12){value-=12;}}roundedValue=value;}else{if(value===undefined){value=that.value.getMinutes();}roundedValue=Math.round(value/5)*5;if(roundedValue===60){roundedValue=0;}}var labelAtValue=that.$.picker.querySelector('.jqx-label[value="'+roundedValue+'"]');if(labelAtValue&&(roundedValue===value||that._overlapsLabel(labelAtValue))){that._highlightedLabel=labelAtValue;labelAtValue.classList.add('jqx-selected');}}/**
     * Checks if the element is visible.
     */},{key:'_isVisible',value:function _isVisible(){var that=this;return!!(that.offsetWidth||that.offsetHeight||that.getClientRects().length);}/**
     * keydown handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this;if(that._dragging){return;}var activeElement=that.enableShadowDOM?that.shadowRoot.activeElement||document.activeElement:document.activeElement,key=event.key;if(that.$.header.contains(activeElement)&&(key==='Enter'||key===' ')){event.preventDefault();that._headerClickHandler({target:activeElement});}else if(activeElement===that.$.picker&&!event.altKey){var coefficient=void 0;if(key==='ArrowRight'||key==='ArrowUp'){coefficient=1;}else if(key==='ArrowLeft'||key==='ArrowDown'){coefficient=-1;}if(coefficient){event.preventDefault();if(that.selection==='hour'){var hours=that.value.getHours();if(hours===0&&coefficient===-1){hours=23;}else if(hours===23&&coefficient===1){hours=0;}else{hours+=coefficient;}if(that.format==='12-hour'){if(hours>=12&&that.$amContainer.hasClass('jqx-selected')){hours-=12;}else if(hours<12&&that.$pmContainer.hasClass('jqx-selected')){hours+=12;}}that.setHours(hours,undefined,true);}else{var minutes=that.value.getMinutes();coefficient*=that.minuteInterval;if(minutes+coefficient>=60){minutes=0;}else if(minutes<coefficient*-1){if(60%coefficient===0){minutes=60+coefficient;}else{minutes=60-60%coefficient;}}else{minutes+=coefficient;}that.setMinutes(minutes,true);}}}}/**
     * Returns if the arrow head overlaps a label.
     */},{key:'_overlapsLabel',value:function _overlapsLabel(label){var that=this,labelRect=label.getBoundingClientRect();var headRect=that._headRect;if(headRect.height===0){headRect=that._headRect=that._head.getBoundingClientRect();}return!(labelRect.right-10<headRect.left||labelRect.left+10>headRect.right||labelRect.bottom-10<headRect.top||labelRect.top+10>headRect.bottom);}/**
     * Parses a date string.
     */},{key:'_parseDateString',value:function _parseDateString(value,referenceValue){var indexOfDate=value.indexOf('Date('),indexOfBracket=value.indexOf(')');var validValue=value;if(indexOfDate!==-1&&indexOfBracket!==-1){validValue=value.slice(indexOfDate+5,indexOfBracket);validValue=validValue.replace(/'/g,'').replace(/"/g,'').replace(/^\s+|\s+$|\s+(?=\s)/g,'');if(validValue.trim()===''){return new Date();}if(new RegExp(/(^(\d+)(\s*,\s*\d+)+$)/g).test(validValue)){validValue=validValue.replace(/\s/g,'');validValue=validValue.split(',');validValue.map(function(argument,index){validValue[index]=parseInt(argument);});validValue.unshift(null);validValue=new(Function.prototype.bind.apply(Date,validValue))();return validValue;}}if(validValue.trim()===''){return referenceValue;}if(!isNaN(validValue)){return new Date(parseInt(validValue,10));}try{validValue=new Date(validValue);}catch(error){validValue=referenceValue;}if(isNaN(validValue.getTime())){return referenceValue;}return validValue;}/**
     * SVG picker (mouse)down event handler.
     */},{key:'_pickerDownHandler',value:function _pickerDownHandler(event){var that=this;if(that.disabled||that.readonly||!JQX.Utilities.Core.isMobile&&event.which!==1){return;}that._changeSelection(event);}/**
     * SVG picker move event handler.
     */},{key:'_pickerMoveHandler',value:function _pickerMoveHandler(event){if(event.originalEvent.type==='touchmove'){event.originalEvent.preventDefault();}}/**
     * Renders hours view.
     */},{key:'_renderHours',value:function _renderHours(){var that=this;that._highlightedLabel=undefined;that._majorTicksInterval=1;that._numericProcessor.addGaugeTicksAndLabels();if(that.format==='24-hour'){that._plotInnerCircle=true;that._distance.labelDistance=55;that._numericProcessor.addGaugeTicksAndLabels();that._plotInnerCircle=false;that._distance.labelDistance=10;}}/**
     * Renders minutes view.
     */},{key:'_renderMinutes',value:function _renderMinutes(){var that=this;that._highlightedLabel=undefined;that._majorTicksInterval=5;that._numericProcessor.addGaugeTicksAndLabels();}/**
     * Renders all SVG elements.
     */},{key:'_renderSVG',value:function _renderSVG(){var that=this;if(!that._isVisible()||that._renderingSuspended){that._renderingSuspended=true;return;}that._centralCircle=that._draw.circle(that._measurements.radius,that._measurements.radius,4,{'class':'jqx-needle-central-circle'});if(that.selection==='hour'&&that.format==='24-hour'&&(that.value.getHours()===0||that.value.getHours()>12)){that._inInnerCircle=true;}that._drawArrow(false);that._inInnerCircle=false;if(that.selection==='hour'){that.interval=1;that._renderHours();var hours=that.value.getHours();if(that.format==='12-hour'&&hours>12){hours-=12;}that._highlightLabel(hours);}else{that.interval=that.minuteInterval;that._renderMinutes();that._highlightLabel(that.value.getMinutes());}}/**
     * Gauge resize handler.
     */},{key:'_resizeHandler',value:function _resizeHandler(){var that=this;var shown=false;if(!that._isVisible()){that._renderingSuspended=true;return;}else{that._renderingSuspended=false;shown=true;that._getMeasurements();that._numericProcessor.getAngleRangeCoefficient();}that._setPickerSize();if(that._sizeChanged||shown){that._draw.clear();that._renderSVG();that._sizeChanged=false;}else{that._headRect=that._head.getBoundingClientRect();that._highlightLabel();}}/**
     * Selects the appropriate AM/PM label.
     */},{key:'_selectAmPm',value:function _selectAmPm(which){var that=this;if(which==='am'){that._ampm='am';that.$pmContainer.removeClass('jqx-selected');that.$amContainer.addClass('jqx-selected');}else{that._ampm='pm';that.$amContainer.removeClass('jqx-selected');that.$pmContainer.addClass('jqx-selected');}}/**
     * Sets whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){var that=this;if(that.disabled||that.unfocusable){that.$.hourContainer.removeAttribute('tabindex');that.$.minuteContainer.removeAttribute('tabindex');that.$.amContainer.removeAttribute('tabindex');that.$.pmContainer.removeAttribute('tabindex');that.$.picker.removeAttribute('tabindex');return;}var index=that.tabIndex>0?that.tabIndex:0;that.$.hourContainer.tabIndex=index;that.$.minuteContainer.tabIndex=index;that.$.amContainer.tabIndex=index;that.$.pmContainer.tabIndex=index;that.$.picker.tabIndex=index;}/**
     * Sets the SVG picker's size.
     */},{key:'_setPickerSize',value:function _setPickerSize(){var that=this,parentWidth=that.$.svgContainer.offsetWidth,parentHeight=that.$.svgContainer.offsetHeight;var size=Math.min(parentWidth,parentHeight)*0.9;if(that._pickerSize!==undefined&&that._pickerSize!==size){that._sizeChanged=true;}else{that._sizeChanged=false;}that._pickerSize=size;that._measurements.radius=size/2;that._measurements.innerRadius=that._measurements.radius-10;size+='px';that.$.picker.style.width=size;that.$.picker.style.height=size;}/**
     * Updates the hours.
     */},{key:'_updateHours',value:function _updateHours(hours,suppressEvent){var that=this;var actualHours=hours;if(that.format==='12-hour'){if(that._ampm==='am'){if(actualHours===12){actualHours=0;}}else if(actualHours<12){actualHours+=12;}}else{actualHours=hours;}var oldValue=that._oldValue!==undefined?that._oldValue:new Date(that.value.getTime()),oldHours=oldValue.getHours();if(actualHours===oldHours){delete that._oldTimePart;return;}that._oldTimePart=oldHours;if(that._oldValue===undefined){that.value.setHours(actualHours);}that.$.hourContainer.innerHTML=hours;if(suppressEvent!==true){// Update the hidden input 
that.$.hiddenInput.value=that.value;that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}}/**
     * Updates the minutes.
     */},{key:'_updateMinutes',value:function _updateMinutes(minutes){var that=this,oldValue=that._oldValue!==undefined?that._oldValue:new Date(that.value.getTime()),oldMinutes=oldValue.getMinutes();if(minutes===oldMinutes){delete that._oldTimePart;return;}that._oldTimePart=oldMinutes;if(that._oldValue===undefined){that.value.setMinutes(minutes);}minutes=minutes.toString();if(minutes.length===1){minutes='0'+minutes;}that.$.minuteContainer.innerHTML=minutes;// Update the hidden input 
that.$.hiddenInput.value=that.value;that.$.fireEvent('change',{'value':that.value,'oldValue':oldValue});}/**
     * Validates the "footerTemplate" property.
     */},{key:'_validateFooterTemplate',value:function _validateFooterTemplate(){var that=this,footerTemplate=that.footerTemplate;if(footerTemplate===null){that.$.footer.innerHTML='';return;}var potentialHTMLTemplate=void 0;if(footerTemplate instanceof HTMLTemplateElement){potentialHTMLTemplate=footerTemplate;}else if(typeof footerTemplate==='string'){potentialHTMLTemplate=document.getElementById(footerTemplate);if(!(potentialHTMLTemplate instanceof HTMLTemplateElement)){potentialHTMLTemplate=undefined;}}if(potentialHTMLTemplate===undefined){that.footerTemplate=null;that.$.footer.innerHTML='';return;}var templateContent=document.importNode(potentialHTMLTemplate.content,true);if(that.enableShadowDOM){that.$.footer.innerHTML='<slot></slot>';that.appendChild(templateContent);return;}that.$.footer.appendChild(templateContent);}/**
     * Validates initial property values.
     */},{key:'_validateInitialPropertyValues',value:function _validateInitialPropertyValues(){var that=this;that._validateFooterTemplate();that.minuteInterval=Math.max(1,Math.min(that.minuteInterval,60));that._validateValue();}/**
     * Validates the "value" property.
     */},{key:'_validateValue',value:function _validateValue(){var that=this,value=that.value,referenceValue=that._oldValue!==undefined?this._oldValue:new Date();if(value instanceof Date){return;}else if(typeof value==='string'){if(/^\d{1,2}:\d{1,2}$/.test(value)){var timeParts=value.split(':');that.value=new Date(referenceValue.getFullYear(),referenceValue.getMonth(),referenceValue.getDate(),parseFloat(timeParts[0]),parseFloat(timeParts[1]));return;}that.value=that._parseDateString(value,referenceValue);}else{that.value=referenceValue;}}}],[{key:'properties',/**
     * TimePicker's properties.
     */get:function get(){return{'autoSwitchToMinutes':{value:false,type:'boolean'},'footer':{value:false,type:'boolean'},'footerTemplate':{value:null,type:'any?'},'format':{value:'12-hour',allowedValues:['12-hour','24-hour'],type:'string'},'minuteInterval':{value:1,type:'number'},'name':{value:'',type:'string'},'selection':{value:'hour',allowedValues:['hour','minute'],type:'string'},'value':{value:new Date(),type:'any',reflectToAttribute:false},'view':{value:'portrait',allowedValues:['landscape','portrait'],type:'string'}};}/**
     * TimePicker's event listeners.
     */},{key:'listeners',get:function get(){return{'keydown':'_keydownHandler','resize':'_resizeHandler','header.click':'_headerClickHandler','picker.down':'_pickerDownHandler','picker.move':'_pickerMoveHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler'};}/**
     * TimePicker's required files.
     */},{key:'requires',get:function get(){return{'JQX.Utilities.NumericProcessor':'jqxnumeric.js','JQX.Utilities.BigNumber':'jqxmath.js','JQX.Utilities.Draw':'jqxdraw.js'};}/**
     * CSS files needed for the element (ShadowDOM)
     */},{key:'styleUrls',get:function get(){return['jqx.timepicker.css'];}}]);return TimePicker;}(JQX.BaseElement));/**
* jqxToast custom element.
*/JQX('jqx-toast',function(_JQX$ContentElement15){babelHelpers.inherits(Toast,_JQX$ContentElement15);function Toast(){babelHelpers.classCallCheck(this,Toast);return babelHelpers.possibleConstructorReturn(this,(Toast.__proto__||Object.getPrototypeOf(Toast)).apply(this,arguments));}babelHelpers.createClass(Toast,[{key:'template',/**
    * Tab Items Group's HTML template.
    */value:function template(){return'';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'value':{var _item75=that._instances[that._instances.length-1];if(_item75){(that.enableShadowDOM?_item75.shadowRoot:_item75).querySelector('.jqx-toast-item-content').innerHTML=newValue;}break;}case'appendTo':case'modal':case'position':that._handleContainers();break;default:babelHelpers.get(Toast.prototype.__proto__||Object.getPrototypeOf(Toast.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
     * Called when the element is attached to the DOM.
     */},{key:'attached',value:function attached(){babelHelpers.get(Toast.prototype.__proto__||Object.getPrototypeOf(Toast.prototype),'attached',this).call(this);var that=this,containers=['TopLeft','TopRight','BottomLeft','BottomRight','Custom','Modal'];for(var _i584=0;_i584<containers.length;_i584++){var itemContainer=that.$['toastContainer'+containers[_i584]];if(itemContainer&&itemContainer.children.length){if(containers[_i584]==='Custom'){that._appendTo.appendChild(that._container);}else{document.body.appendChild(itemContainer);}}}}/**
    * Called when the element is detached from the DOM.
    */},{key:'detached',value:function detached(){babelHelpers.get(Toast.prototype.__proto__||Object.getPrototypeOf(Toast.prototype),'detached',this).call(this);var that=this,containers=['TopLeft','TopRight','BottomLeft','BottomRight','Custom','Modal'];for(var _i585=0;_i585<containers.length;_i585++){var itemContainer=that.$['toastContainer'+containers[_i585]];if(itemContainer){that._removeContainerListeners(itemContainer);itemContainer.parentElement.removeChild(itemContainer);}that.closeAll();}}/**
    * Element's ready method.
    */},{key:'ready',value:function ready(){babelHelpers.get(Toast.prototype.__proto__||Object.getPrototypeOf(Toast.prototype),'ready',this).call(this);var that=this;that.value=that.innerHTML=that.value?that.value:that.innerHTML;that._instances=[];if(that.autoOpen){that.open();}}/**
    * Closes all opened toast items
    */},{key:'closeAll',value:function closeAll(){var that=this;for(var i=that._instances.length-1;i>-1;i--){that._close(that._instances[i]);}}/**
    * Closes particular item
    */},{key:'closeItem',value:function closeItem(instance){var that=this;if(!instance||that._instances.length===0){return;}if(typeof instance==='string'){instance=document.getElementById(instance);}else if(instance instanceof HTMLElement){instance=instance.closest('.jqx-toast-item');}if(!instance||that._instances.indexOf(instance)===-1){return;}that._close(instance);}/**
    * Closes the last opened toast item
    */},{key:'closeLast',value:function closeLast(){var that=this;if(that._instances.length>0){that._close(that._instances[that._instances.length-1]);}}/**
     * Opens a new toast item instance
     */},{key:'open',value:function open(){var that=this;if(that.disabled){return;}that._handleContainers();var item=document.createElement('div');item.className='jqx-toast-item';if(that.value instanceof HTMLElement){item.innerHTML=that._defaultItemTemplate('');item.getElementsByClassName('jqx-toast-item-content')[0].appendChild(that.value);}else{item.innerHTML=that._handleItemTemplate()||that._defaultItemTemplate(that.value);}if(that.showCloseButton){item.setAttribute('show-close-button','');}for(var _i586=0;_i586<that.classList.length;_i586++){if(that.classList[_i586].indexOf('jqx-')<0){item.classList.add(that.classList[_i586]);}}if(that.type){item.classList.add(that.type);}item.setAttribute('animation',that.animation);if(that.enableShadowDOM){if(!item.shadowRoot){var itemContent=document.createDocumentFragment();while(item.childNodes.length){itemContent.appendChild(item.firstChild);}//Create ShadowRoot
item.attachShadow({mode:'open'});//Append Styles
var styleUrls=[].slice.call(that.shadowRoot.children).filter(function(el){return el.tagName==='LINK';});for(var _i587=0;_i587<styleUrls.length;_i587++){item.shadowRoot.insertBefore(styleUrls[_i587].cloneNode(),item.shadowRoot.firstChild);}item.shadowRoot.appendChild(itemContent);}}that._container.appendChild(item);item._parent=that._container;that._instances.push(item);that.$.fireEvent('open',{'instance':item});setTimeout(function(){item.setAttribute('opened','');},10);if(that.autoClose){item._autoCloseTimeout=setTimeout(function(){that._close(item);},that.autoCloseDelay);}}/**
     * Container's click handler. Common for all toast containers
     */},{key:'_containerClickHandler',value:function _containerClickHandler(event){var that=this,target=that.enableShadowDOM?event.composedPath()[0]:event.target,clickedButton=target.closest('.jqx-toast-item-close-button'),clickedItem=(target.getRootNode().host||target).closest('.jqx-toast-item');if(clickedButton||clickedItem){that.$.fireEvent('click',{'instance':clickedItem});if(clickedButton){that._close(clickedItem);}}else if(that.modal){that.closeAll();}}/**
     * Closes (removes) an toast item instance
     */},{key:'_close',value:function _close(instance){var that=this;if(that._instances.indexOf(instance)>-1){var closeTransitionDuration=window.getComputedStyle(instance,null).getPropertyValue('transition-duration'),interval=closeTransitionDuration.indexOf('ms')>-1?parseInt(closeTransitionDuration):parseFloat(closeTransitionDuration)*1000;instance.removeAttribute('opened');that._instances.splice(that._instances.indexOf(instance),1);setTimeout(function(){clearTimeout(instance._autoCloseTimeout);that.$.fireEvent('close',{'instance':instance});if(instance.parentNode){instance.parentNode.removeChild(instance);}var parentContainer=instance._parent;if(parentContainer&&!parentContainer.children.length&&parentContainer.parentElement){that._removeContainerListeners(parentContainer);parentContainer.parentElement.removeChild(parentContainer);}},interval);}}/**
    * Returns the default item template
    */},{key:'_defaultItemTemplate',value:function _defaultItemTemplate(value){return'<div class ="jqx-toast-item-header">\n                    <span class ="jqx-toast-item-close-button"></span>\n                </div>\n                <div class ="jqx-toast-item-container">\n                    <span class ="jqx-toast-item-icon"></span><span class ="jqx-toast-item-content">'+value+'</span>\n                </div>';}/**
     * Handles the contaner in use, where all new items will be stored
     */},{key:'_handleContainers',value:function _handleContainers(){var that=this;var customContainer=void 0;if(typeof that.appendTo==='string'){customContainer=document.getElementById(that.appendTo);}else if(that.appendTo instanceof HTMLElement){customContainer=that.appendTo;}//Get or create the toast items container
that._container=that._getToastContainer(customContainer);if(customContainer){that._appendTo=customContainer;if(!that._container.parentElement){//Add events listeners
that._addContainerListeners(that._container);that._appendTo.appendChild(that._container);}return;}if(!customContainer&&that.$.toastContainerCustom&&!that.$.toastContainerCustom.children.length){that._removeContainerListeners(that.$.toastContainerCustom);if(that.$.toastContainerCustom.parentElement){that.$.toastContainerCustom.parentElement.removeChild(that.$.toastContainerCustom);}}if(!that._container.parentElement){//Add events listeners
that._addContainerListeners(that._container);document.body.appendChild(that._container);}}/**
     * Adds event listeners to the toast item container
     * @param {any} container
     */},{key:'_addContainerListeners',value:function _addContainerListeners(container){var that=this;if(!container){return;}var containerId=container.getAttribute('jqx-id'),containerEvents=that['$'+containerId];if(containerEvents){containerEvents.listen('click',that._containerClickHandler.bind(that));containerEvents.listen('swipeleft',that._swipeHandler.bind(that));containerEvents.listen('swiperight',that._swipeHandler.bind(that));containerEvents.listen('swipetop',that._swipeHandler.bind(that));containerEvents.listen('swipebottom',that._swipeHandler.bind(that));}}/**
     * Removes the event listeners from the toast item container
     * @param {any} container
     */},{key:'_removeContainerListeners',value:function _removeContainerListeners(container){var that=this;if(!container){return;}var containerId=container.getAttribute('jqx-id'),containerEvents=that['$'+containerId];if(containerEvents){containerEvents.unlisten('click');containerEvents.unlisten('swipeleft');containerEvents.unlisten('swiperight');containerEvents.unlisten('swipetop');containerEvents.unlisten('swipebottom');}}/**
     * Returns a toast items container
     * @param {any} customContainer
     */},{key:'_getToastContainer',value:function _getToastContainer(customContainer){var that=this;var type=void 0;if(customContainer){type='Custom';}else if(that.modal){type='Modal';}else{type=JQX.Utilities.Core.toCamelCase(that.position);type=type.charAt(0).toUpperCase()+type.slice(1);}var containerName='toastContainer'+type;if(!that.$[containerName]){//Create it
var container=document.createElement('div');container.setAttribute('jqx-id',containerName);container.classList.add('jqx-toast-container');container.classList.add('jqx-toast-container-'+JQX.Utilities.Core.toDash(type));that.$['toastContainer'+type]=container;that['$toastContainer'+type]=JQX.Utilities.Extend(container);}return that.$[containerName];}/**
    * Apply the template to the toast.
    */},{key:'_handleItemTemplate',value:function _handleItemTemplate(){var that=this;var template=that.itemTemplate;if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(!template){return that._defaultItemTemplate(that.value);}template=document.getElementById(template);if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'template'}));return;}var content=template.innerHTML,regex=/{{\w+}}/g;return content.replace(regex,that.value);}/**
    * SwipeLeft and SwipeRight event handler.
    **/},{key:'_swipeHandler',value:function _swipeHandler(event){var that=this,instance=event.originalEvent.target.closest('.jqx-toast-item');event.stopPropagation();if(!instance){return;}that.$.fireEvent(event.type,{'instance':instance});}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'appendTo':{value:null,type:'any'},'autoClose':{value:false,type:'boolean'},'autoCloseDelay':{value:3000,type:'number'},'autoOpen':{value:false,type:'boolean'},'itemTemplate':{value:null,type:'string?'},'modal':{value:false,type:'boolean'},'position':{allowedValues:['top-left','top-right','bottom-left','bottom-right'],value:'top-right',type:'string'},'showCloseButton':{value:false,type:'boolean'},'type':{allowedValues:['info','warning','success','error','mail','time',null],value:'info',type:'string?'},'value':{value:'',type:'any'}};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.toast.css'];}}]);return Toast;}(JQX.ContentElement));/**
* Tooltip custom element.
*/JQX('jqx-tooltip',function(_JQX$ContentElement16){babelHelpers.inherits(Tooltip,_JQX$ContentElement16);function Tooltip(){babelHelpers.classCallCheck(this,Tooltip);return babelHelpers.possibleConstructorReturn(this,(Tooltip.__proto__||Object.getPrototypeOf(Tooltip)).apply(this,arguments));}babelHelpers.createClass(Tooltip,[{key:'template',/** 
    * Tooltip's HTML template.
    */value:function template(){return'<div id="container">\n                    <div id="content" class="jqx-tooltip-content" inner-h-t-m-l="[[innerHTML]]">\n                        <content></content>\n                    </div>\n                </div>';}/**
    * Updates the Tooltip when a property is  changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value.
    * @param {number/string} newValue The new entered value.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){babelHelpers.get(Tooltip.prototype.__proto__||Object.getPrototypeOf(Tooltip.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);var that=this;var eventType=void 0;switch(propertyName){case'openMode':that.close();that._handleEventListeners(oldValue);that._handleResize();break;case'selector':that._oldOwnerElement=that._ownerElement;that._handleSelector(newValue);that._handleEventListeners();break;case'tooltipTemplate':that._handleTemplate(oldValue);break;case'value':that.tooltipTemplate?that._handleTemplate():that.$.content.innerHTML=that.value;break;case'visible':eventType=newValue?'open':'close';that.$.fireEvent(eventType,{'owner':that._ownerElement});break;}that._applyPosition();}/**
    * Called when the element is ready
    */},{key:'ready',value:function ready(){var that=this;babelHelpers.get(Tooltip.prototype.__proto__||Object.getPrototypeOf(Tooltip.prototype),'ready',this).call(this);that._isParentPositionStatic=window.getComputedStyle(that.parentElement||document.querySelector('body')).position==='static';that._handleSelector(that.selector);if(that.visible){that._applyPosition();}that._handleEventListeners();that._handleResize();that.value=that.$.content.innerHTML=that.value?that.value:that.innerHTML;that._handleTemplate();}/**
    * Appends a node to the tooltip.
    */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}that.$.content.appendChild(node);that._applyPosition();}/**
     * Closes the tooltip
     */},{key:'close',value:function close(){var that=this;if(that._isOpening){clearTimeout(that._isOpening);}if(!that.visible){return;}that.$.fireEvent('close',{'owner':that._ownerElement});that.visible=false;}/**
    * Inserts a new node after another node in the tooltip.
    */},{key:'insertBefore',value:function insertBefore(newNode,referenceNode){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!newNode||!referenceNode){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'insertBefore',node:'newNode/referenceNode'}));return;}that.$.content.insertBefore(newNode,referenceNode);that._applyPosition();}/**
     * Open the tooltip
     */},{key:'open',value:function open(){var that=this;if(that.disabled||that.readonly||that.visible){return;}that._isOpening=setTimeout(function(){that._applyPosition();that.$.fireEvent('open',{'owner':that._ownerElement});//Avoid unnecessaty propertyChangedHandler call
var context=that.context;that.context=that;that.visible=true;that.context=context;},that.delay);}/**
    * Removes a node from the tooltip.
    */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.insertBefore.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}that.$.content.removeChild(node);that._applyPosition();}/**
     * Toggle the tooltip
     */},{key:'toggle',value:function toggle(){var that=this;that.visible?that.close():that.open();}/**
      * Selector property handler.
      */},{key:'_applyPosition',value:function _applyPosition(){var that=this;if(!that._ownerElement){return;}function getDomElementPosition(domElement){var arrayWithParentNodes=[],testedElement=domElement.parentElement;while(testedElement&&testedElement.nodeName!=='BODY'){arrayWithParentNodes.push(testedElement);if(that.enableShadowDOM&&!testedElement.parentElement){testedElement=testedElement.getRootNode().host;continue;}testedElement=testedElement.parentElement;}return arrayWithParentNodes;}function getElementAndOwnerRelation(){var tooltipDistanceToBody=getDomElementPosition(that),tooltipLevelsNumber=tooltipDistanceToBody.length;var itemWithNonStaticPosition=null,rect=that._ownerElement.getBoundingClientRect();for(var _i588=0;_i588<tooltipLevelsNumber;_i588++){var style=window.getComputedStyle(tooltipDistanceToBody[_i588]);if(style.getPropertyValue('position')!=='static'){itemWithNonStaticPosition=tooltipDistanceToBody[_i588];break;}}return{top:rect.top,left:rect.left,nonStaticParent:itemWithNonStaticPosition};}if(!that.parentElement){return;}that._isParentPositionStatic=window.getComputedStyle(that.parentElement).position==='static';var ownerRectData=that._ownerElement.getBoundingClientRect(),parentRectData=that.parentElement?that.parentElement.getBoundingClientRect():{top:0,left:0};var topPosition=void 0,leftPosition=void 0;if(that.parentElement&&that.parentElement.nodeName.toUpperCase()==='BODY'){topPosition=ownerRectData.top+window.scrollY+parseInt(that.offset[1]);leftPosition=ownerRectData.left+window.scrollX+parseInt(that.offset[0]);}else{topPosition=ownerRectData.top-parentRectData.top+parseInt(that.offset[1]);leftPosition=ownerRectData.left-parentRectData.left+parseInt(that.offset[0]);}var positionObject=getElementAndOwnerRelation(),position=that.position;var translate=void 0;switch(position){case'auto':case'bottom':case'top':case'left':case'right':{var pos=that['_position'+position.charAt(0).toUpperCase()+position.slice(1)](leftPosition,topPosition,positionObject);topPosition=pos.top;leftPosition=pos.left;translate=pos.translate;break;}case'absolute':topPosition=parseInt(that.offset[1])||0;leftPosition=parseInt(that.offset[0])||0;break;}//Arrow Translation is applied when position='auto'
if(translate){that.$.container.style.setProperty('--jqx-tooltip-arrow-translate',translate+'px');}else{that.$.container.style.removeProperty('--jqx-tooltip-arrow-translate');}that.style.top=topPosition+'px';that.style.left=leftPosition+'px';}/**
     * Handles the auto positioning of the element
     * @param {any} leftPosition - left position
     * @param {any} topPosition - right position
     * @param {any} positionObject - positionObject with details of it's first relative parent
     */},{key:'_positionAuto',value:function _positionAuto(leftPosition,topPosition,positionObject){var that=this;var parentElement=that._ownerElement.parentElement,overflowParent=void 0;while(parentElement){if(getComputedStyle(parentElement).getPropertyValue('overflow')==='hidden'){overflowParent=parentElement;break;}parentElement=parentElement.parentElement;}if(!overflowParent){overflowParent=document.body;}var overFlowParentRect=overflowParent.getBoundingClientRect(),arrowWidth=parseFloat(window.getComputedStyle(that).getPropertyValue('--jqx-tooltip-arrow-width'))||0;var possiblePosition=that._positionTop(leftPosition,topPosition,positionObject),nonStaticParent=positionObject.nonStaticParent,minTranslate=that.offsetWidth/2-arrowWidth,nonStaticParentTop=0,nonStaticParentLeft=0;if(nonStaticParent){var nonStaticParentRect=nonStaticParent.getBoundingClientRect();nonStaticParentTop=nonStaticParentRect.top;nonStaticParentLeft=nonStaticParentRect.left;}if(possiblePosition.top+nonStaticParentTop>=overFlowParentRect.top){topPosition=possiblePosition.top;leftPosition=Math.max(overFlowParentRect.left-nonStaticParentLeft,possiblePosition.left+Math.min(0,overFlowParentRect.right-(possiblePosition.left+nonStaticParentLeft+that.offsetWidth)));return{left:leftPosition,top:topPosition,translate:Math.max(-minTranslate,Math.min(minTranslate,possiblePosition.left-leftPosition))};}possiblePosition=that._positionBottom(leftPosition,topPosition,positionObject);if(possiblePosition.top+that.offsetHeight+nonStaticParentTop<=overFlowParentRect.bottom){topPosition=possiblePosition.top;leftPosition=Math.max(overFlowParentRect.left-nonStaticParentLeft,possiblePosition.left+Math.min(0,overFlowParentRect.right-(possiblePosition.left+nonStaticParentLeft+that.offsetWidth)));return{left:leftPosition,top:topPosition,translate:Math.max(-minTranslate,Math.min(minTranslate,possiblePosition.left-leftPosition))};}possiblePosition=that._positionLeft(leftPosition,topPosition,positionObject);topPosition=possiblePosition.top;minTranslate=that.offsetHeight/2-arrowWidth;topPosition=Math.max(overFlowParentRect.top-nonStaticParentTop,possiblePosition.top+Math.min(0,overFlowParentRect.bottom-(possiblePosition.top+nonStaticParentTop+that.offsetHeight)));if(possiblePosition.left+nonStaticParentLeft>=overFlowParentRect.left){leftPosition=possiblePosition.left;}else{possiblePosition=that._positionRight(leftPosition,topPosition,positionObject);leftPosition=possiblePosition.left;}return{left:leftPosition,top:topPosition,translate:Math.max(-minTranslate,Math.min(minTranslate,possiblePosition.top-topPosition))};}/**
     * Position the Tooltip Above the ownerElement
     * @param {any} leftPosition - left position
     * @param {any} topPosition - right position
     * @param {any} positionObject - positionObject with details of it's first relative parent
     */},{key:'_positionTop',value:function _positionTop(leftPosition,topPosition,positionObject){var that=this;that.set('arrowDirection','bottom');if(positionObject.nonStaticParent===null){topPosition=positionObject.top+window.scrollY-that.offsetHeight;leftPosition=positionObject.left+window.scrollX-that.offsetWidth/2+that._ownerElement.offsetWidth/2;return{left:leftPosition,top:topPosition};}if(that._isParentPositionStatic){topPosition=that._ownerElement.offsetTop-that.offsetHeight;leftPosition=that._ownerElement.offsetLeft-that.offsetWidth/2+that._ownerElement.offsetWidth/2;if(that._ownerElement instanceof SVGElement){// to be applied in all modes
var rect=that._ownerElement.getBoundingClientRect(),rectParent=that._ownerElement.parentNode.getBoundingClientRect();topPosition=rect.top-rectParent.top-that.offsetHeight/2;leftPosition=rect.left-that.offsetWidth/2+rectParent.left/2;}return{left:leftPosition,top:topPosition};}if(that._ownerElement instanceof SVGElement&&that._ownerElement.parentElement){// to be applied in all modes; position to be recalculated
var _rect2=that._ownerElement.getBoundingClientRect(),_rectParent=that._ownerElement.parentNode.getBoundingClientRect();topPosition=_rect2.top-_rectParent.top-that.offsetHeight;leftPosition=_rect2.left-_rectParent.left-that.offsetWidth/2+_rect2.width/2;return{left:leftPosition,top:topPosition};}topPosition=topPosition-that.offsetHeight;leftPosition=leftPosition-that.offsetWidth/2+that._ownerElement.offsetWidth/2;return{left:leftPosition,top:topPosition};}/**
     * Position the Tooltip Below the ownerElement
     * @param {any} leftPosition - left position
     * @param {any} topPosition - right position
     * @param {any} positionObject - positionObject with details of it's first relative parent
     */},{key:'_positionBottom',value:function _positionBottom(leftPosition,topPosition,positionObject){var that=this;that.set('arrowDirection','top');if(positionObject.nonStaticParent===null){topPosition=positionObject.top+window.scrollY+that._ownerElement.offsetHeight;leftPosition=positionObject.left+window.scrollX-that.offsetWidth/2+that._ownerElement.offsetWidth/2;return{left:leftPosition,top:topPosition};}if(that._isParentPositionStatic){topPosition=that._ownerElement.offsetTop+that._ownerElement.offsetHeight;leftPosition=that._ownerElement.offsetLeft-that.offsetWidth/2+that._ownerElement.offsetWidth/2;return{left:leftPosition,top:topPosition};}topPosition=topPosition+that._ownerElement.offsetHeight;leftPosition=leftPosition-that.offsetWidth/2+that._ownerElement.offsetWidth/2;return{left:leftPosition,top:topPosition};}/**
     * Position the Tooltip to the Left of the ownerElement
     * @param {any} leftPosition - left position
     * @param {any} topPosition - right position
     * @param {any} positionObject - positionObject with details of it's first relative parent
     */},{key:'_positionLeft',value:function _positionLeft(leftPosition,topPosition,positionObject){var that=this;that.set('arrowDirection','right');if(positionObject.nonStaticParent===null){topPosition=positionObject.top+window.scrollY+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=positionObject.left+window.scrollX-that.offsetWidth;return{left:leftPosition,top:topPosition};}if(that._isParentPositionStatic){topPosition=that._ownerElement.offsetTop+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=that._ownerElement.offsetLeft-that.offsetWidth;return{left:leftPosition,top:topPosition};}topPosition=topPosition+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=leftPosition-that.offsetWidth;return{left:leftPosition,top:topPosition};}/**
     * Position the Tooltip to the Right of the ownerElement
     * @param {any} leftPosition - left position
     * @param {any} topPosition - right position
     * @param {any} positionObject - positionObject with details of it's first relative parent
     */},{key:'_positionRight',value:function _positionRight(leftPosition,topPosition,positionObject){var that=this;that.set('arrowDirection','left');if(positionObject.nonStaticParent===null){topPosition=positionObject.top+window.scrollY+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=positionObject.left+window.scrollX+that._ownerElement.offsetWidth;return{left:leftPosition,top:topPosition};}if(that._isParentPositionStatic){topPosition=that._ownerElement.offsetTop+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=that._ownerElement.offsetLeft+that._ownerElement.offsetWidth;return{left:leftPosition,top:topPosition};}topPosition=topPosition+that._ownerElement.offsetHeight/2-that.$.content.offsetHeight/2;leftPosition=leftPosition+that._ownerElement.offsetWidth;return{left:leftPosition,top:topPosition};}/**
     * Events Handller.
    * @param {any} event
     */},{key:'_eventsHandler',value:function _eventsHandler(event){var that=this;if(that.disabled||that.readonly){return;}if(event.type==='click'){that.visible?this.close():this.open();return;}event.type==='mouseenter'||event.type==='focus'?this.open():this.close();}/**
    * Adds event listeners to owner
    */},{key:'_handleEventListeners',value:function _handleEventListeners(oldValue){var that=this;if(that._oldOwnerElement&&that.openMode!=='manual'){that._oldOwnerElement.$.unlisten('mouseenter.tooltip');that._oldOwnerElement.$.unlisten('mouseleave.tooltip');that._oldOwnerElement.$.unlisten('focus.tooltip');that._oldOwnerElement.$.unlisten('blur.tooltip');that._oldOwnerElement.$.unlisten('click.tooltip');that._oldOwnerElement=null;}if(!that._ownerElement){return;}if(oldValue){//unlisten from previous event.
switch(oldValue){case'hover':that._ownerElement.$.unlisten('mouseenter.tooltip');that._ownerElement.$.unlisten('mouseleave.tooltip');break;case'focus':that._ownerElement.$.unlisten('focus.tooltip');that._ownerElement.$.unlisten('blur.tooltip');break;case'click':that._ownerElement.$.unlisten('click.tooltip');break;}}if(that.openMode==='manual'){return;}if(!(that._ownerElement instanceof JQX.BaseElement)){that._ownerElement.$=JQX.Utilities.Extend(that._ownerElement);}//listen to appropriate event
switch(that.openMode){case'hover':that._ownerElement.$.listen('mouseenter.tooltip',that._eventsHandler.bind(that));that._ownerElement.$.listen('mouseleave.tooltip',that._eventsHandler.bind(that));break;case'focus':that._ownerElement.$.listen('focus.tooltip',that._eventsHandler.bind(that));that._ownerElement.$.listen('blur.tooltip',that._eventsHandler.bind(that));break;case'click':that._ownerElement.$.listen('click.tooltip',that._eventsHandler.bind(that));break;default:break;}}/**
     * Updates the position of the tooltip on window resize.
     */},{key:'_handleResize',value:function _handleResize(){var that=this;function applyPosition(){that._applyPosition();}if(that.openMode==='click'){window.addEventListener('resize',applyPosition);}else{window.removeEventListener('resize',applyPosition);}}/**
     * Selector property handler.
     */},{key:'_handleSelector',value:function _handleSelector(newValue){var that=this;if(typeof newValue==='string'){that._ownerElement=newValue.length>0?document.getElementById(newValue):undefined;return;}if(newValue instanceof HTMLElement||newValue instanceof SVGElement){that._ownerElement=newValue;return;}if(newValue===null){that._ownerElement=undefined;return;}that.error(that.localize('invalidSelector',{elementType:that.nodeName.toLowerCase(),property:'selector'}));}/**
    * Apply the template to the tooltip.
    */},{key:'_handleTemplate',value:function _handleTemplate(oldValue){var that=this;var template=that.tooltipTemplate;if(oldValue){that.$.content.innerHTML=that.value?that.value:'';}if(template===null||!template){return;}if(typeof that.tooltipTemplate==='function'){that.tooltipTemplate(that.$.content,{value:that.value});return;}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}template=document.getElementById(template);if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:'template'}));return;}var content=template.content,childrenCount=content.childNodes.length,regex=/{{\w+}}/g;var bindingString=void 0,bindingDetails=[];for(var _i589=0;_i589<childrenCount;_i589++){bindingString=regex.exec(content.childNodes[_i589].innerHTML);while(bindingString){bindingDetails.push({childNodeIndex:_i589,bindingString:bindingString[0]});bindingString=regex.exec(content.childNodes[_i589].innerHTML);}}var bindingsCount=bindingDetails.length;var clone=document.importNode(template.content,true),bindingHolderElement=void 0,bindingStringsCount=void 0;for(var b=0;b<bindingsCount;b++){bindingHolderElement=clone.childNodes[bindingDetails[b].childNodeIndex];bindingStringsCount=bindingDetails.length;for(var _i590=0;_i590<bindingStringsCount;_i590++){bindingHolderElement.innerHTML=bindingHolderElement.innerHTML.replace(bindingDetails[b].bindingString,that.value);}}that.$.content.innerHTML='';for(var _i591=0;_i591<clone.childNodes.length;_i591++){if(clone.childNodes[_i591].outerHTML){that.$.content.innerHTML+=clone.childNodes[_i591].outerHTML;}}}}],[{key:'properties',// Tooltip's properties.
get:function get(){return{'arrow':{value:false,type:'boolean'},'arrowDirection':{allowedValues:['bottom','top','left','right'],value:'bottom',type:'string'},'delay':{value:0,type:'number'},'messages':{extend:true,value:{'en':{'invalidSelector':'{{elementType}}: "{{property}}" must be a String, an HTMLElement or null.','htmlTemplateNotSuported':'{{elementType}}: Browser doesn\'t support HTMLTemplate elements.','invalidTemplate':'{{elementType}}: "{{property}}" property accepts a string that must match the id of an HTMLTemplate element from the DOM.','invalidNode':'{{elementType}}: Invalid parameter "{{node}}" when calling {{method}}.'}},type:'object'},'offset':{value:[0,0],type:'array'},'openMode':{allowedValues:['click','focus','hover','manual'],value:'hover',type:'string'},'position':{allowedValues:['bottom','top','left','right','absolute','auto'],value:'top',type:'string'},'selector':{value:null,type:'any?'},'tooltipTemplate':{value:null,type:'any'},'value':{value:'',type:'string',reflectToAttribute:false},'visible':{value:false,type:'boolean'}};}/**
   * CSS files needed for the element (ShadowDOM)
   */},{key:'styleUrls',get:function get(){return['jqx.tooltip.css'];}}]);return Tooltip;}(JQX.ContentElement));/**
 * Tree Item custom element.
 */JQX('jqx-tree-item',function(_JQX$MenuItem){babelHelpers.inherits(TreeItem,_JQX$MenuItem);function TreeItem(){babelHelpers.classCallCheck(this,TreeItem);return babelHelpers.possibleConstructorReturn(this,(TreeItem.__proto__||Object.getPrototypeOf(TreeItem)).apply(this,arguments));}babelHelpers.createClass(TreeItem,[{key:'ready',value:function ready(){Object.defineProperty(this,'hasStyleObserver',{get:function get(){return false;}});babelHelpers.get(TreeItem.prototype.__proto__||Object.getPrototypeOf(TreeItem.prototype),'ready',this).call(this);}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this,parentTree=that.menu;if(propertyName==='level'){that.level=oldValue;return;}if(propertyName==='disabled'||propertyName==='separator'||!parentTree){return;}var oldContext=parentTree.context;parentTree.context=parentTree;switch(propertyName){case'label':{var restoreSorting=parentTree.sorted&&parentTree.autoSort;that.firstElementChild.firstElementChild.firstElementChild.innerHTML=newValue;if(restoreSorting){parentTree._unsortItems(parentTree.$.mainContainer);parentTree._applyGrouping(parentTree.$.mainContainer);}if(parentTree._state.filter){parentTree._applyFilter(parentTree._state.filter);}break;}case'selected':that.selected=oldValue;if(newValue){parentTree.select(that);}else{parentTree.unselect(that);}break;case'shortcut':{var shortcutElement=that.firstElementChild.children[1];if(!shortcutElement){shortcutElement=document.createElement('div');shortcutElement.className='jqx-tree-item-shortcut';that.firstElementChild.appendChild(shortcutElement);}shortcutElement.innerHTML=newValue;break;}case'value':if(parentTree.sort&&parentTree.sorted&&parentTree.autoSort){parentTree._refreshSorting();}break;}parentTree.context=oldContext;}}],[{key:'properties',// Tree Item's properties.
get:function get(){return{'selected':{value:false,type:'boolean'}};}}]);return TreeItem;}(JQX.MenuItem));/**
 * Tree Items Group custom element.
 */JQX('jqx-tree-items-group',function(_JQX$MenuItemsGroup){babelHelpers.inherits(TreeItemsGroup,_JQX$MenuItemsGroup);function TreeItemsGroup(){babelHelpers.classCallCheck(this,TreeItemsGroup);return babelHelpers.possibleConstructorReturn(this,(TreeItemsGroup.__proto__||Object.getPrototypeOf(TreeItemsGroup)).apply(this,arguments));}babelHelpers.createClass(TreeItemsGroup,[{key:'ready',value:function ready(){Object.defineProperty(this,'hasStyleObserver',{get:function get(){return false;}});babelHelpers.get(TreeItemsGroup.prototype.__proto__||Object.getPrototypeOf(TreeItemsGroup.prototype),'ready',this).call(this);}},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this,parentTree=that.menu;if(propertyName==='level'){that.level=oldValue;return;}if(propertyName==='disabled'||propertyName==='separator'||!parentTree){return;}var oldContext=parentTree.context;parentTree.context=parentTree;switch(propertyName){case'expanded':{that.expanded=oldValue;if(newValue){parentTree.expandItem(that);}else{parentTree.collapseItem(that);}break;}case'label':{var restoreSorting=parentTree.sorted&&parentTree.autoSort;that.firstElementChild.firstElementChild.firstElementChild.innerHTML=newValue;if(restoreSorting){parentTree._unsortItems(parentTree.$.mainContainer);parentTree._applyGrouping(parentTree.$.mainContainer);}if(parentTree._state.filter){parentTree._applyFilter(parentTree._state.filter);}break;}case'selected':that.selected=oldValue;if(newValue){parentTree.select(that);}else{parentTree.unselect(that);}break;case'value':if(parentTree.sort&&parentTree.sorted&&parentTree.autoSort){parentTree._refreshSorting();}break;}parentTree.context=oldContext;}}],[{key:'properties',// Tree Items Group's properties.
get:function get(){return{'selected':{value:false,type:'boolean'}};}}]);return TreeItemsGroup;}(JQX.MenuItemsGroup));/**
 * Tree custom element.
 */JQX('jqx-tree',function(_JQX$Menu2){babelHelpers.inherits(Tree,_JQX$Menu2);function Tree(){babelHelpers.classCallCheck(this,Tree);return babelHelpers.possibleConstructorReturn(this,(Tree.__proto__||Object.getPrototypeOf(Tree)).apply(this,arguments));}babelHelpers.createClass(Tree,[{key:'template',/**
     * Tree's HTML template.
     */value:function template(){return'<div id="container">\n                    <div class="jqx-tree-filter-input-container">\n                        <input id="filterInput" class="jqx-filter-input" disabled="[[disabled]]" placeholder="[[filterInputPlaceholder]]" type="text" />\n                    </div>\n                    <jqx-repeat-button id="scrollButtonNear" class="jqx-tree-scroll-button jqx-spin-button jqx-scroll-button-near jqx-hidden" animation="[[animation]]" unfocusable>\n                        <div id="arrowNear" class="jqx-arrow jqx-arrow-up"></div>\n                    </jqx-repeat-button>\n                    <jqx-scroll-viewer id="scrollViewer" animation="[[animation]]" horizontal-scroll-bar-visibility="hidden" right-to-left="[[right-to-left]]">\n                        <div id="mainContainer" class="jqx-tree-main-container">\n                            <content></content>\n                        </div>\n                        <input type="text" id="editInput" class="jqx-tree-edit-input jqx-hidden" />\n                    </jqx-scroll-viewer>\n                    <jqx-repeat-button id="scrollButtonFar" class="jqx-tree-scroll-button jqx-spin-button jqx-scroll-button-far jqx-hidden" animation="[[animation]]" unfocusable>\n                        <div id="arrowFar" class="jqx-arrow jqx-arrow-down"></div>\n                    </jqx-repeat-button>\n                    <div id="loadingIndicatorContainer" class="jqx-loader-container jqx-hidden">\n                        <span id="loadingIndicator" class="jqx-loader"></span>\n                        <span id="loadingIndicatorPlaceHolder" class="jqx-loader-label jqx-hidden">[[loadingIndicatorPlaceholder]]</span>\n                    </div>\n                </div>';}/**
     * Adds an item after another item as a sibling.
     *
     * @param {HTMLElement} item A jqx-tree-item/jqx-tree-items-group to add to the Tree.
     * @param {HTMLElement/String} sibling The jqx-tree-item/jqx-tree-items-group (or its id or numeric path) to add the item after.
     */},{key:'addAfter',value:function addAfter(item,sibling){var that=this;sibling=that.getItem(sibling);if(sibling===undefined){return;}that.addTo(item,sibling.parentItem,sibling,true);}/**
     * Adds an item before another item as a sibling.
     *
     * @param {HTMLElement} item A jqx-tree-item/jqx-tree-items-group to add to the Tree.
     * @param {HTMLElement/String} sibling The jqx-tree-item/jqx-tree-items-group (or its id or numeric path) to add the item before.
     */},{key:'addBefore',value:function addBefore(item,sibling){var that=this;sibling=that.getItem(sibling);if(sibling===undefined){return;}that.addTo(item,sibling.parentItem,sibling);}/**
     * Adds an item as the last child of a parent item.
     *
     * @param {HTMLElement} item A jqx-tree-item/jqx-tree-items-group to add to the Tree.
     * @param {HTMLElement/String} parent Optional The jqx-tree-items-group (or its id or numeric path) to add the item to.
     */},{key:'addTo',value:function addTo(item,parent){var that=this;if(!(item instanceof JQX.TreeItem||item instanceof JQX.TreeItemsGroup)){return;}var level=void 0,container=void 0;if(parent===undefined){parent=that.$.mainContainer;level=1;container=parent;}else{parent=that.getItem(parent);if(parent instanceof JQX.TreeItemsGroup===false){return;}level=parent.level+1;container=parent.itemContainer;}that._createItemHTMLStructure(item,level,parent,container.childElementCount,0);var restoreSorting=that.sorted&&that.autoSort,filterQuery=that._state.filter,oldSelectedIndexes=that.selectedIndexes.slice(0);if(restoreSorting){that._unsortItems(that.$.mainContainer);}if(item instanceof JQX.TreeItemsGroup){that._processHTML(item,level+1,false);}var sibling=arguments[2];if(sibling&&arguments[3]){sibling=sibling.nextElementSibling;}if(sibling){container.insertBefore(item,sibling);that._menuItems={};that._refreshItemPaths(that.$.mainContainer,true,undefined,that.sorted&&!that.autoSort);}else{container.appendChild(item);}if(restoreSorting){that._applyGrouping(that.$.mainContainer);}if(filterQuery){that._applyFilter(filterQuery);}that._checkOverflow();that._expandItemsByDefault();that.selectedIndexes=[];that._applySelection(true,oldSelectedIndexes);}/**
     * Clears selection.
     */},{key:'clearSelection',value:function clearSelection(){var that=this,oldSelectedIndexes=that.selectedIndexes.slice(0);that.selectedIndexes=[];that._applySelection(false,oldSelectedIndexes);}/**
     * Collapses all items.
     *
     * @param {Boolean} animation Optional If set to false, disables collapse animation even if animation is enabled for the element.
     */},{key:'collapseAll',value:function collapseAll(animation){var that=this,animationType=that.animation,restoreAnimation=animation===false&&that.hasAnimation;if(restoreAnimation){that.animation='none';}that._collapseAll(true);if(restoreAnimation){that.animation=animationType;}}/**
     * Makes sure an item is visible by scrolling to it.
     *
     * @param {HTMLElement/String} item jqx-tree-item/jqx-tree-items-group (or its id or numeric path).
     */},{key:'ensureVisible',value:function ensureVisible(item){var that=this;item=that.getItem(item);if(item===undefined||item.hidden){return;}var animation=false;if(item.level>1&&!that._isBranchExpanded(item)){babelHelpers.get(Tree.prototype.__proto__||Object.getPrototypeOf(Tree.prototype),'expandItem',this).call(this,item.parentItem,undefined,false);animation=that.hasAnimation;if(animation){that._ensureVisibleOnTransitionend=item;}}if(!animation){that._ensureVisible(item);}}/**
     * Expands all items.
     *
     * @param {Boolean} animation Optional If set to false, disables expand animation even if animation is enabled for the element.
     */},{key:'expandAll',value:function expandAll(animation){var that=this,animationType=that.animation,restoreAnimation=animation===false&&that.hasAnimation;var level=1,treeItemsGroups=(that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('jqx-tree-items-group[level="1"]');if(restoreAnimation){that.animation='none';}while(treeItemsGroups.length>0){for(var _i592=0;_i592<treeItemsGroups.length;_i592++){var currentTreeItemsGroup=treeItemsGroups[_i592];if(currentTreeItemsGroup.expanded){continue;}that._menuItemsGroupSelectionHandler(currentTreeItemsGroup,{target:currentTreeItemsGroup,type:'expand'});}level++;treeItemsGroups=(that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('jqx-tree-items-group[level="'+level+'"]');}if(restoreAnimation){that.animation=animationType;}}/**
     * Expands an item.
     *
     * @param {HTMLElement/String} item jqx-tree-item/jqx-tree-items-group (or its id or numeric path).
     * @param {Boolean} animation Optional If set to false, disables expand animation even if animation is enabled for the element.
     */},{key:'expandItem',value:function expandItem(item,animation){var that=this;item=that.getItem(item);if(item===undefined||item instanceof JQX.TreeItemsGroup===false||that._isContainerOpened(item.container.level,item.container)){return;}var restoreAnimation=animation===false&&that.hasAnimation,animationType=that.animation;if(restoreAnimation){that.animation='none';}that._discardKeyboardHover();that._menuItemsGroupSelectionHandler(item,{target:item,type:'expand'},arguments[2]);if(restoreAnimation){that.animation=animationType;}}/**
     * Filters the Tree.
     *
     * @param {String} filterQuery Filter query.
     */},{key:'filter',value:function filter(filterQuery){var that=this;if(that.filterable){that._applyFilter(filterQuery);that.$.filterInput.value=filterQuery;}}/**
     * Gets the Tree's state.
     */},{key:'getState',value:function getState(){return JSON.parse(JSON.stringify(this._state));}/**
     * Inserts an item at the given position.
     * 
     * @param {HTMLElement/Object} item A jqx-tree-item/jqx-tree-items-group (or an Object to create an item from) to add to the Tree.
     * @param {String} path Optional The path to insert the item at.
     */},{key:'insert',value:function insert(item,path){var that=this;var element=void 0;function createTreeItem(item){var subItems=item[that.itemsMember]||[],tagName=item.tagName==='jqx-tree-items-group'||subItems.length>0?'jqx-tree-items-group':'jqx-tree-item',element=document.createElement(tagName);if(item.disabled){element.disabled=true;}if(item[that.displayMember]){element.label=item[that.displayMember];}if(item.separator){element.separator=true;}if(item[that.valueMember]){element.value=item[that.valueMember];}if(tagName==='jqx-tree-items-group'){if(item.expanded){element.expanded=true;}for(var _i593=0;_i593<subItems.length;_i593++){element.appendChild(createTreeItem(subItems[_i593]));}}else if(item.shortcut){element.shortcut=item.shortcut;}return element;}if(item instanceof JQX.TreeItem||item instanceof JQX.TreeItemsGroup){if(that.contains(item)){return;}element=item;}else if((typeof item==='undefined'?'undefined':babelHelpers.typeof(item))==='object'&&item.constructor===Object){element=createTreeItem(item);}else{return;}if(path===undefined){that.addTo(element);return;}if(typeof path==='number'){path=path.toString();}else if(path instanceof JQX.TreeItem||path instanceof JQX.TreeItemsGroup){if(!that.contains(path)){return;}path=path.path;}else if(typeof path!=='string'){return;}var pathParts=path.split('.');var parent=void 0,sibling=void 0;if(pathParts.length===1){sibling=that._menuItems[pathParts[0]];if(!sibling){that.addTo(element);}else{that.addBefore(element,sibling);}}else{sibling=that._menuItems[path];parent=that._menuItems[pathParts.slice(0,pathParts.length-1).join('.')];if(sibling){that.addBefore(element,sibling);}else if(parent&&parent instanceof JQX.TreeItemsGroup){that.addTo(element,parent);}}}/**
     * Loads the Tree's state.
     *
     * @param {Object} state Optional An object returned by one of the methods getState or saveState.
     */},{key:'loadState',value:function loadState(state){var that=this,oldSelectedIndexes=that.selectedIndexes.slice(0),selectedIndexes=[];if(!state){if(!that.id){that.warn(that.localize('noId'));return;}state=window.localStorage.getItem('jqxTree'+that.id);}if(typeof state==='string'){state=JSON.parse(state);}if(state.filter&&!that.filterable){state.filter='';}var filteringChanged=state.filter!==that._state.filter,sortingChanged=state.sorted!==that.sorted;if(sortingChanged){that.sorted=state.sorted;that._updateState('sorted',that.sorted);if(state.sorted){that._applyGrouping(that.$.mainContainer);}else{that._unsortItems(that.$.mainContainer);}if(state.filter||filteringChanged){that._applyFilter(state.filter);that.$.filterInput.value=state.filter;}}else if(filteringChanged){that._applyFilter(state.filter);that.$.filterInput.value=state.filter;}that._menuItemsGroupsToExpand=[];for(var _i594=0;_i594<state.expanded.length;_i594++){var originallyExpandedItem=that.getItem(state.expanded[_i594]);if(originallyExpandedItem){that._menuItemsGroupsToExpand.push(originallyExpandedItem);}}that._expandItemsByDefault(true);for(var _i595=0;_i595<state.selected.length;_i595++){var originallySelectedItem=that.getItem(state.selected[_i595]);if(originallySelectedItem){selectedIndexes.push(originallySelectedItem.path);}}that.selectedIndexes=selectedIndexes;that._applySelection(false,oldSelectedIndexes);}/**
     * Moves an item down relative to its siblings.
     *
     * @param {HTMLElement/String} item The jqx-tree-item/jqx-tree-items-group (or its id or numeric path) to remove.
     */},{key:'moveDown',value:function moveDown(item){var that=this;item=that.getItem(item);var nextSibling=item.nextElementSibling;if(item===undefined||!nextSibling||that.sorted){return;}that._moveTreeItem(item,nextSibling,2,[that]);if(that.filterable&&that._state.filter){that._applyFilter(that._state.filter);}}/**
     * Moves an item up relative to its siblings.
     *
     * @param {HTMLElement/String} item The jqx-tree-item/jqx-tree-items-group (or its id or numeric path) to remove.
     */},{key:'moveUp',value:function moveUp(item){var that=this;item=that.getItem(item);var previousSibling=item.previousElementSibling;if(item===undefined||!previousSibling||that.sorted){return;}that._moveTreeItem(item,previousSibling,0,[that]);if(that.filterable&&that._state.filter){that._applyFilter(that._state.filter);}}/**
     * Refreshes the layout of the Tree
     */},{key:'refresh',value:function refresh(){this._checkOverflow();}/**
     * Removes an item.
     *
     * @param {HTMLElement/String} item The jqx-tree-item/jqx-tree-items-group (or its id or numeric path) to remove.
     */},{key:'removeItem',value:function removeItem(item){var that=this;item=that.getItem(item);if(item===undefined){return;}if(item instanceof JQX.TreeItemsGroup){var container=item.container;if(that._isContainerOpened(container.level,container)){that._closeSubContainersTreeMode(container.level,container);}}var restoreSorting=that.sorted&&that.autoSort;if(restoreSorting){that._unsortItems(that.$.mainContainer);}item.parentElement.removeChild(item);that._menuItems={};that._refreshItemPaths(that.$.mainContainer,true,undefined,that.sorted&&!that.autoSort);if(restoreSorting){that._applyGrouping(that.$.mainContainer);}var filterQuery=that._state.filter,oldSelectedIndexes=that.selectedIndexes.slice(0);if(filterQuery){that._applyFilter(filterQuery);}that._checkOverflow();that.selectedIndexes=[];that._applySelection(true,oldSelectedIndexes);}/**
     * Saves the Tree's state.
     */},{key:'saveState',value:function saveState(){var that=this;if(!that.id){that.warn(that.localize('noId'));}else{window.localStorage.setItem('jqxTree'+that.id,JSON.stringify(that._state));}return JSON.parse(JSON.stringify(that._state));}/**
     * Selects an item.
     *
     * @param {HTMLElement/String} item jqx-tree-item/jqx-tree-items-group (or its id or numeric path).
     */},{key:'select',value:function select(item){var that=this;item=that.getItem(item);if(item===undefined||item.selected||item.templateApplied){return;}that._handleSelection(item,{type:'programmatic'});}/**
     * Unselects an item.
     *
     * @param {HTMLElement/String} item jqx-tree-item/jqx-tree-items-group (or its id or numeric path).
     */},{key:'unselect',value:function unselect(item){var that=this;item=that.getItem(item);if(item===undefined||!item.selected||item.templateApplied){return;}that._handleSelection(item,{type:'programmatic'});}/**
     * Updates an item.
     *
     * @param {HTMLElement/String} item jqx-tree-item/jqx-tree-items-group (or its id or numeric path).
     * @param {Object} newItem An object with updated properties.
     */},{key:'updateItem',value:function updateItem(item,newItem){var that=this;item=that.getItem(item);if(item===undefined||newItem===undefined){return;}var treeItem=item instanceof JQX.TreeItem;for(var prop in newItem){if(newItem.hasOwnProperty(prop)){if(treeItem){if(['disabled','label','level','selected','separator','shortcut','value'].indexOf(prop)===-1){continue;}}else if(['disabled','expanded','label','level','selected','separator','value'].indexOf(prop)===-1){continue;}item[prop]=newItem[prop];}}}/**
     * Called when a property is changed.
     */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'allowDrag':case'allowDrop':case'autoLoadState':case'autoSort':case'editable':case'filterInputPlaceholder':case'loadingIndicatorPlaceholder':case'selectionDisplayMode':case'showLines':case'showRootLines':case'toggleElementPosition':case'toggleMode':break;case'autoHideToggleElement':if(newValue){that.$mainContainer.addClass('hidden-arrows');}else{that.$mainContainer.removeClass('hidden-arrows');}break;case'autoSaveState':if(!newValue){return;}if(!that.id){that.warn(that.localize('noId'));that.autoSaveState=false;return;}window.localStorage.setItem('jqxTree'+that.id,JSON.stringify(that._state));break;case'dataSource':{var oldSelectedIndexes=that.selectedIndexes.slice(0);that.selectedIndexes=[];that._menuItems={};that._processDataSource();that._checkOverflow();that._expandItemsByDefault();that._applySelection(true,oldSelectedIndexes);var filterQuery=that._state.filter;if(filterQuery){that._applyFilter(filterQuery);}break;}case'disabled':that._setFocusable();that.$.scrollButtonNear.disabled=newValue;that.$.scrollButtonFar.disabled=newValue;if(!newValue){that._updateScrollButtonVisibility();}break;case'displayLoadingIndicator':if(newValue){that._discardKeyboardHover(true);that.$loadingIndicatorContainer.removeClass('jqx-hidden');}else{that.$loadingIndicatorContainer.addClass('jqx-hidden');}break;case'filterable':if(newValue===false){that._applyFilter('');that.$.filterInput.value='';}that._checkOverflow();break;case'filterMode':if(that.filterable&&that._state.filter){that._applyFilter(that._state.filter);}break;case'hasThreeStates':if(that.selectionMode!=='checkBox'){return;}if(newValue){that._applySelection(false);}else{var indeterminateItems=(that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('[indeterminate]');for(var _i596=0;_i596<indeterminateItems.length;_i596++){indeterminateItems[_i596].removeAttribute('indeterminate');}}break;case'loadingIndicatorPosition':if(newValue==='center'){that.$loadingIndicatorPlaceHolder.addClass('jqx-hidden');}else{that.$loadingIndicatorPlaceHolder.removeClass('jqx-hidden');}break;case'overflow':if(that.scrollMode==='scrollbar'){if(newValue==='scroll'){that.$.scrollViewer.verticalScrollBarVisibility='visible';}else{that.$.scrollViewer.verticalScrollBarVisibility='auto';}return;}that.$.scrollViewer.scrollTop=0;if(newValue==='hidden'){that.$scrollViewer.removeClass('scroll-buttons-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}else{that.$.scrollButtonNear.disabled=that.disabled;that.$.scrollButtonFar.disabled=that.disabled;if(newValue==='auto'){that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');that._checkOverflow();}else{that.$scrollViewer.addClass('scroll-buttons-shown');that.$scrollViewer.removeClass('one-button-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that._updateScrollButtonVisibility();}}that.$.scrollViewer.refresh();break;case'rightToLeft':{var oldPadding=void 0,newPadding=void 0;if(newValue){oldPadding='paddingLeft';newPadding='paddingRight';}else{oldPadding='paddingRight';newPadding='paddingLeft';}for(var path in that._menuItems){if(that._menuItems.hasOwnProperty(path)){var _item76=that._menuItems[path],labelContainer=_item76.firstElementChild;labelContainer.style[oldPadding]='';that._setIndentation(labelContainer,_item76.level,newPadding);}}break;}case'scrollMode':if(that.overflow==='hidden'){return;}that.$.scrollViewer.scrollTop=0;if(newValue==='scrollButtons'){if(that.overflow==='scroll'){that.$scrollViewer.addClass('scroll-buttons-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');}that.$.scrollViewer.verticalScrollBarVisibility='auto';that._checkOverflow();return;}that.$scrollViewer.removeClass('scroll-buttons-shown');that.$scrollViewer.removeClass('one-button-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');if(that.overflow==='auto'){that.$.scrollViewer.verticalScrollBarVisibility='auto';}else{that.$.scrollViewer.verticalScrollBarVisibility='visible';}break;case'selectedIndexes':that._applySelection(false,oldValue);break;case'selectionMode':if(that._menuItems['0']===undefined){return;}if(oldValue==='one'&&newValue!=='none'&&newValue!=='checkBox'&&newValue!=='radioButton'||oldValue.indexOf('oneOrMany')!==-1&&newValue.indexOf('oneOrMany')!==-1||oldValue==='none'&&(newValue.indexOf('zero')!==-1||newValue==='checkBox')||newValue==='zeroOrMany'&&oldValue!=='checkBox'||oldValue==='radioButton'&&newValue.indexOf('Many')!==-1||!that.hasThreeStates&&(newValue==='checkBox'||oldValue==='checkBox'&&newValue==='zeroOrMany')){if(newValue==='one'||newValue==='oneOrManyExtended'){that._lastSelectedItem=that._menuItems[that.selectedIndexes[that.selectedIndexes.length-1]];}else{that._lastSelectedItem=undefined;}return;}if(that.hasThreeStates&&oldValue==='checkBox'){var _indeterminateItems=(that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('[indeterminate]');for(var _i597=0;_i597<_indeterminateItems.length;_i597++){_indeterminateItems[_i597].removeAttribute('indeterminate');}}that._applySelection(false);break;case'sort':{if(!that.sorted){return;}that._refreshSorting();break;}case'sortDirection':if(that.sorted&&!that.sort){that._unsortItems(that.$.mainContainer);that._applyGrouping(that.$.mainContainer);}break;case'sorted':{if(!newValue&&!that.autoSort){that._refreshItemPathsAndSelection();that._updateState('sorted',false);return;}if(newValue){that._applyGrouping(that.$.mainContainer);}else{that._unsortItems(that.$.mainContainer);}var _filterQuery=that._state.filter;if(_filterQuery){that._applyFilter(_filterQuery);}that._updateState('sorted',newValue);that._checkOverflow();break;}case'unfocusable':that._setFocusable();break;}}/**
     * Adds drag feedback.
     */},{key:'_addDragFeedback',value:function _addDragFeedback(){var that=this,feedback=document.createElement('div');feedback.className='jqx-tree-item-feedback';feedback.setAttribute('parent-tree-id',that.id);if(that.theme){feedback.classList.add(that.theme);}if(that.dragFeedbackFormatFunction){feedback.innerHTML=that.dragFeedbackFormatFunction(that._dragDetails.Items);}else if(that._dragDetails.Items.length===1){feedback.innerHTML=that._dragDetails.Item.label;}else{feedback.classList.add('multiple');feedback.innerHTML='&#xf0c5;';}document.body.appendChild(feedback);return feedback;}/**
     * Applies filter.
     */},{key:'_applyFilter',value:function _applyFilter(filterQuery){var that=this;function hide(filteredItem,item){if(filteredItem){if(item.hidden){item.$.removeClass('jqx-hidden');}item.hidden=false;}else{if(!item.hidden){item.$.addClass('jqx-hidden');}item.hidden=true;}}function filter(item,childItems){var shownChildren=false,numberOfShownChildren=0,lastShownChild=void 0;childItems=Array.from(childItems);// filter children
for(var _i598=0;_i598<childItems.length;_i598++){var _currentChild2=childItems[_i598];if(_currentChild2 instanceof JQX.TreeItem){hide(that._findItem(_currentChild2,filterQuery),_currentChild2);}else{filter(_currentChild2,_currentChild2.itemContainer.children);}if(!_currentChild2.hidden){numberOfShownChildren++;lastShownChild=_currentChild2;}shownChildren=shownChildren||!_currentChild2.hidden;}// filter the item itself
if(item!==that.$.mainContainer){var filteredItem=that._findItem(item,filterQuery);hide(shownChildren||filteredItem,item);if(shownChildren&&filteredItem===null){item.$.addClass('filtered-child');}else{item.$.removeClass('filtered-child');}if(!shownChildren&&childItems.length>0){item.hiddenChildren=true;item.$.addClass('hidden-children');that.collapseItem(item,undefined,false);}else{item.hiddenChildren=false;item.$.removeClass('hidden-children');}}if(filterQuery!==''&&numberOfShownChildren>0){lastShownChild.$.addClass('last-filtered-child');}}if(filterQuery===''&&!that.hasAttribute('filter-applied')){return;}var lastFilteredChildren=Array.from(that.getElementsByClassName('last-filtered-child'));for(var _i599=0;_i599<lastFilteredChildren.length;_i599++){lastFilteredChildren[_i599].$.removeClass('last-filtered-child');}filter(that.$.mainContainer,that.$.mainContainer.children);if(filterQuery!==''){that.setAttribute('filter-applied','');}else{that.removeAttribute('filter-applied');}that._updateState('filter',filterQuery);that._checkOverflow();}/**
     * Applies hierarchical checkbox selection.
     */},{key:'_applyHierarchicalSelection',value:function _applyHierarchicalSelection(item,validatedSelection){var that=this,branch=item!==that.$.mainContainer,children=branch?item.itemContainer.children:item.children;var selectedChildren=0,indeterminateChildren=0;for(var _i600=0;_i600<children.length;_i600++){var _currentChild3=children[_i600];if(item.selected){_currentChild3.set('selected',true);}if(_currentChild3 instanceof JQX.TreeItemsGroup){that._applyHierarchicalSelection(_currentChild3,validatedSelection);}else if(_currentChild3.selected){validatedSelection.push(_currentChild3.path);}if(branch){if(_currentChild3.selected){selectedChildren++;}else if(_currentChild3.hasAttribute('indeterminate')){indeterminateChildren++;}}}if(!branch){return;}that._setThreeStateCheckbox(item,selectedChildren,indeterminateChildren);if(item.selected){validatedSelection.push(item.path);}}/**
     * Applies radio button selection.
     */},{key:'_applyRadioButtonSelection',value:function _applyRadioButtonSelection(item,initiallySelected,validatedSelection){var that=this,children=item!==that.$.mainContainer?item.itemContainer.children:item.children,selectedChildren=[];var selectedSibling=void 0;for(var _i601=0;_i601<children.length;_i601++){var _currentChild4=children[_i601];if(_currentChild4 instanceof JQX.TreeItemsGroup){that._applyRadioButtonSelection(_currentChild4,initiallySelected,validatedSelection);}_currentChild4.set('selected',false);if(initiallySelected.indexOf(_currentChild4.path)!==-1){selectedChildren.push(_currentChild4);}}if(selectedChildren.length===0){selectedSibling=children[0];}else{selectedSibling=selectedChildren[selectedChildren.length-1];}selectedSibling.set('selected',true);validatedSelection.push(selectedSibling.path);}/**
     * Applies selection.
     */},{key:'_applySelection',value:function _applySelection(combine,oldSelectedIndexes){var that=this;var selected=that.selectedIndexes.slice(0);if(oldSelectedIndexes===undefined){oldSelectedIndexes=selected.slice(0);}if(that._menuItems['0']===undefined){// no items in Tree
that.selectedIndexes=[];that._lastSelectedItem=undefined;if(that.isCompleted&&JSON.stringify(oldSelectedIndexes)!==JSON.stringify([])){that.$.fireEvent('change',{'selectedIndexes':that.selectedIndexes,'oldSelectedIndexes':oldSelectedIndexes});}return;}var selectionMode=that.selectionMode,itemsWithSelectedAttr=Array.from((that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('jqx-tree-item[selected], jqx-tree-items-group[selected]'));for(var _i602=selected.length-1;_i602>=0;_i602--){var currentMatchingItem=that._menuItems[selected[_i602]];if(currentMatchingItem===undefined){selected.splice(_i602,1);}}if(combine){for(var _i603=0;_i603<itemsWithSelectedAttr.length;_i603++){if(selected.indexOf(itemsWithSelectedAttr[_i603].path)===-1){selected.push(itemsWithSelectedAttr[_i603].path);}}}else{for(var _i604=0;_i604<itemsWithSelectedAttr.length;_i604++){itemsWithSelectedAttr[_i604].set('selected',false);}itemsWithSelectedAttr.length=0;}that._sortPathCollection(selected);switch(selectionMode){case'none':selected.length=0;for(var _i605=0;_i605<itemsWithSelectedAttr.length;_i605++){itemsWithSelectedAttr[_i605].set('selected',false);}break;case'one':case'zeroOrOne':if(selectionMode!=='zeroOrOne'&&selected.length===0){selected.push('0');}for(var _i606=0;_i606<selected.length;_i606++){var _currentMatchingItem=that._menuItems[selected[_i606]];if(_i606===selected.length-1){_currentMatchingItem.set('selected',true);selected=[selected[_i606]];break;}if(itemsWithSelectedAttr.indexOf(_currentMatchingItem)!==-1){_currentMatchingItem.set('selected',false);}}break;case'oneOrMany':case'oneOrManyExtended':if(selected.length===0){selected.push('0');}for(var _i607=0;_i607<selected.length;_i607++){that._menuItems[selected[_i607]].set('selected',true);}break;case'zeroOrMany':case'checkBox':for(var _i608=0;_i608<selected.length;_i608++){that._menuItems[selected[_i608]].set('selected',true);}if(selectionMode==='checkBox'&&that.hasThreeStates){var validatedSelection=[];that._applyHierarchicalSelection(that.$.mainContainer,validatedSelection);that._sortPathCollection(validatedSelection);selected=validatedSelection;}break;case'radioButton':{var _validatedSelection=[];that._applyRadioButtonSelection(that.$.mainContainer,selected,_validatedSelection);that._sortPathCollection(_validatedSelection);selected=_validatedSelection;break;}}that.selectedIndexes=selected;that._updateState('selected');if(selectionMode==='one'||selectionMode==='oneOrManyExtended'){that._lastSelectedItem=that._menuItems[selected[selected.length-1]];}else{that._lastSelectedItem=undefined;}if(that.isCompleted&&arguments[2]!==false&&JSON.stringify(oldSelectedIndexes)!==JSON.stringify(selected)){that.$.fireEvent('change',{'selectedIndexes':that.selectedIndexes,'oldSelectedIndexes':oldSelectedIndexes});}}/**
     * Automatically loads stored state.
     */},{key:'_autoLoadState',value:function _autoLoadState(state){var that=this,selectedIndexes=[];for(var _i609=0;_i609<that._menuItemsGroupsToExpand.length;_i609++){that._menuItemsGroupsToExpand[_i609].set('expanded',false);}that._menuItemsGroupsToExpand=[];for(var _i610=0;_i610<state.expanded.length;_i610++){var originallyExpandedItem=that.getItem(state.expanded[_i610]);if(originallyExpandedItem){that._menuItemsGroupsToExpand.push(originallyExpandedItem);}}if(that.filterable&&state.filter){that._applyFilter(state.filter);that.$.filterInput.value=state.filter;}for(var _i611=0;_i611<state.selected.length;_i611++){var originallySelectedItem=that.getItem(state.selected[_i611]);if(originallySelectedItem){selectedIndexes.push(originallySelectedItem.path);}}that.selectedIndexes=selectedIndexes;}/**
     * blur handler.
     */},{key:'_blurHandler',value:function _blurHandler(){this._discardKeyboardHover(true);}/**
     * Checks if an item can be hovered.
     */},{key:'_canItemBeHovered',value:function _canItemBeHovered(item){var level=item.level;return item.disabled===false&&item.templateApplied!==true&&item.hidden!==true&&(level===1||level>1&&this._isContainerOpened(level,item.parentElement.container)&&item.getBoundingClientRect().height>0);}/**
     * Checks if an item can be selected.
     */},{key:'_canItemBeSelected',value:function _canItemBeSelected(item){return item.disabled===false&&item.templateApplied!==true;}/**
     * Checks if items overflow and shows/hides scroll buttons.
     */},{key:'_checkOverflow',value:function _checkOverflow(){var that=this,scrollViewer=that.$.scrollViewer,overflow=that.overflow;if(that.scrollMode==='scrollbar'||overflow==='hidden'){scrollViewer.refresh();return;}var oldScrollTop=scrollViewer.scrollTop;if(overflow==='auto'){scrollViewer.$.removeClass('scroll-buttons-shown');scrollViewer.$.removeClass('one-button-shown');that.$scrollButtonNear.addClass('jqx-hidden');that.$scrollButtonFar.addClass('jqx-hidden');}var overflowing=Math.round(scrollViewer.$.scrollViewerContentContainer.offsetHeight)>Math.round(scrollViewer.$.scrollViewerContainer.offsetHeight),showNear=Math.round(scrollViewer.scrollTop)>0,showFar=Math.round(scrollViewer.$.scrollViewerContainer.offsetHeight+scrollViewer.scrollTop)<Math.round(scrollViewer.$.scrollViewerContentContainer.offsetHeight);if(overflowing){if(overflow==='auto'){scrollViewer.$.addClass('scroll-buttons-shown');if(showNear){that.$scrollButtonNear.removeClass('jqx-hidden');}if(showFar){that.$scrollButtonFar.removeClass('jqx-hidden');}if((showNear&&showFar)===false){scrollViewer.$.addClass('one-button-shown');}if(!that.disabled){that.$.scrollButtonNear.disabled=false;that.$.scrollButtonFar.disabled=false;}scrollViewer.scrollTop=oldScrollTop;}else{that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}else{that.$.scrollButtonNear.disabled=!showNear;that.$.scrollButtonFar.disabled=!showFar;}}}else if(overflow==='scroll'){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}scrollViewer.refresh();}/**
     * Applies initial settings to the Tree element.
     */},{key:'_createElement',value:function _createElement(){var that=this,scrollViewerStyle=window.getComputedStyle(that.$.scrollViewer);that.$.scrollViewer.onVerticalChange=that._verticalScrollbarHandler;Object.defineProperty(that,'dataSource',{get:function get(){if(that.context===that){return that.properties.dataSource.value;}else{return that._getDataSource();}},set:function set(value){that.updateProperty(that,that._properties.dataSource,value);}});if(!that.id&&(that.autoLoadState||that.autoSaveState)){that.warn(that.localize('noId'));that.autoLoadState=false;that.autoSaveState=false;}that.mode='tree';that._element='tree';that._isMobile=JQX.Utilities.Core.isMobile;that._edgeMacFF=false;that._autoScrollCoefficient=JQX.Utilities.Core.Browser.Firefox?4:JQX.Utilities.Core.Browser.Edge?8:2;that._scrollViewerPadding=parseFloat(scrollViewerStyle.paddingTop)+parseFloat(scrollViewerStyle.paddingBottom)||0;that._state={expanded:[],filter:'',selected:[]};that._dblclickObject={numberOfClicks:0};if(that.autoHideToggleElement){that.$mainContainer.addClass('hidden-arrows');}if(that.disabled){that.$.scrollButtonNear.disabled=true;that.$.scrollButtonFar.disabled=true;}if(that.scrollMode==='scrollbar'&&that.overflow==='scroll'){that.$.scrollViewer.verticalScrollBarVisibility='visible';}if(that.dataSource===null&&that.$.mainContainer.firstElementChild instanceof HTMLUListElement){that._processUList();}var items=that.getElementsByTagName('jqx-tree-item');var itemsReady=function itemsReady(){var previousState=void 0;if(that.autoLoadState){previousState=window.localStorage.getItem('jqxTree'+that.id);if(previousState){previousState=JSON.parse(previousState);that.sorted=previousState.sorted;}}that._setFocusable();that._menuItems={};if(that.dataSource===null){that._processHTML(that.$.mainContainer,1);}else{// Task (3)
that._processDataSource();}if(that.scrollMode==='scrollButtons'&&that.overflow==='scroll'){that.$scrollViewer.addClass('scroll-buttons-shown');that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that._updateScrollButtonVisibility();}that._checkOverflow();if(previousState){that._autoLoadState(previousState);}that._expandItemsByDefault();that._applySelection(true);that._updateState('sorted',that.sorted);if(that.displayLoadingIndicator){that.$loadingIndicatorContainer.removeClass('jqx-hidden');}if(that.loadingIndicatorPosition!=='center'){that.$loadingIndicatorPlaceHolder.removeClass('jqx-hidden');}if(that.__onCompleted){that._onCompleted=that.__onCompleted;that.__onCompleted=null;that._onCompleted();}};if(items.length===0){itemsReady();}else{if(that._onCompleted){that.__onCompleted=that._onCompleted;that._onCompleted=null;}that._ensureItemsReady(items,itemsReady);}}/**
     * dblclick handler.
     */},{key:'_dblclickHandler',value:function _dblclickHandler(pressedItem,arrow,event){var that=this;if(that.toggleMode!=='dblclick'||pressedItem instanceof JQX.TreeItem||arrow){return;}that._menuItemsGroupSelectionHandler(pressedItem,event);}/**
     * Removes "focused" class added by keyboard navigation.
     */},{key:'_discardKeyboardHover',value:function _discardKeyboardHover(overrideCheck,mouseoutMouseover){var that=this;if(mouseoutMouseover||!that._hoveredViaKeyboard){return;}if(!overrideCheck&&that._hoveredViaKeyboard instanceof JQX.MenuItemsGroup&&that._isContainerOpened(that._hoveredViaKeyboard.level+1,that._hoveredViaKeyboard.container)){return;}that._hoveredViaKeyboard.removeAttribute('focus');that._hoveredViaKeyboard=undefined;}/**
     * Document up handler.
     */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,downItem=that._downItem,upTarget=that.enableShadowDOM?event.originalEvent.composedPath()[0]:event.originalEvent.target;delete that._downItem;if(that._editedItem&&!that._editInputDown&&(!that._isMobile&&upTarget!==that.$.editInput||that._isMobile&&document.elementFromPoint(event.clientX,event.clientY)!==that.$.editInput)){that._endEditing();return;}delete that._editInputDown;if(downItem){var pressedItem=upTarget.closest('jqx-tree-item')||upTarget.closest('jqx-tree-items-group');if(pressedItem&&pressedItem.selected&&pressedItem===downItem&&(!that._dragDetails||!that._dragDetails.FeedbackShown)&&!(pressedItem instanceof JQX.TreeItemsGroup&&(upTarget.closest('.jqx-tree-items-group-arrow')||upTarget===pressedItem.container||upTarget===pressedItem.container.firstElementChild))){that._handleSelection(pressedItem,event);}}var dragDetails=that._dragDetails;if(!dragDetails){return;}var targetTree=JQX.Tree.hoveredTree,targetItem=JQX.Tree.hoveredItem;delete that._dragDetails;delete JQX.Tree.treeItemDragged;delete JQX.Tree.hoveredTree;delete JQX.Tree.hoveredItem;that.$.scrollViewer._scrollView.disableSwipeScroll=false;if(!dragDetails.FeedbackShown){return;}var dropTarget=targetTree||document.elementFromPoint(event.clientX,event.clientY);var position=void 0;document.body.classList.remove('jqx-dragging');document.body.removeChild(dragDetails.Feedback);if(targetTree){clearInterval(targetTree._dragInterval);}var draggedItem=dragDetails.Item,draggedItems=dragDetails.Items,validDraggedItems=dragDetails.ValidItems;if(!dropTarget){return;}if(!targetItem||draggedItem.contains(targetItem)){// drops item somewhere in the DOM
that.$.fireEvent('dragEnd',{'item':draggedItem,'items':draggedItems,'target':dropTarget,'data':dragDetails,'previousContainer':that,'container':targetTree||dropTarget,'originalEvent':event});return;}if(!(targetTree&&targetTree.allowDrop&&!targetTree.disabled)){return;}var affectedTrees=[targetTree];var dropDetailsPosition=void 0;targetItem.classList.remove('drop-target');if(targetItem.classList.contains('top')){targetItem.classList.remove('top');dropDetailsPosition='top';position=0;}else if(targetItem.classList.contains('bottom')){targetItem.classList.remove('bottom');dropDetailsPosition='bottom';position=2;}else{dropDetailsPosition='inside';position=1;}dragDetails.DropDetails={item:targetItem,position:dropDetailsPosition};if(targetTree!==that){affectedTrees.push(that);}else if(dragDetails.ValidateOnDrop){// drop inside the same tree
for(var _i612=0;_i612<validDraggedItems.length;_i612++){if(validDraggedItems[_i612].contains(targetItem)){return;}}}var dragEndEvent=that.$.fireEvent('dragEnd',{'item':draggedItem,'items':draggedItems,'target':targetItem,'data':dragDetails,'previousContainer':that,'container':targetTree,'originalEvent':event});if(dragEndEvent.defaultPrevented){return;}if(targetTree.sorted&&targetTree.autoSort){targetTree._unsortItems(targetTree.$.mainContainer);}for(var _i613=0;_i613<validDraggedItems.length;_i613++){that._moveTreeItem(validDraggedItems[_i613],targetItem,position,affectedTrees);}if(targetTree.sorted&&targetTree.autoSort){targetTree._applyGrouping(targetTree.$.mainContainer);}if(targetTree!==that&&targetTree._state.filter){targetTree._applyFilter(targetTree._state.filter);}}/**
     * editInput blur handler.
     */},{key:'_editInputBlurHandler',value:function _editInputBlurHandler(){this._endEditing();}/**
     * Ends editing operation.
     */},{key:'_endEditing',value:function _endEditing(discardChanges){var that=this,editedItem=that._editedItem;if(!editedItem){return;}delete that._editedItem;that.$editInput.addClass('jqx-hidden');that.focus();if(discardChanges){return;}var newValue=that.$.editInput.value,restoreSorting=that.sorted&&that.autoSort,filterQuery=that._state.filter;if(newValue===editedItem.label){return;}editedItem.set('label',newValue);editedItem.firstElementChild.firstElementChild.firstElementChild.innerHTML=newValue;if(restoreSorting){that._unsortItems(that.$.mainContainer);that._applyGrouping(that.$.mainContainer);}if(filterQuery){that._applyFilter(filterQuery);}}/**
     * Makes sure an item is visible by scrolling to it.
     */},{key:'_ensureVisible',value:function _ensureVisible(item){var that=this;that._ensureVisibleTreeMode(item,item.getBoundingClientRect(),that.$.scrollViewer,that.$.scrollViewer.getBoundingClientRect(),that._scrollViewerPadding);//Used in GanttChart to ensure the TaskBar inside the Timeline is also visible
if(that._ensureVisibleCallback){that._ensureVisibleCallback(item);}}/**
     * filterInput keydown handler.
     */},{key:'_filterInputKeydownHandler',value:function _filterInputKeydownHandler(event){if(event.key!=='PageDown'){if(event.key==='PageUp'){event.preventDefault();event.stopPropagation();}return;}var that=this;var itemToHighlight=void 0;event.preventDefault();event.stopPropagation();if(that.selectedIndexes.length>0){var oldSelectedIndexes=that.selectedIndexes.slice(0);itemToHighlight=that._lastSelectedItem||that._menuItems[that.selectedIndexes[that.selectedIndexes.length-1]];if(that.selectionMode!=='checkBox'&&that.selectionMode!=='radioButton'){that.selectedIndexes=[itemToHighlight.path];that._applySelection(false,oldSelectedIndexes);}that.focus();}else{itemToHighlight=that._getFirstEnabledChild(that.$.mainContainer);that.focus();if(itemToHighlight){that._hoverViaKeyboard(itemToHighlight);}}that._ensureVisible(itemToHighlight);}/**
     * focus handler.
     */},{key:'_focusHandler',value:function _focusHandler(){var that=this;if(that.selectedIndexes.length>0&&!that._hoveredViaKeyboard){if(that._lastSelectedItem){that._hoverViaKeyboard(that._lastSelectedItem,false,undefined,false);}else{that._hoverViaKeyboard(that._menuItems[that.selectedIndexes[that.selectedIndexes.length-1]],false,undefined,false);}}}/**
     * Gets a JSON representation of the current Tree state.
     */},{key:'_getDataSource',value:function _getDataSource(){var that=this,dataSource=[];function recursion(children,itemsArray){for(var _i614=0;_i614<children.length;_i614++){var _currentChild5=children[_i614],dataSourceItem={label:_currentChild5.label};if(_currentChild5.disabled){dataSourceItem.disabled=true;}if(_currentChild5.selected){dataSourceItem.selected=true;}if(_currentChild5.separator){dataSourceItem.separator=true;}if(_currentChild5.value!==null){dataSourceItem.value=_currentChild5.value;}if(_currentChild5 instanceof JQX.TreeItem){if(_currentChild5.shortcut){dataSourceItem.shortcut=_currentChild5.shortcut;}}else{if(_currentChild5.expanded){dataSourceItem.expanded=true;}dataSourceItem.items=[];recursion(_currentChild5.itemContainer.children,dataSourceItem.items);}itemsArray.push(dataSourceItem);}}recursion(that.$.mainContainer.children,dataSource);return dataSource;}/**
     * Handles hierarchical checkbox selection.
     */},{key:'_handleHierarchicalSelection',value:function _handleHierarchicalSelection(item,selectedIndexes){function checkUncheckChildren(item,check){var children=item.itemContainer.children;for(var _i615=0;_i615<children.length;_i615++){var _currentChild6=children[_i615];_currentChild6.set('selected',check);_currentChild6.removeAttribute('indeterminate');if(_currentChild6 instanceof JQX.TreeItemsGroup){checkUncheckChildren(_currentChild6,check);}}}var that=this;var currentItem=item;if(item.selected){item.set('selected',false);}else{item.set('selected',true);item.removeAttribute('indeterminate');}while(currentItem.parentItem){var parent=currentItem.parentItem,children=parent.itemContainer.children;var selectedChildren=0,indeterminateChildren=0;for(var _i616=0;_i616<children.length;_i616++){if(children[_i616].selected){selectedChildren++;}else if(children[_i616].hasAttribute('indeterminate')){indeterminateChildren++;}}that._setThreeStateCheckbox(parent,selectedChildren,indeterminateChildren);currentItem=parent;}if(item instanceof JQX.TreeItemsGroup){checkUncheckChildren(item,item.selected);}selectedIndexes.length=0;var selectedItems=Array.from((that.enableShadowDOM?that.shadowRoot:that).querySelectorAll('[selected]'));for(var _i617=0;_i617<selectedItems.length;_i617++){selectedIndexes.push(selectedItems[_i617].path);}that._sortPathCollection(selectedIndexes);}/**
     * Handles item selection.
     */},{key:'_handleSelection',value:function _handleSelection(item,event){var that=this,selectionMode=that.selectionMode;if(selectionMode==='none'||event.type!=='programmatic'&&!that._canItemBeSelected(item)){return;}var selected=item.selected;if(selected&&event.type==='down'){return;}var oldSelectedIndexes=that.selectedIndexes.slice(0);var selectedIndexes=oldSelectedIndexes.slice(0);switch(selectionMode){case'one':if(selected){return;}that._menuItems[selectedIndexes[0]].set('selected',false);that.selectedIndexes=[item.path];item.set('selected',true);that._lastSelectedItem=item;break;case'zeroOrOne':if(selected){that.selectedIndexes=[];item.set('selected',false);}else{if(selectedIndexes[0]!==undefined){that._menuItems[selectedIndexes[0]].set('selected',false);}that.selectedIndexes=[item.path];item.set('selected',true);}break;case'oneOrMany':case'zeroOrMany':if(selected){if(selectedIndexes.length===1&&selectionMode!=='zeroOrMany'){return;}selectedIndexes.splice(selectedIndexes.indexOf(item.path),1);item.set('selected',false);}else{selectedIndexes.push(item.path);that._sortPathCollection(selectedIndexes);item.set('selected',true);}that.selectedIndexes=selectedIndexes;break;case'oneOrManyExtended':{var ctrlKey=event.ctrlKey,shiftKey=event.shiftKey;if(!ctrlKey&&!shiftKey||shiftKey&&item===that._lastSelectedItem){for(var _i618=0;_i618<selectedIndexes.length;_i618++){that._menuItems[selectedIndexes[_i618]].set('selected',false);}selectedIndexes=[item.path];item.set('selected',true);that._lastSelectedItem=item;}else if(ctrlKey){if(item.selected&&selectedIndexes.length>1){selectedIndexes.splice(selectedIndexes.indexOf(item.path),1);item.set('selected',false);}else if(!item.selected){selectedIndexes.push(item.path);that._sortPathCollection(selectedIndexes);item.set('selected',true);that._lastSelectedItem=item;}}else if(shiftKey){for(var _i619=0;_i619<selectedIndexes.length;_i619++){that._menuItems[selectedIndexes[_i619]].set('selected',false);}selectedIndexes=that._selectItemRange(that._lastSelectedItem,item);}that.selectedIndexes=selectedIndexes;break;}case'checkBox':if(that.hasThreeStates){that._handleHierarchicalSelection(item,selectedIndexes);}else{if(selected){selectedIndexes.splice(selectedIndexes.indexOf(item.path),1);item.set('selected',false);}else{selectedIndexes.push(item.path);that._sortPathCollection(selectedIndexes);item.set('selected',true);}}that.selectedIndexes=selectedIndexes;break;case'radioButton':{if(item.selected){return;}var selectedSibling=void 0;for(var _i620=0;_i620<item.parentElement.children.length;_i620++){var currentSibling=item.parentElement.children[_i620];if(currentSibling.selected){selectedSibling=currentSibling;break;}}var selectedSiblingIndex=selectedIndexes.indexOf(selectedSibling.path);selectedSibling.set('selected',false);item.set('selected',true);selectedIndexes.splice(selectedSiblingIndex,1);selectedIndexes.push(item.path);that._sortPathCollection(selectedIndexes);that.selectedIndexes=selectedIndexes;break;}}that._discardKeyboardHover(true);that._hoverViaKeyboard(item,false,undefined,!that._treeAnimationInProgress);that._updateState('selected');if(JSON.stringify(oldSelectedIndexes)!==JSON.stringify(that.selectedIndexes)){//Will prevent 'change' firing on ready() of the ownerElement
if(that.ownerElement&&!that.ownerElement.isCompleted){return;}that.$.fireEvent('change',{'item':item,'selectedIndexes':that.selectedIndexes,'oldSelectedIndexes':oldSelectedIndexes});}}/**
     * Highlights an item via the keyboard.
     */},{key:'_hoverViaKeyboard',value:function _hoverViaKeyboard(item,selectOnHover,event,ensureVisible){if(!item){return;}var that=this;item.setAttribute('focus','');that._hoveredViaKeyboard=item;if(ensureVisible!==false){that._ensureVisible(item);}if(selectOnHover){that._handleSelection(item,event);}//NOTE: Used in GanttChart in order to handle Task Tree item focus state
if(that._hoverViaKeyboardCallback){that._hoverViaKeyboardCallback(item);}}/**
     * Keydown event handler.
     */},{key:'_keydownHandler',value:function _keydownHandler(event){var that=this,key=event.key;if(that._editedItem){if(key==='Enter'){that._endEditing();}else if(key==='Escape'){that._endEditing(true);}return;}if(document.activeElement!==that||['ArrowDown','ArrowLeft','ArrowRight','ArrowUp','End','Enter','F2','Home','PageDown','PageUp',' '].indexOf(key)===-1||that.disabled||that.displayLoadingIndicator){return;}event.preventDefault();var treeItems=Array.from(that.$.mainContainer.querySelectorAll('jqx-tree-item, jqx-tree-items-group')),selectOnHover=that.selectionMode==='one'||that.selectionMode==='oneOrManyExtended'&&!event.ctrlKey,highlightedItem=that.$.mainContainer.querySelector('[focus]');function moveDown(startIndex){for(var _i621=startIndex;_i621<treeItems.length;_i621++){var currentItem=treeItems[_i621];if(that._canItemBeHovered(currentItem)){if(highlightedItem){if(highlightedItem===currentItem){break;}highlightedItem.removeAttribute('focus');}that._hoverViaKeyboard(currentItem,selectOnHover,event);break;}}}function moveUp(startIndex){for(var _i622=startIndex;_i622>=0;_i622--){var currentItem=treeItems[_i622];if(that._canItemBeHovered(currentItem)){if(highlightedItem){if(highlightedItem===currentItem){break;}highlightedItem.removeAttribute('focus');}that._hoverViaKeyboard(currentItem,selectOnHover,event);break;}}}function navigateToParentItem(){if(highlightedItem.level>1){highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(highlightedItem.parentItem,selectOnHover,event);}}var startIndex=void 0;switch(key){case'ArrowDown':if(highlightedItem){startIndex=treeItems.indexOf(highlightedItem)+1;}else{startIndex=0;}moveDown(startIndex);break;case'ArrowLeft':if(!highlightedItem){return;}if(highlightedItem instanceof JQX.TreeItem){navigateToParentItem();}else{if(that._isContainerOpened(highlightedItem.level+1,highlightedItem.container)){that._closeSubContainersTreeMode(highlightedItem.level+1,highlightedItem.container,true,true);return;}navigateToParentItem();}break;case'ArrowRight':if(!highlightedItem||highlightedItem instanceof JQX.TreeItem){return;}if(that._isContainerOpened(highlightedItem.level+1,highlightedItem.container)){highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(that._getFirstEnabledChild(highlightedItem.itemContainer),selectOnHover,event);}else{that._menuItemsGroupSelectionHandler(highlightedItem,{target:highlightedItem,type:'keydown'});}break;case'ArrowUp':if(highlightedItem){startIndex=treeItems.indexOf(highlightedItem)-1;}else{startIndex=treeItems.length-1;}moveUp(startIndex);break;case'End':moveUp(treeItems.length-1);break;case'Enter':if(highlightedItem&&highlightedItem instanceof JQX.TreeItemsGroup){that._menuItemsGroupSelectionHandler(highlightedItem,{target:highlightedItem,type:'keydown'});}break;case'F2':if(that.editable){that._startEditing(highlightedItem);}break;case'Home':moveDown(0);break;case'PageDown':that._pageDownHandler(treeItems,highlightedItem,selectOnHover,event);break;case'PageUp':that._pageUpHandler(treeItems,highlightedItem,selectOnHover,event);break;case' ':if(highlightedItem){that._handleSelection(highlightedItem,event);}break;}}/**
     * mainContainer swipeleft/swiperight handler.
     */},{key:'_mainContainerSwipeHandler',value:function _mainContainerSwipeHandler(event){if(JQX.Tree.treeItemDragged){event.stopPropagation();}}/**
     * jqx-menu-items-group selection handler.
     */},{key:'_menuItemsGroupSelectionHandler',value:function _menuItemsGroupSelectionHandler(closestItemsGroup,event,fireEvent){var that=this,toggleMode=that.toggleMode,arrow=event.originalEvent?event.originalEvent.target.classList.contains('jqx-tree-items-group-arrow'):false,container=closestItemsGroup.container;if(that._waitAnimation&&that._treeAnimationInProgress===container){return;}if(event.type==='down'&&!arrow&&(toggleMode!=='dblclick'||that._dblclickObject.numberOfClicks===1)){that._handleSelection(closestItemsGroup,event);}if(event.type==='down'&&!arrow&&(toggleMode==='dblclick'&&that._dblclickObject.numberOfClicks!==2||toggleMode==='click'&&that._dblclickObject.numberOfClicks>1||toggleMode==='arrow')||closestItemsGroup.hiddenChildren){return;}var level=container.level;var animation=that.hasAnimation;if(event.type==='keydown'){that._discardKeyboardHover();}if(that._treeAnimationInProgress){container.removeEventListener('transitionend',that._transitionendHandlerExpand);container.removeEventListener('transitionend',that._transitionendHandlerCollapse);}if(that._isContainerOpened(level,container)){that._closeSubContainersTreeMode(level,container,true,fireEvent!==false);}else{var expandingEvent=that.$.fireEvent('expanding',{'item':closestItemsGroup,'label':closestItemsGroup.label,'path':closestItemsGroup.path,'value':closestItemsGroup.value,'children':closestItemsGroup.itemContainer.children});if(expandingEvent.defaultPrevented){return;}if(animation){if(event.type!=='expand'){that._ensureVisibleOnTransitionend=closestItemsGroup;}that._expandSection(container);}container.$.removeClass('jqx-visibility-hidden');if(event.type==='keydown'){closestItemsGroup.setAttribute('focus','');that._hoveredViaKeyboard=closestItemsGroup;}closestItemsGroup.$.addClass('jqx-tree-items-group-opened');closestItemsGroup.$.addClass('jqx-tree-items-group-expanded');that._addOpenedContainer(level,container);if(event.type===undefined){that._hoverViaKeyboard(that._getFirstEnabledChild(closestItemsGroup.itemContainer));}if(fireEvent!==false){var eventDetail={'item':closestItemsGroup,'label':closestItemsGroup.label,'path':closestItemsGroup.path,'value':closestItemsGroup.value,'children':closestItemsGroup.itemContainer.children};if(that.toggleCallback){eventDetail.type='expand';that.toggleCallback(eventDetail);}else{that.$.fireEvent('expand',eventDetail);}}}if(!animation){that._checkOverflow();if(event.type!=='expand'){that._ensureVisible(closestItemsGroup);}}}/**
     * mouseenter handler.
     */},{key:'_mouseenterHandler',value:function _mouseenterHandler(){var that=this;if(that.autoHideToggleElement){that.$mainContainer.removeClass('hidden-arrows');}if(JQX.Tree.treeItemDragged&&that.allowDrop&&!that.disabled){JQX.Tree.hoveredTree=that;}}/**
     * mouseleave handler.
     */},{key:'_mouseleaveHandler',value:function _mouseleaveHandler(){var that=this;if(that.autoHideToggleElement){that.$mainContainer.addClass('hidden-arrows');}if(JQX.Tree.treeItemDragged){if(JQX.Tree.hoveredTree){clearInterval(JQX.Tree.hoveredTree._dragInterval);delete JQX.Tree.hoveredTree;}var hoveredItem=JQX.Tree.hoveredItem;if(hoveredItem){hoveredItem.classList.remove('drop-target');hoveredItem.classList.remove('top');hoveredItem.classList.remove('bottom');delete JQX.Tree.hoveredItem;}}}/**
     * Move handler.
     */},{key:'_moveHandler',value:function _moveHandler(event){var that=this,dragDetails=that._dragDetails;if(!dragDetails){return;}if(!dragDetails.FeedbackShown){if(Math.abs(dragDetails.StartPosition.left-event.pageX)>5||Math.abs(dragDetails.StartPosition.top-event.pageY)>5){var dragStartEvent=that.$.fireEvent('dragStart',{'item':dragDetails.Item,'items':dragDetails.Items,'data':dragDetails,'container':that,'previousContainer':that,'originalEvent':dragDetails.OriginalEvent});if(dragStartEvent.defaultPrevented){delete that._dragDetails;delete JQX.Tree.treeItemDragged;delete JQX.Tree.hoveredTree;delete JQX.Tree.hoveredItem;that.$.scrollViewer._scrollView.disableSwipeScroll=false;return;}document.body.classList.add('jqx-dragging');dragDetails.Feedback=that._addDragFeedback();dragDetails.FeedbackShown=true;}else{return;}}var dragOffset=that.dragOffset;var hoveredTree=void 0,target=void 0,hoveredItem=void 0;that.$.fireEvent('dragging',{'item':dragDetails.Item,'items':dragDetails.Items,'data':dragDetails,'originalEvent':event});dragDetails.Feedback.style.left=event.pageX+dragOffset[0]+'px';dragDetails.Feedback.style.top=event.pageY+dragOffset[1]+'px';if(that._isMobile){var oldHoveredItem=JQX.Tree.hoveredItem;if(oldHoveredItem){oldHoveredItem.classList.remove('drop-target');oldHoveredItem.classList.remove('top');oldHoveredItem.classList.remove('bottom');delete JQX.Tree.hoveredItem;}var realTarget=document.elementFromPoint(event.clientX,event.clientY);if(JQX.Tree.hoveredTree){clearInterval(JQX.Tree.hoveredTree._dragInterval);delete JQX.Tree.hoveredTree;}if(realTarget){hoveredTree=realTarget.closest('jqx-tree');if(hoveredTree&&hoveredTree.allowDrop){JQX.Tree.hoveredTree=hoveredTree;target=realTarget.closest('jqx-tree-item')||realTarget.closest('jqx-tree-items-group');if(target){hoveredItem=target;}else{target=realTarget;}}}}hoveredTree=JQX.Tree.hoveredTree;if(!hoveredTree){return;}var filterInputHeight=hoveredTree.filterable?hoveredTree.$.filterInput.offsetHeight+10:0;clearInterval(hoveredTree._dragInterval);hoveredTree._dragInterval=setInterval(function(){var rect=hoveredTree.getBoundingClientRect();if(hoveredTree.$.scrollViewer.scrollHeight>0&&rect.left<=event.clientX&&rect.left+rect.width>=event.clientX){if(event.clientY>=rect.top+filterInputHeight&&event.clientY<=rect.top+20+filterInputHeight){hoveredTree.$.scrollViewer.scrollTop-=that._autoScrollCoefficient;if(hoveredTree.scrollMode==='scrollButtons'){hoveredTree._updateScrollButtonVisibility();}}else if(event.clientY>=rect.top+rect.height-20&&event.clientY<=rect.top+rect.height){hoveredTree.$.scrollViewer.scrollTop+=that._autoScrollCoefficient;if(hoveredTree.scrollMode==='scrollButtons'){hoveredTree._updateScrollButtonVisibility();}}else{clearInterval(hoveredTree._dragInterval);}}else{clearInterval(hoveredTree._dragInterval);}},1);if(!that._isMobile){target=event.originalEvent.target;if(target&&target.enableShadowDOM){target=event.originalEvent.composedPath()[0];}if(target&&target.closest){hoveredItem=target.closest('jqx-tree-item')||target.closest('jqx-tree-items-group');}}if(hoveredItem){if(JQX.Tree.hoveredItem&&hoveredItem!==JQX.Tree.hoveredItem){JQX.Tree.hoveredItem.classList.remove('drop-target');JQX.Tree.hoveredItem.classList.remove('top');JQX.Tree.hoveredItem.classList.remove('bottom');}JQX.Tree.hoveredItem=hoveredItem;if(dragDetails.Item.contains(hoveredItem)){return;}var hoveredItemRect=hoveredItem.getBoundingClientRect();if(hoveredItem instanceof JQX.TreeItem){if(event.clientY-hoveredItemRect.top<=hoveredItemRect.height/2){hoveredItem.classList.remove('bottom');hoveredItem.classList.add('top');}else{hoveredItem.classList.remove('top');hoveredItem.classList.add('bottom');}}else{if(event.clientY-hoveredItemRect.top<=10){hoveredItem.classList.remove('bottom');hoveredItem.classList.add('top');}else if(!hoveredItem.expanded&&hoveredItemRect.bottom-event.clientY<=10){hoveredItem.classList.remove('top');hoveredItem.classList.add('bottom');}else{hoveredItem.classList.remove('top');hoveredItem.classList.remove('bottom');}}hoveredItem.classList.add('drop-target');}else{if(JQX.Tree.hoveredItem){JQX.Tree.hoveredItem.classList.remove('drop-target');JQX.Tree.hoveredItem.classList.remove('top');JQX.Tree.hoveredItem.classList.remove('bottom');}if(target===hoveredTree.$.scrollViewer.$.scrollViewerContainer){if(hoveredTree._menuItems['0']){var lastVisibleItem=hoveredTree.$.mainContainer.lastElementChild,_i623=hoveredTree.$.mainContainer.childElementCount-1;while(lastVisibleItem.hidden){_i623--;lastVisibleItem=hoveredTree.$.mainContainer.children[_i623];if(!lastVisibleItem){break;}}if(lastVisibleItem){JQX.Tree.hoveredItem=lastVisibleItem;JQX.Tree.hoveredItem.classList.add('bottom');}else{JQX.Tree.hoveredItem=hoveredTree.$.container;}JQX.Tree.hoveredItem.classList.add('drop-target');}else{JQX.Tree.hoveredItem=hoveredTree.$.container;JQX.Tree.hoveredItem.classList.add('drop-target');}}else{delete JQX.Tree.hoveredItem;}}}/**
     * Moves the sub-items of a jqx-tree-items-group.
     */},{key:'_moveSubItems',value:function _moveSubItems(children,targetTree,padding){var that=this;for(var _i624=0;_i624<children.length;_i624++){var _currentChild7=children[_i624];_currentChild7.menu=targetTree;_currentChild7.set('level',_currentChild7.parentItem.level+1);_currentChild7.firstElementChild.style.paddingLeft='';_currentChild7.firstElementChild.style.paddingRight='';that._setIndentation(_currentChild7.firstElementChild,_currentChild7.level,padding);// restore filtered state
_currentChild7.hidden=false;_currentChild7.$.removeClass('jqx-hidden');_currentChild7.$.removeClass('filtered-child');_currentChild7.$.removeClass('last-filtered-child');if(_currentChild7 instanceof JQX.TreeItemsGroup){_currentChild7.$.removeClass('hidden-children');_currentChild7.container.level=_currentChild7.level+1;that._moveSubItems(_currentChild7.itemContainer.children,targetTree,padding);if(targetTree!==that&&_currentChild7.expanded){targetTree._menuItemsGroupsToExpand.push(_currentChild7);that._updateState('expanded',_currentChild7.id,false);}}}}/**
     * Moves a jqx-tree-item.
     */},{key:'_moveTreeItem',value:function _moveTreeItem(draggedItem,targetItem,position,affectedTrees){var that=this,oldLevel=draggedItem.level;if(position===0){if(targetItem.previousElementSibling===draggedItem){return;}targetItem.parentElement.insertBefore(draggedItem,targetItem);draggedItem.set('level',targetItem.level);}else if(position===2){if(targetItem.nextElementSibling===draggedItem){return;}targetItem.parentElement.insertBefore(draggedItem,targetItem.nextElementSibling||null);draggedItem.set('level',targetItem.level);}else if(targetItem===affectedTrees[0].$.container){affectedTrees[0].$.mainContainer.appendChild(draggedItem);draggedItem.set('level',1);}else{if(targetItem.itemContainer.lastElementChild===draggedItem){return;}targetItem.itemContainer.appendChild(draggedItem);draggedItem.set('level',targetItem.level+1);}var padding=affectedTrees[0].rightToLeft?'paddingRight':'paddingLeft';draggedItem.menu=affectedTrees[0];draggedItem.parentItem=draggedItem.parentElement.menuItemsGroup;draggedItem.firstElementChild.style.paddingLeft='';draggedItem.firstElementChild.style.paddingRight='';that._setIndentation(draggedItem.firstElementChild,draggedItem.level,padding);// restore filtered state
draggedItem.hidden=false;draggedItem.$.removeClass('jqx-hidden');draggedItem.$.removeClass('filtered-child');draggedItem.$.removeClass('last-filtered-child');if(draggedItem instanceof JQX.TreeItemsGroup){draggedItem.$.removeClass('hidden-children');draggedItem.container.level=draggedItem.level+1;that._moveSubItems(draggedItem.itemContainer.children,affectedTrees[0],padding);if(draggedItem.expanded){var index=that._openedContainers[oldLevel+1].indexOf(draggedItem.container);if(index!==-1){that._openedContainers[oldLevel+1].splice(index,1);}affectedTrees[0]._menuItemsGroupsToExpand.push(draggedItem);if(affectedTrees.length===2){that._updateState('expanded',draggedItem.id,false);}}}for(var _i625=0;_i625<affectedTrees.length;_i625++){var tree=affectedTrees[_i625],oldContext=tree.context,oldSelectedIndexes=tree.selectedIndexes.slice(0);tree.context=tree;tree._menuItems={};tree._refreshItemPaths(tree.$.mainContainer,true,undefined,tree.sorted&&!tree.autoSort);tree.selectedIndexes=[];tree._applySelection(true,oldSelectedIndexes,false);tree._checkOverflow();tree.context=oldContext;}affectedTrees[0]._expandItemsByDefault();}/**
     * An empty handler used to override unnecessarily inherited Menu handlers.
     */},{key:'_overriddenMenuHandler',value:function _overriddenMenuHandler(){}/**
     * Handles PgDn navigation.
     */},{key:'_pageDownHandler',value:function _pageDownHandler(treeItems,highlightedItem,selectOnHover,event){var that=this,scrollViewer=that.$.scrollViewer;function getLastItemInView(){for(var _i626=treeItems.length-1;_i626>=0;_i626--){var currentItem=treeItems[_i626];if(that._canItemBeHovered(currentItem)&&that._getOffsetTop(currentItem)+currentItem.firstElementChild.offsetHeight<=scrollViewer.scrollTop+scrollViewer.$.container.offsetHeight){return currentItem;}}}if(!highlightedItem){return;}var lastItemInView=getLastItemInView();if(!lastItemInView){return;}if(highlightedItem!==lastItemInView){highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(lastItemInView,selectOnHover,event);}else if(scrollViewer.scrollTop+scrollViewer.$.container.offsetHeight!==scrollViewer.$.scrollViewerContentContainer.offsetHeight){that.$.scrollViewer.scrollTop+=scrollViewer.$.container.offsetHeight;if(that.scrollMode==='scrollButtons'){that._updateScrollButtonVisibility();}lastItemInView=getLastItemInView();highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(lastItemInView,selectOnHover,event);}}/**
     * Handles PgUp navigation.
     */},{key:'_pageUpHandler',value:function _pageUpHandler(treeItems,highlightedItem,selectOnHover,event){var that=this,scrollViewer=that.$.scrollViewer;function getFirstItemInView(){for(var _i627=0;_i627<treeItems.length;_i627++){var currentItem=treeItems[_i627];if(that._canItemBeHovered(currentItem)&&that._getOffsetTop(currentItem)>=scrollViewer.scrollTop){return currentItem;}}}if(!highlightedItem){return;}var firstItemInView=getFirstItemInView();if(!firstItemInView){return;}if(highlightedItem!==firstItemInView){highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(firstItemInView,selectOnHover,event);}else if(scrollViewer.scrollTop!==0){that.$.scrollViewer.scrollTop-=scrollViewer.$.container.offsetHeight;if(that.scrollMode==='scrollButtons'){that._updateScrollButtonVisibility();}firstItemInView=getFirstItemInView();highlightedItem.removeAttribute('focus');that._hoverViaKeyboard(firstItemInView,selectOnHover,event);}else if(that.filterable){that.$.filterInput.focus();}}/**
     * Refreshes item paths and selection.
     */},{key:'_refreshItemPathsAndSelection',value:function _refreshItemPathsAndSelection(){var that=this,oldSelectedIndexes=that.selectedIndexes.slice(0);that._menuItems={};that._refreshItemPaths(that.$.mainContainer,true);that.selectedIndexes=[];that._applySelection(true,oldSelectedIndexes);}/**
     * Refreshes sorting.
     */},{key:'_refreshSorting',value:function _refreshSorting(){var that=this;that._unsortItems(that.$.mainContainer);that._applyGrouping(that.$.mainContainer);var filterQuery=that._state.filter;if(filterQuery){that._applyFilter(filterQuery);}that._checkOverflow();}/**
     * Scrolls using scroll buttons.
     */},{key:'_scroll',value:function _scroll(scrollCoefficient){var that=this;that.$.scrollViewer.scrollTop=that.$.scrollViewer.scrollTop+scrollCoefficient*10;that._updateScrollButtonVisibility();that.focus();}/**
     * Far scroll button click handler.
     */},{key:'_scrollButtonFarClickHandler',value:function _scrollButtonFarClickHandler(){var that=this;if(that.$.scrollButtonFar.disabled){return;}that._scroll(1);}/**
     * Near scroll button click handler.
     */},{key:'_scrollButtonNearClickHandler',value:function _scrollButtonNearClickHandler(){var that=this;if(that.$.scrollButtonNear.disabled){return;}that._scroll(-1);}/**
     * scrollViewer down handler.
     */},{key:'_scrollViewerDownHandler',value:function _scrollViewerDownHandler(event){var that=this;if(event.target!==that.$.scrollViewer||that.disabled||that.displayLoadingIndicator||!that._isMobile&&event.which!==1){return;}function continueSelection(){var pressedItem=target.closest('jqx-tree-item')||target.closest('jqx-tree-items-group');if(!(pressedItem&&that._canItemBeSelected(pressedItem))){return;}var arrow=target.closest('.jqx-tree-items-group-arrow');var selectionHandler=void 0;if(pressedItem instanceof JQX.TreeItem){selectionHandler='_handleSelection';}else{if(target===pressedItem.container||target===pressedItem.container.firstElementChild){return;}selectionHandler='_menuItemsGroupSelectionHandler';}clearTimeout(that._dblclickTimeout);if(pressedItem!==that._dblclickObject.target){that._dblclickObject.numberOfClicks=0;}that._dblclickObject.target=pressedItem;that._dblclickObject.numberOfClicks++;that._dblclickTimeout=setTimeout(function(){that._dblclickObject.numberOfClicks=0;},300);if(that._dblclickObject.numberOfClicks===2){if(!that.editable){that._dblclickHandler(pressedItem,arrow,event);that._dblclickObject.numberOfClicks=0;}else{that._startEditing(pressedItem);return;}}if(pressedItem.selected){that._downItem=pressedItem;}that[selectionHandler](pressedItem,event);that._discardKeyboardHover(true);that._hoverViaKeyboard(pressedItem,false,undefined,false);if(!arrow){that._startDragging(pressedItem,event);}}var target=event.originalEvent.target;if(target===that.$.editInput){that._editInputDown=true;return;}if(that._isMobile){var current=that.$.scrollViewer.scrollTop;setTimeout(function(){if(that.$.scrollViewer.scrollTop!==current){return;}else{var oldContext=that.context;that.context=that;continueSelection();that.context=oldContext;}},250);}else{continueSelection();}}/**
     * scrollViewer wheel handler.
     */},{key:'_scrollViewerWheelHandler',value:function _scrollViewerWheelHandler(){var that=this;if(that.scrollMode==='scrollButtons'&&that.overflow!=='hidden'){that._updateScrollButtonVisibility();}}/**
     * Selects a range of items.
     */},{key:'_selectItemRange',value:function _selectItemRange(from,to){var that=this,treeItems=Array.from(that.$.mainContainer.querySelectorAll('jqx-tree-item, jqx-tree-items-group')),indexOfFrom=treeItems.indexOf(from),indexOfTo=treeItems.indexOf(to),selectedIndexes=[];for(var _i628=Math.min(indexOfFrom,indexOfTo);_i628<=Math.max(indexOfFrom,indexOfTo);_i628++){var currentItem=treeItems[_i628];if(that._canItemBeHovered(currentItem)){selectedIndexes.push(currentItem.path);currentItem.set('selected',true);}}return selectedIndexes;}/**
     * Sets whether the element can be focused.
     */},{key:'_setFocusable',value:function _setFocusable(){babelHelpers.get(Tree.prototype.__proto__||Object.getPrototypeOf(Tree.prototype),'_setFocusable',this).call(this);var that=this;if(that.disabled||that.unfocusable){that.$.filterInput.tabIndex=-1;return;}that.$.filterInput.removeAttribute('tabindex');}/**
     * Sets item indentation.
     */},{key:'_setIndentation',value:function _setIndentation(labelContainer,level,padding){labelContainer.style[padding]=level*20-10+'px';}/**
     * Sets checked, unchecked, or indeterminate state to a checkbox.
     */},{key:'_setThreeStateCheckbox',value:function _setThreeStateCheckbox(item,selectedChildren,indeterminateChildren){if(selectedChildren===item.itemContainer.childElementCount){item.removeAttribute('indeterminate');item.set('selected',true);}else if(selectedChildren===0&&indeterminateChildren===0){item.removeAttribute('indeterminate');item.set('selected',false);}else{item.setAttribute('indeterminate','');item.set('selected',false);}}/**
     * Sorts items.
     */},{key:'_sortItems',value:function _sortItems(item){var that=this;if(!that.sorted){return;}var parent=void 0;if(item instanceof JQX.TreeItemsGroup){parent=item.container.firstElementChild;}else if(item===that.$.mainContainer){parent=item;}var children=Array.from(parent.children);if(that.sort){// custom sorting
var customSortingResult=that.sort(children,item);if(Array.isArray(customSortingResult)){children=customSortingResult;}}else if(that.sortDirection==='asc'){children.sort(function(a,b){return a.label.localeCompare(b.label);});}else{children.sort(function(a,b){return b.label.localeCompare(a.label);});}// sort items in DOM
for(var _i629=children.length-1;_i629>=0;_i629--){parent.insertBefore(children[_i629],parent.firstElementChild);}}/**
     * Sorts a collection of item paths.
     */},{key:'_sortPathCollection',value:function _sortPathCollection(collection){collection.sort(function(a,b){var aSplit=a.split('.'),bSplit=b.split('.'),maxLength=Math.max(aSplit.length,bSplit.length);for(var _i630=0;_i630<maxLength;_i630++){var aCurrent=parseFloat(aSplit[_i630]),bCurrent=parseFloat(bSplit[_i630]);if(isNaN(aCurrent)){return-1;}if(isNaN(bCurrent)){return 1;}if(aCurrent<bCurrent){return-1;}if(aCurrent>bCurrent){return 1;}}});}/**
     * starts dragging operation
     */},{key:'_startDragging',value:function _startDragging(pressedItem,event){var that=this,selectionMode=that.selectionMode;if(!that.allowDrag||that._editedItem||selectionMode==='none'){return;}var items=[],validItems=[];var validateOnDrop=void 0;if(['one','zeroOrOne','checkBox','radioButton'].indexOf(selectionMode)!==-1){validateOnDrop=false;items.push(pressedItem);validItems.push(pressedItem);}else{// selectionModes 'oneOrManyExtended', 'zeroOrMany', 'oneOrMany'
validateOnDrop=true;for(var _i631=0;_i631<that.selectedIndexes.length;_i631++){items.push(that._menuItems[that.selectedIndexes[_i631]]);validItems.push(items[_i631]);}for(var _i632=0;_i632<items.length;_i632++){var _item77=items[_i632];if(validItems.indexOf(_item77)===-1){continue;}for(var j=validItems.length-1;j>=0;j--){var nextItem=validItems[j];if(nextItem===_item77){break;}if(_item77.contains(nextItem)){validItems.splice(j,1);}}}}that._dragDetails={StartPosition:{left:event.pageX,top:event.pageY},Items:items,ValidItems:validItems,Item:pressedItem,FeedbackShown:false,ValidateOnDrop:validateOnDrop,OriginalEvent:event,StartTime:new Date(),Dragging:true};JQX.Tree.treeItemDragged=true;that.$.scrollViewer._scrollView.disableSwipeScroll=true;if(that.allowDrop){JQX.Tree.hoveredTree=that;JQX.Tree.hoveredItem=pressedItem;}}/**
     * Starts editing operation.
     */},{key:'_startEditing',value:function _startEditing(item){var that=this,editInput=that.$.editInput;var getOffset=void 0,padding=void 0;if(!that._canItemBeSelected(item)){return;}var labelContainer=item.firstElementChild,labelElement=labelContainer.firstElementChild;if(!that.rightToLeft){getOffset=function getOffset(){return labelElement.offsetLeft+parseFloat(window.getComputedStyle(labelContainer).borderLeftWidth);};padding='paddingLeft';}else{getOffset=function getOffset(){return labelContainer.offsetWidth-labelElement.offsetLeft-labelElement.offsetWidth;};padding='paddingRight';}if(item instanceof JQX.TreeItemsGroup){editInput.style[padding]=getOffset()+(that.showLines?parseFloat(window.getComputedStyle(labelElement.firstElementChild).paddingLeft):0)-1+'px';editInput.style.height=labelContainer.offsetHeight+'px';}else{editInput.style[padding]=item.offsetWidth+parseInt(labelContainer.style[padding],10)-labelContainer.offsetWidth+parseFloat(window.getComputedStyle(labelElement.firstElementChild).paddingLeft)-2+'px';editInput.style.height=item.offsetHeight+'px';}editInput.style.top=that._getOffsetTop(item)+'px';that.$editInput.removeClass('jqx-hidden');editInput.value=item.label;that._editedItem=item;setTimeout(function(){editInput.focus();},0);}/**
     * styleChanged event handler.
     */},{key:'_styleChangedHandler',value:function _styleChangedHandler(event){if(event.detail.styleProperties&&event.detail.styleProperties['font-size']){this._checkOverflow();}}/**
     * Updates scroll button visibility.
     */},{key:'_updateScrollButtonVisibility',value:function _updateScrollButtonVisibility(){var that=this,overflow=that.overflow;if(that.scrollMode==='scrollbar'||overflow==='hidden'){return;}var showNear=true,showFar=true;if(Math.round(that.$.scrollViewer.scrollTop)===0){showNear=false;}if(Math.round(that.$.scrollViewer.$.scrollViewerContainer.offsetHeight+that.$.scrollViewer.scrollTop)>=Math.round(that.$.scrollViewer.$.scrollViewerContentContainer.offsetHeight)){showFar=false;}if(overflow==='auto'){if(showNear&&showFar){that.$scrollButtonNear.removeClass('jqx-hidden');that.$scrollButtonFar.removeClass('jqx-hidden');that.$scrollViewer.removeClass('one-button-shown');that.$.scrollViewer.refresh();return;}if(showNear){that.$scrollButtonNear.removeClass('jqx-hidden');}else{that.$scrollButtonNear.addClass('jqx-hidden');}if(showFar){that.$scrollButtonFar.removeClass('jqx-hidden');}else{that.$scrollButtonFar.addClass('jqx-hidden');}that.$scrollViewer.addClass('one-button-shown');that.$.scrollViewer.refresh();}else if(overflow==='scroll'&&!that.disabled){that.$.scrollButtonNear.disabled=!showNear;that.$.scrollButtonFar.disabled=!showFar;}}/**
     * Updates stored state.
     */},{key:'_updateState',value:function _updateState(field,value,add){var that=this;switch(field){case'expanded':{var index=that._state.expanded.indexOf(value);if(add&&index===-1){that._state.expanded.push(value);}else if(!add&&index!==-1){that._state.expanded.splice(index,1);}else{return;}break;}case'filter':that._state.filter=value!==undefined?value:that.$.filterInput.value;break;case'selected':that._state.selected=[];for(var _i633=0;_i633<that.selectedIndexes.length;_i633++){var currentSelectedItem=that._menuItems[that.selectedIndexes[_i633]];that._state.selected.push(currentSelectedItem.id);}break;case'sorted':that._state.sorted=value;break;}if(that.autoSaveState){window.localStorage.setItem('jqxTree'+that.id,JSON.stringify(that._state));}}/**
     * Vertical Scroll Bar handler
     */},{key:'_verticalScrollbarHandler',value:function _verticalScrollbarHandler(){var scrollViewer=this,verticalScrollBar=scrollViewer.$.verticalScrollBar,value=verticalScrollBar.value;if(scrollViewer.disabled){return;}if(verticalScrollBar.max===value){if(!scrollViewer._bottomReached){scrollViewer.$.fireEvent('scrollBottomReached');delete scrollViewer._topReached;scrollViewer._bottomReached=true;}return;}if(verticalScrollBar.min===value){if(!scrollViewer._topReached){scrollViewer.$.fireEvent('scrollTopReached');delete scrollViewer._bottomReached;scrollViewer._topReached=true;}return;}delete scrollViewer._topReached;delete scrollViewer._bottomReached;}}],[{key:'properties',// Tree's properties.
get:function get(){return{'allowDrag':{value:false,type:'boolean'},'allowDrop':{value:false,type:'boolean'},'autoHideToggleElement':{value:false,type:'boolean'},'autoLoadState':{value:false,type:'boolean'},'autoSaveState':{value:false,type:'boolean'},'autoSort':{value:true,type:'boolean'},'displayLoadingIndicator':{value:false,type:'boolean'},'dragFeedbackFormatFunction':{value:null,type:'function?'},'dragOffset':{value:[10,10],type:'array'},'editable':{value:false,type:'boolean'},'filterable':{value:false,type:'boolean'},'filterInputPlaceholder':{value:'',type:'string'},'filterMode':{value:'containsIgnoreCase',allowedValues:['contains','containsIgnoreCase','doesNotContain','doesNotContainIgnoreCase','equals','equalsIgnoreCase','startsWith','startsWithIgnoreCase','endsWith','endsWithIgnoreCase'],type:'string'},'hasThreeStates':{value:false,type:'boolean'},'loadingIndicatorPlaceholder':{value:'Loading...',type:'string'},'loadingIndicatorPosition':{value:'center',allowedValues:['bottom','center','top'],type:'string'},'messages':{value:{'en':{'noId':'jqx-tree: Saving and loading the element\'s state are not available if the element has no id.'}},type:'object',extend:true},'scrollMode':{value:'scrollbar',allowedValues:['scrollbar','scrollButtons'],type:'string'},'selectedIndexes':{value:[],type:'array'},'selectionDisplayMode':{value:'row',allowedValues:['row','label'],type:'string'},'selectionMode':{value:'one',allowedValues:['none','oneOrManyExtended','zeroOrMany','oneOrMany','zeroOrOne','one','checkBox','radioButton'],type:'string'},'showLines':{value:false,type:'boolean'},'showRootLines':{value:false,type:'boolean'},'sort':{value:null,type:'function?'},'sortDirection':{value:'asc',allowedValues:['asc','desc'],type:'string'},'sorted':{value:false,type:'boolean'},'toggleElementPosition':{value:'near',allowedValues:['near','far'],type:'string'},'toggleMode':{value:'dblclick',allowedValues:['click','dblclick','arrow'],type:'string'}};}/**
     * Tree's event listeners.
     */},{key:'listeners',get:function get(){return{'blur':'_blurHandler','focus':'_focusHandler','keydown':'_keydownHandler','mouseenter':'_mouseenterHandler','mouseleave':'_mouseleaveHandler','resize':'_checkOverflow','styleChanged':'_styleChangedHandler','transitionend':'_overriddenMenuHandler','container.click':'_overriddenMenuHandler','container.mouseout':'_overriddenMenuHandler','container.mouseover':'_overriddenMenuHandler','editInput.blur':'_editInputBlurHandler','filterInput.keydown':'_filterInputKeydownHandler','filterInput.keyup':'_filterInputKeyupHandler','mainContainer.click':'_overriddenMenuHandler','mainContainer.mouseleave':'_overriddenMenuHandler','mainContainer.mouseout':'_overriddenMenuHandler','mainContainer.mouseover':'_overriddenMenuHandler','mainContainer.swipeleft':'_mainContainerSwipeHandler','mainContainer.swiperight':'_mainContainerSwipeHandler','scrollButtonFar.click':'_scrollButtonFarClickHandler','scrollButtonNear.click':'_scrollButtonNearClickHandler','scrollViewer.down':'_scrollViewerDownHandler','scrollViewer.kineticScroll':'_scrollViewerWheelHandler','mainContainer.wheel':'_scrollViewerWheelHandler','document.move':'_moveHandler','document.up':'_documentUpHandler'};}/**
     * Tree's required files.
     */},{key:'requires',get:function get(){return{'JQX.ScrollBar':'jqxscrollbar.js'};}/**
    * CSS files needed for the element (ShadowDOM)
    */},{key:'styleUrls',get:function get(){return['jqx.scrollbar.css','jqx.scrollviewer.css','jqx.tree.css'];}}]);return Tree;}(JQX.Menu));/**
* jqxWindow custom element.
*/JQX('jqx-window',function(_JQX$ContentElement17){babelHelpers.inherits(Window,_JQX$ContentElement17);function Window(){babelHelpers.classCallCheck(this,Window);return babelHelpers.possibleConstructorReturn(this,(Window.__proto__||Object.getPrototypeOf(Window)).apply(this,arguments));}babelHelpers.createClass(Window,[{key:'template',/**
    * Element's HTML template.
    */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="pinButton" class="jqx-pin-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="collapseButton" class="jqx-collapse-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="minimizeButton" class="jqx-minimize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="maximizeButton" class="jqx-maximize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content" inner-h-t-m-l="[[innerHTML]]"><content></content></div>\n                    <div id="footer" class="jqx-footer"></div>\n                </div>';}/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */},{key:'propertyChangedHandler',value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'collapsed':newValue?that.collapse(true):that.expand(true);break;case'disabled':case'unfocusable':that._setFocusable();break;case'headerTemplate':case'footerTemplate':that._applyLayoutTemplate(that.$[propertyName.split(/[T]/)[0]],newValue);break;case'headerButtons':that._setHeaderButtons();break;case'headerPosition':that.style.width='';that.style.height='';break;case'label':that.$.header.innerHTML=that.label;break;case'maximized':newValue?that.maximize(true):that.restore(propertyName);break;case'modal':that._setModal();break;case'minimized':newValue?that.minimize(true):that.restore(propertyName);break;case'opened':newValue?that.open(true):that.close(true);break;case'resizeMode'://Reset the resizing indicator
that.$.container.className='jqx-container';break;case'windowParent':that._setElementParent(newValue);break;default:babelHelpers.get(Window.prototype.__proto__||Object.getPrototypeOf(Window.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
    * Disables the styleObserver
    */},{key:'ready',/**
    * Element's ready method.
    */value:function ready(){babelHelpers.get(Window.prototype.__proto__||Object.getPrototypeOf(Window.prototype),'ready',this).call(this);var that=this,animationType=that.animation;if(!that.opened){that.animation='none';}that.$.addClass('jqx-window');that._createElement();that._windowParent={initialParent:that.parentElement};that._setElementParent(that.windowParent);//Remove if added to attached method
that._setHeaderButtons();if(that.headerTemplate){that._applyLayoutTemplate(that.$.header,that.headerTemplate);}if(that.footerTemplate){that._applyLayoutTemplate(that.$.footer,that.footerTemplate);}that.opened?that.open():that.close();if(that.maximized){that.maximize(true);}if(that.minimized){that.minimize(true);}if(that.collapsed){that.collapse(true);}that.pinned?that.pin():that.unpin();that._setFocusable();that.animation=animationType;}/**
     * 
     */},{key:'_styleChangedHandler',value:function _styleChangedHandler(){var that=this;if(!that.maximized){return;}//that._windowParent.element.
}/**
    * Checks for missing modules.
    */},{key:'_setFocusable',/**
    * Sets tab index 
    */value:function _setFocusable(){var that=this;if(!that.disabled&&!that.unfocusable){var index=that.tabIndex>0?that.tabIndex:0;that.setAttribute('tabindex',index);}else{that.removeAttribute('tabindex');}}/**
    * Appends an HTML element content section of the Window.
    */},{key:'appendChild',value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}that.$.content.appendChild(node);}/**
     * Collapses the window
     */},{key:'collapse',value:function collapse(propertyChange){var that=this;if(!propertyChange&&that.collapsed){return;}that.collapsed=true;that.$.fireEvent('collapse');if(that.headerPosition==='left'||that.headerPosition==='right'){that.style.width='';}else{that.style.height='';}}/**
     * Closes the window
     */},{key:'close',value:function close(propertyChange){var that=this;if(!propertyChange&&that.$.hasClass('jqx-visibility-hidden')){return;}if(that.isCompleted){var isOpeningEventPrevented=that.$.fireEvent('closing').defaultPrevented;if(isOpeningEventPrevented){return;}that.$.addClass('jqx-visibility-hidden');that.opened=false;that.$.fireEvent('close');}else{that.$.addClass('jqx-visibility-hidden');that.opened=false;}that._setModal();that.removeAttribute('ontop');}/**
     * Element's Attached method
     */},{key:'attached',value:function attached(){babelHelpers.get(Window.prototype.__proto__||Object.getPrototypeOf(Window.prototype),'attached',this).call(this);var that=this;//MoveHandler not working, if enabled. Reason: Appending twice to the same parent.
//that._setElementParent(that.windowParent);
if(that._windowParent.parent!==document.body&&that._windowParent.parent.querySelectorAll('jqx-window, jqx-dialog-window, jqx-progress-window, jqx-wait-window, '+'jqx-alert-window, jqx-prompt-window, jqx-multiline-prompt-window')){that._windowParent.parent.style.position='relative';}if(that.opened&&that._modal){that.parentElement.insertBefore(that._modal,that);}}/**
     * Sets the window to the top level so the user can interact with it
     */},{key:'bringToFront',value:function bringToFront(){var that=this;if(!that.parentElement){return;}var parentWindow=that.parentElement.closest('.jqx-window');if(parentWindow){parentWindow.bringToFront();return;}var windows=document.body.getElementsByClassName('jqx-window');for(var w=0;w<windows.length;w++){windows[w].removeAttribute('ontop');}if(windows.length===1&&windows[0]===that){return;}that.setAttribute('ontop','');}/**
     * Clears the content of the Window
     */},{key:'clear',value:function clear(){var that=this;if(!that.isCompleted||that.nodeName!=='JQX-WINDOW'){return;}that.$.content.innerHTML='';}/**
     * Element's Detached method
     */},{key:'detached',value:function detached(){babelHelpers.get(Window.prototype.__proto__||Object.getPrototypeOf(Window.prototype),'detached',this).call(this);var that=this;if(!that._windowParent.parent.querySelectorAll('jqx-window, jqx-dialog-window, jqx-progress-window, jqx-wait-window, '+'jqx-alert-window, jqx-prompt-window, jqx-multiline-prompt-window')){that._windowParent.parent.style.position='';}if(that._modal&&that._modal.parentElement){that._modal.parentElement.removeChild(that._modal);}if(that._resizeDummy&&that._resizeDummy.parentElement){that._handleWindowResizeDummy();}that._refreshMinimizedWindowsPosition();}/**
     * Expands the window
     */},{key:'expand',value:function expand(propertyChange){var that=this;if(!propertyChange&&!that.collapsed){return;}that.collapsed=false;that.$.fireEvent('expand');if(that.maximized){if(that.headerPosition==='left'||that.headerPosition==='right'){//In Safari and EDGE there is a bug. If scrollHeight < clientHeight, scrollHeight is not correct
that.style.width=Math.max(that._windowParent.scrollElement.scrollWidth,that._windowParent.element.clientWidth)-that._windowParent.borderWidth+'px';}else{that.style.height=Math.max(that._windowParent.scrollElement.scrollHeight,that._windowParent.element.clientHeight)-that._windowParent.borderWidth+'px';}}else{if(that.headerPosition==='left'||that.headerPosition==='right'){that.style.width=that.className.indexOf('jqx-window-snapped-')<0&&that._dragDetails?that._dragDetails.width+'px':'';}else{that.style.height=that.className.indexOf('jqx-window-snapped-')<0&&that._dragDetails?that._dragDetails.height+'px':'';}}}/**
     * Maximizes the window
     */},{key:'maximize',value:function maximize(propertyChange){var that=this;//Fixes the issue where maximizing a window that overflows the viewport ( scrollbars are rendered ) with animation causes inproper height/width calculation if the scrollbars get hidden
function transitionHandler(){if(!that.maximized||!that.hasAnimation){return;}var scrollHeight=that._windowParent.scrollElement.scrollHeight,clientHeight=that._windowParent.element.clientHeight,totalParentHeight=Math.max(scrollHeight,clientHeight);if(that.headerPosition==='top'||that.headerPosition==='bottom'){if(!that.collapsed){that.style.height=scrollHeight>clientHeight?totalParentHeight-that._windowParent.borderWidth+'px':'100%';}}else{that.style.height=scrollHeight>clientHeight?totalParentHeight-that._windowParent.borderWidth+'px':'100%';}that.removeEventListener('transitionend',transitionHandler);}if(!propertyChange&&that.maximized){return;}if(that.minimized){that._restoreFromMinimization(propertyChange);}//Save the current size and position before maximizing
that._setDragDetails();//Remove resizing indicator classes if added
if(that.resizeMode!=='none'){that.$.container.className='jqx-container';}if(that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){that.classList.remove('jqx-window-snapped-'+that._snapDummy._position);}that.maximized=true;that.$.fireEvent('maximize');that.style.left=that.style.top='0px';that.style.maxWidth=that.style.maxHeight='none';//NOTE: Resize event must be added in order to always fit the parent. That will hammer the performance. That's why it's not added!
//In Safari and EDGE there is a bug. If scrollHeight < clientHeight, scrollHeight is not correct
var scrollHeight=that._windowParent.scrollElement.scrollHeight,scrollWidth=that._windowParent.scrollElement.scrollWidth,clientHeight=that._windowParent.element.clientHeight,clientWidth=that._windowParent.element.clientWidth,totalParentHeight=Math.max(scrollHeight,clientHeight),totalParentWidth=Math.max(scrollWidth,clientWidth);if(that.headerPosition==='top'||that.headerPosition==='bottom'){that.style.width=scrollWidth>clientWidth?totalParentWidth-that._windowParent.borderWidth+'px':'100%';if(!that.collapsed){that.style.height=scrollHeight>clientHeight?totalParentHeight-that._windowParent.borderWidth+'px':'100%';}}else{if(!that.collapsed){that.style.width=scrollWidth>clientWidth?totalParentWidth-that._windowParent.borderWidth+'px':'100%';}that.style.height=scrollHeight>clientHeight?totalParentHeight-that._windowParent.borderWidth+'px':'100%';}if(that.style.height!=='100%'){that.addEventListener('transitionend',transitionHandler);}}/**
     * Minimizes the window
     * @param {any} propertyChange
     */},{key:'minimize',value:function minimize(propertyChange){var that=this;if(!propertyChange&&that.minimized){return;}if(that.maximized){that.restore();}//Save the size and position of the element before minimizing
that._setDragDetails();that.minimized=true;that.$.fireEvent('minimize');if(that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){that.$.removeClass('jqx-window-snapped-'+that._snapDummy._position);that.style.right=that.style.top=that.style.left='';}var minimizedWindows=that._getAllMinimizedWindows(that._windowParent.element);if(minimizedWindows.length>0){var lastWindow=minimizedWindows[minimizedWindows.length-1];that.style.left=(lastWindow.offsetLeft+lastWindow.offsetWidth+that._dragDetails.minWidth+10>that._windowParent.element.clientWidth?lastWindow.offsetLeft:lastWindow.offsetLeft+lastWindow.offsetWidth+5)+'px';that.style.top=lastWindow.offsetTop+'px';}else{that.style.left='5px';//document.documentElement.scrollTop is always 0 in MS EDGE but not in IE11!
that.style.top=that._windowParent.element.clientHeight+that._windowParent.scrollElement.scrollTop-that.$.headerSection.offsetHeight-5+'px';}that.style.width='';that.style.height=that.$.headerSection.offsetHeight+'px';}/**
     * Create Element
     */},{key:'_createElement',value:function _createElement(){}/**
    * Removes an HTML element from the content section.
    */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}that.$.content.removeChild(node);}/**
     * Unmaximizes the window
     */},{key:'restore',value:function restore(propertyChange){var that=this;if(propertyChange==='maximized'||that.maximized){that.maximized=false;that.style.width=that.style.height=that.style.top=that.style.left='';}else if(propertyChange==='minimized'||that.minimized){that._restoreFromMinimization(propertyChange);}that.$.fireEvent('restore');that.style.maxWidth=that.style.maxHeight='';if(that._dragDetails){that.style.left=Math.max(0,Math.min(that._dragDetails.windowX,that._windowParent.element.clientWidth-that._dragDetails.width))+'px';that.style.top=Math.max(0,Math.min(that._dragDetails.windowY,that._windowParent.scrollElement.scrollHeight-that._dragDetails.height))+'px';if(that.collapsed){if(that.headerPosition==='top'||that.headerPosition==='bottom'){that.style.width=that._dragDetails.width+'px';}else{that.style.height=that._dragDetails.height+'px';}return;}if(that._dragDetails.resized){that.style.width=that._dragDetails.width+'px';that.style.height=that._dragDetails.height+'px';}}}/**
     * Opens the window
     */},{key:'open',value:function open(propertyChange){var that=this;if(!propertyChange&&!that.$.hasClass('jqx-visibility-hidden')){return;}function focusAfterOpen(){that.focus();that.removeEventListener('transitionend',focusAfterOpen);}if(that.isCompleted){var isOpeningEventPrevented=that.$.fireEvent('opening').defaultPrevented;if(isOpeningEventPrevented){return;}that.$.removeClass('jqx-visibility-hidden');that.opened=true;that.$.fireEvent('open');}else{that.$.removeClass('jqx-visibility-hidden');that.opened=true;}that.bringToFront();that._setModal();that._handleActiveState();if(!that.hasAnimation){focusAfterOpen();}else{that.addEventListener('transitionend',focusAfterOpen);}}/**
     * Pins the window
     */},{key:'pin',value:function pin(){this.pinned=true;}/**
     * Unpin the window
     */},{key:'unpin',value:function unpin(){this.pinned=false;}/**
    * Apply the layout template for the header/footer
    */},{key:'_applyLayoutTemplate',value:function _applyLayoutTemplate(selector,template){var that=this;if(!template){selector.innerHTML='';if(selector===that.$.header&&that.label){selector.innerHTML=that.label;}return;}if(!('content'in document.createElement('template'))){that.error(that.localize('htmlTemplateNotSuported',{elementType:that.nodeName.toLowerCase()}));return;}if(!(template instanceof HTMLTemplateElement)){template=document.getElementById(template);}if(template===null||!('content'in template)){that.error(that.localize('invalidTemplate',{elementType:that.nodeName.toLowerCase(),property:selector===that.$.footer?'footerTemplate':'headerTemplate'}));return;}selector.innerHTML='';selector.appendChild(document.importNode(template.content,true));}/**
    * Cancel the Drag operation
    * @param {any} event
    */},{key:'_cancelDragging',value:function _cancelDragging(event){var that=this;if(that._dragDetails&&that._dragDetails.started&&that._dragDetails.type==='drag'){if(!event){var windowRect=that.getBoundingClientRect();event={pageX:windowRect.left,pageY:windowRect.top};}that.$.fireEvent('dragEnd',{x:event.pageX,y:event.pageY});that.removeAttribute('dragged');that._dragDetails.started=false;delete that._mouseManipulation;}}/**
    * Document focusin event handler.
    * Called when an element is about to receive focus
    * @param {any} event
    */},{key:'_documentFocusInEventHandler',value:function _documentFocusInEventHandler(event){var that=this;if(!that._changingFocus){return;}if(!that.contains(event.target)){that.focus();}delete that._changingFocus;}/**
     * Element Down event handler
     * @param {any} event
     */},{key:'_downHandler',value:function _downHandler(event){var that=this;var target=JQX.Utilities.Core.isMobile?document.elementFromPoint(event.pageX-window.pageXOffset,event.pageY-window.pageYOffset):event.originalEvent.target;event.stopPropagation();//Left mouse click is 1
if(that.disabled||!JQX.Utilities.Core.isMobile&&event.which!==1){return;}//AutoHideWindow in a JQX.TabsWindow
if(that._tabsWindow){that._tabsWindow._isAutoHideWindowClicked=true;}if(!that.hasAttribute('ontop')){that.bringToFront();}if(target.closest&&target.closest('.jqx-buttons-container')===that.$.buttonsContainer){that._buttonPressed=target.closest('jqx-button');if(that._buttonPressed){return;}}that._isWindowContentClicked=event.originalEvent.target.closest('.jqx-content')&&event.originalEvent.target.closest('.jqx-window');var isInsideLayout=that.closest('jqx-docking-layout');if(that instanceof JQX.TabsWindow&&isInsideLayout&&isInsideLayout.disabled){return;}that._handleActiveState();if(that instanceof JQX.TabsWindow&&isInsideLayout){if(that.$.hasClass('jqx-docking-layout-auto-hide-window')){//Check if a resize zone is entered on touchstart
if(JQX.Utilities.Core.isMobile){that._moveHandler(event);}if(that.resizeMode!=='none'&&that.$.container.className.indexOf('jqx-window-resizing')>-1){that._mouseManipulation=true;that._setDragDetails('resize',event);}}return;}if(event.originalEvent.target.closest('.jqx-header-section')===that.$.headerSection){if(that._dblClickDetails===undefined){that._dblClickDetails={clicks:0};}clearTimeout(that._dblClickDetails.timeOut);that._dblClickDetails.clicks++;that._dblClickDetails.timeOut=setTimeout(function(){if(that._dblClickDetails){that._dblClickDetails.clicks=0;}},300);if(that._dblClickDetails.clicks===2){that._headerDblCickHandler(event);that._dblClickDetails.clicks=0;return;}}if(that.maximized){return;}//Check if a resize zone is entered on touchstart
if(JQX.Utilities.Core.isMobile){that._moveHandler(event);}if(!that.pinned&&!that.minimized&&that.$.container.className.indexOf('jqx-window-resizing')<0){target=target.closest('.jqx-header-section');if(target&&target===that.$.headerSection){that._mouseManipulation=true;that._setDragDetails('drag',event);}}if(that.resizeMode!=='none'&&that.$.container.className.indexOf('jqx-window-resizing')>-1){that._mouseManipulation=true;that._setDragDetails('resize',event);}}/**
     * Document Move Event Handler
     * @param {any} event - event details
     */},{key:'_documentMoveHandler',value:function _documentMoveHandler(event){var that=this;if(!that._dragDetails||!that._dragDetails.started||that.minimized||!that._mouseManipulation||Math.abs(event.pageX-that._dragDetails.x)<=5&&Math.abs(event.pageY-that._dragDetails.y)<=5){return;}if(!that.hasAttribute('dragged')&&!that.hasAttribute('resized')){that.$.fireEvent(that._dragDetails.type+'Start',{left:event.pageX,top:event.pageY,width:that.offsetWidth,height:that.offsetHeight});}event.stopPropagation();if(that._dragDetails.type==='drag'&&!that.pinned){that.setAttribute('dragged','');if(that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){that.$.removeClass('jqx-window-snapped-'+that._snapDummy._position);that.style.right=that.style.top=that.style.left='';if(!that.collapsed){that.style.height=that._dragDetails.height+'px';that.style.width=that._dragDetails.width+'px';}}that._drag(event,'both');//document.documentElement.scrollTop is always 0 in MS EDGE but not in IE11!
that._dragDetails.x=Math.max(that._windowParent.offsetLeft+that._dragDetails.offsetX-that._windowParent.scrollElement.scrollLeft,Math.min(that._windowParent.offsetLeft+that._windowParent.element.offsetWidth-(that._windowParent.element.offsetWidth-that.offsetLeft)+that._dragDetails.offsetX,event.pageX));that._dragDetails.y=Math.max(that._windowParent.offsetTop+that._dragDetails.offsetY-that._windowParent.scrollElement.scrollTop,Math.min(that._windowParent.offsetTop+that._windowParent.element.offsetHeight-(that._windowParent.element.offsetHeight-that.offsetTop)+that._dragDetails.offsetY,event.pageY));//Window snapping logic
if(event.pageX>=that._windowParent.offsetLeft+that._windowParent.scrollElement.scrollWidth-1){that._handleSnapping('right');}else if(event.pageY<=that._windowParent.offsetTop){that._handleSnapping('top');}else if(event.pageX<=that._windowParent.offsetLeft){that._handleSnapping('left');}else{that._handleSnapping();}}else{that._dragDetails.resized=true;that._resize(that._dragDetails.side,event);//document.documentElement.scrollTop is always 0 in MS EDGE but not in IE11!
that._dragDetails.x=Math.max(that._windowParent.offsetLeft+that._dragDetails.left,Math.min(that._windowParent.offsetLeft+that._dragDetails.left+(that._dragDetails.side.toLowerCase().indexOf('left')>-1?0:that._dragDetails.newWidth),event.pageX));that._dragDetails.y=Math.max(that._windowParent.offsetTop+that._dragDetails.top,Math.min(that._windowParent.offsetTop+that._dragDetails.top+(that._dragDetails.side.toLowerCase().indexOf('top')>-1?0:that._dragDetails.newHeight),event.pageY));}}/**
    * Document Down event handler
    * @param {any} event - event details
    */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=event.originalEvent.target;if(that.disabled){that.removeAttribute('active');delete that._buttonPressed;delete that._isWindowContentClicked;return;}if(that._dragDetails&&that._dragDetails.started){if(that.hasAttribute('resized')){that.$.fireEvent(that._dragDetails.type+'End',{x:event.pageX,y:event.pageY,width:that._dragDetails.newWidth,height:that._dragDetails.newHeight});that.removeAttribute('resized');that._handleWindowResizeDummy();that.$.container.className='jqx-container';}//The only way to stop the transitions when liveResize is false
setTimeout(function(){that.$.removeClass('no-transition');},20);if(that.hasAttribute('dragged')){that.$.fireEvent(that._dragDetails.type+'End',{x:event.pageX,y:event.pageY});that.removeAttribute('dragged');}that._dragDetails.started=false;delete that._mouseManipulation;}if(that._snapDummy&&!that._snapDummy.classList.contains('jqx-visibility-hidden')){switch(that._snapDummy._position){case'left':case'top':that.style.left=that.style.top='0';that.style.right='auto';break;case'right':that.style.left='auto';that.style.top=that.style.right='0';break;}that.style.width=that._snapDummy._position==='top'?'100%':'50%';that.style.height='100%';that.$.addClass('jqx-window-snapped-'+that._snapDummy._position);that._handleSnapping();}if(that._modal&&event.originalEvent.target===that._modal&&!that._isWindowContentClicked){that.closeOnMaskClick?that.close():that.focus();}if(that._isWindowButton(event.originalEvent.target)){that.focus();}delete that._isWindowContentClicked;delete that._buttonPressed;if(!that.hasAttribute('active')||document.activeElement===that){return;}if(!target.closest){return;}var closestWindow=target.closest('.jqx-window');while(closestWindow){if(closestWindow===that){break;}closestWindow=closestWindow.parentElement.closest('.jqx-window');}if(closestWindow!==that){that.removeAttribute('active');}}/**
     * Document select start handler.
     */},{key:'_documentSelectStartHandler',value:function _documentSelectStartHandler(event){var that=this;if(that._dragDetails&&that._dragDetails.started){event.preventDefault();}}/**
     * Repositions the window ( Dragging  operation ) 
     */},{key:'_drag',value:function _drag(event,direction){var that=this;if(!event||that.pinned||that.maximized){return;}var distanceX=void 0,distanceY=void 0;if(!that._dragDetails||!that._dragDetails.started){that._setDragDetails('drag',event);}//Disables animatied movement
that.$.addClass('no-transition');if((typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'){distanceX=event.pageX-that._dragDetails.x;distanceY=event.pageY-that._dragDetails.y;}else{distanceX=distanceY=event;}//Safari, EDGE have a different with the height of the viewport depending on the elemnets on the page
var totalParentHeight=Math.max(that._windowParent.element.clientHeight,that._windowParent.scrollElement.scrollHeight),totalParentWidth=Math.max(that._windowParent.element.clientWidth,that._windowParent.scrollElement.scrollWidth);switch(direction){case'horizontal':that._dragDetails.windowX=Math.max(0,Math.min(that._dragDetails.windowX+distanceX,totalParentWidth-that.offsetWidth));that.style.left=that._dragDetails.windowX+'px';break;case'vertical':that._dragDetails.windowY=Math.max(0,Math.min(that._dragDetails.windowY+distanceY,totalParentHeight-that.offsetHeight));that.style.top=that._dragDetails.windowY+'px';break;case'both':that._dragDetails.windowX=Math.max(0,Math.min(that._dragDetails.windowX+distanceX,totalParentWidth-that.offsetWidth));that._dragDetails.windowY=Math.max(0,Math.min(that._dragDetails.windowY+distanceY,totalParentHeight-that.offsetHeight));that.style.left=that._dragDetails.windowX+'px';that.style.top=that._dragDetails.windowY+'px';break;}that._dragDetails.top=that.offsetTop;that._dragDetails.left=that.offsetLeft;}/**
     * DragStarted Event Handler
     * @param {any} event
     */},{key:'_dragStartHandler',value:function _dragStartHandler(event){var that=this;if(that._dragDetails&&that._dragDetails.started){event.preventDefault();}}/**
     * Element's focus/blue event handler
     * @param {any} event
     */},{key:'_focusHandler',value:function _focusHandler(event){var that=this;if(event.type==='focus'){that.setAttribute('focus','');that.bringToFront();}else if(!that._buttonPressed){that.removeAttribute('focus');if(that._dragDetails&&that._dragDetails.started){that._handleWindowResizeDummy();}}}/**
    * Retrieves all curently minimized windows in an array.
    * @param {any} container
    */},{key:'_getAllMinimizedWindows',value:function _getAllMinimizedWindows(container){var that=this;var minimizedWindows=[];if(!container){container=that._windowParent.element;}var windowElements=container.getElementsByTagName('jqx-window');for(var _i634=0;_i634<windowElements.length;_i634++){if(windowElements[_i634]!==that&&windowElements[_i634].hasAttribute('minimized')){minimizedWindows.push(windowElements[_i634]);}}minimizedWindows.sort(function(a,b){var aRect=a.getBoundingClientRect(),bRect=b.getBoundingClientRect();return aRect.right-bRect.right;});return minimizedWindows;}/**
    * Handles the snapping of the window to the viewport. Adds a dummy that will determine the snapping behavior.
    * @param {any} position
    */},{key:'_handleSnapping',value:function _handleSnapping(position){var that=this;function transitionEndHandler(){if(that._snapDummy.classList.contains('jqx-visibility-hidden')&&that._snapDummy.parentElement){that._snapDummy.parentElement.removeChild(that._snapDummy);}}if(!position){if(that._snapDummy&&that._snapDummy.parentElement){that._snapDummy.classList.add('jqx-visibility-hidden');}return;}if(that.disableSnap||that.collapsed){return;}if(!that._snapDummy){that._snapDummy=document.createElement('div');that._snapDummy.addEventListener('transitionend',transitionEndHandler);}that._snapDummy.className='jqx-window-snap-'+position+'-feedback';that._snapDummy._position=position;if(!that._snapDummy.parentElement){that._windowParent.element.appendChild(that._snapDummy);}}/**
     * Window header double click handler.
     */},{key:'_headerDblCickHandler',value:function _headerDblCickHandler(event){var that=this,target=event.originalEvent.target;if(target!==that.$.headerSection&&target!==that.$.header||that.$.maximizeButton&&that.$.maximizeButton.offsetHeight===0){return;}that.maximized?that.restore():that.maximize();}/**
    * Element Up event handler
    * @param {any} event - event details
    */},{key:'_isWindowButton',value:function _isWindowButton(target){var that=this;if(!target.closest||target.closest('.jqx-buttons-container')!==that.$.buttonsContainer){return;}var customButtonRegex=/jqx-(\w+[-]*\w*)-button/ig;target=target.closest('jqx-button');if(!target||target!==that._buttonPressed){return;}switch(target){case that.$.closeButton:that.close();return true;case that.$.collapseButton:that.collapsed?that.expand():that.collapse();return true;case that.$.maximizeButton:that.maximized?that.restore():that.maximize();return true;case that.$.minimizeButton:that.minimized?that.restore():that.minimize();return true;case that.$.pinButton:that.pinned?that.unpin():that.pin();return true;default://Custom Header Button
if(!customButtonRegex.test(target.className)){return;}that.$.fireEvent(JQX.Utilities.Core.toCamelCase(target.className.match(customButtonRegex).toString().replace('jqx-','').replace('-button','')),{button:target});return true;}}/**
     * Key Down event handler
     * @param {any} event - event details
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;delete that._changingFocus;if(that.disabled||(that.hasAttribute('dragged')||that.hasAttribute('resized'))&&that._mouseManipulation){return;}event.stopPropagation();//Distance hardcoded to 10px
var distance=event.key==='ArrowDown'||event.key==='ArrowRight'?10:-10;switch(event.key){case'ArrowUp':case'ArrowDown':case'ArrowLeft':case'ArrowRight':{if(that.minimized||document.activeElement!==that){return;}var direction=event.key.indexOf('Right')>-1||event.key.indexOf('Left')>-1;event.preventDefault();if(!direction&&event.altKey){event.key==='ArrowUp'?that.maximize():that.restore();return;}if(that.maximized){return;}//that.style.transition = '';
that.$.addClass('no-transition');if(event.ctrlKey&&that.resizeMode!=='none'&&!that.collapsed){if(['horizontal','vertical','both'].indexOf(that.resizeMode)===-1){direction=that.resizeMode;}else{direction=direction?'right':'bottom';}if(that.hasAttribute('dragged')){that._cancelDragging(event);}if(!that.hasAttribute('resized')){that.$.fireEvent('resizeStart',{'position':{x:event.pageX,y:event.pageY}});}that._resize(direction,distance);return;}if(!that.pinned){if(!that.hasAttribute('dragged')){that.setAttribute('dragged','');that.$.fireEvent('dragStart',{'position':{left:event.pageX,top:event.pageY}});}that._drag(distance,direction?'horizontal':'vertical');}//that.style.transition = '';
that.$.removeClass('no-transition');break;}case'Escape':if(that.headerButtons.indexOf('close')>-1&&document.activeElement===that){that.close();}break;case'p':if(event.altKey&&that.headerButtons.indexOf('pin')>-1){that.pinned?that.unpin():that.pin();}break;case'c':if(event.altKey&&that.headerButtons.indexOf('collapse')>-1){that.collapsed?that.expand():that.collapse();}break;case'm':if(event.altKey&&that.headerButtons.indexOf('minimize')>-1){that.minimized?that.restore():that.minimize();}break;case'Tab':if(that.opened&&that.modal){that._changingFocus=true;}break;case'Enter':case' ':{var _target2=event.target.closest&&event.target.closest('jqx-button');if(!_target2){return;}that._isWindowButton(that._buttonPressed=_target2);delete that._buttonPressed;break;}}}/**
     * KeyUp Event Handler
     */},{key:'_keyUpHandler',value:function _keyUpHandler(event){var that=this;if(!event.key){return;}if(event.key==='Control'&&that._dragDetails&&that.hasAttribute('resized')&&!that._mouseManipulation){if(!that._dragDetails.started){return;}if(that._dragDetails.type!=='drag'){that.removeAttribute('resized');that.$.fireEvent('resizeEnd',{x:event.pageX,y:event.pageY,width:that._dragDetails.newWidth,height:that._dragDetails.newHeight});that._handleWindowResizeDummy();}that._dragDetails.started=false;}if(event.key.indexOf('Arrow')>-1&&that.hasAttribute('dragged')&&!that._mouseManipulation){that._cancelDragging(event);}}/**
     * Document Mouse Wheel event
     */},{key:'_mouseWheelHandler',value:function _mouseWheelHandler(event){var that=this;if(that.disabled||!(that._dragDetails&&that._dragDetails.started)){return;}//document.documentElement.scrollTop is always 0 in MS EDGE but not in IE11!
if(event.deltaY<0&&that._windowParent.scrollElement.scrollTop+event.deltaY<=0){that.style.top=Math.max(0,that._dragDetails.windowY)+'px';return;}if(event.deltaY>0&&(that._dragDetails.windowY+that.offsetHeight+event.deltaY>=that._windowParent.scrollElement.scrollHeight||that._windowParent.scrollElement.scrollTop+that._windowParent.element.clientHeight===that._windowParent.scrollElement.scrollHeight)){return;}if(that._dragDetails.type==='drag'){that._dragDetails.windowY+=event.deltaY;that.style.top=that._dragDetails.windowY+'px';}else{that._dragDetails.height+=event.deltaY;that.style.height=that._dragDetails.height+'px';}}/**
     * Element's Mouse Move handler'
     */},{key:'_moveHandler',value:function _moveHandler(event){var that=this;if(that.disabled||that.collapsed||that.maximized||that.minimized){return;}//iOS Safari fix for dragging (prevents window scrolling)
if(JQX.Utilities.Core.isMobile&&!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&that.hasAttribute('dragged')){event.originalEvent.preventDefault();}if(that._mouseManipulation){return;}if(that.$.container.className.indexOf('jqx-window-resizing')>-1){that.$.container.className='jqx-container';}//Set resizing cursor
if(that.resizeMode!=='none'){var windowCoordinates=that.getBoundingClientRect(),isNearTop=event.clientY<windowCoordinates.top+10?true:false,isNearBottom=event.clientY>windowCoordinates.bottom-10?true:false,isNearRight=event.clientX>windowCoordinates.right-10?true:false,isNearLeft=event.clientX<windowCoordinates.left+10?true:false;switch(that.resizeMode){case'none':break;case'both':if(that.resizeIndicator){if(isNearBottom&&isNearRight){that.$.container.classList.add('jqx-window-resizing-bottom-right');}return;}if(isNearLeft||isNearRight){if(isNearTop){isNearLeft?that.$.container.classList.add('jqx-window-resizing-top-left'):that.$.container.classList.add('jqx-window-resizing-top-right');return;}else if(isNearBottom){isNearLeft?that.$.container.classList.add('jqx-window-resizing-bottom-left'):that.$.container.classList.add('jqx-window-resizing-bottom-right');return;}isNearLeft?that.$.container.classList.add('jqx-window-resizing-left'):that.$.container.classList.add('jqx-window-resizing-right');return;}if(isNearTop||isNearBottom){if(isNearRight){isNearTop?that.$.container.classList.add('jqx-window-resizing-top-right'):that.$.container.classList.add('jqx-window-resizing-bottom-right');return;}else if(isNearLeft){isNearTop?that.$.container.classList.add('jqx-window-resizing-top-left'):that.$.container.classList.add('jqx-window-resizing-bottom-left');return;}isNearTop?that.$.container.classList.add('jqx-window-resizing-top'):that.$.container.classList.add('jqx-window-resizing-bottom');}break;case'horizontal':if(that.resizeIndicator){if(isNearBottom&&isNearRight){that.$.container.classList.add('jqx-window-resizing-right');}return;}if(isNearLeft){that.$.container.classList.add('jqx-window-resizing-left');return;}if(isNearRight){that.$.container.classList.add('jqx-window-resizing-right');}break;case'vertical':if(that.resizeIndicator){if(isNearBottom&&isNearRight){that.$.container.classList.add('jqx-window-resizing-bottom');}return;}if(isNearTop){that.$.container.classList.add('jqx-window-resizing-top');return;}if(isNearBottom){that.$.container.classList.add('jqx-window-resizing-bottom');}break;case'top':if(isNearTop){if(that.resizeIndicator&&!isNearLeft){return;}that.$.container.classList.add('jqx-window-resizing-top');}break;case'bottom':if(isNearBottom){if(that.resizeIndicator&&!isNearRight){return;}that.$.container.classList.add('jqx-window-resizing-bottom');}break;case'left':if(isNearLeft){if(that.resizeIndicator&&!isNearTop){return;}that.$.container.classList.add('jqx-window-resizing-left');}break;case'right':if(isNearRight){if(that.resizeIndicator&&!isNearBottom){return;}that.$.container.classList.add('jqx-window-resizing-right');}break;}}}/**
     * Handles the active state of the Window
     */},{key:'_handleActiveState',value:function _handleActiveState(){var that=this;//Remove the active state of all windows on page
var allWindowsOnPage=document.getElementsByClassName('jqx-window');for(var w=0;w<allWindowsOnPage.length;w++){if(!allWindowsOnPage[w].contains(that)&&!that.contains(allWindowsOnPage[w])){allWindowsOnPage[w].removeAttribute('active');}}that.setAttribute('active','');}/**
     * Creates a resize dummy that's used during resizing ( if liveResize is off ).
     */},{key:'_handleWindowResizeDummy',value:function _handleWindowResizeDummy(){var that=this;if(!that._resizeDummy){that._resizeDummy=document.createElement('div');that._resizeDummy.classList.add('jqx-window-resize-feedback');}if(!that.hasAttribute('resized')){if(that._resizeDummy.parentElement){that._resizeDummy.parentElement.removeChild(that._resizeDummy);}if(!that.liveResize&&that._dragDetails.type==='resize'&&that._dragDetails.started){that.style.top=that._dragDetails.top+'px';that.style.left=that._dragDetails.left+'px';that.style.width=that._dragDetails.newWidth+'px';that.style.height=that._dragDetails.newHeight+'px';}return;}if(that._resizeDummy.parentElement){return;}that._resizeDummy.style.width=that.offsetWidth+'px';that._resizeDummy.style.height=that.offsetHeight+'px';that._resizeDummy.style.top=that.offsetTop+'px';that._resizeDummy.style.left=that.offsetLeft+'px';that._windowParent.element.appendChild(that._resizeDummy);}/**
    * 
    * @param {any} side - the side from which the dragging occurs
    * @param {any} event - mouse pointer event
    */},{key:'_resize',value:function _resize(side,event){var that=this;var size=void 0;if(!that._dragDetails||that._dragDetails&&that._dragDetails.type==='drag'){that._setDragDetails('resize');}if(!that._dragDetails){return;}that._dragDetails.started=true;if(!that.hasAttribute('resized')){that.setAttribute('resized','');//Disables animatied movement
//that.style.transition = 'none';
if(that.hasAnimation){that.$.addClass('no-transition');}}if(!that.liveResize){that._handleWindowResizeDummy();}var width=that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)?'snapWindowWidth':'width';//document.documentElement.scrollTop is always 0 in MS EDGE but not in IE11!
switch(side){case'left':{size=(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'?event.pageX-that._dragDetails.x:event;if(size>0){size=Math.min(size,that._dragDetails[width]-that._dragDetails.minWidth);}else{size=Math.min(that._dragDetails.maxWidth?that._dragDetails.maxWidth-that._dragDetails[width]:that._dragDetails.left,Math.abs(size))*-1;}that._dragDetails[width]=Math.min(that._dragDetails[width]+that._dragDetails.left-that._windowParent.scrollElement.scrollLeft,that._dragDetails[width]-size);that._dragDetails.windowX=Math.max(that._windowParent.scrollElement.scrollLeft,that._dragDetails.windowX+size);if((typeof event==='undefined'?'undefined':babelHelpers.typeof(event))!=='object'){that._dragDetails[width]=Math.max(that._dragDetails[width],that._dragDetails.minWidth);}if(that._dragDetails[width]>=that._dragDetails.minWidth){that._dragDetails.left=that._dragDetails.windowX;that._dragDetails.newWidth=that._dragDetails[width];}break;}case'right':{var borderWidth=that._windowParent.element.clientWidth!==that._windowParent.element.offsetWidth?that._windowParent.borderWidth:0,_width3=that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)?'snapWindowWidth':'width';size=(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'?event.pageX-that._dragDetails.x:event;if(size>0&&that._dragDetails.maxWidth){size=Math.min(that._dragDetails.maxWidth-that._dragDetails[_width3],size);}that._dragDetails[_width3]=Math.min(that._windowParent.element.clientWidth+that._windowParent.scrollElement.scrollLeft-that._dragDetails.left-borderWidth,Math.max(0,that._dragDetails[_width3]+size));if((typeof event==='undefined'?'undefined':babelHelpers.typeof(event))!=='object'){that._dragDetails[_width3]=Math.max(that._dragDetails[_width3],that._dragDetails.minWidth);}that._dragDetails.left=that.offsetLeft;that._dragDetails.newWidth=Math.max(that._dragDetails.minWidth,that._dragDetails[_width3]);break;}case'top':if(that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){that._dragDetails.height=that._dragDetails.snapWindowHeight;}size=(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'?event.pageY-that._dragDetails.y:event;if(size>0){size=Math.min(size,that._dragDetails.height-that._dragDetails.minHeight);}else{size=Math.min(that._dragDetails.maxHeight?that._dragDetails.maxHeight-that._dragDetails.height:that._dragDetails.top,Math.abs(size))*-1;}that._dragDetails.snapWindowHeight=that._dragDetails.height=Math.min(that._dragDetails.height+that._dragDetails.top-that._windowParent.scrollElement.scrollTop,that._dragDetails.height-size);that._dragDetails.windowY=Math.max(that._windowParent.scrollElement.scrollTop,that._dragDetails.windowY+size);if((typeof event==='undefined'?'undefined':babelHelpers.typeof(event))!=='object'){that._dragDetails.snapWindowHeight=that._dragDetails.height=Math.max(that._dragDetails.height,that._dragDetails.minHeight);}if(that._dragDetails.height>=that._dragDetails.minHeight){that._dragDetails.top=that._dragDetails.windowY;that._dragDetails.newHeight=that._dragDetails.height;}that._dragDetails.newWidth=Math.max(that._dragDetails[width],that._dragDetails.newWidth);break;case'bottom':if(that._snapDummy&&that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){that._dragDetails.height=that._dragDetails.snapWindowHeight;}size=(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'?event.pageY-that._dragDetails.y:event;if(size>0&&that._dragDetails.maxHeight){size=Math.min(that._dragDetails.maxHeight-that._dragDetails.height,size);}that._dragDetails.snapWindowHeight=that._dragDetails.height=Math.min(that._windowParent.element.clientHeight+that._windowParent.scrollElement.scrollTop-that._dragDetails.top-that._windowParent.borderWidth,Math.max(0,that._dragDetails.height+size));if((typeof event==='undefined'?'undefined':babelHelpers.typeof(event))!=='object'){that._dragDetails.snapWindowHeight=that._dragDetails.height=Math.max(that._dragDetails.height,that._dragDetails.minHeight);}that._dragDetails.newHeight=Math.max(that._dragDetails.minHeight,that._dragDetails.height);that._dragDetails.newWidth=Math.max(that._dragDetails[width],that._dragDetails.newWidth);break;case'bottomLeftCorner':that._resize('bottom',event);that._resize('left',event);break;case'bottomRightCorner':that._resize('bottom',event);that._resize('right',event);break;case'topLeftCorner':that._resize('top',event);that._resize('left',event);break;case'topRightCorner':that._resize('top',event);that._resize('right',event);break;}var resizeTarget=that.liveResize?that:that._resizeDummy;that._dragDetails.newHeight=Math.max(that._dragDetails.snapWindowHeight,that._dragDetails.newHeight);resizeTarget.style.top=that._dragDetails.top+'px';resizeTarget.style.left=that._dragDetails.left+'px';resizeTarget.style.width=that._dragDetails.newWidth+'px';resizeTarget.style.height=that._dragDetails.newHeight+'px';}/**
     * Restore the window from minimization
     */},{key:'_restoreFromMinimization',value:function _restoreFromMinimization(){var that=this;that.minimized=false;that.style.width=that.style.height=that.style.top=that.style.left='';//Re-arrange the rest of the minimized windows
that._refreshMinimizedWindowsPosition();}/**
     * Recalculates the position of the minimized windows on the page
     */},{key:'_refreshMinimizedWindowsPosition',value:function _refreshMinimizedWindowsPosition(){var that=this;var minimizedWindows=that._getAllMinimizedWindows();if(minimizedWindows.length===0){return;}//Some offset from the edge of the window
minimizedWindows[0].style.left='5px';var lastWindow=void 0;//Using style.left instead of offsetLeft to ignore the transiton of the animation if enabled
for(var _i635=1;_i635<minimizedWindows.length;_i635++){if(parseFloat(minimizedWindows[_i635-1].style.left)+minimizedWindows[_i635-1].offsetWidth+minimizedWindows[_i635].offsetWidth+10<that._windowParent.element.clientWidth){minimizedWindows[_i635].style.left=parseFloat(minimizedWindows[_i635-1].style.left)+minimizedWindows[_i635-1].offsetWidth+5+'px';minimizedWindows[_i635].style.top=minimizedWindows[_i635-1].offsetTop+'px';lastWindow=minimizedWindows[_i635];}else{minimizedWindows[_i635].style.left=parseFloat(lastWindow.style.left)+'px';minimizedWindows[_i635].style.top=lastWindow.offsetTop+'px';}}}/**
     * Set the visibility of the Header Buttons
     */},{key:'_setHeaderButtons',value:function _setHeaderButtons(){var that=this,buttons=that.headerButtons,currentButtons=that.$.buttonsContainer.children,isAlreadyCreated=function isAlreadyCreated(name){var button=that.$.buttonsContainer.getElementsByClassName('jqx-'+(name+'').split(/(?=[A-Z])/).join('-').toLowerCase()+'-button')[0];if(button){button.$.removeClass('jqx-hidden');}return button;};for(var b=0;b<currentButtons.length;b++){currentButtons[b].$.addClass('jqx-hidden');}//Create a new custom header button
if(buttons.length>0){for(var _i636=0;_i636<buttons.length;_i636++){var button=isAlreadyCreated(buttons[_i636]);if(!button){button=document.createElement('jqx-button');button.$.addClass('jqx-'+(buttons[_i636]+'').split(/(?=[A-Z])/).join('-').toLowerCase()+'-button');button.theme=that.theme;}that.$.buttonsContainer.insertBefore(button,that.$.buttonsContainer.firstElementChild);}}}/**
     * Creates the Drag details for window dragging and resizing
     * @param {any} type - type of event
     * @param {any} event - event details (optional)
     */},{key:'_setDragDetails',value:function _setDragDetails(type,event){var that=this;if(!that._dragDetails){that._dragDetails={};}if(that._dragDetails.minWidth===undefined||that._dragDetails.minHeight===undefined||that._dragDetails.maxWidth===undefined||that._dragDetails.maxHeight===undefined){var computedStyle=getComputedStyle(that);that._dragDetails.minWidth=parseFloat(computedStyle.getPropertyValue('min-width'))||0;that._dragDetails.minHeight=parseFloat(computedStyle.getPropertyValue('min-height'))||0;that._dragDetails.maxWidth=parseFloat(computedStyle.getPropertyValue('max-width'))||0;that._dragDetails.maxHeight=parseFloat(computedStyle.getPropertyValue('max-height'))||0;}that._dragDetails.windowX=that.offsetLeft;that._dragDetails.windowY=that.offsetTop;var elementStyle=that.getBoundingClientRect();if(!that._snapDummy||!that.$.hasClass('jqx-window-snapped-'+that._snapDummy._position)){// Left/Top of the direct parent of the element.
var parentStyle=that.parentElement===document.body?document.documentElement.getBoundingClientRect():that.parentElement.getBoundingClientRect(),scrollX=window.scrollX||window.pageXOffset,scrollY=window.scrollY||window.pageYOffset;that._windowParent.offsetLeft=parentStyle.left+scrollX;that._windowParent.offsetTop=parentStyle.top+scrollY;if(event&&(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'){that._dragDetails.offsetX=event.clientX-elementStyle.left;that._dragDetails.offsetY=event.clientY-elementStyle.top;}if(!that.collapsed){that._dragDetails.width=that.offsetWidth;that._dragDetails.height=that.offsetHeight;if(that.style.width||that.style.height){that._dragDetails.resized=true;}}}else if(that.headerPosition==='right'&&that.collapsed){that._dragDetails.offsetX=elementStyle.left+that.offsetWidth-event.clientX;}if(type==='minimize'||!type){return;}that._dragDetails.type=type;that._dragDetails.started=true;that._dragDetails.snapWindowWidth=that.offsetWidth;that._dragDetails.snapWindowHeight=that.offsetHeight;if(event&&(typeof event==='undefined'?'undefined':babelHelpers.typeof(event))==='object'){that._dragDetails.x=event.pageX;that._dragDetails.y=event.pageY;}else{that._dragDetails.x=that.offsetLeft;that._dragDetails.y=that.offsetTop;}if(type==='resize'){if(that.resizeMode==='none'){delete that._dragDetails;return;}that._dragDetails.top=that.offsetTop;that._dragDetails.left=that.offsetLeft;that._dragDetails.newWidth=that._dragDetails.width;that._dragDetails.newHeight=that._dragDetails.height;if(that.$container.hasClass('jqx-window-resizing-right')){that._dragDetails.side='right';}else if(that.$container.hasClass('jqx-window-resizing-left')){that._dragDetails.side='left';}else if(that.$container.hasClass('jqx-window-resizing-top')){that._dragDetails.side='top';}else if(that.$container.hasClass('jqx-window-resizing-bottom')){that._dragDetails.side='bottom';}else if(that.$container.hasClass('jqx-window-resizing-top-left')){that._dragDetails.side='topLeftCorner';}else if(that.$container.hasClass('jqx-window-resizing-bottom-left')){that._dragDetails.side='bottomLeftCorner';}else if(that.$container.hasClass('jqx-window-resizing-top-right')){that._dragDetails.side='topRightCorner';}else if(that.$container.hasClass('jqx-window-resizing-bottom-right')){that._dragDetails.side='bottomRightCorner';}}}/**
     * Set the window parent.
     */},{key:'_setElementParent',value:function _setElementParent(id){var that=this;that._windowParent.element=undefined;if(that._windowParent.parent&&!that._windowParent.parent.querySelectorAll('jqx-window, jqx-dialog-window, jqx-progress-window, jqx-wait-window, '+'jqx-alert-window, jqx-prompt-window, jqx-multiline-prompt-window')){that._windowParent.parent.style.position='';}if(id instanceof HTMLElement){that._windowParent.element=id;}else if(typeof id==='string'){that._windowParent.element=id==='body'?document.body:document.getElementById(id);}if(!that._windowParent.element){that._windowParent.element=that._windowParent.initialParent.parentElement?that._windowParent.initialParent:document.body;}if(that.parentElement!==that._windowParent.element){that._windowParent.element.appendChild(that);}if(that._windowParent.element===document.body){that._windowParent.element=document.documentElement;that._windowParent.scrollElement=document.scrollingElement;//Neccessary because EDGE and Safari have a bug
that._windowParent.parent=document.body;that._windowParent.borderWidth=0;}else{//Specific case for jqxWindow nesting
if(that._windowParent.element instanceof JQX.Window){that._windowParent.element=that._windowParent.element.$.content;}var computedStyle=getComputedStyle(that.parentElement),windowParentPosition=computedStyle.getPropertyValue('position');that._windowParent.borderWidth=2*parseInt(computedStyle.getPropertyValue('border-width')||0);that._windowParent.parent=that.parentElement;that._windowParent.scrollElement=that._windowParent.element;if(windowParentPosition!=='relative'){that.parentElement.style.position='relative';}}that._setModal();if(that.style.left&&that.offsetLeft>that._windowParent.scrollElement.scrollWidth){that.style.left=that._windowParent.scrollElement.scrollWidth-that.offsetWidth+'px';}if(that.style.top&&that.offsetTop>that._windowParent.scrollElement.scrollHeight){that.style.top=that._windowParent.scrollElement.scrollHeight-that.offsetHeight+'px';}}/**
     * Enable/Disable modal mode
     */},{key:'_setModal',value:function _setModal(){var that=this;delete that._changingFocus;if(!that._windowParent.element){return;}if(!that.modal){if(that._modal&&that._modal.parentElement){that._modal.parentElement.removeChild(that._modal);delete that._modal;}return;}if(!that._modal){that._modal=document.createElement('div');that._modal.classList.add('jqx-modal');}if(that._windowParent.parent!==document.body){that._modal.setAttribute('nested-modal','');}else{that._modal.removeAttribute('nested-modal');}that._modal._window=that;if(that.opened&&!that._modal.parentElement){var zIndex=parseInt(getComputedStyle(that).getPropertyValue('z-index'));if(!isNaN(zIndex)){that._modal.style.zIndex=zIndex-1;}that.parentElement.insertBefore(that._modal,that);}else if(that._modal.parentElement){that._modal.parentElement.removeChild(that._modal);}}},{key:'hasStyleObserver',get:function get(){return false;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'collapsed':{value:false,type:'boolean'},'closeOnMaskClick':{value:false,type:'boolean'},'disableSnap':{value:false,type:'boolean'},'footerPosition':{value:'bottom',allowedValues:['bottom','none'],type:'string'},'footerTemplate':{value:null,type:'any'},'headerButtons':{value:['close','maximize','minimize'],//Default built-in buttons: ['close', 'collapse', 'pin' 'maximize', 'minimize']
type:'array'},'headerPosition':{value:'top',allowedValues:['top','bottom','left','right','none'],type:'string'},'headerTemplate':{value:null,type:'any'},'label':{value:'',type:'string'},'liveResize':{value:false,type:'boolean'},'maximized':{value:false,type:'boolean'},'modal':{value:false,type:'boolean'},'minimized':{value:false,type:'boolean'},'opened':{value:false,type:'boolean'},'pinned':{value:false,type:'boolean'},'resizeIndicator':{value:false,type:'boolean'},'resizeMode':{allowedValues:['none','horizontal','vertical','both','top','bottom','left','right'],value:'none',type:'string'},'windowParent':{value:null,type:'any'}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'document.dragstart':'_dragStartHandler','document.focusin':'_documentFocusInEventHandler','document.move':'_documentMoveHandler','document.up':'_documentUpHandler','document.wheel':'_mouseWheelHandler','document.selectstart':'_documentSelectStartHandler','down':'_downHandler','focus':'_focusHandler','blur':'_focusHandler','move':'_moveHandler','keydown':'_keyDownHandler','keyup':'_keyUpHandler','stylechanged':'_styleChangedHandler'};}},{key:'requires',get:function get(){return{'JQX.Button':'jqxbutton.js'};}}]);return Window;}(JQX.ContentElement));/**
* jqxDialogWindow
*/JQX('jqx-dialog-window',function(_JQX$Window){babelHelpers.inherits(DialogWindow,_JQX$Window);function DialogWindow(){babelHelpers.classCallCheck(this,DialogWindow);return babelHelpers.possibleConstructorReturn(this,(DialogWindow.__proto__||Object.getPrototypeOf(DialogWindow)).apply(this,arguments));}babelHelpers.createClass(DialogWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="pinButton" class="jqx-pin-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="collapseButton" class="jqx-collapse-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="minimizeButton" class="jqx-minimize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="maximizeButton" class="jqx-maximize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content">\n                        <content></content>\n                    </div>\n                    <div id="footer" class="jqx-footer">\n                        <jqx-button id="confirmButton" class="jqx-confirm-button" animation="[[animation]]" theme="[[theme]]">[[confirmLabel]]</jqx-button>\n                        <jqx-button id="cancelButton" class="jqx-cancel-button" animation="[[animation]]" theme="[[theme]]">[[cancelLabel]]</jqx-button>\n                    </div>\n                </div>';}/**
     * Footer Click Event Handler
     * @param {any} event
     */},{key:'_footerClickHandler',value:function _footerClickHandler(event){var that=this,target=event.target;if(target.closest('.jqx-confirm-button')){that.$.fireEvent('confirm');}else if(target.closest('.jqx-cancel-button')){that.$.fireEvent('cancel');}}/**
     * Key Down event handler
     * @param {any} event - event details
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;delete that._changingFocus;if(that.disabled||(that.hasAttribute('dragged')||that.hasAttribute('resized'))&&that._mouseManipulation){return;}event.stopPropagation();//Distance hardcoded to 10px
var distance=event.key==='ArrowDown'||event.key==='ArrowRight'?10:-10;switch(event.key){case'ArrowUp':case'ArrowDown':case'ArrowLeft':case'ArrowRight':{if(that.minimized||document.activeElement!==that){return;}var direction=event.key.indexOf('Right')>-1||event.key.indexOf('Left')>-1;event.preventDefault();if(!direction&&event.altKey){event.key==='ArrowUp'?that.maximize():that.restore();return;}that.$.addClass('no-transition');if(that.maximized){return;}if(event.ctrlKey&&that.resizeMode!=='none'){if(that.hasAttribute('dragged')){that._cancelDragging(event);}if(!that.hasAttribute('resized')){that.$.fireEvent('resizeStart',{'position':{x:event.pageX,y:event.pageY}});}that._resize(direction?'right':'bottom',distance);return;}if(!that.pinned){if(!that.hasAttribute('dragged')){that.setAttribute('dragged','');that.$.fireEvent('dragStart',{'position':{left:event.pageX,top:event.pageY}});}that._drag(distance,direction?'horizontal':'vertical');}//that.style.transition = '';
that.$.removeClass('no-transition');break;}case'Escape':if(that.headerButtons.indexOf('close')>-1&&document.activeElement===that){that.close();}break;case'Tab':if(that.opened&&that.modal){that._changingFocus=true;}break;case'Enter':case' ':{var _target3=event.target.closest&&event.target.closest('jqx-button');if(!_target3){return;}that._isWindowButton(that._buttonPressed=_target3);delete that._buttonPressed;break;}}}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'cancelLabel':{value:'Cancel',type:'string'},'confirmLabel':{value:'Ok',type:'string'},'disableSnap':{value:true,readOnly:true,type:'boolean'},'headerButtons':{value:['close'],type:'array'},'modal':{value:true,readOnly:true,type:'boolean',defaultReflectToAttribute:true}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'footer.click':'_footerClickHandler'};}}]);return DialogWindow;}(JQX.Window));JQX('jqx-alert-window',function(_JQX$DialogWindow){babelHelpers.inherits(AlertWindow,_JQX$DialogWindow);function AlertWindow(){babelHelpers.classCallCheck(this,AlertWindow);return babelHelpers.possibleConstructorReturn(this,(AlertWindow.__proto__||Object.getPrototypeOf(AlertWindow)).apply(this,arguments));}babelHelpers.createClass(AlertWindow,null,[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'headerButtons':{value:[],type:'array'}};}}]);return AlertWindow;}(JQX.DialogWindow));JQX('jqx-prompt-window',function(_JQX$DialogWindow2){babelHelpers.inherits(PromptWindow,_JQX$DialogWindow2);function PromptWindow(){babelHelpers.classCallCheck(this,PromptWindow);return babelHelpers.possibleConstructorReturn(this,(PromptWindow.__proto__||Object.getPrototypeOf(PromptWindow)).apply(this,arguments));}babelHelpers.createClass(PromptWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content">\n                        <content></content>\n                        <jqx-text-box id="textBox"\n                            animation="[[animation]]"\n                            auto-complete="[[autoComplete]]"\n                            max-length="[[maxLength]]"\n                            value="{{value}}"\n                            form="[[form]]"\n                            label="[[promptLabel]]"\n                            hint="[[hint]]"\n                            display-mode="[[displayMode]]"\n                            max-length="[[maxLength]]"\n                            placeholder="[[placeholder]]"\n                            required="[[required]]"\n                            required-message="[[requiredMessage]]"\n                            select-all-on-focus="[[selectAllOnFocus]]"\n                            theme="[[theme]]">\n                        </jqx-text-box>\n                    </div>\n                    <div id="footer" class="jqx-footer">\n                        <jqx-button id="confirmButton" class="jqx-confirm-button flat" animation="[[animation]]" theme="[[theme]]">[[confirmLabel]]</jqx-button>\n                        <jqx-button id="cancelButton" class="jqx-cancel-button flat" animation="[[animation]]" theme="[[theme]]">[[cancelLabel]]</jqx-button>\n                    </div>\n                </div>';}/**
* Element's event listeners.
*/},{key:'_footerClickHandler',/**
     * Footer Click Event Handler
     * @param {any} event
     */value:function _footerClickHandler(event){var that=this,target=event.target;if(target.closest('.jqx-confirm-button')){that.$.fireEvent('confirm',{value:that.$.textBox.value});}else if(target.closest('.jqx-cancel-button')){that.$.fireEvent('cancel',{value:that.$.textBox.value});}}/**
     * Key Down event handler
     * @param {any} event - event details
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;delete that._changingFocus;function endDrag(){if(that._dragDetails){that._dragDetails.started=false;}that.$.removeClass('no-transition');}if(that.disabled||that._dragDetails&&that._dragDetails.started){return;}event.stopPropagation();//Distance hardcoded to 10px
var distance=event.key==='ArrowDown'||event.key==='ArrowRight'?10:-10;//that.style.transition = '';
that.$.removeClass('no-transition');switch(event.key){case'ArrowUp':case'ArrowDown':if(document.activeElement!==that){return;}event.preventDefault();if(event.altKey){event.key==='ArrowUp'?that.maximize():that.restore();endDrag();return;}that.$.addClass('no-transition');if(event.ctrlKey){that._resize('bottom',distance);endDrag();return;}that._drag(distance,'vertical');break;case'ArrowLeft':case'ArrowRight':if(document.activeElement!==that){return;}event.preventDefault();that.$.addClass('no-transition');if(event.ctrlKey){that._resize('right',distance);endDrag();return;}that._drag(distance,'horizontal');that.$.removeClass('no-transition');break;case'Escape':if(that.headerButtons.indexOf('close')>-1&&document.activeElement===that)that.close();break;case'Tab':if(that.opened&&that.modal){that._changingFocus=true;}break;case'Enter':case' ':{var _target4=event.target.closest&&event.target.closest('jqx-button');if(!_target4){return;}that._isWindowButton(that._buttonPressed=_target4);delete that._buttonPressed;break;}}endDrag();}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'autoComplete':{allowedValues:['none','manual','auto','inline'],type:'string',value:'manual'},'confirmLabel':{value:'Ok',type:'string'},'cancelLabel':{value:'Cancel',type:'string'},'disableSnap':{value:true,readOnly:true,type:'boolean'},'displayMode':{value:'default',allowedValues:['default','escaped'],type:'string'},'headerButtons':{value:['close'],type:'array'},'form':{value:'',type:'string'},'hint':{value:null,type:'any?'},'maxLength':{value:null,type:'number?'},'minLength':{value:2,type:'number'},'messages':{extend:true,value:{'en':{'missingReference':'{{elementType}}: Missing reference to {{files}}.'}},type:'object'},'modal':{value:true,readOnly:true,type:'boolean',defaultReflectToAttribute:true},'name':{value:'',type:'string'},'placeholder':{value:'',type:'string'},'promptLabel':{value:'',type:'string?'},'required':{value:false,type:'boolean'},'requiredMessage':{value:'',type:'string'},'selectAllOnFocus':{value:false,type:'boolean'},'value':{value:'',type:'string'}};}},{key:'listeners',get:function get(){return{'footer.click':'_footerClickHandler'};}/**
    * Checks for missing modules.
    */},{key:'requires',get:function get(){return{'JQX.TextBox':'jqxtextbox.js'};}}]);return PromptWindow;}(JQX.DialogWindow));JQX('jqx-multiline-prompt-window',function(_JQX$PromptWindow){babelHelpers.inherits(MultiLinePromptWindow,_JQX$PromptWindow);function MultiLinePromptWindow(){babelHelpers.classCallCheck(this,MultiLinePromptWindow);return babelHelpers.possibleConstructorReturn(this,(MultiLinePromptWindow.__proto__||Object.getPrototypeOf(MultiLinePromptWindow)).apply(this,arguments));}babelHelpers.createClass(MultiLinePromptWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content">\n                        <content></content>\n                       <jqx-multiline-text-box id="textBox"\n                            animation="[[animation]]"\n                            horizontal-scroll-bar-visibility= "[[horizontalScrollBarVisibility]]"\n                            vertical-scroll-bar-visibility= "[[verticalScrollBarVisibility]]"\n                            auto-capitalize="[[autoCapitalize]]"\n                            auto-expand = "[[autoExpand]]"\n                            selection-direction= "[[selectionDirection]]"\n                            selection-end= "[[selectionEnd]]"\n                            selection-start="[[selectionStart]]"\n                            spell-check= "[[spellCheck]]"\n                            wrap="[[wrap]]"\n                            max-length="[[maxLength]]"\n                            value="{{value}}"\n                            form="[[form]]"\n                            label="[[promptLabel]]"\n                            hint="[[hint]]"\n                            display-mode="[[displayMode]]"\n                            max-length="[[maxLength]]"\n                            placeholder="[[placeholder]]"\n                            required="[[required]]"\n                            required-message="[[requiredMessage]]"\n                            select-all-on-focus="[[selectAllOnFocus]]"\n                            theme="[[theme]]">\n                       </jqx-multiline-text-box>\n                    </div>\n                    <div id="footer" class="jqx-footer">\n                        <jqx-button id="confirmButton" class="jqx-confirm-button flat" animation="[[animation]]" theme="[[theme]]">[[confirmLabel]]</jqx-button>\n                        <jqx-button id="cancelButton" class="jqx-cancel-button flat" animation="[[animation]]" theme="[[theme]]">[[cancelLabel]]</jqx-button>\n                    </div>\n                </div>';}/**
   * Element's event listeners.
   */},{key:'_footerClickHandler',/**
    * Footer Click Event Handler
    * @param {any} event
    */value:function _footerClickHandler(event){var that=this,target=event.target;if(target.closest('.jqx-confirm-button')){that.$.fireEvent('confirm',{value:that.$.textBox.value});}else if(target.closest('.jqx-cancel-button')){that.$.fireEvent('cancel',{value:that.$.textBox.value});}}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'autoCapitalize':{value:'none',allowedValues:['none','words','characters'],type:'string'},'autoExpand':{value:false,type:'boolean'},'headerButtons':{value:['close'],type:'array'},'horizontalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'modal':{value:true,readOnly:true,type:'boolean',defaultReflectToAttribute:true},'selectionDirection':{value:'none',allowedValues:['forward','backward','none'],type:'string'},'selectionEnd':{value:0,reflectToAttribute:false,type:'number'},'selectionStart':{value:0,reflectToAttribute:false,type:'number'},'spellCheck':{value:false,type:'boolean'},'verticalScrollBarVisibility':{type:'string',value:'auto',allowedValues:['auto','disabled','hidden','visible']},'wrap':{value:'soft',allowedValues:['hard','soft','off'],type:'string'}};}},{key:'listeners',get:function get(){return{'footer.click':'_footerClickHandler'};}/**
    * Checks for missing modules.
    */},{key:'requires',get:function get(){return{'JQX.MultilineTextBox':'jqxmultilinetextbox.js'};}}]);return MultiLinePromptWindow;}(JQX.PromptWindow));JQX('jqx-progress-window',function(_JQX$Window2){babelHelpers.inherits(ProgressWindow,_JQX$Window2);function ProgressWindow(){babelHelpers.classCallCheck(this,ProgressWindow);return babelHelpers.possibleConstructorReturn(this,(ProgressWindow.__proto__||Object.getPrototypeOf(ProgressWindow)).apply(this,arguments));}babelHelpers.createClass(ProgressWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content" inner-h-t-m-l="[[innerHTML]]">\n                        <content></content>\n                    </div>\n                    <div id="footer" class="jqx-footer">\n                        <jqx-progress-bar id="progressBar"\n                            animation="[[animation]]"\n                            min="[[min]]"\n                            max="[[max]]"\n                            indeterminate="[[inditerminate]]"\n                            inverted="[[inverted]]"\n                            format-function="[[formatFunction]]"\n                            show-progress-value="[[showProgressValue]]"\n                            theme="[[theme]]"\n                            value="{{value}}">\n                        </jqx-progress-bar>\n                        <jqx-button id="completeButton" class="jqx-complete-button jqx-visibility-hidden" animation="[[animation]]" theme="[[theme]]">[[completeLabel]]</jqx-button>\n                    </div>\n                </div>';}/** Checks for missing modules.
        */},{key:'propertyChangedHandler',/**
    * Updates the element when a property is changed.
    * @param {string} propertyName The name of the property.
    * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
    * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
    */value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;switch(propertyName){case'value':that._handleCompletion();break;default:babelHelpers.get(ProgressWindow.prototype.__proto__||Object.getPrototypeOf(ProgressWindow.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);break;}}/**
     * Create Element method
     */},{key:'_createElement',value:function _createElement(){var that=this;that._handleCompletion();}/**
     * Show the complete button when value === max
     */},{key:'_handleCompletion',value:function _handleCompletion(){var that=this;if(that.$.completeButton){if(that.value>=that.max){that.$completeButton.removeClass('jqx-visibility-hidden');that.$progressBar.addClass('jqx-visibility-hidden');}else{that.$completeButton.addClass('jqx-visibility-hidden');that.$progressBar.removeClass('jqx-visibility-hidden');}}}/**
     * Key Down event handler
     * @param {any} event - event details
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;delete that._changingFocus;function endDrag(){if(that._dragDetails){that._dragDetails.started=false;}that.$.removeClass('no-transition');}if(that.disabled||that._dragDetails&&that._dragDetails.started){return;}event.stopPropagation();//Distance hardcoded to 10px
var distance=event.key==='ArrowDown'||event.key==='ArrowRight'?10:-10;//that.style.transition = '';
that.$.removeClass('no-transition');switch(event.key){case'ArrowUp':case'ArrowDown':if(document.activeElement!==that){return;}event.preventDefault();if(event.altKey){event.key==='ArrowUp'?that.maximize():that.restore();endDrag();return;}that.$.addClass('no-transition');if(event.ctrlKey){that._resize('bottom',distance);endDrag();return;}that._drag(distance,'vertical');that.$.removeClass('no-transition');break;case'ArrowLeft':case'ArrowRight':if(document.activeElement!==that){return;}event.preventDefault();that.$.addClass('no-transition');if(event.ctrlKey){that._resize('right',distance);endDrag();return;}that._drag(distance,'horizontal');that.$.removeClass('no-transition');break;case'Escape':if(that.headerButtons.indexOf('close')>-1&&document.activeElement===that){that.close();}break;case'Tab':if(that.opened&&that.modal){that._changingFocus=true;}break;case'Enter':case' ':{var _target5=event.target.closest&&event.target.closest('jqx-button');if(!_target5){return;}that._isWindowButton(that._buttonPressed=_target5);delete that._buttonPressed;break;}}endDrag();}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'completeLabel':{value:'Continue',type:'string'},'disableSnap':{value:true,readOnly:true,type:'boolean'},'headerButtons':{value:['close'],type:'array'},'indeterminate':{value:false,type:'boolean'},'inverted':{value:false,type:'boolean'},'formatFunction':{value:null,type:'function'},'max':{value:100,type:'number'},'modal':{value:true,readOnly:true,type:'boolean',defaultReflectToAttribute:true},'min':{value:0,type:'number'},'showProgressValue':{value:false,type:'boolean'},'value':{value:0,type:'number?'}};}},{key:'requires',get:function get(){return{'JQX.ProgressBar':'jqxprogressbar.js'};}}]);return ProgressWindow;}(JQX.Window));JQX('jqx-tabs-window',function(_JQX$Window3){babelHelpers.inherits(TabsWindow,_JQX$Window3);function TabsWindow(){babelHelpers.classCallCheck(this,TabsWindow);return babelHelpers.possibleConstructorReturn(this,(TabsWindow.__proto__||Object.getPrototypeOf(TabsWindow)).apply(this,arguments));}babelHelpers.createClass(TabsWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="minimizeButton" class="jqx-minimize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="maximizeButton" class="jqx-maximize-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div id="contentSection" class="jqx-content">\n                       <jqx-tabs id="tabsElement"\n                            animation="[[animation]]"\n                            add-new-tab="[[addNewTab]]"\n                            allow-toggle="[[allowToggle]]"\n                            close-button-mode="[[tabCloseButtonMode]]"\n                            close-buttons="[[tabCloseButtons]]"\n                            disabled="[[disabled]]"\n                            overflow="[[tabOverflow]]"\n                            reorder="[[tabReorder]]"\n                            resize="[[tabResize]]"\n                            scroll-buttons-position="[[tabScrollButtonsPosition]]"\n                            selected-index="{{selectedIndex}}"\n                            selection-mode="[[selectionMode]]"\n                            tab-layout="[[tabLayout]]"\n                            tab-position="[[tabPosition]]"\n                            tab-text-orientation="[[tabTextOrientation]]"\n                            theme="[[theme]]">\n                            <content></content>\n                        </jqx-tabs>\n                    </div>\n                    <div id="footer" class="jqx-footer jqx-hidden"></div>\n                </div>';}/**
    * Checks for missing modules.
    */},{key:'appendChild',/**
     * Appens a Tab item to the Window
     * @param {any} node
     */value:function appendChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.appendChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'appendChild',node:'node'}));return;}if(!(node instanceof JQX.TabItem)){that.error(that.localize('tabItemRequired',{method:'removeChild'}));}that.$.tabsElement.appendChild(node);}/**
     * Insert Tab items into the Window
     * @param {any} index
     * @param {any} details
     */},{key:'insert',value:function insert(index,details){this.$.tabsElement.insert(index,details);}/**
     * Insert a Tab item before another item inside the Window
     * @param {any} node
     */},{key:'insertBefore',value:function insertBefore(node,referenceNode){this.$.tabsElement.insertBefore(node,referenceNode);}/**
     * Removes a Tab item from the Window
     */},{key:'remove',value:function remove(index){this.$.tabsElement.remove(index);}/**
     * Removes a Tab item from the Window
     * @param {any} node
     */},{key:'removeChild',value:function removeChild(node){var that=this;if(!that.isCompleted||node instanceof HTMLElement&&node.classList.contains('jqx-resize-trigger-container')){var args=Array.prototype.slice.call(arguments,2);return HTMLElement.prototype.removeChild.apply(that,args.concat(Array.prototype.slice.call(arguments)));}if(!node){that.error(that.localize('invalidNode',{elementType:that.nodeName.toLowerCase(),method:'removeChild',node:'node'}));return;}if(!(node instanceof JQX.TabItem)){that.error(that.localize('tabItemRequired',{method:'removeChild'}));}if(!that.contains(node)){that.error(that.localize('referenceNodeNotChild',{argument:'node'}));}that.$.tabsElement.removeChild(node);}/**
     * Selects a Tab item inside the Window
     * @param {any} index
     */},{key:'select',value:function select(index){this.$.tabsElement.select(index);}/**
     * Update Tab Item element method
     * @param {any} index
     * @param {any} label
     * @param {any} content
     */},{key:'update',value:function update(index,label,content){this.$.tabsElement.update(index,label,content);}/**
     * Returns all tab items 
     */},{key:'propertyChangedHandler',/**
     * Updates the element when a property is changed.
     * @param {string} propertyName The name of the property.
     * @param {number/string} oldValue The previously entered value. Max, min and value are of type Number. The rest are of type String.
     * @param {number/string} newValue The new entered value. Max, min and value are of type Number. The rest are of type String.
     */value:function propertyChangedHandler(propertyName,oldValue,newValue){var that=this;if(propertyName!=='collapsed'){babelHelpers.get(TabsWindow.prototype.__proto__||Object.getPrototypeOf(TabsWindow.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);}switch(propertyName){case'theme':if(oldValue!==''){that.$.closeButton.classList.remove(oldValue);that.$.collapseButton.classList.remove(oldValue);that.$.maximizeButton.classList.remove(oldValue);that.$.pinButton.classList.remove(oldValue);}that._applyTheme(newValue);break;case'autoHideWindow':that._handleAutoHideWindow();break;case'autoHide':if(!newValue){//Delete the additionaly added cached property
if(that.$.tabsElement.selectedIndex!==null){that.$.tabsElement._tabs[that.$.tabsElement.selectedIndex]._autoHideWindowSize=undefined;}if(that._autoHideWindow){that._autoHideWindow.close();}}break;case'dataSource':that.$.tabsElement.dataSource=newValue;break;case'layout':that._handleLayoutProperty();break;case'collapsible':case'collapsed':case'locked':case'max':case'min':case'size':{var isInsideLayout=that.closest('jqx-docking-layout'),splitterItemParent=that.closest('jqx-splitter-item');if(!isInsideLayout){if(propertyName==='collapsed'){babelHelpers.get(TabsWindow.prototype.__proto__||Object.getPrototypeOf(TabsWindow.prototype),'propertyChangedHandler',this).call(this,propertyName,oldValue,newValue);}return;}if(splitterItemParent){splitterItemParent[propertyName]=newValue;}break;}}}/**
     * Apply theme to internal custom elements
     */},{key:'_applyTheme',value:function _applyTheme(theme){var that=this;if(theme!==''){var headerButtons=that.$.buttonsContainer.children;for(var _i637=0;_i637<headerButtons.length;_i637++){headerButtons[_i637].classList.add(theme);}}}/**
     * AutoHideContainer Close event handler
     */},{key:'_autoHideWindowCloseHandler',value:function _autoHideWindowCloseHandler(){var that=this;if(that.allowToggle&&that.$.tabsElement.selectedIndex!==null){that.$.tabsElement.select(that.$.tabsElement.selectedIndex);}if(that._autoHideWindow){that._moveContent(that._autoHideWindow.items[0],that._autoHideWindow._tab);}}/**
     * AutoHideContainer Open event handler
     * @param {any} event
     */},{key:'_autoHideWindowOpenHandler',value:function _autoHideWindowOpenHandler(){var that=this;if(that.$.tabsElement.selectedIndex){that._handleAutoHide(that.$.tabsElement.selectedIndex);}}/**
    * Create method called on ready stage
    **/},{key:'_createElement',value:function _createElement(){var that=this;if(!that.$.tabsElement.$.tabHeaderControls.innerHTML){that.$.tabsElement.$tabHeaderControls.addClass('jqx-hidden');}that.$.tabsElement.dataSource=that.dataSource;that._applyTheme(that.theme);that._handleAutoHideWindow();if(that.autoHide){that._handleAutoHide(that.$.tabsElement.selectedIndex);}//Two-way binding possible issue. The Tabs element has selectedIndex but TabsWindow element has null
//This leads to setting the attribute 'selectedIndex' of the Tabs element to null even tho 
//It's actual value is not null
if(!that.allowToggle&&!that.selectedIndex&&that.$.tabsElement.selectedIndex!==null){that.selectedIndex=that.$.tabsElement.selectedIndex;that.$.tabsElement.setAttribute('selected-index',that.selectedIndex);}that._handleLayoutProperty();var isInsideLayout=that.closest('jqx-docking-layout'),splitterItemParent=that.closest('jqx-splitter-item');if(isInsideLayout&&splitterItemParent){splitterItemParent.collapsible=that.collapsible;splitterItemParent.collapsed=that.collapsed;splitterItemParent.min=that.min;splitterItemParent.max=that.max;splitterItemParent.size=that.size;splitterItemParent.locked=that.locked;}}/**
     * Hnadle layout property
     */},{key:'_handleLayoutProperty',value:function _handleLayoutProperty(){var that=this,ownerLayout=that.closest('jqx-docking-layout');if(!JQX.DockingLayout){return;}if(ownerLayout){that.layout=ownerLayout;return;}if(that.layout instanceof JQX.DockingLayout){return;}if(typeof that.layout==='string'){that.layout=document.getElementById(that.layout);}}/**
    * Window header double click handler.
    */},{key:'_headerDblCickHandler',value:function _headerDblCickHandler(event){var that=this,target=event.originalEvent.target;//NOTE: DoubleCLick + ctrlKey is used in DockingLayout
if(event.ctrlKey||target!==that.$.headerSection&&target!==that.$.header||that.$.maximizeButton&&that.$.maximizeButton.offsetHeight===0){return;}that.maximized?that.restore():that.maximize();}/**
    * Document Down event handler
    * @param {any} event - event details
    */},{key:'_documentUpHandler',value:function _documentUpHandler(event){var that=this,target=event.originalEvent.target.closest?event.originalEvent.target.closest('.jqx-window'):event.originalEvent.target,isClickInside=target===that||target===that._autoHideWindow||that._isAutoHideWindowClicked,isInsideLayout=that.closest('jqx-docking-layout');if(isInsideLayout&&isInsideLayout.disabled){delete that._isWindowContentClicked;return;}babelHelpers.get(TabsWindow.prototype.__proto__||Object.getPrototypeOf(TabsWindow.prototype),'_documentUpHandler',this).call(this,event);delete that._isAutoHideWindowClicked;if(!that.autoHide||!that._autoHideWindow){return;}if(!isClickInside||!that._autoHideWindow.opened){that.selectedIndex=null;if(that._autoHideWindow.parentElement&&that._autoHideWindow.parentElement.closest('.jqx-window')===that){that._autoHideWindow.close();}}}/**
     * Handles the positioning and content of the auto hide container
     */},{key:'_handleAutoHide',value:function _handleAutoHide(index){var that=this;if(!that.autoHide||index===null){return;}if(!that._autoHideWindow){that._handleAutoHideWindow(true);}if(!that._autoHideWindow){return;}if(that._autoHideWindow._tabsWindow&&that._autoHideWindow._tabsWindow!==that){that._autoHideWindow._tabsWindow.selectedIndex=null;}var targetTab=that.$.tabsElement._tabs[index];if(that._autoHideWindow._tab!==targetTab){that._moveContent(that._autoHideWindow.items[0],that._autoHideWindow._tab);}that._autoHideWindow.label=targetTab.label;that._autoHideWindow.draggable=targetTab.draggable;that._autoHideWindow.floatable=targetTab.floatable;that._autoHideWindow._tab=targetTab;that._moveContent(that._autoHideWindow._tab,that._autoHideWindow.items[0]);that._autoHideWindow.bringToFront();that._setAutoHideWindowSize(index);that._autoHideWindow.open();that._autoHideWindow._tabsWindow=that;}/**
     * Sets the cursor on element move event
     * @param {any} event
     */},{key:'_moveHandler',value:function _moveHandler(event){var that=this,isInsideLayout=that.closest('jqx-docking-layout');if(isInsideLayout){var layoutItems=isInsideLayout.items;if(layoutItems.indexOf(that)>-1){return;}}//iOS Safari fix for dragging (prevents window scrolling)
if(JQX.Utilities.Core.isMobile&&!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform)&&that.layout instanceof JQX.DockingLayout&&that.layout.hasAttribute('dragged')){event.originalEvent.preventDefault();}babelHelpers.get(TabsWindow.prototype.__proto__||Object.getPrototypeOf(TabsWindow.prototype),'_moveHandler',this).call(this,event);}/**
     * Calculates the width/height/top/left of the autoHideWindow
     * @param {any} selectedIndex - the selectedIndex of the tabs inside the TabsWindow
     */},{key:'_setAutoHideWindowSize',value:function _setAutoHideWindowSize(selectedIndex){var that=this;if(!that._autoHideWindow){return;}that._autoHideWindow.$.addClass('no-transition');that._autoHideWindow.style.maxWidth=that._autoHideWindow.style.maxHeight='';var targetTab=that.$.tabsElement._tabs[selectedIndex],autoHideWindowParent=that._autoHideWindow.closest('jqx-docking-layout')||that._autoHideWindow.parentElement,windowParentRect=autoHideWindowParent.getBoundingClientRect(),tabsRect=that.$.tabsElement.getBoundingClientRect();if(!targetTab){return;}if(that.tabPosition==='top'||that.tabPosition==='bottom'){that._autoHideWindow.resizeMode=that.tabPosition==='top'?'bottom':'top';that._autoHideWindow.style.width=that.$.tabsElement.offsetWidth+'px';var height=targetTab._autoHideWindowSize?parseFloat(targetTab._autoHideWindowSize)||'':'';if(JQX.DockingLayout&&autoHideWindowParent instanceof JQX.DockingLayout){if(height){height=Math.min(autoHideWindowParent.$.itemsContainer.offsetHeight,height)+'px';}that._autoHideWindow.style.maxHeight=autoHideWindowParent.$.itemsContainer.offsetHeight+'px';}that._autoHideWindow.style.height=height;that._autoHideWindow.style.left=tabsRect.left-windowParentRect.left+'px';if(that._autoHideWindow){if(that.tabPosition==='top'){that._autoHideWindow.style.top=tabsRect.top+-windowParentRect.top+tabsRect.height+'px';}else{that._autoHideWindow.style.top=tabsRect.top-windowParentRect.top-that._autoHideWindow.offsetHeight+'px';}}}else{that._autoHideWindow.resizeMode=that.tabPosition==='left'?'right':'left';that._autoHideWindow.style.height=that.$.tabsElement.offsetHeight+'px';var width=targetTab._autoHideWindowSize?parseFloat(targetTab._autoHideWindowSize)||'':'';if(autoHideWindowParent instanceof JQX.DockingLayout){if(width){width=Math.min(autoHideWindowParent.$.itemsContainer.offsetWidth,width)+'px';}that._autoHideWindow.style.maxWidth=autoHideWindowParent.$.itemsContainer.offsetWidth+'px';}that._autoHideWindow.style.width=width;that._autoHideWindow.style.top=tabsRect.top-windowParentRect.top+'px';if(that.tabPosition==='left'){that._autoHideWindow.style.left=tabsRect.left-windowParentRect.left+that.$.tabsElement.offsetWidth+'px';}else{that._autoHideWindow.style.left=tabsRect.left-windowParentRect.left-that._autoHideWindow.offsetWidth+'px';}}//Causing the maxWidth/maxHeight to be recalculated
if(that._autoHideWindow._dragDetails){that._autoHideWindow._dragDetails.maxWidth=undefined;}//Make sure the new dimensions are set
that._autoHideWindow._setDragDetails('resize');that._autoHideWindow.$.removeClass('no-transition');}/**
     * Handles the autoHideWindow instance when 'autoHide' property is enabled
     */},{key:'_handleAutoHideWindow',value:function _handleAutoHideWindow(createWindow){var that=this;if(that.autoHideWindow){if(that._autoHideWindow){that._autoHideWindow.parentElement.removeChild(that._autoHideWindow);}if(typeof that.autoHideWindow==='string'){that._autoHideWindow=document.getElementById(that.autoHideWindow);return;}else if(that.autoHideWindow instanceof JQX.Window){that._autoHideWindow=that.autoHideWindow;return;}}if(!createWindow||that._autoHideWindow||that.$.contentSection.children.length===2&&that.$.contentSection.children[1]instanceof JQX.Window){return;}//Create the autoHideWindow
var autoHideWindow=document.createElement('jqx-window');autoHideWindow.$=JQX.Utilities.Extend(autoHideWindow);autoHideWindow.disableSnap=autoHideWindow.pinned=true;autoHideWindow.headerButtons=['close'];that.$.contentSection.appendChild(autoHideWindow);that._autoHideWindow=autoHideWindow;}/**
     * Moves the content from one element to another. Used for the autoHideWindow
     * @param {any} from - Source element
     * @param {any} to - target element
     */},{key:'_moveContent',value:function _moveContent(from,to){if(!from||!to){return;}var contentNodes=[].slice.call(from.$.content.childNodes);for(var _i638=0;_i638<contentNodes.length;_i638++){to.appendChild(contentNodes[_i638]);}}/**
     * jqxtabs element change event handler
     * @param {any} event
     */},{key:'_tabsChangeHandler',value:function _tabsChangeHandler(event){var that=this;if(event.target!==that.$.tabsElement||!that.autoHide){return;}if(!that._autoHideWindow){that._handleAutoHideWindow(true);}if(event.detail.oldIndex!==null&&that._autoHideWindow.opened){var previousTabItem=that.$.tabsElement._tabs[event.detail.oldIndex];previousTabItem._autoHideWindowSize=that._autoHideWindow.style[that.$.tabsElement.tabPosition==='right'||that.$.tabsElement.tabPosition==='left'?'width':'height'];}if(!that.autoHide||event.detail.index===null||event.detail.index===undefined){that._autoHideWindow.close();return;}that._handleAutoHide(event.detail.index);}/**
     * Tabs element focus/blur event handler
     */},{key:'_tabsFocusHandler',value:function _tabsFocusHandler(event){var that=this;if(event.type==='focus'){that.bringToFront();that.setAttribute('focus','');}else{that.removeAttribute('focus');}}},{key:'items',get:function get(){var that=this;if(!that.isCompleted||!that.$.tabsElement){return;}return this.$.tabsElement._tabs;}/**
     * Returns all tab labels
     */},{key:'itemLabels',get:function get(){var that=this;if(!that.$){return;}return this.$.tabsElement._tabLabelContainers;}/**
    * Returns a list of all sibling TabsWindow components IF the element is docked inside a DockingLaoyut
    */},{key:'siblings',get:function get(){var that=this;var siblings=[];if(!that.isCompleted){return siblings;}var closestSplitter=that.closest('jqx-splitter');if(!closestSplitter||!closestSplitter.closest('jqx-docking-layout')){return siblings;}var items=closestSplitter._items;if(!items||!items.length){return siblings;}for(var s=0;s<items.length;s++){var _item78=items[s];if(_item78!==that.closest('jqx-splitter-item')){var siblingItem=_item78.querySelector('jqx-tabs-window');if(siblingItem.closest('jqx-splitter')===closestSplitter){siblings.push(_item78.querySelector('jqx-tabs-window'));}}}return siblings;}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'disableSnap':{value:true,readOnly:true,type:'boolean'},//Property used by DockingLayouts only
'dropPosition':{//allowedValues: ['all', 'top', 'left', 'right', 'bottom', 'center', 'header', 'none'],
value:['all'],type:'array'},'addNewTab':{value:false,type:'boolean'},'allowToggle':{value:false,type:'boolean'},'autoHide':{value:false,type:'boolean'},'autoHideWindow':{value:null,type:'any'},'dataSource':{value:null,type:'array?',reflectToAttribute:false},'tabCloseButtonMode':{value:'default',allowedValues:['default','selected'],type:'string'},'tabCloseButtons':{value:false,type:'boolean'},'messages':{value:{'en':{'ambiguousIndexes':'jqx-tabs: Initially set jqx-tab-item indexes are ambiguous and are ignored in favour of the HTML structure.','detailsObjectRequired':'jqx-tabs: The method "insert" requires a details Object to be passed as a second argument.','invalidIndex':'jqx-tabs: "{{method}}" method accepts an index of type number.','referenceNodeNotChild':'jqx-tabs: Passed {{argument}} is not part of this jqx-tabs element.','tabItemRequired':'jqx-tabs: The method "{{method}}" requires a "jqx-tab-item" element to be passed as an argument.'}},type:'object',extend:true},'tabOverflow':{value:'auto',allowedValues:['auto','hidden','scroll'],type:'string'},'tabReorder':{value:false,type:'boolean'},'tabResize':{value:false,type:'boolean'},'tabScrollButtonsPosition':{value:'both',allowedValues:['near','far','both'],type:'string'},'selectedIndex':{value:null,type:'number?'},'selectionMode':{value:'click',allowedValues:['click','dblclick','mouseenter','none'],type:'string'},'collapsed':{value:false,type:'boolean'},'collapsible':{value:false,type:'boolean'},'locked':{value:false,type:'boolean'},'max':{value:'',type:'any'},'min':{value:'',type:'any'},'size':{value:'',type:'any'},'tabLayout':{value:'scroll',allowedValues:['scroll','dropdown','wrap','shrink'],type:'string',defaultReflectToAttribute:true},'tabPosition':{value:'top',allowedValues:['top','bottom','left','right','hidden'],type:'string'},'tabTextOrientation':{value:'horizontal',allowedValues:['horizontal','vertical'],type:'string'},//Property used by DockingLayouts only
'layout':{value:null,type:'any'}};}/**
    * Element's event listeners.
    */},{key:'listeners',get:function get(){return{'tabsElement.blur':'_tabsFocusHandler','tabsElement.change':'_tabsChangeHandler','tabsElement.focus':'_tabsFocusHandler','autoHideWindow.close':'_autoHideWindowCloseHandler','autoHideWindow.open':'_autoHideWindowOpenHandler'};}},{key:'requires',get:function get(){return{'JQX.Tabs':'jqxtabs.js'};}}]);return TabsWindow;}(JQX.Window));JQX('jqx-wait-window',function(_JQX$ProgressWindow){babelHelpers.inherits(WaitWindow,_JQX$ProgressWindow);function WaitWindow(){babelHelpers.classCallCheck(this,WaitWindow);return babelHelpers.possibleConstructorReturn(this,(WaitWindow.__proto__||Object.getPrototypeOf(WaitWindow)).apply(this,arguments));}babelHelpers.createClass(WaitWindow,[{key:'template',/**
   * Element's HTML template.
   */value:function template(){return'<div id="container">\n                    <div id="headerSection" class="jqx-header-section">\n                        <div id="header" class="jqx-header">[[label]]</div>\n                        <div id="buttonsContainer" class="jqx-buttons-container">\n                            <jqx-button id="closeButton" class="jqx-close-button" animation="[[animation]]" theme="[[theme]]"></jqx-button>\n                        </div>\n                    </div>\n                    <div class="jqx-content">\n                        <content></content>\n                        <jqx-progress-bar id="progressBar" animation="[[animation]]" indeterminate theme="[[theme]]"></jqx-progress-bar>\n                    </div>\n                    <div id="footer" class="jqx-footer"></div>\n                </div>';}/**
     * Key Down event handler
     * @param {any} event - event details
     */},{key:'_keyDownHandler',value:function _keyDownHandler(event){var that=this;delete that._changingFocus;function endDrag(){if(that._dragDetails){that._dragDetails.started=false;}that.$.removeClass('no-transition');}if(that.disabled||that._dragDetails&&that._dragDetails.started){return;}event.stopPropagation();//Distance hardcoded to 10px
var distance=event.key==='ArrowDown'||event.key==='ArrowRight'?10:-10;//that.style.transition = '';
that.$.removeClass('no-transition');switch(event.key){case'ArrowUp':case'ArrowDown':if(document.activeElement!==that){return;}event.preventDefault();if(event.altKey){event.key==='ArrowUp'?that.maximize():that.restore();endDrag();return;}that.$.addClass('no-transition');if(event.ctrlKey){that._resize('bottom',distance);endDrag();return;}that._drag(distance,'vertical');break;case'ArrowLeft':case'ArrowRight':if(document.activeElement!==that){return;}event.preventDefault();that.$.addClass('no-transition');if(event.ctrlKey){that._resize('right',distance);endDrag();return;}that._drag(distance,'horizontal');break;case'Tab':if(that.opened&&that.modal){that._changingFocus=true;}break;case'Enter':case' ':{var _target6=event.target.closest&&event.target.closest('jqx-button');if(!_target6){return;}that._isWindowButton(that._buttonPressed=_target6);delete that._buttonPressed;break;}}endDrag();}}],[{key:'properties',/**
    * Element's properties
    */get:function get(){return{'headerButtons':{value:[],type:'array'},'disableSnap':{value:true,readOnly:true,type:'boolean'},'modal':{value:true,readOnly:true,type:'boolean',defaultReflectToAttribute:true},'pinned':{value:true,type:'boolean',readOnly:true}};}}]);return WaitWindow;}(JQX.ProgressWindow));