"use strict";JQX("jqx-check-box",function(e){function t(){return babelHelpers.classCallCheck(this,t),babelHelpers.possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return babelHelpers.inherits(t,e),babelHelpers.createClass(t,[{key:"template",value:function(){return"<div id='container' class='jqx-container'>\n                 <div class ='jqx-overlay'></div>\n                 <span id='checkBoxInput' class ='jqx-input'></span>\n                 <span id='checkBoxLabel' inner-h-t-m-l='[[innerHTML]]' class ='jqx-label'><content></content></span>\n                 <input id='hiddenInput' class ='jqx-hidden-input' type='hidden'>\n               </div>"}},{key:"_focusHandler",value:function(){this.$.setAttributeValue("focus",!0)}},{key:"_blurHandler",value:function(){this.$.setAttributeValue("focus",!1)}},{key:"_mouseEnterHandler",value:function(){this.$.setAttributeValue("hover",!0)}},{key:"_mouseLeaveHandler",value:function(){this.$.setAttributeValue("hover",!1)}},{key:"ready",value:function(){var e=this;babelHelpers.get(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"ready",this).call(this),e.indeterminate&&(e._valueCashe=e.checked,e.checked=null),e._updateHidenInputNameAndValue()}},{key:"propertyChangedHandler",value:function(e,n,a){babelHelpers.get(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"propertyChangedHandler",this).call(this,e,n,a);var l=this;switch(l._updateContentProperties(),e){case"indeterminate":a?(l._valueCashe=l.checked,l.checked=null):l.checked=l._valueCashe,l._updateHidenInputNameAndValue();break;case"value":case"checked":l._updateHidenInputNameAndValue();break;case"name":l._updateHidenInputName()}}},{key:"_documentUpHandler",value:function(e){var t=this,n=t.enableShadowDOM?e.originalEvent.composedPath()[0]:e.originalEvent.target;if(t._pressed&&(t._pressed=!1,t.$.setAttributeValue("active",!1),!(t.disabled||t.readonly||"input"===t.checkMode&&n!==t.$.checkBoxInput||"label"===t.checkMode&&n!==t.$.checkBoxLabel))){if("press"===t.clickMode)return e.preventDefault(),void e.stopPropagation();t._changeCheckState("pointer"),t.focus(),t._handleTextSelection(),t._updateHidenInputNameAndValue()}}},{key:"_downHandler",value:function(e){var t=this,n=t.enableShadowDOM?e.originalEvent.composedPath()[0]:e.originalEvent.target;if(!(t.disabled||t.readonly||"input"===t.checkMode&&n!==t.$.checkBoxInput||"label"===t.checkMode&&n!==t.$.checkBoxLabel)){if(t.$.setAttributeValue("active",!0),t.hasRippleAnimation){var a=t.$.checkBoxInput.getBoundingClientRect(),l=window.scrollX||window.pageXOffset,o=window.scrollY||window.pageYOffset;JQX.Utilities.Animation.Ripple.animate(t.$.checkBoxInput,a.left+a.width/2+l,a.top+a.height/2+o)}t._pressed=!0,"press"!==t.clickMode&&"pressAndRelease"!==t.clickMode||(t._changeCheckState("pointer"),t.$.fireEvent("click"),t.focus(),t._updateHidenInputNameAndValue())}}}],[{key:"properties",get:function(){return{checkMode:{value:"both",allowedValues:["both","input","label"],type:"string"},type:{value:"checkbox",type:"string",defaultReflectToAttribute:!0,readonly:!0}}}},{key:"listeners",get:function(){return{down:"_downHandler","document.up":"_documentUpHandler","checkBoxInput.mouseenter":"_mouseEnterHandler","checkBoxInput.mouseleave":"_mouseLeaveHandler",focus:"_focusHandler",blur:"_blurHandler"}}},{key:"styleUrls",get:function(){return["jqx.checkbox.css"]}}]),t}(JQX.ToggleButton));
//# sourceMappingURL=jqxcheckbox.js.map
