"use strict";JQX("jqx-multi-split-button",function(e){function t(){return babelHelpers.classCallCheck(this,t),babelHelpers.possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return babelHelpers.inherits(t,e),babelHelpers.createClass(t,[{key:"template",value:function(){return'<div id="container">\n                    <span class="jqx-label" id="label">[[label]]</span>\n                    <div id="content" class="jqx-content">\n                        <div id="actionButton" class ="jqx-input jqx-action-button">\n                         <template>\n                                 <div class="jqx-multi-split-button-buttons" *items={{buttonsDataSource}}><span class="jqx-action-split-button" inner-H-T-M-L={{item}}></span></div>\n                          </template>\n                        </div>\n                        <span id="dropDownButton" class="jqx-drop-down-button">\n                            <span id="arrow"></span>\n                        </span>\n                        <div id="dropDownContainer" class="jqx-drop-down jqx-drop-down-container jqx-visibility-hidden">\n                            <jqx-list-box id="listBox" unfocusable\n                                    animation="[[animation]]"\n                                    data-source="[[dataSource]]"\n                                    disabled="[[disabled]]"\n                                    display-loading-indicator="[[displayLoadingIndicator]]"\n                                    display-member="[[displayMember]]"\n                                    filterable="[[filterable]]"\n                                    filter-mode="[[filterMode]]"\n                                    filter-input-placeholder="[[filterInputPlaceholder]]"\n                                    grouped="[[grouped]]"\n                                    group-member="[[groupMember]]"\n                                    item-height="[[itemHeight]]"\n                                    item-template="[[itemTemplate]]"\n                                    incremental-search-delay="[[incrementalSearchDelay]]"\n                                    incremental-search-mode="[[incrementalSearchMode]]"\n                                    loading-indicator-placeholder="[[loadingIndicatorPlaceholder]]"\n                                    loading-indicator-position="[[loadingIndicatorPosition]]"\n                                    name="[[name]]"\n                                    placeholder="[[dropDownPlaceholder]]"\n                                    readonly="[[readonly]]"\n                                    selected-indexes="{{selectedIndexes}}"\n                                    selection-mode="[[selectionMode]]"\n                                    selected-values="{{selectedValues}}"\n                                    sorted="[[sorted]]"\n                                    theme="[[theme]]"\n                                    value-member="[[valueMember]]"\n                                    horizontal-scroll-bar-visibility="[[horizontalScrollBarVisibility]]"\n                                    vertical-scroll-bar-visibility="[[verticalScrollBarVisibility]]"\n                                    virtualized="[[virtualized]]">\n                                <content></content>\n                            </jqx-list-box>\n                            <div id="resizeBar" class="jqx-drop-down-resize-bar">\n                                <div></div>\n                            </div>\n                         </div>\n                    </div>\n                    <span class="jqx-hint" id="hint">[[hint]]</span>\n                </div>'}},{key:"_blurEventHandler",value:function(){var e=this;e.removeAttribute("focus"),e._preventDropDownClose||e.close()}},{key:"_focusEventHandler",value:function(){this.setAttribute("focus","")}},{key:"_documentUpHandler",value:function(e){var n=this;babelHelpers.get(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"_documentUpHandler",this).call(this,e);for(var o=n.querySelectorAll(".jqx-action-split-button"),i=0;i<o.length;i++){o[i].removeAttribute("active")}n.removeAttribute("active")}},{key:"_dropDownButtonMouseEventsHandler",value:function(e){var t=this;"mouseleave"===e.type?(t.$.dropDownButton.removeAttribute("hover"),t.removeAttribute("hover")):(t.$.dropDownButton.setAttribute("hover",""),t.setAttribute("hover",""))}},{key:"_buttonsDownHandler",value:function(e){for(var t=this,n=t.querySelectorAll(".jqx-action-split-button"),o=0;o<n.length;o++){var i=n[o],r=i.getBoundingClientRect();"mouseleave"!==e.type?(t.setAttribute("active",""),n[o].removeAttribute("active"),r.left<=e.pageX&&e.pageX<=r.width+r.left&&(n[o].setAttribute("active",""),t.$.fireEvent("buttonClick",{index:o,label:t.buttonsDataSource[o]}))):(n[o].removeAttribute("active"),t.removeAttribute("active",""))}}},{key:"_buttonsMouseEventsHandler",value:function(e){for(var t=this,n=t.querySelectorAll(".jqx-action-split-button"),o=0;o<n.length;o++){var i=n[o],r=i.getBoundingClientRect();"mouseleave"!==e.type?(t.setAttribute("hover",""),n[o].removeAttribute("hover"),r.left<=e.pageX&&e.pageX<=r.width+r.left&&n[o].setAttribute("hover","")):(n[o].removeAttribute("hover"),t.removeAttribute("hover",""))}}},{key:"_applySelection",value:function(){var e=this;if(0===e.buttonsDataSource.length){if("placeholder"===e.selectionDisplayMode||0===e.selectedIndexes.length)return void(e.querySelector(".jqx-template-container").innerHTML=e.placeholder);if(!e.$.listBox._items||0===e.$.listBox._items.length)return;e.querySelector(".jqx-template-container").innerHTML='<div class="jqx-multi-split-button-buttons"><span class="jqx-action-split-button"></span></div>',e.$.actionButton.querySelector(".jqx-action-split-button").appendChild(e._createToken())}}},{key:"propertyChangedHandler",value:function(e,n,o){var i=this;"dataSource"===e||"displayMember"===e?(i._setDropDownSize(),i._positionDetection.checkBrowserBounds("vertically"),i._positionDetection.positionDropDown(),i._positionDetection.checkBrowserBounds("horizontally")):babelHelpers.get(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"propertyChangedHandler",this).call(this,e,n,o)}}],[{key:"properties",get:function(){return{buttonsDataSource:{value:[],type:"array"},dropDownOpenMode:{allowedValues:["none","dropDownButton","auto"],value:"dropDownButton",type:"string"}}}},{key:"listeners",get:function(){return{"actionButton.down":"_buttonsDownHandler","actionButton.mouseenter":"_buttonsMouseEventsHandler","actionButton.move":"_buttonsMouseEventsHandler","actionButton.mouseleave":"_buttonsMouseEventsHandler","dropDownButton.mouseenter":"_dropDownButtonMouseEventsHandler","dropDownButton.mouseleave":"_dropDownButtonMouseEventsHandler","actionButton.focus":"_focusEventHandler","actionButton.blur":"_blurEventHandler","dropDownButton.focus":"_focusEventHandler","dropDownButton.blur":"_blurEventHandler"}}}]),t}(JQX.DropDownList));
//# sourceMappingURL=jqxmultisplitbutton.js.map
