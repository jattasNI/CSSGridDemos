// automatically generated by the FlatBuffers compiler, do not modify
/**
 * @const
 * @namespace
 */
var NationalInstruments = NationalInstruments || {};
/**
 * @const
 * @namespace
 */
NationalInstruments.Web = NationalInstruments.Web || {};
/**
 * @const
 * @namespace
 */
NationalInstruments.Web.Interop = NationalInstruments.Web.Interop || {};
/**
 * We create a union out of the UnknownTable so that a generatic accessor method
 * is generated
 *
 * @enum {number}
 */
NationalInstruments.Web.Interop.AnyType = {
    NONE: 0,
    UnknownTable: 1
};
/**
 * We create a union out of the UnknownTable so that a generatic accessor method
 * is generated
 *
 * @enum {string}
 */
NationalInstruments.Web.Interop.AnyTypeName = {
    '0': 'NONE',
    '1': 'UnknownTable'
};
/**
 * All possible update types
 *
 * @enum {number}
 */
NationalInstruments.Web.Interop.UpdateData = {
    NONE: 0,
    BatchUpdateFromJson: 1,
    BatchUpdateFromBuffer: 2,
    BatchUpdateFromOffset: 3
};
/**
 * All possible update types
 *
 * @enum {string}
 */
NationalInstruments.Web.Interop.UpdateDataName = {
    '0': 'NONE',
    '1': 'BatchUpdateFromJson',
    '2': 'BatchUpdateFromBuffer',
    '3': 'BatchUpdateFromOffset'
};
/**
 * Update a property from a Json string
 *
 * @constructor
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromJson}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromJson=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromJson}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.getRootAsBatchUpdateFromJson = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromJson).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromJson=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromJson}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.getSizePrefixedRootAsBatchUpdateFromJson = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromJson).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.prototype.propertyJson = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.startBatchUpdateFromJson = function (builder) {
    builder.startObject(1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyJsonOffset
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.addPropertyJson = function (builder, propertyJsonOffset) {
    builder.addFieldOffset(0, propertyJsonOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.endBatchUpdateFromJson = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyJsonOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromJson.createBatchUpdateFromJson = function (builder, propertyJsonOffset) {
    NationalInstruments.Web.Interop.BatchUpdateFromJson.startBatchUpdateFromJson(builder);
    NationalInstruments.Web.Interop.BatchUpdateFromJson.addPropertyJson(builder, propertyJsonOffset);
    return NationalInstruments.Web.Interop.BatchUpdateFromJson.endBatchUpdateFromJson(builder);
};
/**
 * Update a property from a shared buffer (usually shared memory)
 * usageId and instanceId identify the shared memory
 *
 * @constructor
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromBuffer}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromBuffer=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromBuffer}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.getRootAsBatchUpdateFromBuffer = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromBuffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromBuffer=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromBuffer}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.getSizePrefixedRootAsBatchUpdateFromBuffer = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromBuffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @returns {number}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.prototype.position = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.prototype.length = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.prototype.memoryId = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.startBatchUpdateFromBuffer = function (builder) {
    builder.startObject(3);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addPosition = function (builder, position) {
    builder.addFieldInt32(0, position, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} length
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addLength = function (builder, length) {
    builder.addFieldInt32(1, length, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} memoryIdOffset
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addMemoryId = function (builder, memoryIdOffset) {
    builder.addFieldOffset(2, memoryIdOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.endBatchUpdateFromBuffer = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position
 * @param {number} length
 * @param {flatbuffers.Offset} memoryIdOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromBuffer.createBatchUpdateFromBuffer = function (builder, position, length, memoryIdOffset) {
    NationalInstruments.Web.Interop.BatchUpdateFromBuffer.startBatchUpdateFromBuffer(builder);
    NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addPosition(builder, position);
    NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addLength(builder, length);
    NationalInstruments.Web.Interop.BatchUpdateFromBuffer.addMemoryId(builder, memoryIdOffset);
    return NationalInstruments.Web.Interop.BatchUpdateFromBuffer.endBatchUpdateFromBuffer(builder);
};
/**
 * Stand-in table used to add any table type from the BatchUpdateFromOffset
 *
 * @constructor
 */
NationalInstruments.Web.Interop.UnknownTable = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.UnknownTable}
 */
NationalInstruments.Web.Interop.UnknownTable.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.UnknownTable=} obj
 * @returns {NationalInstruments.Web.Interop.UnknownTable}
 */
NationalInstruments.Web.Interop.UnknownTable.getRootAsUnknownTable = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.UnknownTable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.UnknownTable=} obj
 * @returns {NationalInstruments.Web.Interop.UnknownTable}
 */
NationalInstruments.Web.Interop.UnknownTable.getSizePrefixedRootAsUnknownTable = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.UnknownTable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.UnknownTable.startUnknownTable = function (builder) {
    builder.startObject(0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.UnknownTable.endUnknownTable = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.UnknownTable.createUnknownTable = function (builder) {
    NationalInstruments.Web.Interop.UnknownTable.startUnknownTable(builder);
    return NationalInstruments.Web.Interop.UnknownTable.endUnknownTable(builder);
};
/**
 * Update a property from a packed data contained in the batch update buffer
 *
 * @constructor
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromOffset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromOffset=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromOffset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.getRootAsBatchUpdateFromOffset = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromOffset).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.BatchUpdateFromOffset=} obj
 * @returns {NationalInstruments.Web.Interop.BatchUpdateFromOffset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.getSizePrefixedRootAsBatchUpdateFromOffset = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.BatchUpdateFromOffset).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @returns {NationalInstruments.Web.Interop.AnyType}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.prototype.dataType = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? /** @type {NationalInstruments.Web.Interop.AnyType} */ (this.bb.readUint8(this.bb_pos + offset)) : NationalInstruments.Web.Interop.AnyType.NONE;
};
/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.prototype.data = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.startBatchUpdateFromOffset = function (builder) {
    builder.startObject(2);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.Interop.AnyType} dataType
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.addDataType = function (builder, dataType) {
    builder.addFieldInt8(0, dataType, NationalInstruments.Web.Interop.AnyType.NONE);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.addData = function (builder, dataOffset) {
    builder.addFieldOffset(1, dataOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.endBatchUpdateFromOffset = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.Interop.AnyType} dataType
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.BatchUpdateFromOffset.createBatchUpdateFromOffset = function (builder, dataType, dataOffset) {
    NationalInstruments.Web.Interop.BatchUpdateFromOffset.startBatchUpdateFromOffset(builder);
    NationalInstruments.Web.Interop.BatchUpdateFromOffset.addDataType(builder, dataType);
    NationalInstruments.Web.Interop.BatchUpdateFromOffset.addData(builder, dataOffset);
    return NationalInstruments.Web.Interop.BatchUpdateFromOffset.endBatchUpdateFromOffset(builder);
};
/**
 * Data for a single update in the batch
 *
 * @constructor
 */
NationalInstruments.Web.Interop.UpdateItem = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.UpdateItem}
 */
NationalInstruments.Web.Interop.UpdateItem.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.UpdateItem=} obj
 * @returns {NationalInstruments.Web.Interop.UpdateItem}
 */
NationalInstruments.Web.Interop.UpdateItem.getRootAsUpdateItem = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.UpdateItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.UpdateItem=} obj
 * @returns {NationalInstruments.Web.Interop.UpdateItem}
 */
NationalInstruments.Web.Interop.UpdateItem.getSizePrefixedRootAsUpdateItem = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.UpdateItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @returns {number}
 */
NationalInstruments.Web.Interop.UpdateItem.prototype.runtimeId = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.Interop.UpdateItem.prototype.propertyName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {NationalInstruments.Web.Interop.UpdateData}
 */
NationalInstruments.Web.Interop.UpdateItem.prototype.dataType = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? /** @type {NationalInstruments.Web.Interop.UpdateData} */ (this.bb.readUint8(this.bb_pos + offset)) : NationalInstruments.Web.Interop.UpdateData.NONE;
};
/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
NationalInstruments.Web.Interop.UpdateItem.prototype.data = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.UpdateItem.startUpdateItem = function (builder) {
    builder.startObject(4);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} runtimeId
 */
NationalInstruments.Web.Interop.UpdateItem.addRuntimeId = function (builder, runtimeId) {
    builder.addFieldInt32(0, runtimeId, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyNameOffset
 */
NationalInstruments.Web.Interop.UpdateItem.addPropertyName = function (builder, propertyNameOffset) {
    builder.addFieldOffset(1, propertyNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.Interop.UpdateData} dataType
 */
NationalInstruments.Web.Interop.UpdateItem.addDataType = function (builder, dataType) {
    builder.addFieldInt8(2, dataType, NationalInstruments.Web.Interop.UpdateData.NONE);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
NationalInstruments.Web.Interop.UpdateItem.addData = function (builder, dataOffset) {
    builder.addFieldOffset(3, dataOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.UpdateItem.endUpdateItem = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} runtimeId
 * @param {flatbuffers.Offset} propertyNameOffset
 * @param {NationalInstruments.Web.Interop.UpdateData} dataType
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.UpdateItem.createUpdateItem = function (builder, runtimeId, propertyNameOffset, dataType, dataOffset) {
    NationalInstruments.Web.Interop.UpdateItem.startUpdateItem(builder);
    NationalInstruments.Web.Interop.UpdateItem.addRuntimeId(builder, runtimeId);
    NationalInstruments.Web.Interop.UpdateItem.addPropertyName(builder, propertyNameOffset);
    NationalInstruments.Web.Interop.UpdateItem.addDataType(builder, dataType);
    NationalInstruments.Web.Interop.UpdateItem.addData(builder, dataOffset);
    return NationalInstruments.Web.Interop.UpdateItem.endUpdateItem(builder);
};
/**
 * A collection of properties to update
 *
 * @constructor
 */
NationalInstruments.Web.Interop.Batch = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.Interop.Batch}
 */
NationalInstruments.Web.Interop.Batch.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.Batch=} obj
 * @returns {NationalInstruments.Web.Interop.Batch}
 */
NationalInstruments.Web.Interop.Batch.getRootAsBatch = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.Batch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.Interop.Batch=} obj
 * @returns {NationalInstruments.Web.Interop.Batch}
 */
NationalInstruments.Web.Interop.Batch.getSizePrefixedRootAsBatch = function (bb, obj) {
    return (obj || new NationalInstruments.Web.Interop.Batch).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.Interop.Batch.prototype.docName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {boolean}
 */
NationalInstruments.Web.Interop.Batch.prototype.waitForFrameUpdate = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};
/**
 * @param {number} index
 * @param {NationalInstruments.Web.Interop.UpdateItem=} obj
 * @returns {NationalInstruments.Web.Interop.UpdateItem}
 */
NationalInstruments.Web.Interop.Batch.prototype.items = function (index, obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? (obj || new NationalInstruments.Web.Interop.UpdateItem).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.Interop.Batch.prototype.itemsLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.Interop.Batch.startBatch = function (builder) {
    builder.startObject(3);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 */
NationalInstruments.Web.Interop.Batch.addDocName = function (builder, docNameOffset) {
    builder.addFieldOffset(0, docNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} waitForFrameUpdate
 */
NationalInstruments.Web.Interop.Batch.addWaitForFrameUpdate = function (builder, waitForFrameUpdate) {
    builder.addFieldInt8(1, +waitForFrameUpdate, +false);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} itemsOffset
 */
NationalInstruments.Web.Interop.Batch.addItems = function (builder, itemsOffset) {
    builder.addFieldOffset(2, itemsOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.Batch.createItemsVector = function (builder, data) {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
        builder.addOffset(data[i]);
    }
    return builder.endVector();
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
NationalInstruments.Web.Interop.Batch.startItemsVector = function (builder, numElems) {
    builder.startVector(4, numElems, 4);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.Batch.endBatch = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
NationalInstruments.Web.Interop.Batch.finishBatchBuffer = function (builder, offset) {
    builder.finish(offset);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
NationalInstruments.Web.Interop.Batch.finishSizePrefixedBatchBuffer = function (builder, offset) {
    builder.finish(offset, undefined, true);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 * @param {boolean} waitForFrameUpdate
 * @param {flatbuffers.Offset} itemsOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.Interop.Batch.createBatch = function (builder, docNameOffset, waitForFrameUpdate, itemsOffset) {
    NationalInstruments.Web.Interop.Batch.startBatch(builder);
    NationalInstruments.Web.Interop.Batch.addDocName(builder, docNameOffset);
    NationalInstruments.Web.Interop.Batch.addWaitForFrameUpdate(builder, waitForFrameUpdate);
    NationalInstruments.Web.Interop.Batch.addItems(builder, itemsOffset);
    return NationalInstruments.Web.Interop.Batch.endBatch(builder);
};
// Exports for ECMAScript6 Modules
export { NationalInstruments };
//# sourceMappingURL=Interop_generated.js.map