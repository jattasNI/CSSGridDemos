// automatically generated by the FlatBuffers compiler, do not modify
/**
 * @const
 * @namespace
 */
var NationalInstruments = NationalInstruments || {};
/**
 * @const
 * @namespace
 */
NationalInstruments.Web = NationalInstruments.Web || {};
/**
 * @const
 * @namespace
 */
NationalInstruments.Web.RemotePanel = NationalInstruments.Web.RemotePanel || {};
/**
 * We create a union out of the UnknownTable so that a generic accessor method
 * is generated
 *
 * @enum {number}
 */
NationalInstruments.Web.RemotePanel.AnyType = {
    NONE: 0,
    UnknownTable: 1
};
/**
 * We create a union out of the UnknownTable so that a generic accessor method
 * is generated
 *
 * @enum {string}
 */
NationalInstruments.Web.RemotePanel.AnyTypeName = {
    '0': 'NONE',
    '1': 'UnknownTable'
};
/**
 * How to pack a value type when getPropertyValue requests a property
 *
 * @enum {number}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValueType = {
    PropertyValueAsJson: 0,
    PropertyValueAsPackedData: 1
};
/**
 * How to pack a value type when getPropertyValue requests a property
 *
 * @enum {string}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValueTypeName = {
    '0': 'PropertyValueAsJson',
    '1': 'PropertyValueAsPackedData'
};
/**
 * All possible server initiated updates
 *
 * @enum {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateType = {
    NONE: 0,
    SetPropertyValue: 1,
    GetPropertyValue: 2,
    BatchUpdate: 3,
    RootedBatchUpdate: 4,
    DataRequestReady: 5
};
/**
 * All possible server initiated updates
 *
 * @enum {string}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateTypeName = {
    '0': 'NONE',
    '1': 'SetPropertyValue',
    '2': 'GetPropertyValue',
    '3': 'BatchUpdate',
    '4': 'RootedBatchUpdate',
    '5': 'DataRequestReady'
};
/**
 * All possible remote client (in browser) request types
 * These are handled by the server
 *
 * @enum {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestType = {
    NONE: 0,
    RemotePanelUpdateResponse: 1,
    RemotePanelRequestData: 2,
    RemotePanelControlChanged: 3,
    RemotePanelConnect: 4
};
/**
 * All possible remote client (in browser) request types
 * These are handled by the server
 *
 * @enum {string}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestTypeName = {
    '0': 'NONE',
    '1': 'RemotePanelUpdateResponse',
    '2': 'RemotePanelRequestData',
    '3': 'RemotePanelControlChanged',
    '4': 'RemotePanelConnect'
};
/**
 * Stand-in table used to add any table type from the BatchUpdateFromOffset
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.UnknownTable = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.UnknownTable}
 */
NationalInstruments.Web.RemotePanel.UnknownTable.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.UnknownTable=} obj
 * @returns {NationalInstruments.Web.RemotePanel.UnknownTable}
 */
NationalInstruments.Web.RemotePanel.UnknownTable.getRootAsUnknownTable = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.UnknownTable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.UnknownTable=} obj
 * @returns {NationalInstruments.Web.RemotePanel.UnknownTable}
 */
NationalInstruments.Web.RemotePanel.UnknownTable.getSizePrefixedRootAsUnknownTable = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.UnknownTable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.UnknownTable.startUnknownTable = function (builder) {
    builder.startObject(0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.UnknownTable.endUnknownTable = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.UnknownTable.createUnknownTable = function (builder) {
    NationalInstruments.Web.RemotePanel.UnknownTable.startUnknownTable(builder);
    return NationalInstruments.Web.RemotePanel.UnknownTable.endUnknownTable(builder);
};
/**
 * Server request to update a property value of a control
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.SetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.SetPropertyValue=} obj
 * @returns {NationalInstruments.Web.RemotePanel.SetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.getRootAsSetPropertyValue = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.SetPropertyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.SetPropertyValue=} obj
 * @returns {NationalInstruments.Web.RemotePanel.SetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.getSizePrefixedRootAsSetPropertyValue = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.SetPropertyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.prototype.docName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.prototype.runtimeId = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.prototype.propertyName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.prototype.propertyJson = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.startSetPropertyValue = function (builder) {
    builder.startObject(4);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.addDocName = function (builder, docNameOffset) {
    builder.addFieldOffset(0, docNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} runtimeId
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.addRuntimeId = function (builder, runtimeId) {
    builder.addFieldInt32(1, runtimeId, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyNameOffset
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.addPropertyName = function (builder, propertyNameOffset) {
    builder.addFieldOffset(2, propertyNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyJsonOffset
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.addPropertyJson = function (builder, propertyJsonOffset) {
    builder.addFieldOffset(3, propertyJsonOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.endSetPropertyValue = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 * @param {number} runtimeId
 * @param {flatbuffers.Offset} propertyNameOffset
 * @param {flatbuffers.Offset} propertyJsonOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.SetPropertyValue.createSetPropertyValue = function (builder, docNameOffset, runtimeId, propertyNameOffset, propertyJsonOffset) {
    NationalInstruments.Web.RemotePanel.SetPropertyValue.startSetPropertyValue(builder);
    NationalInstruments.Web.RemotePanel.SetPropertyValue.addDocName(builder, docNameOffset);
    NationalInstruments.Web.RemotePanel.SetPropertyValue.addRuntimeId(builder, runtimeId);
    NationalInstruments.Web.RemotePanel.SetPropertyValue.addPropertyName(builder, propertyNameOffset);
    NationalInstruments.Web.RemotePanel.SetPropertyValue.addPropertyJson(builder, propertyJsonOffset);
    return NationalInstruments.Web.RemotePanel.SetPropertyValue.endSetPropertyValue(builder);
};
/**
 * Server request to get the current value of a property on a control
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.GetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.GetPropertyValue=} obj
 * @returns {NationalInstruments.Web.RemotePanel.GetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.getRootAsGetPropertyValue = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.GetPropertyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.GetPropertyValue=} obj
 * @returns {NationalInstruments.Web.RemotePanel.GetPropertyValue}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.getSizePrefixedRootAsGetPropertyValue = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.GetPropertyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.prototype.docName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.prototype.runtimeId = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.prototype.propertyName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {NationalInstruments.Web.RemotePanel.GetPropertyValueType}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.prototype.valueType = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? /** @type {NationalInstruments.Web.RemotePanel.GetPropertyValueType} */ (this.bb.readInt8(this.bb_pos + offset)) : NationalInstruments.Web.RemotePanel.GetPropertyValueType.PropertyValueAsJson;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.startGetPropertyValue = function (builder) {
    builder.startObject(4);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.addDocName = function (builder, docNameOffset) {
    builder.addFieldOffset(0, docNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} runtimeId
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.addRuntimeId = function (builder, runtimeId) {
    builder.addFieldInt32(1, runtimeId, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyNameOffset
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.addPropertyName = function (builder, propertyNameOffset) {
    builder.addFieldOffset(2, propertyNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.GetPropertyValueType} valueType
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.addValueType = function (builder, valueType) {
    builder.addFieldInt8(3, valueType, NationalInstruments.Web.RemotePanel.GetPropertyValueType.PropertyValueAsJson);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.endGetPropertyValue = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} docNameOffset
 * @param {number} runtimeId
 * @param {flatbuffers.Offset} propertyNameOffset
 * @param {NationalInstruments.Web.RemotePanel.GetPropertyValueType} valueType
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.GetPropertyValue.createGetPropertyValue = function (builder, docNameOffset, runtimeId, propertyNameOffset, valueType) {
    NationalInstruments.Web.RemotePanel.GetPropertyValue.startGetPropertyValue(builder);
    NationalInstruments.Web.RemotePanel.GetPropertyValue.addDocName(builder, docNameOffset);
    NationalInstruments.Web.RemotePanel.GetPropertyValue.addRuntimeId(builder, runtimeId);
    NationalInstruments.Web.RemotePanel.GetPropertyValue.addPropertyName(builder, propertyNameOffset);
    NationalInstruments.Web.RemotePanel.GetPropertyValue.addValueType(builder, valueType);
    return NationalInstruments.Web.RemotePanel.GetPropertyValue.endGetPropertyValue(builder);
};
/**
 * Server request to batch update a set of properties of a set controls
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.BatchUpdate = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.BatchUpdate}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.BatchUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.BatchUpdate}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.getRootAsBatchUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.BatchUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.BatchUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.BatchUpdate}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.getSizePrefixedRootAsBatchUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.BatchUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @returns {NationalInstruments.Web.RemotePanel.AnyType}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.prototype.batchType = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? /** @type {NationalInstruments.Web.RemotePanel.AnyType} */ (this.bb.readUint8(this.bb_pos + offset)) : NationalInstruments.Web.RemotePanel.AnyType.NONE;
};
/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.prototype.batch = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.startBatchUpdate = function (builder) {
    builder.startObject(2);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.AnyType} batchType
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.addBatchType = function (builder, batchType) {
    builder.addFieldInt8(0, batchType, NationalInstruments.Web.RemotePanel.AnyType.NONE);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} batchOffset
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.addBatch = function (builder, batchOffset) {
    builder.addFieldOffset(1, batchOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.endBatchUpdate = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.AnyType} batchType
 * @param {flatbuffers.Offset} batchOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.BatchUpdate.createBatchUpdate = function (builder, batchType, batchOffset) {
    NationalInstruments.Web.RemotePanel.BatchUpdate.startBatchUpdate(builder);
    NationalInstruments.Web.RemotePanel.BatchUpdate.addBatchType(builder, batchType);
    NationalInstruments.Web.RemotePanel.BatchUpdate.addBatch(builder, batchOffset);
    return NationalInstruments.Web.RemotePanel.BatchUpdate.endBatchUpdate(builder);
};
/**
 * Server request to batch update a set of properties of a set controls
 * Batch update is stored as an independent rooted flat buffer in the batch
 * buffer
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RootedBatchUpdate}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RootedBatchUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RootedBatchUpdate}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.getRootAsRootedBatchUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RootedBatchUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RootedBatchUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RootedBatchUpdate}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.getSizePrefixedRootAsRootedBatchUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RootedBatchUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {number} index
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.prototype.batchBuffer = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.prototype.batchBufferLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};
/**
 * @returns {Uint8Array}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.prototype.batchBufferArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.startRootedBatchUpdate = function (builder) {
    builder.startObject(1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} batchBufferOffset
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.addBatchBuffer = function (builder, batchBufferOffset) {
    builder.addFieldOffset(0, batchBufferOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.createBatchBufferVector = function (builder, data) {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
    }
    return builder.endVector();
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.startBatchBufferVector = function (builder, numElems) {
    builder.startVector(1, numElems, 1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.endRootedBatchUpdate = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} batchBufferOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RootedBatchUpdate.createRootedBatchUpdate = function (builder, batchBufferOffset) {
    NationalInstruments.Web.RemotePanel.RootedBatchUpdate.startRootedBatchUpdate(builder);
    NationalInstruments.Web.RemotePanel.RootedBatchUpdate.addBatchBuffer(builder, batchBufferOffset);
    return NationalInstruments.Web.RemotePanel.RootedBatchUpdate.endRootedBatchUpdate(builder);
};
/**
 * Data sent from server to satisfy a previous data request (RemotePanelRequestData)
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.DataRequestReady = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.DataRequestReady}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.DataRequestReady=} obj
 * @returns {NationalInstruments.Web.RemotePanel.DataRequestReady}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.getRootAsDataRequestReady = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.DataRequestReady).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.DataRequestReady=} obj
 * @returns {NationalInstruments.Web.RemotePanel.DataRequestReady}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.getSizePrefixedRootAsDataRequestReady = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.DataRequestReady).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.prototype.memoryId = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {number} index
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.prototype.buffer = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.prototype.bufferLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};
/**
 * @returns {Uint8Array}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.prototype.bufferArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.startDataRequestReady = function (builder) {
    builder.startObject(2);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} memoryIdOffset
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.addMemoryId = function (builder, memoryIdOffset) {
    builder.addFieldOffset(0, memoryIdOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bufferOffset
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.addBuffer = function (builder, bufferOffset) {
    builder.addFieldOffset(1, bufferOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.createBufferVector = function (builder, data) {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
    }
    return builder.endVector();
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.startBufferVector = function (builder, numElems) {
    builder.startVector(1, numElems, 1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.endDataRequestReady = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} memoryIdOffset
 * @param {flatbuffers.Offset} bufferOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.DataRequestReady.createDataRequestReady = function (builder, memoryIdOffset, bufferOffset) {
    NationalInstruments.Web.RemotePanel.DataRequestReady.startDataRequestReady(builder);
    NationalInstruments.Web.RemotePanel.DataRequestReady.addMemoryId(builder, memoryIdOffset);
    NationalInstruments.Web.RemotePanel.DataRequestReady.addBuffer(builder, bufferOffset);
    return NationalInstruments.Web.RemotePanel.DataRequestReady.endDataRequestReady(builder);
};
/**
 * A server initiated update to the remote client (browser).
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdate}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdate}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.getRootAsRemotePanelUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdate=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdate}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.getSizePrefixedRootAsRemotePanelUpdate = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.prototype.responseId = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdateType}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.prototype.requestType = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? /** @type {NationalInstruments.Web.RemotePanel.RemotePanelUpdateType} */ (this.bb.readUint8(this.bb_pos + offset)) : NationalInstruments.Web.RemotePanel.RemotePanelUpdateType.NONE;
};
/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.prototype.request = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.startRemotePanelUpdate = function (builder) {
    builder.startObject(3);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseIdOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addResponseId = function (builder, responseIdOffset) {
    builder.addFieldOffset(0, responseIdOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdateType} requestType
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addRequestType = function (builder, requestType) {
    builder.addFieldInt8(1, requestType, NationalInstruments.Web.RemotePanel.RemotePanelUpdateType.NONE);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} requestOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addRequest = function (builder, requestOffset) {
    builder.addFieldOffset(2, requestOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.endRemotePanelUpdate = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseIdOffset
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdateType} requestType
 * @param {flatbuffers.Offset} requestOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdate.createRemotePanelUpdate = function (builder, responseIdOffset, requestType, requestOffset) {
    NationalInstruments.Web.RemotePanel.RemotePanelUpdate.startRemotePanelUpdate(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addResponseId(builder, responseIdOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addRequestType(builder, requestType);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdate.addRequest(builder, requestOffset);
    return NationalInstruments.Web.RemotePanel.RemotePanelUpdate.endRemotePanelUpdate(builder);
};
/**
 * Remote client (in browser) response to a server updated
 * which was pushed to the client.
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.getRootAsRemotePanelUpdateResponse = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.getSizePrefixedRootAsRemotePanelUpdateResponse = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.responseId = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.responseJson = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {number} index
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.responseData = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.responseDataLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};
/**
 * @returns {Uint8Array}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.prototype.responseDataArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.startRemotePanelUpdateResponse = function (builder) {
    builder.startObject(3);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseIdOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseId = function (builder, responseIdOffset) {
    builder.addFieldOffset(0, responseIdOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseJsonOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseJson = function (builder, responseJsonOffset) {
    builder.addFieldOffset(1, responseJsonOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseDataOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseData = function (builder, responseDataOffset) {
    builder.addFieldOffset(2, responseDataOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.createResponseDataVector = function (builder, data) {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
    }
    return builder.endVector();
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.startResponseDataVector = function (builder, numElems) {
    builder.startVector(1, numElems, 1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.endRemotePanelUpdateResponse = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} responseIdOffset
 * @param {flatbuffers.Offset} responseJsonOffset
 * @param {flatbuffers.Offset} responseDataOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.createRemotePanelUpdateResponse = function (builder, responseIdOffset, responseJsonOffset, responseDataOffset) {
    NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.startRemotePanelUpdateResponse(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseId(builder, responseIdOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseJson(builder, responseJsonOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.addResponseData(builder, responseDataOffset);
    return NationalInstruments.Web.RemotePanel.RemotePanelUpdateResponse.endRemotePanelUpdateResponse(builder);
};
/**
 * A request by the remote client to get a named data value
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequestData}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequestData=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequestData}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.getRootAsRemotePanelRequestData = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelRequestData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequestData=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequestData}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.getSizePrefixedRootAsRemotePanelRequestData = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelRequestData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.prototype.memoryId = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.prototype.startPosition = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.prototype.length = function () {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.startRemotePanelRequestData = function (builder) {
    builder.startObject(3);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} memoryIdOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addMemoryId = function (builder, memoryIdOffset) {
    builder.addFieldOffset(0, memoryIdOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startPosition
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addStartPosition = function (builder, startPosition) {
    builder.addFieldInt32(1, startPosition, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} length
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addLength = function (builder, length) {
    builder.addFieldInt32(2, length, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.endRemotePanelRequestData = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} memoryIdOffset
 * @param {number} startPosition
 * @param {number} length
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequestData.createRemotePanelRequestData = function (builder, memoryIdOffset, startPosition, length) {
    NationalInstruments.Web.RemotePanel.RemotePanelRequestData.startRemotePanelRequestData(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addMemoryId(builder, memoryIdOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addStartPosition(builder, startPosition);
    NationalInstruments.Web.RemotePanel.RemotePanelRequestData.addLength(builder, length);
    return NationalInstruments.Web.RemotePanel.RemotePanelRequestData.endRemotePanelRequestData(builder);
};
/**
 * A remote client notification that a control value changed
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelControlChanged}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelControlChanged=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelControlChanged}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.getRootAsRemotePanelControlChanged = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelControlChanged).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelControlChanged=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelControlChanged}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.getSizePrefixedRootAsRemotePanelControlChanged = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelControlChanged).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.definitionName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.controlId = function () {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.propertyName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 8);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {number} index
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.value = function (index) {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};
/**
 * @returns {number}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.valueLength = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};
/**
 * @returns {Uint8Array}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.prototype.valueArray = function () {
    var offset = this.bb.__offset(this.bb_pos, 10);
    return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.startRemotePanelControlChanged = function (builder) {
    builder.startObject(4);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} definitionNameOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addDefinitionName = function (builder, definitionNameOffset) {
    builder.addFieldOffset(0, definitionNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} controlId
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addControlId = function (builder, controlId) {
    builder.addFieldInt32(1, controlId, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertyNameOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addPropertyName = function (builder, propertyNameOffset) {
    builder.addFieldOffset(2, propertyNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valueOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addValue = function (builder, valueOffset) {
    builder.addFieldOffset(3, valueOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.createValueVector = function (builder, data) {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
    }
    return builder.endVector();
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.startValueVector = function (builder, numElems) {
    builder.startVector(1, numElems, 1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.endRemotePanelControlChanged = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} definitionNameOffset
 * @param {number} controlId
 * @param {flatbuffers.Offset} propertyNameOffset
 * @param {flatbuffers.Offset} valueOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.createRemotePanelControlChanged = function (builder, definitionNameOffset, controlId, propertyNameOffset, valueOffset) {
    NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.startRemotePanelControlChanged(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addDefinitionName(builder, definitionNameOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addControlId(builder, controlId);
    NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addPropertyName(builder, propertyNameOffset);
    NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.addValue(builder, valueOffset);
    return NationalInstruments.Web.RemotePanel.RemotePanelControlChanged.endRemotePanelControlChanged(builder);
};
/**
 * Remote panel connecting to a definition
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelConnect}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelConnect=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelConnect}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.getRootAsRemotePanelConnect = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelConnect).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelConnect=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelConnect}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.getSizePrefixedRootAsRemotePanelConnect = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelConnect).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.prototype.definitionName = function (optionalEncoding) {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.startRemotePanelConnect = function (builder) {
    builder.startObject(1);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} definitionNameOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.addDefinitionName = function (builder, definitionNameOffset) {
    builder.addFieldOffset(0, definitionNameOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.endRemotePanelConnect = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} definitionNameOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelConnect.createRemotePanelConnect = function (builder, definitionNameOffset) {
    NationalInstruments.Web.RemotePanel.RemotePanelConnect.startRemotePanelConnect(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelConnect.addDefinitionName(builder, definitionNameOffset);
    return NationalInstruments.Web.RemotePanel.RemotePanelConnect.endRemotePanelConnect(builder);
};
/**
 * Represents a request from the remote client (in browser)
 * back to the server.
 *
 * @constructor
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest = function () {
    /**
     * @type {flatbuffers.ByteBuffer}
     */
    this.bb = null;
    /**
     * @type {number}
     */
    this.bb_pos = 0;
};
/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequest}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.prototype.__init = function (i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequest=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequest}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.getRootAsRemotePanelRequest = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequest=} obj
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequest}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.getSizePrefixedRootAsRemotePanelRequest = function (bb, obj) {
    return (obj || new NationalInstruments.Web.RemotePanel.RemotePanelRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};
/**
 * @returns {NationalInstruments.Web.RemotePanel.RemotePanelRequestType}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.prototype.requestType = function () {
    var offset = this.bb.__offset(this.bb_pos, 4);
    return offset ? /** @type {NationalInstruments.Web.RemotePanel.RemotePanelRequestType} */ (this.bb.readUint8(this.bb_pos + offset)) : NationalInstruments.Web.RemotePanel.RemotePanelRequestType.NONE;
};
/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.prototype.request = function (obj) {
    var offset = this.bb.__offset(this.bb_pos, 6);
    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};
/**
 * @param {flatbuffers.Builder} builder
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.startRemotePanelRequest = function (builder) {
    builder.startObject(2);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequestType} requestType
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.addRequestType = function (builder, requestType) {
    builder.addFieldInt8(0, requestType, NationalInstruments.Web.RemotePanel.RemotePanelRequestType.NONE);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} requestOffset
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.addRequest = function (builder, requestOffset) {
    builder.addFieldOffset(1, requestOffset, 0);
};
/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.endRemotePanelRequest = function (builder) {
    var offset = builder.endObject();
    return offset;
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.finishRemotePanelRequestBuffer = function (builder, offset) {
    builder.finish(offset);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.finishSizePrefixedRemotePanelRequestBuffer = function (builder, offset) {
    builder.finish(offset, undefined, true);
};
/**
 * @param {flatbuffers.Builder} builder
 * @param {NationalInstruments.Web.RemotePanel.RemotePanelRequestType} requestType
 * @param {flatbuffers.Offset} requestOffset
 * @returns {flatbuffers.Offset}
 */
NationalInstruments.Web.RemotePanel.RemotePanelRequest.createRemotePanelRequest = function (builder, requestType, requestOffset) {
    NationalInstruments.Web.RemotePanel.RemotePanelRequest.startRemotePanelRequest(builder);
    NationalInstruments.Web.RemotePanel.RemotePanelRequest.addRequestType(builder, requestType);
    NationalInstruments.Web.RemotePanel.RemotePanelRequest.addRequest(builder, requestOffset);
    return NationalInstruments.Web.RemotePanel.RemotePanelRequest.endRemotePanelRequest(builder);
};
// Exports for ECMAScript6 Modules
export { NationalInstruments };
//# sourceMappingURL=RemotePanelProtocol_generated.js.map